!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABCSize	deps/credo/lib/credo/check/refactor/abc_size.ex	/^defmodule Credo.Check.Refactor.ABCSize do$/;"	m
ANSI	deps/bunt/lib/bunt_ansi.ex	/^defmodule Bunt.ANSI do$/;"	m
API	deps/ecto/lib/ecto/query/api.ex	/^defmodule Ecto.Query.API do$/;"	m
APIClient	deps/ex_doc/lib/mix/tasks/docs.ex	/^      defmodule APIClient do$/;"	m
AbapStyle	deps/makeup/lib/makeup/styles/html/pygments/abap.ex	/^defmodule Makeup.Styles.HTML.AbapStyle do$/;"	m
AccessToken	lib/boruta/oauth/authorization/access_token.ex	/^defmodule Boruta.Oauth.Authorization.AccessToken do$/;"	m
AccessTokens	lib/boruta/adapters/ecto/access_tokens.ex	/^defmodule Boruta.Ecto.AccessTokens do$/;"	m
AccessTokens	lib/boruta/oauth/contexts/access_tokens.ex	/^defmodule Boruta.Oauth.AccessTokens do$/;"	m
Account	deps/ecto/lib/ecto/schema.ex	/^      defmodule Account do$/;"	m
ActionClauseError	deps/phoenix/lib/phoenix/exceptions.ex	/^defmodule Phoenix.ActionClauseError do$/;"	m
Adapter	deps/ecto/lib/ecto/adapter.ex	/^defmodule Ecto.Adapter do$/;"	m
Adapter	deps/plug/lib/plug/conn/adapter.ex	/^defmodule Plug.Conn.Adapter do$/;"	m
AddColumnIfNotExistsMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AddColumnIfNotExistsMigration do$/;"	m
AddColumnMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AddColumnMigration do$/;"	m
AddRevokedAtToTokens	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^defmodule Boruta.Repo.Migrations.AddRevokedAtToTokens do$/;"	m
AddRevokedAtToTokens	_build/dev/lib/boruta/priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^defmodule Boruta.Repo.Migrations.AddRevokedAtToTokens do$/;"	m
AddRevokedAtToTokens	_build/test/lib/boruta/priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^defmodule Boruta.Repo.Migrations.AddRevokedAtToTokens do$/;"	m
AddRevokedAtToTokens	priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^defmodule Boruta.Repo.Migrations.AddRevokedAtToTokens do$/;"	m
AddSupportedGrantTypesToClients	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^defmodule Boruta.Repo.Migrations.AddSupportedGrantTypesToClients do$/;"	m
AddSupportedGrantTypesToClients	_build/dev/lib/boruta/priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^defmodule Boruta.Repo.Migrations.AddSupportedGrantTypesToClients do$/;"	m
AddSupportedGrantTypesToClients	_build/test/lib/boruta/priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^defmodule Boruta.Repo.Migrations.AddSupportedGrantTypesToClients do$/;"	m
AddSupportedGrantTypesToClients	priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^defmodule Boruta.Repo.Migrations.AddSupportedGrantTypesToClients do$/;"	m
AddWeatherTable	deps/ecto_sql/lib/ecto/migration.ex	/^      defmodule MyRepo.Migrations.AddWeatherTable do$/;"	m
AdditionalItems	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule AdditionalItems do$/;"	m
AdditionalProperties	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule AdditionalProperties do$/;"	m
Admin	lib/boruta/adapters/ecto/admin.ex	/^defmodule Boruta.Ecto.Admin do$/;"	m
AdminTest	test/boruta/admin_test.exs	/^defmodule Boruta.Ecto.AdminTest do$/;"	m
AlgolStyle	deps/makeup/lib/makeup/styles/html/pygments/algol.ex	/^defmodule Makeup.Styles.HTML.AlgolStyle do$/;"	m
Algol_NuStyle	deps/makeup/lib/makeup/styles/html/pygments/algol_nu.ex	/^defmodule Makeup.Styles.HTML.Algol_NuStyle do$/;"	m
AliasAs	deps/credo/lib/credo/check/readability/alias_as.ex	/^defmodule Credo.Check.Readability.AliasAs do$/;"	m
AliasOrder	deps/credo/lib/credo/check/readability/alias_order.ex	/^defmodule Credo.Check.Readability.AliasOrder do$/;"	m
AliasUsage	deps/credo/lib/credo/check/design/alias_usage.ex	/^defmodule Credo.Check.Design.AliasUsage do$/;"	m
AllOf	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule AllOf do$/;"	m
AlreadySentError	deps/plug/lib/plug/conn.ex	/^  defmodule AlreadySentError do$/;"	m
AlterColumnFromMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AlterColumnFromMigration do$/;"	m
AlterColumnFromPkeyMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AlterColumnFromPkeyMigration do$/;"	m
AlterColumnMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AlterColumnMigration do$/;"	m
AlterForeignKeyOnDeleteMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AlterForeignKeyOnDeleteMigration do$/;"	m
AlterForeignKeyOnUpdateMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AlterForeignKeyOnUpdateMigration do$/;"	m
AlterMigrationOne	deps/ecto_sql/integration_test/sql/alter.exs	/^  defmodule AlterMigrationOne do$/;"	m
AlterMigrationTwo	deps/ecto_sql/integration_test/sql/alter.exs	/^  defmodule AlterMigrationTwo do$/;"	m
AlterPrimaryKeyMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule AlterPrimaryKeyMigration do$/;"	m
AlterTest	deps/ecto_sql/integration_test/sql/alter.exs	/^defmodule Ecto.Integration.AlterTest do$/;"	m
AnotherSchemaMigration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defmodule AnotherSchemaMigration do$/;"	m
AnyOf	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule AnyOf do$/;"	m
App	deps/db_connection/lib/db_connection/app.ex	/^defmodule DBConnection.App do$/;"	m
App	deps/postgrex/lib/postgrex/app.ex	/^defmodule Postgrex.App do$/;"	m
AppCall	deps/dialyxir/lib/dialyxir/warnings/app_call.ex	/^defmodule Dialyxir.Warnings.AppCall do$/;"	m
AppRouter	deps/plug/lib/plug/error_handler.ex	/^      defmodule AppRouter do$/;"	m
AppRouter	deps/plug/lib/plug/router.ex	/^      defmodule AppRouter do$/;"	m
AppendDefaultConfig	deps/credo/lib/credo/execution/task/append_default_config.ex	/^defmodule Credo.Execution.Task.AppendDefaultConfig do$/;"	m
AppendSingleItem	deps/credo/lib/credo/check/refactor/append_single_item.ex	/^defmodule Credo.Check.Refactor.AppendSingleItem do$/;"	m
Application	deps/credo/lib/credo/application.ex	/^defmodule Credo.Application do$/;"	m
Application	deps/ecto/lib/ecto/application.ex	/^defmodule Ecto.Application do$/;"	m
Application	deps/ecto_sql/lib/ecto/adapters/sql/application.ex	/^defmodule Ecto.Adapters.SQL.Application do$/;"	m
Application	deps/ex_doc/lib/ex_doc/application.ex	/^defmodule ExDoc.Application do$/;"	m
Application	deps/makeup/lib/makeup/application.ex	/^defmodule Makeup.Application do$/;"	m
Application	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/application.ex	/^defmodule Makeup.Lexers.ElixirLexer.Application do$/;"	m
Application	deps/mime/lib/mime/application.ex	/^defmodule MIME.Application do$/;"	m
Application	deps/mox/lib/mox/application.ex	/^defmodule Mox.Application do$/;"	m
Application	deps/plug/lib/plug/application.ex	/^defmodule Plug.Application do$/;"	m
Application	deps/plug_crypto/lib/plug/crypto/application.ex	/^defmodule Plug.Crypto.Application do$/;"	m
Application	lib/boruta/application.ex	/^defmodule Boruta.Application do$/;"	m
Application	lib/boruta/oauth/application.ex	/^defmodule Boruta.Oauth.Application do$/;"	m
ApplicationMock	test/support/boruta/oauth/application_mock.ex	/^defmodule Boruta.Oauth.ApplicationMock do$/;"	m
Apply	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^defmodule Dialyxir.Warnings.Apply do$/;"	m
ArduinoStyle	deps/makeup/lib/makeup/styles/html/pygments/arduino.ex	/^defmodule Makeup.Styles.HTML.ArduinoStyle do$/;"	m
Array	deps/postgrex/lib/postgrex/extensions/array.ex	/^defmodule Postgrex.Extensions.Array do$/;"	m
Assets	deps/ex_doc/lib/ex_doc/formatter/epub/assets.ex	/^defmodule ExDoc.Formatter.EPUB.Assets do$/;"	m
Assets	deps/ex_doc/lib/ex_doc/formatter/html/assets.ex	/^defmodule ExDoc.Formatter.HTML.Assets do$/;"	m
AssignExitStatusForIssues	deps/credo/lib/credo/execution/task/assign_exit_status_for_issues.ex	/^defmodule Credo.Execution.Task.AssignExitStatusForIssues do$/;"	m
Assoc	deps/ecto/lib/ecto/repo/assoc.ex	/^defmodule Ecto.Repo.Assoc do$/;"	m
AssocTest	deps/ecto/integration_test/cases/assoc.exs	/^defmodule Ecto.Integration.AssocTest do$/;"	m
Association	deps/ecto/lib/ecto/association.ex	/^defmodule Ecto.Association do$/;"	m
AstHelpers	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^defmodule Earmark.Helpers.AstHelpers do$/;"	m
AstRenderer	deps/earmark/lib/earmark/ast_renderer.ex	/^defmodule Earmark.AstRenderer do$/;"	m
AstWalker	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^defmodule Earmark.Ast.Renderer.AstWalker do$/;"	m
AttrParser	deps/earmark/lib/earmark/helpers/attr_parser.ex	/^defmodule Earmark.Helpers.AttrParser do$/;"	m
Authorization	lib/boruta/oauth/authorization.ex	/^defimpl Boruta.Oauth.Authorization, for: Boruta.Oauth.AuthorizationCodeRequest do$/;"	i
Authorization	lib/boruta/oauth/authorization.ex	/^defimpl Boruta.Oauth.Authorization, for: Boruta.Oauth.ClientCredentialsRequest do$/;"	i
Authorization	lib/boruta/oauth/authorization.ex	/^defimpl Boruta.Oauth.Authorization, for: Boruta.Oauth.CodeRequest do$/;"	i
Authorization	lib/boruta/oauth/authorization.ex	/^defimpl Boruta.Oauth.Authorization, for: Boruta.Oauth.PasswordRequest do$/;"	i
Authorization	lib/boruta/oauth/authorization.ex	/^defimpl Boruta.Oauth.Authorization, for: Boruta.Oauth.RefreshTokenRequest do$/;"	i
Authorization	lib/boruta/oauth/authorization.ex	/^defimpl Boruta.Oauth.Authorization, for: Boruta.Oauth.TokenRequest do$/;"	i
Authorization	lib/boruta/oauth/authorization.ex	/^defprotocol Boruta.Oauth.Authorization do$/;"	p
AuthorizationCodeGrantTest	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^defmodule Boruta.OauthTest.AuthorizationCodeGrantTest do$/;"	m
AuthorizationCodeRequest	lib/boruta/oauth/requests/authorization_code_request.ex	/^defmodule Boruta.Oauth.AuthorizationCodeRequest do$/;"	m
Authorize	lib/boruta/oauth/request/authorize.ex	/^defmodule Boruta.Oauth.Request.Authorize do$/;"	m
AuthorizeResponse	lib/boruta/oauth/responses/authorize.ex	/^defmodule Boruta.Oauth.AuthorizeResponse do$/;"	m
Autolink	deps/ex_doc/lib/ex_doc/autolink.ex	/^defmodule ExDoc.Autolink do$/;"	m
AutumnStyle	deps/makeup/lib/makeup/styles/html/pygments/autumn.ex	/^defmodule Makeup.Styles.HTML.AutumnStyle do$/;"	m
Backoff	deps/db_connection/lib/db_connection/backoff.ex	/^defmodule DBConnection.Backoff do$/;"	m
BadCodeError	deps/credo/lib/credo/check/consistency/exception_names.ex	/^      defmodule BadCodeError do$/;"	m
BadEncodingError	deps/plug/lib/plug/parsers.ex	/^  defmodule BadEncodingError do$/;"	m
BadHTTPResponse	deps/credo/lib/credo/check/consistency/exception_names.ex	/^      defmodule BadHTTPResponse do$/;"	m
BadMigration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defmodule BadMigration do$/;"	m
BadRequestError	deps/plug/lib/plug/exceptions.ex	/^defmodule Plug.BadRequestError do$/;"	m
Barebone	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Barebone do$/;"	m
Base	lib/boruta/oauth/request/base.ex	/^defmodule Boruta.Oauth.Request.Base do$/;"	m
BasicAuth	deps/plug/lib/plug/basic_auth.ex	/^defmodule Plug.BasicAuth do$/;"	m
BasicAuth	lib/boruta/utils/basic_auth.ex	/^defmodule Boruta.BasicAuth do$/;"	m
BasicAuthTest	test/boruta/basic_auth_test.exs	/^defmodule Boruta.BasicAuthTest do$/;"	m
BelongsTo	deps/ecto/lib/ecto/association.ex	/^defmodule Ecto.Association.BelongsTo do$/;"	m
BinaryConstruction	deps/dialyxir/lib/dialyxir/warnings/binary_construction.ex	/^defmodule Dialyxir.Warnings.BinaryConstruction do$/;"	m
BinaryExtension	deps/postgrex/lib/postgrex/binary_extension.ex	/^defmodule Postgrex.BinaryExtension do$/;"	m
BinaryUtils	deps/postgrex/lib/postgrex/binary_utils.ex	/^defmodule Postgrex.BinaryUtils do$/;"	m
BitString	deps/postgrex/lib/postgrex/extensions/bit_string.ex	/^defmodule Postgrex.Extensions.BitString do$/;"	m
BlackWhiteStyle	deps/makeup/lib/makeup/styles/html/pygments/bw.ex	/^defmodule Makeup.Styles.HTML.BlackWhiteStyle do$/;"	m
Blank	deps/earmark/lib/earmark/line.ex	/^  defmodule Blank  do$/;"	m
Block	deps/credo/lib/credo/code/block.ex	/^defmodule Credo.Code.Block do$/;"	m
Block	deps/earmark/lib/earmark/block.ex	/^defmodule Earmark.Block do$/;"	m
BlockQuote	deps/earmark/lib/earmark/block.ex	/^  defmodule BlockQuote do$/;"	m
BlockQuote	deps/earmark/lib/earmark/line.ex	/^  defmodule BlockQuote  do$/;"	m
Bool	deps/postgrex/lib/postgrex/extensions/bool.ex	/^defmodule Postgrex.Extensions.Bool do$/;"	m
BoolOperationOnSameValues	deps/credo/lib/credo/check/warning/bool_operation_on_same_values.ex	/^defmodule Credo.Check.Warning.BoolOperationOnSameValues do$/;"	m
BooleanExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule BooleanExpr do$/;"	m
BorlandStyle	deps/makeup/lib/makeup/styles/html/pygments/borland.ex	/^defmodule Makeup.Styles.HTML.BorlandStyle do$/;"	m
Boruta	lib/boruta.ex	/^defmodule Boruta do$/;"	m
BorutaFormatter	lib/ex_json_schema/validator/error/boruta_formatter.ex	/^defmodule ExJsonSchema.Validator.Error.BorutaFormatter do$/;"	m
Box	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Box do$/;"	m
Box	deps/postgrex/lib/postgrex/extensions/box.ex	/^defmodule Postgrex.Extensions.Box do$/;"	m
Broadcast	deps/phoenix/lib/phoenix/socket/message.ex	/^defmodule Phoenix.Socket.Broadcast do$/;"	m
BroadcastError	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  defmodule BroadcastError do$/;"	m
BrokenLinkMigration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defmodule BrokenLinkMigration do$/;"	m
Build	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defmodule Build do$/;"	m
Builder	deps/ecto/lib/ecto/query/builder.ex	/^defmodule Ecto.Query.Builder do$/;"	m
Builder	deps/plug/lib/plug/builder.ex	/^defmodule Plug.Builder do$/;"	m
Bunt	deps/bunt/lib/bunt.ex	/^defmodule Bunt do$/;"	m
CLI	deps/credo/lib/credo/cli.ex	/^defmodule Credo.CLI do$/;"	m
CLI	deps/earmark/lib/earmark/cli.ex	/^defmodule Earmark.CLI do$/;"	m
CLI	deps/ex_doc/lib/ex_doc/cli.ex	/^defmodule ExDoc.CLI do$/;"	m
CODE_VERSION	deps/earmark/src/link_text_parser.erl	/^-define(CODE_VERSION, "1.4").$/;"	d
CODE_VERSION	deps/erlex/src/parser.erl	/^-define(CODE_VERSION, "1.4").$/;"	d
COOKIE	deps/plug/lib/plug/session/cookie.ex	/^defmodule Plug.Session.COOKIE do$/;"	m
CSRFProtection	deps/plug/lib/plug/csrf_protection.ex	/^defmodule Plug.CSRFProtection do$/;"	m
CTE	deps/ecto/lib/ecto/query/builder/cte.ex	/^defmodule Ecto.Query.Builder.CTE do$/;"	m
CacheBodyReader	deps/plug/lib/plug/parsers.ex	/^      defmodule CacheBodyReader do$/;"	m
Calculator	deps/mox/lib/mox.ex	/^      defmodule Calculator do$/;"	m
Calculator	deps/mox/lib/mox.ex	/^      defmodule MyApp.Calculator do$/;"	m
Call	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^defmodule Dialyxir.Warnings.Call do$/;"	m
CallToMissingFunction	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^defmodule Dialyxir.Warnings.CallToMissingFunction do$/;"	m
CallWithOpaque	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^defmodule Dialyxir.Warnings.CallWithOpaque do$/;"	m
CallWithoutOpaque	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^defmodule Dialyxir.Warnings.CallWithoutOpaque do$/;"	m
CallbackArgumentTypeMismatch	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^defmodule Dialyxir.Warnings.CallbackArgumentTypeMismatch do$/;"	m
CallbackInfoMissing	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^defmodule Dialyxir.Warnings.CallbackInfoMissing do$/;"	m
CallbackMissing	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^defmodule Dialyxir.Warnings.CallbackMissing do$/;"	m
CallbackSpecArgumentTypeMismatch	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^defmodule Dialyxir.Warnings.CallbackSpecArgumentTypeMismatch do$/;"	m
CallbackSpecTypeMismatch	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^defmodule Dialyxir.Warnings.CallbackSpecTypeMismatch do$/;"	m
CallbackTypeMismatch	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^defmodule Dialyxir.Warnings.CallbackTypeMismatch do$/;"	m
CaseTrivialMatches	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^defmodule Credo.Check.Refactor.CaseTrivialMatches do$/;"	m
CastError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.CastError do$/;"	m
CastError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.Query.CastError do$/;"	m
CategoriesCommand	deps/credo/lib/credo/cli/command/categories/categories_command.ex	/^defmodule Credo.CLI.Command.Categories.CategoriesCommand do$/;"	m
CategoriesOutput	deps/credo/lib/credo/cli/command/categories/categories_output.ex	/^defmodule Credo.CLI.Command.Categories.CategoriesOutput do$/;"	m
Cert	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^defmodule Mix.Tasks.Phx.Gen.Cert do$/;"	m
ChangeError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.ChangeError do$/;"	m
ChangeRedirectUriToRedirectUris	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^defmodule Boruta.Repo.Migrations.ChangeRedirectUriToRedirectUris do$/;"	m
ChangeRedirectUriToRedirectUris	_build/dev/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^defmodule Boruta.Repo.Migrations.ChangeRedirectUriToRedirectUris do$/;"	m
ChangeRedirectUriToRedirectUris	_build/test/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^defmodule Boruta.Repo.Migrations.ChangeRedirectUriToRedirectUris do$/;"	m
ChangeRedirectUriToRedirectUris	priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^defmodule Boruta.Repo.Migrations.ChangeRedirectUriToRedirectUris do$/;"	m
Changeset	deps/ecto/lib/ecto/changeset.ex	/^defmodule Ecto.Changeset do$/;"	m
Channel	deps/phoenix/lib/mix/tasks/phx.gen.channel.ex	/^defmodule Mix.Tasks.Phx.Gen.Channel do$/;"	m
Channel	deps/phoenix/lib/phoenix/channel.ex	/^defmodule Phoenix.Channel do$/;"	m
ChannelTest	deps/phoenix/lib/phoenix/test/channel_test.ex	/^defmodule Phoenix.ChannelTest do$/;"	m
CharSet	deps/puid/lib/charset.ex	/^defmodule Puid.CharSet do$/;"	m
Charlists	deps/credo/lib/credo/code/charlists.ex	/^defmodule Credo.Code.Charlists do$/;"	m
Chars	deps/decimal/lib/decimal.ex	/^defimpl String.Chars, for: Decimal do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.AdditionalItems do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.AdditionalProperties do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.AllOf do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.AnyOf do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Dependencies do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Enum do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Format do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MaxItems do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MaxLength do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MaxProperties do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Maximum do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MinItems do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MinLength do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MinProperties do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Minimum do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.MultipleOf do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Not do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.OneOf do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Pattern do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Required do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.Type do$/;"	i
Chars	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  defimpl String.Chars, for: Error.UniqueItems do$/;"	i
Chars	deps/postgrex/lib/postgrex/query.ex	/^defimpl String.Chars, for: Postgrex.Query do$/;"	i
Chars	deps/postgrex/lib/postgrex/stream.ex	/^defimpl String.Chars, for: Postgrex.Copy do$/;"	i
Check	deps/credo/lib/credo/check.ex	/^defmodule Credo.Check do$/;"	m
Check	deps/credo/lib/mix/tasks/credo.gen.check.ex	/^defmodule Mix.Tasks.Credo.Gen.Check do$/;"	m
Circle	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Circle do$/;"	m
Circle	deps/postgrex/lib/postgrex/extensions/circle.ex	/^defmodule Postgrex.Extensions.Circle do$/;"	m
Clean	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defmodule Clean do$/;"	m
Clean	deps/phoenix/lib/mix/tasks/phx.digest.clean.ex	/^defmodule Mix.Tasks.Phx.Digest.Clean do$/;"	m
Client	lib/boruta/adapters/ecto/schemas/client.ex	/^defmodule Boruta.Ecto.Client do$/;"	m
Client	lib/boruta/oauth/authorization/client.ex	/^defmodule Boruta.Oauth.Authorization.Client do$/;"	m
Client	lib/boruta/oauth/schemas/client.ex	/^defmodule Boruta.Oauth.Client do$/;"	m
ClientCredentialsGrantTest	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^defmodule Boruta.OauthTest.ClientCredentialsGrantTest do$/;"	m
ClientCredentialsRequest	lib/boruta/oauth/requests/client_credentials_request.ex	/^defmodule Boruta.Oauth.ClientCredentialsRequest do$/;"	m
Clients	lib/boruta/adapters/ecto/admin/clients.ex	/^defmodule Boruta.Ecto.Admin.Clients do$/;"	m
Clients	lib/boruta/adapters/ecto/clients.ex	/^defmodule Boruta.Ecto.Clients do$/;"	m
Clients	lib/boruta/oauth/contexts/clients.ex	/^defmodule Boruta.Oauth.Clients do$/;"	m
Clock	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^defmodule Phoenix.Tracker.Clock do$/;"	m
Code	deps/credo/lib/credo/code.ex	/^defmodule Credo.Code do$/;"	m
Code	deps/earmark/lib/earmark/block.ex	/^  defmodule Code do$/;"	m
Code	deps/ex_doc/lib/ex_doc/utils/code.ex	/^defmodule ExDoc.Utils.Code do$/;"	m
Code	lib/boruta/oauth/authorization/code.ex	/^defmodule Boruta.Oauth.Authorization.Code do$/;"	m
CodeReloader	deps/phoenix/lib/phoenix/code_reloader.ex	/^defmodule Phoenix.CodeReloader do$/;"	m
CodeRequest	lib/boruta/oauth/requests/code_request.ex	/^defmodule Boruta.Oauth.CodeRequest do$/;"	m
Codegen	deps/jason/lib/codegen.ex	/^defmodule Jason.Codegen do$/;"	m
Codes	lib/boruta/adapters/ecto/codes.ex	/^defmodule Boruta.Ecto.Codes do$/;"	m
Codes	lib/boruta/oauth/contexts/codes.ex	/^defmodule Boruta.Oauth.Codes do$/;"	m
Collectable	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^defimpl Collectable, for: Stream do$/;"	i
Collectable	deps/plug/lib/plug/conn.ex	/^defimpl Collectable, for: Plug.Conn do$/;"	i
Collectable	deps/postgrex/lib/postgrex/stream.ex	/^defimpl Collectable, for: Postgrex.Stream do$/;"	i
Collector	deps/credo/lib/credo/check/consistency/collector.ex	/^      defmodule Credo.Check.Consistency.SomeCheck.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/collector.ex	/^defmodule Credo.Check.Consistency.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^defmodule Credo.Check.Consistency.ExceptionNames.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/line_endings/collector.ex	/^defmodule Credo.Check.Consistency.LineEndings.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^defmodule Credo.Check.Consistency.MultiAliasImportRequireUse.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^defmodule Credo.Check.Consistency.ParameterPatternMatching.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^defmodule Credo.Check.Consistency.SpaceAroundOperators.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/space_in_parentheses/collector.ex	/^defmodule Credo.Check.Consistency.SpaceInParentheses.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/tabs_or_spaces/collector.ex	/^defmodule Credo.Check.Consistency.TabsOrSpaces.Collector do$/;"	m
Collector	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^defmodule Credo.Check.Consistency.UnusedVariableNames.Collector do$/;"	m
ColorfulStyle	deps/makeup/lib/makeup/styles/html/pygments/colorful.ex	/^defmodule Makeup.Styles.HTML.ColorfulStyle do$/;"	m
Combination	deps/ecto/lib/ecto/query/builder/combination.ex	/^defmodule Ecto.Query.Builder.Combination do$/;"	m
Combinators	deps/makeup/lib/makeup/lexer/combinators.ex	/^defmodule Makeup.Lexer.Combinators do$/;"	m
Command	deps/credo/lib/credo/cli/command.ex	/^defmodule Credo.CLI.Command do$/;"	m
Command	deps/ecto_sql/lib/ecto/migration.ex	/^  defmodule Command do$/;"	m
Comment	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Comment do$/;"	m
Comment	deps/ecto/lib/ecto.ex	/^      defmodule Comment do$/;"	m
Comment	deps/ecto/lib/ecto/changeset.ex	/^      defmodule Comment do$/;"	m
Comment	deps/ecto/lib/ecto/schema.ex	/^      defmodule Comment do$/;"	m
Comment	deps/ecto/lib/ecto/schema.ex	/^      defmodule MyApp.Comment do$/;"	m
CommonGrantTest	test/boruta/oauth/integration/common_grant_test.exs	/^defmodule Boruta.OauthTest.CommonGrantTest do$/;"	m
Compile	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^defmodule Mix.Tasks.NimbleParsec.Compile do$/;"	m
CompileError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.Query.CompileError do$/;"	m
Compiler	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^defmodule NimbleParsec.Compiler do$/;"	m
CompositePk	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.CompositePk do$/;"	m
CondStatements	deps/credo/lib/credo/check/refactor/cond_statements.ex	/^defmodule Credo.Check.Refactor.CondStatements do$/;"	m
Config	deps/credo/lib/mix/tasks/credo.gen.config.ex	/^defmodule Mix.Tasks.Credo.Gen.Config do$/;"	m
Config	deps/ex_doc/lib/ex_doc/config.ex	/^defmodule ExDoc.Config do$/;"	m
Config	deps/phoenix/lib/phoenix/config.ex	/^defmodule Phoenix.Config do$/;"	m
Config	lib/boruta/config.ex	/^defmodule Boruta.Config do$/;"	m
ConfigBuilder	deps/credo/lib/credo/config_builder.ex	/^defmodule Credo.ConfigBuilder do$/;"	m
ConfigComment	deps/credo/lib/credo/check/config_comment.ex	/^defmodule Credo.Check.ConfigComment do$/;"	m
ConfigCommentFinder	deps/credo/lib/credo/check/config_comment_finder.ex	/^defmodule Credo.Check.ConfigCommentFinder do$/;"	m
ConfigFile	deps/credo/lib/credo/config_file.ex	/^defmodule Credo.ConfigFile do$/;"	m
ConfigFiles	deps/credo/lib/credo/service/config_files.ex	/^defmodule Credo.Service.ConfigFiles do$/;"	m
Conn	deps/plug/lib/plug/adapters/test/conn.ex	/^defmodule Plug.Adapters.Test.Conn do$/;"	m
Conn	deps/plug/lib/plug/conn.ex	/^defmodule Plug.Conn do$/;"	m
ConnTest	deps/phoenix/lib/phoenix/test/conn_test.ex	/^defmodule Phoenix.ConnTest do$/;"	m
Connection	deps/connection/lib/connection.ex	/^defmodule Connection do$/;"	m
Connection	deps/db_connection/lib/db_connection/connection.ex	/^defmodule DBConnection.Connection do$/;"	m
Connection	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^  defmodule Ecto.Adapters.MyXQL.Connection do$/;"	m
Connection	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^  defmodule Ecto.Adapters.Postgres.Connection do$/;"	m
Connection	deps/ecto_sql/lib/ecto/adapters/sql/connection.ex	/^defmodule Ecto.Adapters.SQL.Connection do$/;"	m
Connection	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  defmodule Connection do$/;"	m
Connection	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^  defmodule Ecto.Adapters.Tds.Connection do$/;"	m
ConnectionError	deps/db_connection/lib/db_connection/connection.ex	/^defmodule DBConnection.ConnectionError do$/;"	m
ConnectionPool	deps/db_connection/lib/db_connection/connection_pool.ex	/^defmodule DBConnection.ConnectionPool do$/;"	m
ConsoleFormatter	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^defmodule Phoenix.Router.ConsoleFormatter do$/;"	m
Constraint	deps/ecto_sql/lib/ecto/migration.ex	/^  defmodule Constraint do$/;"	m
ConstraintError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.ConstraintError do$/;"	m
Context	deps/decimal/lib/decimal.ex	/^  defmodule Context do$/;"	m
Context	deps/earmark/lib/earmark/context.ex	/^defmodule Earmark.Context do$/;"	m
Context	deps/phoenix/lib/mix/phoenix/context.ex	/^defmodule Mix.Phoenix.Context do$/;"	m
Context	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^defmodule Mix.Tasks.Phx.Gen.Context do$/;"	m
ContractDiff	deps/dialyxir/lib/dialyxir/warnings/contract_diff.ex	/^defmodule Dialyxir.Warnings.ContractDiff do$/;"	m
ContractRange	deps/dialyxir/lib/dialyxir/warnings/contract_range.ex	/^defmodule Dialyxir.Warnings.ContractRange do$/;"	m
ContractSubtype	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^defmodule Dialyxir.Warnings.ContractSubtype do$/;"	m
ContractSupertype	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^defmodule Dialyxir.Warnings.ContractSupertype do$/;"	m
ContractWithOpaque	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^defmodule Dialyxir.Warnings.ContractWithOpaque do$/;"	m
Controller	deps/phoenix/lib/phoenix/controller.ex	/^defmodule Phoenix.Controller do$/;"	m
ConvertCLIOptionsToConfig	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^defmodule Credo.Execution.Task.ConvertCLIOptionsToConfig do$/;"	m
CookieOverflowError	deps/plug/lib/plug/conn.ex	/^  defmodule CookieOverflowError do$/;"	m
Cookies	deps/plug/lib/plug/conn/cookies.ex	/^defmodule Plug.Conn.Cookies do$/;"	m
Copy	deps/postgrex/lib/postgrex/stream.ex	/^defmodule Postgrex.Copy do$/;"	m
CorruptedPk	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.CorruptedPk do$/;"	m
Cowboy	deps/plug/lib/plug/adapters/cowboy.ex	/^defmodule Plug.Adapters.Cowboy do$/;"	m
Cowboy2	deps/plug/lib/plug/adapters/cowboy2.ex	/^defmodule Plug.Adapters.Cowboy2 do$/;"	m
Cowboy2Adapter	deps/phoenix/lib/phoenix/endpoint/cowboy2_adapter.ex	/^defmodule Phoenix.Endpoint.Cowboy2Adapter do$/;"	m
Cowboy2Handler	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^defmodule Phoenix.Endpoint.Cowboy2Handler do$/;"	m
CowboyAdapter	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^defmodule Phoenix.Endpoint.CowboyAdapter do$/;"	m
CowboyWebSocket	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^defmodule Phoenix.Endpoint.CowboyWebSocket do$/;"	m
Create	deps/ecto/lib/mix/tasks/ecto.create.ex	/^defmodule Mix.Tasks.Ecto.Create do$/;"	m
CreateBoruta	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191009182339_create_boruta.exs	/^defmodule Boruta.Repo.Migrations.CreateBoruta do$/;"	m
CreateBoruta	_build/dev/lib/boruta/priv/repo/migrations/20191009182339_create_boruta.exs	/^defmodule Boruta.Repo.Migrations.CreateBoruta do$/;"	m
CreateBoruta	_build/test/lib/boruta/priv/repo/migrations/20191009182339_create_boruta.exs	/^defmodule Boruta.Repo.Migrations.CreateBoruta do$/;"	m
CreateBoruta	priv/repo/migrations/20191009182339_create_boruta.exs	/^defmodule Boruta.Repo.Migrations.CreateBoruta do$/;"	m
CreateIndexes	deps/ecto_sql/lib/ecto/migration.ex	/^      defmodule MyRepo.Migrations.CreateIndexes do$/;"	m
CreateMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule CreateMigration do$/;"	m
CreateUserOrganization	deps/ecto/lib/ecto/schema.ex	/^      defmodule MyApp.Repo.Migrations.CreateUserOrganization do$/;"	m
Credo	deps/credo/lib/credo.ex	/^defmodule Credo do$/;"	m
Credo	deps/credo/lib/mix/tasks/credo.ex	/^defmodule Mix.Tasks.Credo do$/;"	m
CredoSampleModule	deps/credo/lib/credo/check/refactor/nesting.ex	/^      defmodule CredoSampleModule do$/;"	m
Crypto	deps/plug_crypto/lib/plug/crypto.ex	/^defmodule Plug.Crypto do$/;"	m
CryptoRand	deps/crypto_rand/lib/crypto_rand.ex	/^defmodule CryptoRand do$/;"	m
Ctxt	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defmodule Ctxt do$/;"	m
Cursor	deps/postgrex/lib/postgrex/stream.ex	/^defmodule Postgrex.Cursor do$/;"	m
Custom	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Custom do$/;"	m
CustomFunctions	deps/ecto/lib/ecto/query/api.ex	/^      defmodule CustomFunctions do$/;"	m
CustomPermalink	deps/ecto/integration_test/support/types.exs	/^defmodule CustomPermalink do$/;"	m
CyclomaticComplexity	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^defmodule Credo.Check.Refactor.CyclomaticComplexity do$/;"	m
DBConnection	deps/db_connection/lib/db_connection.ex	/^defmodule DBConnection do$/;"	m
DataCase	test/support/data_case.ex	/^defmodule Boruta.DataCase do$/;"	m
Date	deps/postgrex/lib/postgrex/extensions/date.ex	/^defmodule Postgrex.Extensions.Date do$/;"	m
Debugger	deps/plug/lib/plug/debugger.ex	/^defmodule Plug.Debugger do$/;"	m
Decimal	deps/decimal/lib/decimal.ex	/^defmodule Decimal do$/;"	m
DecodeError	deps/jason/lib/decoder.ex	/^defmodule Jason.DecodeError do$/;"	m
Decoder	deps/jason/lib/decoder.ex	/^defmodule Jason.Decoder do$/;"	m
Default	deps/credo/lib/credo/cli/command/categories/output/default.ex	/^defmodule Credo.CLI.Command.Categories.Output.Default do$/;"	m
Default	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^defmodule Credo.CLI.Command.Explain.Output.Default do$/;"	m
Default	deps/credo/lib/credo/cli/command/info/output/default.ex	/^defmodule Credo.CLI.Command.Info.Output.Default do$/;"	m
Default	deps/credo/lib/credo/cli/command/list/output/default.ex	/^defmodule Credo.CLI.Command.List.Output.Default do$/;"	m
Default	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^defmodule Credo.CLI.Command.Suggest.Output.Default do$/;"	m
DefaultStyle	deps/makeup/lib/makeup/styles/html/pygments/default.ex	/^defmodule Makeup.Styles.HTML.DefaultStyle do$/;"	m
DeltaGeneration	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^defmodule Phoenix.Tracker.DeltaGeneration do$/;"	m
Dependencies	deps/ex_json_schema/lib/ex_json_schema/validator/dependencies.ex	/^defmodule ExJsonSchema.Validator.Dependencies do$/;"	m
Dependencies	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Dependencies do$/;"	m
DetermineCommand	deps/credo/lib/credo/execution/task/determine_command.ex	/^defmodule Credo.Execution.Task.DetermineCommand do$/;"	m
Dialyxir	deps/dialyxir/lib/dialyxir.ex	/^defmodule Dialyxir do$/;"	m
Dialyzer	deps/dialyxir/lib/dialyxir/dialyzer.ex	/^defmodule Dialyxir.Dialyzer do$/;"	m
Dialyzer	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^defmodule Mix.Tasks.Dialyzer do$/;"	m
Digest	deps/phoenix/lib/mix/tasks/phx.digest.ex	/^defmodule Mix.Tasks.Phx.Digest do$/;"	m
Digester	deps/phoenix/lib/phoenix/digester.ex	/^defmodule Phoenix.Digester do$/;"	m
Distinct	deps/ecto/lib/ecto/query/builder/distinct.ex	/^defmodule Ecto.Query.Builder.Distinct do$/;"	m
Docs	deps/ex_doc/lib/mix/tasks/docs.ex	/^defmodule Mix.Tasks.Docs do$/;"	m
DoubleBooleanNegation	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^defmodule Credo.Check.Refactor.DoubleBooleanNegation do$/;"	m
Draft4	deps/ex_json_schema/lib/ex_json_schema/schema/draft4.ex	/^defmodule ExJsonSchema.Schema.Draft4 do$/;"	m
Drop	deps/ecto/lib/mix/tasks/ecto.drop.ex	/^defmodule Mix.Tasks.Ecto.Drop do$/;"	m
DropColumnIfExistsMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule DropColumnIfExistsMigration do$/;"	m
DropColumnMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule DropColumnMigration do$/;"	m
Dump	deps/ecto_sql/lib/mix/tasks/ecto.dump.ex	/^defmodule Mix.Tasks.Ecto.Dump do$/;"	m
DuplicatedCode	deps/credo/lib/credo/check/design/duplicated_code.ex	/^defmodule Credo.Check.Design.DuplicatedCode do$/;"	m
Dynamic	deps/ecto/lib/ecto/query/builder/dynamic.ex	/^defmodule Ecto.Query.Builder.Dynamic do$/;"	m
DynamicExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule DynamicExpr do$/;"	m
EExEngine	deps/phoenix/lib/phoenix/template/eex_engine.ex	/^defmodule Phoenix.Template.EExEngine do$/;"	m
EPUB	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^defmodule ExDoc.Formatter.EPUB do$/;"	m
ETS	deps/plug/lib/plug/session/ets.ex	/^defmodule Plug.Session.ETS do$/;"	m
ETSTableHelper	deps/credo/lib/credo/service/ets_table_helper.ex	/^defmodule Credo.Service.ETSTableHelper do$/;"	m
Earmark	deps/earmark/lib/earmark.ex	/^defmodule Earmark do$/;"	m
Earmark	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^defmodule ExDoc.Markdown.Earmark do$/;"	m
Ecto	deps/ecto/lib/ecto.ex	/^defmodule Ecto do$/;"	m
Ecto	deps/ecto/lib/mix/ecto.ex	/^defmodule Mix.Ecto do$/;"	m
Ecto	deps/ecto/lib/mix/tasks/ecto.ex	/^defmodule Mix.Tasks.Ecto do$/;"	m
Ecto	deps/ex_machina/lib/ex_machina/ecto.ex	/^defmodule ExMachina.Ecto do$/;"	m
EctoSQL	deps/ecto_sql/lib/mix/ecto_sql.ex	/^defmodule Mix.EctoSQL do$/;"	m
EctoStrategy	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^defmodule ExMachina.EctoStrategy do$/;"	m
EctoURI	deps/ecto/lib/ecto/type.ex	/^      defmodule EctoURI do$/;"	m
ElixirLexer	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^defmodule Makeup.Lexers.ElixirLexer do$/;"	m
ElixirPre1_6_0	deps/credo/lib/credo/code/token.ex	/^  defmodule ElixirPre1_6_0 do$/;"	m
EmacsStyle	deps/makeup/lib/makeup/styles/html/pygments/emacs.ex	/^defmodule Makeup.Styles.HTML.EmacsStyle do$/;"	m
Embedded	deps/ecto/lib/ecto/embedded.ex	/^defmodule Ecto.Embedded do$/;"	m
Embedded	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^defmodule Mix.Tasks.Phx.Gen.Embedded do$/;"	m
Encode	deps/jason/lib/encode.ex	/^defmodule Jason.Encode do$/;"	m
EncodeError	deps/db_connection/lib/db_connection.ex	/^  defmodule EncodeError do$/;"	m
EncodeError	deps/jason/lib/encode.ex	/^defmodule Jason.EncodeError do$/;"	m
Encoder	deps/ecto/lib/ecto/json.ex	/^  defimpl Jason.Encoder, for: Ecto.Association.NotLoaded do$/;"	i
Encoder	deps/ecto/lib/ecto/json.ex	/^  defimpl Jason.Encoder, for: Ecto.Schema.Metadata do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^      defimpl Jason.Encoder, for: Test do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^      defimpl Jason.Encoder, for: unquote(module) do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Any do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Atom do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: BitString do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Decimal do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Float do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Integer do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Jason.Fragment do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: List do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: Map do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defimpl Jason.Encoder, for: [Date, Time, NaiveDateTime, DateTime] do$/;"	i
Encoder	deps/jason/lib/encoder.ex	/^defprotocol Jason.Encoder do$/;"	p
Endpoint	deps/phoenix/lib/phoenix/endpoint.ex	/^      defmodule YourApp.Endpoint do$/;"	m
Endpoint	deps/phoenix/lib/phoenix/endpoint.ex	/^defmodule Phoenix.Endpoint do$/;"	m
Engine	deps/phoenix/lib/phoenix/template/engine.ex	/^defmodule Phoenix.Template.Engine do$/;"	m
Entropy	deps/puid/lib/entropy.ex	/^defmodule Puid.Entropy do$/;"	m
Enum	deps/credo/lib/credo/backports/enum.ex	/^defmodule Credo.Backports.Enum do$/;"	m
Enum	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Enum do$/;"	m
Enumerable	deps/db_connection/lib/db_connection.ex	/^defimpl Enumerable, for: DBConnection.PrepareStream do$/;"	i
Enumerable	deps/db_connection/lib/db_connection.ex	/^defimpl Enumerable, for: DBConnection.Stream do$/;"	i
Enumerable	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^defimpl Enumerable, for: Stream do$/;"	i
Enumerable	deps/postgrex/lib/postgrex/stream.ex	/^defimpl Enumerable, for: Postgrex.Stream do$/;"	i
Erlex	deps/erlex/lib/erlex.ex	/^defmodule Erlex do$/;"	m
Error	deps/decimal/lib/decimal.ex	/^  defmodule Error do$/;"	m
Error	deps/earmark/lib/earmark/error.ex	/^defmodule Earmark.Error do$/;"	m
Error	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defmodule Error do$/;"	m
Error	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^defmodule ExJsonSchema.Validator.Error do$/;"	m
Error	deps/postgrex/lib/postgrex/error.ex	/^defmodule Postgrex.Error do$/;"	m
Error	deps/puid/lib/puid.ex	/^defmodule Puid.Error do$/;"	m
Error	lib/boruta/oauth/error.ex	/^defmodule Boruta.Oauth.Error do$/;"	m
ErrorCode	deps/postgrex/lib/postgrex/error_code.ex	/^defmodule Postgrex.ErrorCode do$/;"	m
ErrorHandler	deps/plug/lib/plug/error_handler.ex	/^defmodule Plug.ErrorHandler do$/;"	m
ExDoc	deps/ex_doc/lib/ex_doc.ex	/^defmodule ExDoc do$/;"	m
ExJsonSchema	deps/ex_json_schema/lib/ex_json_schema.ex	/^defmodule ExJsonSchema do$/;"	m
ExMachina	deps/ex_machina/lib/ex_machina.ex	/^defmodule ExMachina do$/;"	m
ExactEquality	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^defmodule Dialyxir.Warnings.ExactEquality do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^      defmodule Example do$/;"	m
Example	deps/dialyxir/lib/example.ex	/^defmodule Example do$/;"	m
ExampleBehaviour	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^      defmodule ExampleBehaviour do$/;"	m
ExampleBehaviour	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^      defmodule ExampleBehaviour do$/;"	m
ExampleBehaviour	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^      defmodule ExampleBehaviour do$/;"	m
ExampleBehaviour	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^      defmodule ExampleBehaviour do$/;"	m
ExampleBehaviour	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^      defmodule ExampleBehaviour do$/;"	m
ExampleProcess	deps/credo/lib/credo/execution/process_definition.ex	/^      defmodule Credo.ExampleProcess do$/;"	m
Exception	deps/phoenix/lib/phoenix/exceptions.ex	/^defimpl Plug.Exception, for: Phoenix.ActionClauseError do$/;"	i
Exception	deps/plug/lib/plug/exceptions.ex	/^      defimpl Plug.Exception, for: ActionableExample do$/;"	i
Exception	deps/plug/lib/plug/exceptions.ex	/^defimpl Plug.Exception, for: Any do$/;"	i
Exception	deps/plug/lib/plug/exceptions.ex	/^defprotocol Plug.Exception do$/;"	p
ExceptionNames	deps/credo/lib/credo/check/consistency/exception_names.ex	/^defmodule Credo.Check.Consistency.ExceptionNames do$/;"	m
Execution	deps/credo/lib/credo/execution.ex	/^defmodule Credo.Execution do$/;"	m
ExecutionConfigFiles	deps/credo/lib/credo/execution/execution_config_files.ex	/^defmodule Credo.Execution.ExecutionConfigFiles do$/;"	m
ExecutionIssues	deps/credo/lib/credo/execution/execution_issues.ex	/^defmodule Credo.Execution.ExecutionIssues do$/;"	m
ExecutionSourceFiles	deps/credo/lib/credo/execution/execution_source_files.ex	/^defmodule Credo.Execution.ExecutionSourceFiles do$/;"	m
ExecutionTiming	deps/credo/lib/credo/execution/execution_timing.ex	/^defmodule Credo.Execution.ExecutionTiming do$/;"	m
ExpensiveEmptyEnumCheck	deps/credo/lib/credo/check/warning/expensive_empty_enum_check.ex	/^defmodule Credo.Check.Warning.ExpensiveEmptyEnumCheck do$/;"	m
Explain	deps/dialyxir/lib/mix/tasks/dialyzer/explain.ex	/^defmodule Mix.Tasks.Dialyzer.Explain do$/;"	m
ExplainCommand	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^defmodule Credo.CLI.Command.Explain.ExplainCommand do$/;"	m
ExplainOutput	deps/credo/lib/credo/cli/command/explain/explain_output.ex	/^defmodule Credo.CLI.Command.Explain.ExplainOutput do$/;"	m
ExsEngine	deps/phoenix/lib/phoenix/template/exs_engine.ex	/^defmodule Phoenix.Template.ExsEngine do$/;"	m
ExsLoader	deps/credo/lib/credo/exs_loader.ex	/^defmodule Credo.ExsLoader do$/;"	m
Extension	deps/postgrex/lib/postgrex/extension.ex	/^defmodule Postgrex.Extension do$/;"	m
ExtraRange	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^defmodule Dialyxir.Warnings.ExtraRange do$/;"	m
Factory	test/support/boruta_factory.ex	/^defmodule Boruta.Factory do$/;"	m
Fence	deps/earmark/lib/earmark/line.ex	/^  defmodule Fence  do$/;"	m
FileHelpers	deps/ecto_sql/integration_test/support/file_helpers.exs	/^defmodule Support.FileHelpers do$/;"	m
Filename	deps/credo/lib/credo/cli/filename.ex	/^defmodule Credo.CLI.Filename do$/;"	m
Filter	deps/credo/lib/credo/cli/filter.ex	/^defmodule Credo.CLI.Filter do$/;"	m
Filter	deps/ecto/lib/ecto/query/builder/filter.ex	/^defmodule Ecto.Query.Builder.Filter do$/;"	m
FilterMap	deps/dialyxir/lib/dialyxir/filter_map.ex	/^defmodule Dialyxir.FilterMap do$/;"	m
Float4	deps/postgrex/lib/postgrex/extensions/float4.ex	/^defmodule Postgrex.Extensions.Float4 do$/;"	m
Float8	deps/postgrex/lib/postgrex/extensions/float8.ex	/^defmodule Postgrex.Extensions.Float8 do$/;"	m
FlyCheck	deps/credo/lib/credo/cli/command/list/output/flycheck.ex	/^defmodule Credo.CLI.Command.List.Output.FlyCheck do$/;"	m
FlyCheck	deps/credo/lib/credo/cli/command/suggest/output/flycheck.ex	/^defmodule Credo.CLI.Command.Suggest.Output.FlyCheck do$/;"	m
Flycheck	deps/credo/lib/credo/cli/output/formatter/flycheck.ex	/^defmodule Credo.CLI.Output.Formatter.Flycheck do$/;"	m
FnDef	deps/earmark/lib/earmark/block.ex	/^  defmodule FnDef do$/;"	m
FnDef	deps/earmark/lib/earmark/line.ex	/^  defmodule FnDef  do$/;"	m
FnList	deps/earmark/lib/earmark/block.ex	/^  defmodule FnList do$/;"	m
Foo	deps/ecto/integration_test/cases/repo.exs	/^  defmodule Foo do$/;"	m
FootnoteListRenderer	deps/earmark/lib/earmark/ast/renderer/footnote_list_renderer.ex	/^defmodule Earmark.Ast.Renderer.FootnoteListRenderer do$/;"	m
Format	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Format do$/;"	m
Format	deps/ex_json_schema/lib/ex_json_schema/validator/format.ex	/^defmodule ExJsonSchema.Validator.Format do$/;"	m
FormatDelegator	deps/credo/lib/credo/cli/output/format_delegator.ex	/^defmodule Credo.CLI.Output.FormatDelegator do$/;"	m
Formatter	deps/dialyxir/lib/dialyxir/formatter.ex	/^defmodule Dialyxir.Formatter do$/;"	m
Formatter	deps/jason/lib/formatter.ex	/^defmodule Jason.Formatter do$/;"	m
Formatter	deps/makeup/lib/makeup/formatter.ex	/^defmodule Makeup.Formatter do$/;"	m
Fragment	deps/jason/lib/fragment.ex	/^defmodule Jason.Fragment do$/;"	m
FriendlyStyle	deps/makeup/lib/makeup/styles/html/pygments/friendly.ex	/^defmodule Makeup.Styles.HTML.FriendlyStyle do$/;"	m
From	deps/ecto/lib/ecto/query/builder/from.ex	/^defmodule Ecto.Query.Builder.From do$/;"	m
FromExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule FromExpr do$/;"	m
FruityStyle	deps/makeup/lib/makeup/styles/html/pygments/fruity.ex	/^defmodule Makeup.Styles.HTML.FruityStyle do$/;"	m
FunctionApplicationArguments	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^defmodule Dialyxir.Warnings.FunctionApplicationArguments do$/;"	m
FunctionApplicationNoFunction	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^defmodule Dialyxir.Warnings.FunctionApplicationNoFunction do$/;"	m
FunctionArity	deps/credo/lib/credo/check/refactor/function_arity.ex	/^defmodule Credo.Check.Refactor.FunctionArity do$/;"	m
FunctionNames	deps/credo/lib/credo/check/readability/function_names.ex	/^defmodule Credo.Check.Readability.FunctionNames do$/;"	m
FunctionNode	deps/ex_doc/lib/ex_doc/nodes.ex	/^defmodule ExDoc.FunctionNode do$/;"	m
GC	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^defmodule Phoenix.PubSub.GC do$/;"	m
GenCheck	deps/credo/lib/credo/cli/command/gen.check.ex	/^defmodule Credo.CLI.Command.GenCheck do$/;"	m
GenConfig	deps/credo/lib/credo/cli/command/gen.config.ex	/^defmodule Credo.CLI.Command.GenConfig do$/;"	m
GoodMigration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defmodule GoodMigration do$/;"	m
GroupBy	deps/ecto/lib/ecto/query/builder/group_by.ex	/^defmodule Ecto.Query.Builder.GroupBy do$/;"	m
GroupMatcher	deps/ex_doc/lib/ex_doc/group_matcher.ex	/^defmodule ExDoc.GroupMatcher do$/;"	m
Groups	deps/makeup/lib/makeup/lexer/groups.ex	/^defmodule Makeup.Lexer.Groups do$/;"	m
GuardFail	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^defmodule Dialyxir.Warnings.GuardFail do$/;"	m
GuardFailPattern	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^defmodule Dialyxir.Warnings.GuardFailPattern do$/;"	m
HStore	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^defmodule Postgrex.Extensions.HStore do$/;"	m
HTML	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^defmodule ExDoc.Formatter.HTML do$/;"	m
HTML	deps/makeup/lib/makeup/styles/html.ex	/^defmodule Makeup.Styles.HTML do$/;"	m
HTML	deps/phoenix/lib/phoenix/template/html.ex	/^defmodule Phoenix.Template.HTML do$/;"	m
HTML	deps/plug/lib/plug/html.ex	/^defmodule Plug.HTML do$/;"	m
HTMLFormatter	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^defmodule Makeup.Formatters.HTML.HTMLFormatter do$/;"	m
HTTPHeaderException	deps/credo/lib/credo/check/consistency/exception_names.ex	/^      defmodule HTTPHeaderException do$/;"	m
Has	deps/ecto/lib/ecto/association.ex	/^defmodule Ecto.Association.Has do$/;"	m
HasThrough	deps/ecto/lib/ecto/association.ex	/^defmodule Ecto.Association.HasThrough do$/;"	m
Head	deps/plug/lib/plug/head.ex	/^defmodule Plug.Head do$/;"	m
Heading	deps/earmark/lib/earmark/block.ex	/^  defmodule Heading do$/;"	m
Heading	deps/earmark/lib/earmark/line.ex	/^  defmodule Heading  do$/;"	m
HelloWorldCommand	deps/credo/lib/credo/cli/command.ex	/^      defmodule HelloWorldCommand do$/;"	m
Help	deps/credo/lib/credo/cli/command/help.ex	/^defmodule Credo.CLI.Command.Help do$/;"	m
Helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^defmodule Makeup.Lexers.ElixirLexer.Helper do$/;"	m
Helpers	deps/earmark/lib/earmark/helpers.ex	/^defmodule Earmark.Helpers do$/;"	m
Helpers	deps/jason/lib/helpers.ex	/^defmodule Jason.Helpers do$/;"	m
Helpers	deps/nimble_parsec/lib/nimble_parsec.ex	/^      defmodule MyParser.Helpers do$/;"	m
Helpers	deps/phoenix/lib/phoenix/router/helpers.ex	/^defmodule Phoenix.Router.Helpers do$/;"	m
Heredocs	deps/credo/lib/credo/code/heredocs.ex	/^defmodule Credo.Code.Heredocs do$/;"	m
Hierarchy	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^defmodule Makeup.Token.Utils.Hierarchy do$/;"	m
Highlighter	deps/ex_doc/lib/ex_doc/highlighter.ex	/^defmodule ExDoc.Highlighter do$/;"	m
Holder	deps/db_connection/lib/db_connection/holder.ex	/^defmodule DBConnection.Holder do$/;"	m
Html	deps/earmark/lib/earmark/block.ex	/^  defmodule Html do$/;"	m
Html	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^defmodule Mix.Tasks.Phx.Gen.Html do$/;"	m
HtmlCloseTag	deps/earmark/lib/earmark/line.ex	/^  defmodule HtmlCloseTag  do$/;"	m
HtmlComment	deps/earmark/lib/earmark/block.ex	/^  defmodule HtmlComment do$/;"	m
HtmlComment	deps/earmark/lib/earmark/line.ex	/^  defmodule HtmlComment  do$/;"	m
HtmlHelpers	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^defmodule Earmark.Helpers.HtmlHelpers do$/;"	m
HtmlOneLine	deps/earmark/lib/earmark/line.ex	/^  defmodule HtmlOneLine  do$/;"	m
HtmlOneline	deps/earmark/lib/earmark/block.ex	/^  defmodule HtmlOneline do$/;"	m
HtmlOpenTag	deps/earmark/lib/earmark/line.ex	/^  defmodule HtmlOpenTag  do$/;"	m
HtmlParser	deps/earmark/lib/earmark/helpers/html_parser.ex	/^defmodule Earmark.Helpers.HtmlParser do$/;"	m
HtmlRenderer	deps/earmark/lib/earmark/ast/renderer/html_renderer.ex	/^defmodule Earmark.Ast.Renderer.HtmlRenderer do$/;"	m
ID	deps/ecto/integration_test/cases/repo.exs	/^    defmodule ID do$/;"	m
IExPry	deps/credo/lib/credo/check/warning/iex_pry.ex	/^defmodule Credo.Check.Warning.IExPry do$/;"	m
INET	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.INET do$/;"	m
INET	deps/postgrex/lib/postgrex/extensions/inet.ex	/^defmodule Postgrex.Extensions.INET do$/;"	m
Ial	deps/earmark/lib/earmark/block.ex	/^  defmodule Ial do$/;"	m
Ial	deps/earmark/lib/earmark/line.ex	/^  defmodule Ial  do$/;"	m
IdDef	deps/earmark/lib/earmark/block.ex	/^  defmodule IdDef do$/;"	m
IdDef	deps/earmark/lib/earmark/line.ex	/^  defmodule IdDef  do$/;"	m
IfWhileLang	deps/nimble_parsec/lib/nimble_parsec.ex	/^      defmodule IfWhileLang do$/;"	m
IgorStyle	deps/makeup/lib/makeup/styles/html/pygments/igor.ex	/^defmodule Makeup.Styles.HTML.IgorStyle do$/;"	m
ImplicitGrantTest	test/boruta/oauth/integration/implicit_grant_test.exs	/^defmodule Boruta.OauthTest.ImplicitGrantTest do$/;"	m
ImproperListConstruction	deps/dialyxir/lib/dialyxir/warnings/improper_list_construction.ex	/^defmodule Dialyxir.Warnings.ImproperListConstruction do$/;"	m
Indent	deps/earmark/lib/earmark/line.ex	/^  defmodule Indent  do$/;"	m
Index	deps/ecto_sql/lib/ecto/migration.ex	/^  defmodule Index do$/;"	m
InferredDropIndexMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule InferredDropIndexMigration do$/;"	m
Info	deps/puid/lib/puid.ex	/^defmodule Puid.Info do$/;"	m
InfoCommand	deps/credo/lib/credo/cli/command/info/info_command.ex	/^defmodule Credo.CLI.Command.Info.InfoCommand do$/;"	m
InfoOutput	deps/credo/lib/credo/cli/command/info/info_output.ex	/^defmodule Credo.CLI.Command.Info.InfoOutput do$/;"	m
InitializePlugins	deps/credo/lib/credo/execution/task/initialize_plugins.ex	/^defmodule Credo.Execution.Task.InitializePlugins do$/;"	m
Inline	deps/earmark/lib/earmark/ast/inline.ex	/^defmodule Earmark.Ast.Inline do$/;"	m
Inspect	deps/credo/lib/credo/source_file.ex	/^  defimpl Inspect, for: __MODULE__ do$/;"	i
Inspect	deps/decimal/lib/decimal.ex	/^defimpl Inspect, for: Decimal do$/;"	i
Inspect	deps/ecto/lib/ecto/association.ex	/^  defimpl Inspect do$/;"	i
Inspect	deps/ecto/lib/ecto/changeset.ex	/^defimpl Inspect, for: Ecto.Changeset do$/;"	i
Inspect	deps/ecto/lib/ecto/query/inspect.ex	/^defimpl Inspect, for: Ecto.Query do$/;"	i
Inspect	deps/ecto/lib/ecto/query/inspect.ex	/^defimpl Inspect, for: Ecto.Query.DynamicExpr do$/;"	i
Inspect	deps/ecto/lib/ecto/schema/metadata.ex	/^  defimpl Inspect do$/;"	i
Inspect	deps/plug/lib/plug/conn.ex	/^defimpl Inspect, for: Plug.Conn do$/;"	i
Instrument	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^defmodule Phoenix.Endpoint.Instrument do$/;"	m
InstrumentedPlug	deps/plug/lib/plug/telemetry.ex	/^      defmodule InstrumentedPlug do$/;"	m
Int2	deps/postgrex/lib/postgrex/extensions/int2.ex	/^defmodule Postgrex.Extensions.Int2 do$/;"	m
Int4	deps/postgrex/lib/postgrex/extensions/int4.ex	/^defmodule Postgrex.Extensions.Int4 do$/;"	m
Int8	deps/postgrex/lib/postgrex/extensions/int8.ex	/^defmodule Postgrex.Extensions.Int8 do$/;"	m
InterpolationHelper	deps/credo/lib/credo/code/interpolation_helper.ex	/^defmodule Credo.Code.InterpolationHelper do$/;"	m
Interval	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Interval do$/;"	m
Interval	deps/postgrex/lib/postgrex/extensions/interval.ex	/^defmodule Postgrex.Extensions.Interval do$/;"	m
IntervalTest	deps/ecto/integration_test/cases/interval.exs	/^defmodule Ecto.Integration.IntervalTest do$/;"	m
Introspect	lib/boruta/oauth/introspect.ex	/^defmodule Boruta.Oauth.Introspect do$/;"	m
Introspect	lib/boruta/oauth/request/introspect.ex	/^defmodule Boruta.Oauth.Request.Introspect do$/;"	m
IntrospectRequest	lib/boruta/oauth/requests/introspect_request.ex	/^defmodule Boruta.Oauth.IntrospectRequest do$/;"	m
IntrospectResponse	lib/boruta/oauth/responses/introspect.ex	/^defmodule Boruta.Oauth.IntrospectResponse do$/;"	m
IntrospectTest	test/boruta/oauth/integration/introspect_test.exs	/^defmodule Boruta.OauthTest.IntrospectTest do$/;"	m
InvalidAtIndex	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule InvalidAtIndex do$/;"	m
InvalidCSRFTokenError	deps/plug/lib/plug/csrf_protection.ex	/^  defmodule InvalidCSRFTokenError do$/;"	m
InvalidChangesetError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.InvalidChangesetError do$/;"	m
InvalidContract	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^defmodule Dialyxir.Warnings.InvalidContract do$/;"	m
InvalidCrossOriginRequestError	deps/plug/lib/plug/csrf_protection.ex	/^  defmodule InvalidCrossOriginRequestError do$/;"	m
InvalidHeaderError	deps/plug/lib/plug/conn.ex	/^  defmodule InvalidHeaderError do$/;"	m
InvalidMessageError	deps/phoenix/lib/phoenix/socket.ex	/^  defmodule InvalidMessageError do$/;"	m
InvalidPathError	deps/plug/lib/plug/static.ex	/^  defmodule InvalidPathError do$/;"	m
InvalidQueryError	deps/plug/lib/plug/conn.ex	/^  defmodule InvalidQueryError do$/;"	m
InvalidReferenceError	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defmodule InvalidReferenceError do$/;"	m
InvalidSchemaError	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defmodule InvalidSchemaError do$/;"	m
InvalidSpecError	deps/plug/lib/plug/router/utils.ex	/^defmodule Plug.Router.InvalidSpecError do$/;"	m
InvalidURLError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.InvalidURLError do$/;"	m
IoInspect	deps/credo/lib/credo/check/warning/io_inspect.ex	/^defmodule Credo.Check.Warning.IoInspect do$/;"	m
Issue	deps/credo/lib/credo/issue.ex	/^defmodule Credo.Issue do$/;"	m
IssueMeta	deps/credo/lib/credo/issue_meta.ex	/^defmodule Credo.IssueMeta do$/;"	m
Item	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Item do$/;"	m
Item	deps/ecto/lib/ecto/schema.ex	/^      defmodule Item do$/;"	m
ItemColor	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.ItemColor do$/;"	m
Items	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^defmodule ExJsonSchema.Validator.Items do$/;"	m
JSON	deps/credo/lib/credo/cli/output/formatter/json.ex	/^defmodule Credo.CLI.Output.Formatter.JSON do$/;"	m
JSON	deps/plug/lib/plug/parsers/json.ex	/^defmodule Plug.Parsers.JSON do$/;"	m
JSON	deps/postgrex/lib/postgrex/extensions/json.ex	/^defmodule Postgrex.Extensions.JSON do$/;"	m
JSONB	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^defmodule Postgrex.Extensions.JSONB do$/;"	m
JSONHeaderPlug	deps/plug/lib/plug.ex	/^      defmodule JSONHeaderPlug do$/;"	m
JSONSerializer	deps/phoenix/lib/phoenix/socket/serializers/v1_json_serializer.ex	/^defmodule Phoenix.Socket.V1.JSONSerializer do$/;"	m
JSONSerializer	deps/phoenix/lib/phoenix/socket/serializers/v2_json_serializer.ex	/^defmodule Phoenix.Socket.V2.JSONSerializer do$/;"	m
Jason	deps/jason/lib/jason.ex	/^defmodule Jason do$/;"	m
Join	deps/ecto/lib/ecto/query/builder/join.ex	/^defmodule Ecto.Query.Builder.Join do$/;"	m
JoinExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule JoinExpr do$/;"	m
JoinsTest	deps/ecto/integration_test/cases/joins.exs	/^defmodule Ecto.Integration.JoinsTest do$/;"	m
Json	deps/credo/lib/credo/cli/command/categories/output/json.ex	/^defmodule Credo.CLI.Command.Categories.Output.Json do$/;"	m
Json	deps/credo/lib/credo/cli/command/explain/output/json.ex	/^defmodule Credo.CLI.Command.Explain.Output.Json do$/;"	m
Json	deps/credo/lib/credo/cli/command/info/output/json.ex	/^defmodule Credo.CLI.Command.Info.Output.Json do$/;"	m
Json	deps/credo/lib/credo/cli/command/list/output/json.ex	/^defmodule Credo.CLI.Command.List.Output.Json do$/;"	m
Json	deps/credo/lib/credo/cli/command/suggest/output/json.ex	/^defmodule Credo.CLI.Command.Suggest.Output.Json do$/;"	m
Json	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^defmodule Mix.Tasks.Phx.Gen.Json do$/;"	m
JsonEncodeStrategy	deps/ex_machina/lib/ex_machina/strategy.ex	/^      defmodule MyApp.JsonEncodeStrategy do$/;"	m
JsonFactory	deps/ex_machina/lib/ex_machina/strategy.ex	/^      defmodule MyApp.JsonFactory do$/;"	m
KeyGenerator	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^defmodule Plug.Crypto.KeyGenerator do$/;"	m
LC	deps/plug/src/plug_multipart.erl	/^-define(LC(C), case C of$/;"	d
LOG_ERROR	deps/telemetry/src/telemetry.hrl	/^-define(LOG_ERROR(Msg, Args), error_logger:error_msg(Msg, Args)).$/;"	d
LOG_WARNING	deps/telemetry/src/telemetry.hrl	/^-define(LOG_WARNING(Msg, Args), error_logger:warning_msg(Msg, Args)).$/;"	d
LOWER	deps/plug/src/plug_multipart.erl	/^-define(LOWER(Bin), << << ?LC(C) >> || << C >> <= Bin >>).$/;"	d
LOWER	deps/plug/src/plug_multipart.erl	/^-define(LOWER(Function, Rest, A0, Acc), case C of$/;"	d
LOWER	deps/plug/src/plug_multipart.erl	/^-define(LOWER(Function, Rest, Acc), case C of$/;"	d
LTree	deps/postgrex/lib/postgrex/extension.ex	/^      defmodule MyApp.LTree do$/;"	m
LargeNumbers	deps/credo/lib/credo/check/readability/large_numbers.ex	/^defmodule Credo.Check.Readability.LargeNumbers do$/;"	m
LazyLogging	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^defmodule Credo.Check.Warning.LazyLogging do$/;"	m
LeexHelpers	deps/earmark/lib/earmark/helpers/leex_helpers.ex	/^defmodule Earmark.Helpers.LeexHelpers do$/;"	m
Lexeme	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Lexeme do$/;"	m
Lexer	deps/makeup/lib/makeup/lexer.ex	/^defmodule Makeup.Lexer do$/;"	m
LimitOffset	deps/ecto/lib/ecto/query/builder/limit_offset.ex	/^defmodule Ecto.Query.Builder.LimitOffset do$/;"	m
Line	deps/earmark/lib/earmark/line.ex	/^defmodule Earmark.Line do$/;"	m
Line	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Line do$/;"	m
Line	deps/postgrex/lib/postgrex/extensions/line.ex	/^defmodule Postgrex.Extensions.Line do$/;"	m
LineEndings	deps/credo/lib/credo/check/consistency/line_endings.ex	/^defmodule Credo.Check.Consistency.LineEndings do$/;"	m
LineHelpers	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^defmodule Earmark.Helpers.LineHelpers do$/;"	m
LineScanner	deps/earmark/lib/earmark/line_scanner.ex	/^defmodule Earmark.LineScanner do$/;"	m
LineSegment	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.LineSegment do$/;"	m
LineSegment	deps/postgrex/lib/postgrex/extensions/line_segment.ex	/^defmodule Postgrex.Extensions.LineSegment do$/;"	m
LinkParser	deps/earmark/lib/earmark/helpers/link_parser.ex	/^defmodule Earmark.Helpers.LinkParser do$/;"	m
List	deps/earmark/lib/earmark/block.ex	/^  defmodule List do$/;"	m
ListCommand	deps/credo/lib/credo/cli/command/list/list_command.ex	/^defmodule Credo.CLI.Command.List.ListCommand do$/;"	m
ListInfo	deps/earmark/lib/earmark/parser/list_info.ex	/^defmodule Earmark.Parser.ListInfo do$/;"	m
ListItem	deps/earmark/lib/earmark/block.ex	/^  defmodule ListItem do$/;"	m
ListItem	deps/earmark/lib/earmark/line.ex	/^  defmodule ListItem do$/;"	m
ListOutput	deps/credo/lib/credo/cli/command/list/list_output.ex	/^defmodule Credo.CLI.Command.List.ListOutput do$/;"	m
ListParser	deps/earmark/lib/earmark/parser/list_parser.ex	/^defmodule Earmark.Parser.ListParser do$/;"	m
Load	deps/ecto_sql/lib/mix/tasks/ecto.load.ex	/^defmodule Mix.Tasks.Ecto.Load do$/;"	m
LoadAndValidateSourceFiles	deps/credo/lib/credo/cli/task/load_and_validate_source_files.ex	/^defmodule Credo.CLI.Task.LoadAndValidateSourceFiles do$/;"	m
Loader	deps/ecto/lib/ecto/schema/loader.ex	/^defmodule Ecto.Schema.Loader do$/;"	m
Local	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^defmodule Phoenix.PubSub.Local do$/;"	m
LocalSupervisor	deps/phoenix_pubsub/lib/phoenix/pubsub/local_supervisor.ex	/^defmodule Phoenix.PubSub.LocalSupervisor do$/;"	m
Lock	deps/ecto/lib/ecto/query/builder/lock.ex	/^defmodule Ecto.Query.Builder.Lock do$/;"	m
LockCounter	deps/ecto_sql/integration_test/sql/lock.exs	/^  defmodule LockCounter do$/;"	m
LockTest	deps/ecto_sql/integration_test/sql/lock.exs	/^defmodule Ecto.Integration.LockTest do$/;"	m
LogEntry	deps/db_connection/lib/db_connection/log_entry.ex	/^defmodule DBConnection.LogEntry do$/;"	m
LogEntry	deps/ecto/lib/ecto/log_entry.ex	/^defmodule Ecto.LogEntry do$/;"	m
Logger	deps/phoenix/lib/phoenix/logger.ex	/^defmodule Phoenix.Logger do$/;"	m
Logger	deps/plug/lib/plug/logger.ex	/^defmodule Plug.Logger do$/;"	m
LoggingTest	deps/ecto_sql/integration_test/sql/logging.exs	/^defmodule Ecto.Integration.LoggingTest do$/;"	m
LongPoll	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^defmodule Phoenix.Transports.LongPoll do$/;"	m
LongQuoteBlocks	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^defmodule Credo.Check.Refactor.LongQuoteBlocks do$/;"	m
LookaheadHelpers	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^defmodule Earmark.Helpers.LookaheadHelpers do$/;"	m
LovelaceStyle	deps/makeup/lib/makeup/styles/html/pygments/lovelace.ex	/^defmodule Makeup.Styles.HTML.LovelaceStyle do$/;"	m
MACADDR	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.MACADDR do$/;"	m
MACADDR	deps/postgrex/lib/postgrex/extensions/macaddr.ex	/^defmodule Postgrex.Extensions.MACADDR do$/;"	m
MIME	deps/plug/lib/plug/mime.ex	/^defmodule Plug.MIME do$/;"	m
MULTIPART	deps/plug/lib/plug/parsers/multipart.ex	/^defmodule Plug.Parsers.MULTIPART do$/;"	m
Macros	deps/decimal/lib/decimal.ex	/^defmodule Decimal.Macros do$/;"	m
Makeup	deps/makeup/lib/makeup.ex	/^defmodule Makeup do$/;"	m
MalformedURIError	deps/plug/lib/plug/router/utils.ex	/^defmodule Plug.Router.MalformedURIError do$/;"	m
Manager	deps/db_connection/lib/db_connection/ownership/manager.ex	/^defmodule DBConnection.Ownership.Manager do$/;"	m
ManniStyle	deps/makeup/lib/makeup/styles/html/pygments/manni.ex	/^defmodule Makeup.Styles.HTML.ManniStyle do$/;"	m
ManyToMany	deps/ecto/lib/ecto/association.ex	/^defmodule Ecto.Association.ManyToMany do$/;"	m
MapGetUnsafePass	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^defmodule Credo.Check.Warning.MapGetUnsafePass do$/;"	m
MapInto	deps/credo/lib/credo/check/refactor/map_into.ex	/^defmodule Credo.Check.Refactor.MapInto do$/;"	m
MapUpdate	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^defmodule Dialyxir.Warnings.MapUpdate do$/;"	m
Markdown	deps/ex_doc/lib/ex_doc/markdown.ex	/^defmodule ExDoc.Markdown do$/;"	m
MatchInCondition	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^defmodule Credo.Check.Refactor.MatchInCondition do$/;"	m
MaxItems	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MaxItems do$/;"	m
MaxLength	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MaxLength do$/;"	m
MaxLineLength	deps/credo/lib/credo/check/readability/max_line_length.ex	/^defmodule Credo.Check.Readability.MaxLineLength do$/;"	m
MaxProperties	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MaxProperties do$/;"	m
Maximum	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Maximum do$/;"	m
Message	deps/earmark/lib/earmark/message.ex	/^defmodule Earmark.Message do$/;"	m
Message	deps/phoenix/lib/phoenix/socket/message.ex	/^defmodule Phoenix.Socket.Message do$/;"	m
MessageEncryptor	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^defmodule Plug.Crypto.MessageEncryptor do$/;"	m
MessageVerifier	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^defmodule Plug.Crypto.MessageVerifier do$/;"	m
Messages	deps/postgrex/lib/postgrex/messages.ex	/^defmodule Postgrex.Messages do$/;"	m
MetaCommand	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^      defmodule MetaCommand do$/;"	m
Metadata	deps/ecto/lib/ecto/schema/metadata.ex	/^defmodule Ecto.Schema.Metadata do$/;"	m
MethodOverride	deps/plug/lib/plug/method_override.ex	/^defmodule Plug.MethodOverride do$/;"	m
Migrate	deps/ecto_sql/lib/mix/tasks/ecto.migrate.ex	/^defmodule Mix.Tasks.Ecto.Migrate do$/;"	m
MigrateAll	.elixir_ls/build/test/lib/ex_machina/priv/test_repo/migrations/1_migrate_all.exs	/^defmodule ExMachina.TestRepo.Migrations.MigrateAll do$/;"	m
MigrateAll	_build/test/lib/ex_machina/priv/test_repo/migrations/1_migrate_all.exs	/^defmodule ExMachina.TestRepo.Migrations.MigrateAll do$/;"	m
MigrateAll	deps/ex_machina/priv/test_repo/migrations/1_migrate_all.exs	/^defmodule ExMachina.TestRepo.Migrations.MigrateAll do$/;"	m
Migration	deps/ecto_sql/integration_test/support/migration.exs	/^defmodule Ecto.Integration.Migration do$/;"	m
Migration	deps/ecto_sql/lib/ecto/adapter/migration.ex	/^defmodule Ecto.Adapter.Migration do$/;"	m
Migration	deps/ecto_sql/lib/ecto/migration.ex	/^      defmodule MyApp.Migration do$/;"	m
Migration	deps/ecto_sql/lib/ecto/migration.ex	/^defmodule Ecto.Migration do$/;"	m
Migration	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^defmodule Mix.Tasks.Ecto.Gen.Migration do$/;"	m
Migration	lib/mix/tasks/boruta.gen.migrations.ex	/^defmodule Mix.Tasks.Boruta.Gen.Migration do$/;"	m
MigrationError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.MigrationError do$/;"	m
MigrationExample	deps/ecto_sql/lib/ecto/migrator.ex	/^      defmodule MyApp.MigrationExample do$/;"	m
MigrationTest	deps/ecto_sql/integration_test/sql/migration.exs	/^defmodule Ecto.Integration.MigrationTest do$/;"	m
Migrations	deps/ecto_sql/lib/mix/tasks/ecto.migrations.ex	/^defmodule Mix.Tasks.Ecto.Migrations do$/;"	m
Migrator	deps/ecto_sql/lib/ecto/migrator.ex	/^defmodule Ecto.Migrator do$/;"	m
MigratorTest	deps/ecto_sql/integration_test/sql/migrator.exs	/^defmodule Ecto.Integration.MigratorTest do$/;"	m
MinItems	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MinItems do$/;"	m
MinLength	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MinLength do$/;"	m
MinProperties	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MinProperties do$/;"	m
Minimum	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Minimum do$/;"	m
Missing	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^      defmodule Missing do$/;"	m
Missing	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^      defmodule Missing do$/;"	m
MissingParamError	deps/phoenix/lib/phoenix/exceptions.ex	/^defmodule Phoenix.MissingParamError do$/;"	m
MissingRange	deps/dialyxir/lib/dialyxir/warnings/missing_range.ex	/^defmodule Dialyxir.Warnings.MissingRange do$/;"	m
MixProject	deps/crypto_rand/mix.exs	/^defmodule CryptoRand.MixProject do$/;"	m
MixProject	deps/ecto/mix.exs	/^defmodule Ecto.MixProject do$/;"	m
MixProject	deps/ecto_sql/mix.exs	/^      defmodule DepsOnEctoSQL.MixProject do$/;"	m
MixProject	deps/ecto_sql/mix.exs	/^defmodule EctoSQL.MixProject do$/;"	m
MixProject	deps/erlex/mix.exs	/^defmodule Erlex.MixProject do$/;"	m
MixProject	deps/mox/mix.exs	/^defmodule Mox.MixProject do$/;"	m
MixProject	deps/nimble_parsec/mix.exs	/^defmodule NimbleParsec.MixProject do$/;"	m
MixProject	deps/phoenix/mix.exs	/^defmodule Phoenix.MixProject do$/;"	m
MixProject	deps/plug/mix.exs	/^defmodule Plug.MixProject do$/;"	m
MixProject	deps/plug_crypto/mix.exs	/^defmodule Plug.Crypto.MixProject do$/;"	m
MixProject	mix.exs	/^defmodule Boruta.MixProject do$/;"	m
Mixfile	deps/bunt/mix.exs	/^defmodule Bunt.Mixfile do$/;"	m
Mixfile	deps/connection/mix.exs	/^defmodule Connection.Mixfile do$/;"	m
Mixfile	deps/credo/mix.exs	/^defmodule Credo.Mixfile do$/;"	m
Mixfile	deps/db_connection/mix.exs	/^defmodule DBConnection.Mixfile do$/;"	m
Mixfile	deps/decimal/mix.exs	/^defmodule Decimal.Mixfile do$/;"	m
Mixfile	deps/dialyxir/mix.exs	/^defmodule Dialyxir.Mixfile do$/;"	m
Mixfile	deps/earmark/mix.exs	/^defmodule Earmark.Mixfile do$/;"	m
Mixfile	deps/ex_doc/mix.exs	/^defmodule ExDoc.Mixfile do$/;"	m
Mixfile	deps/ex_json_schema/mix.exs	/^defmodule ExJsonSchema.Mixfile do$/;"	m
Mixfile	deps/ex_machina/mix.exs	/^defmodule ExMachina.Mixfile do$/;"	m
Mixfile	deps/jason/mix.exs	/^defmodule Jason.Mixfile do$/;"	m
Mixfile	deps/makeup/mix.exs	/^defmodule Makeup.Mixfile do$/;"	m
Mixfile	deps/makeup_elixir/mix.exs	/^defmodule MakeupElixir.Mixfile do$/;"	m
Mixfile	deps/mime/mix.exs	/^defmodule MIME.Mixfile do$/;"	m
Mixfile	deps/phoenix_pubsub/mix.exs	/^defmodule Phoenix.PubSub.Mixfile do$/;"	m
Mixfile	deps/postgrex/mix.exs	/^defmodule Postgrex.Mixfile do$/;"	m
Mixfile	deps/puid/mix.exs	/^defmodule Puid.Mixfile do$/;"	m
Mixfile	deps/secure_random/mix.exs	/^defmodule SecureRandom.Mixfile do$/;"	m
Module	deps/credo/lib/credo/code/module.ex	/^defmodule Credo.Code.Module do$/;"	m
ModuleAttributeNames	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^defmodule Credo.Check.Readability.ModuleAttributeNames do$/;"	m
ModuleDependencies	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^defmodule Credo.Check.Refactor.ModuleDependencies do$/;"	m
ModuleDoc	deps/credo/lib/credo/check/readability/module_doc.ex	/^defmodule Credo.Check.Readability.ModuleDoc do$/;"	m
ModuleNames	deps/credo/lib/credo/check/readability/module_names.ex	/^defmodule Credo.Check.Readability.ModuleNames do$/;"	m
ModuleNode	deps/ex_doc/lib/ex_doc/nodes.ex	/^defmodule ExDoc.ModuleNode do$/;"	m
MonokaiStyle	deps/makeup/lib/makeup/styles/html/pygments/monokai.ex	/^defmodule Makeup.Styles.HTML.MonokaiStyle do$/;"	m
Mox	deps/mox/lib/mox.ex	/^defmodule Mox do$/;"	m
Multi	deps/ecto/lib/ecto/multi.ex	/^defmodule Ecto.Multi do$/;"	m
MultiAlias	deps/credo/lib/credo/check/readability/multi_alias.ex	/^defmodule Credo.Check.Readability.MultiAlias do$/;"	m
MultiAliasImportRequireUse	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use.ex	/^defmodule Credo.Check.Consistency.MultiAliasImportRequireUse do$/;"	m
MultipleOf	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule MultipleOf do$/;"	m
MultiplePrimaryKeyError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.MultiplePrimaryKeyError do$/;"	m
MultipleResultsError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.MultipleResultsError do$/;"	m
MurphyStyle	deps/makeup/lib/makeup/styles/html/pygments/murphy.ex	/^defmodule Makeup.Styles.HTML.MurphyStyle do$/;"	m
MyApp	deps/plug/lib/plug/builder.ex	/^      defmodule MyApp do$/;"	m
MyApp	deps/plug/lib/plug/debugger.ex	/^      defmodule MyApp do$/;"	m
MyChannel	deps/phoenix/lib/phoenix/presence.ex	/^      defmodule MyApp.MyChannel do$/;"	m
MyCheck	deps/credo/lib/credo/check.ex	/^      defmodule MyCheck do$/;"	m
MyController	deps/phoenix/lib/phoenix/controller.ex	/^      defmodule MyController do$/;"	m
MyFallbackController	deps/phoenix/lib/phoenix/controller.ex	/^      defmodule MyFallbackController do$/;"	m
MyMetaCommand	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^      defmodule MyMetaCommand do$/;"	m
MyMigration	deps/ecto_sql/lib/ecto/migration.ex	/^      defmodule MyApp.MyMigration do$/;"	m
MyParser	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^      defmodule MyParser do$/;"	m
MyParser	deps/nimble_parsec/lib/nimble_parsec.ex	/^      defmodule MyParser do$/;"	m
MyPlug	deps/plug/lib/plug/builder.ex	/^      defmodule MyPlug do$/;"	m
MyPlug	deps/plug/lib/plug/static.ex	/^      defmodule MyPlug do$/;"	m
MyQueue	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^      defmodule Phoenix.PubSub.MyQueue do$/;"	m
MySQL	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^defmodule Ecto.Adapters.MySQL do$/;"	m
MyTask	deps/credo/lib/mix/tasks/my_task.ex	/^defmodule Mix.Tasks.MyTask do$/;"	m
MyTest	deps/makeup/lib/makeup/lexer/postprocess.ex	/^  defmodule MyTest do$/;"	m
MyTracker	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^      defmodule MyTracker do$/;"	m
MyXQL	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^defmodule Ecto.Adapters.MyXQL do$/;"	m
Name	deps/credo/lib/credo/code/name.ex	/^defmodule Credo.Code.Name do$/;"	m
Name	deps/postgrex/lib/postgrex/extensions/name.ex	/^defmodule Postgrex.Extensions.Name do$/;"	m
Naming	deps/phoenix/lib/phoenix/naming.ex	/^defmodule Phoenix.Naming do$/;"	m
NativeStyle	deps/makeup/lib/makeup/styles/html/pygments/native.ex	/^defmodule Makeup.Styles.HTML.NativeStyle do$/;"	m
NegatedConditionsInUnless	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^defmodule Credo.Check.Refactor.NegatedConditionsInUnless do$/;"	m
NegatedConditionsWithElse	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^defmodule Credo.Check.Refactor.NegatedConditionsWithElse do$/;"	m
NegativeGuardFail	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^defmodule Dialyxir.Warnings.NegativeGuardFail do$/;"	m
Nesting	deps/credo/lib/credo/check/refactor/nesting.ex	/^defmodule Credo.Check.Refactor.Nesting do$/;"	m
NimbleParsec	deps/nimble_parsec/lib/nimble_parsec.ex	/^defmodule NimbleParsec do$/;"	m
NoErrorIndexMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule NoErrorIndexMigration do$/;"	m
NoErrorOnConditionalColumnMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule NoErrorOnConditionalColumnMigration do$/;"	m
NoErrorTableMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule NoErrorTableMigration do$/;"	m
NoPrimaryKeyFieldError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.NoPrimaryKeyFieldError do$/;"	m
NoPrimaryKeyValueError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.NoPrimaryKeyValueError do$/;"	m
NoResultsError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.NoResultsError do$/;"	m
NoReturn	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^defmodule Dialyxir.Warnings.NoReturn do$/;"	m
NoRouteError	deps/phoenix/lib/phoenix/router.ex	/^  defmodule NoRouteError do$/;"	m
NoSQLMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule NoSQLMigration do$/;"	m
NoopSerializer	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmodule NoopSerializer do$/;"	m
Not	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Not do$/;"	m
NotAcceptableError	deps/phoenix/lib/phoenix/exceptions.ex	/^defmodule Phoenix.NotAcceptableError do$/;"	m
NotLoaded	deps/ecto/lib/ecto/association.ex	/^defmodule Ecto.Association.NotLoaded do$/;"	m
NotSentError	deps/plug/lib/plug/conn.ex	/^  defmodule NotSentError do$/;"	m
NotificationChannel	deps/phoenix/lib/phoenix/channel.ex	/^      defmodule MyApp.Endpoint.NotificationChannel do$/;"	m
Notifications	deps/postgrex/lib/postgrex/notifications.ex	/^defmodule Postgrex.Notifications do$/;"	m
Numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^defmodule Postgrex.Extensions.Numeric do$/;"	m
OID	deps/postgrex/lib/postgrex/extensions/oid.ex	/^defmodule Postgrex.Extensions.OID do$/;"	m
Oauth	lib/boruta/oauth.ex	/^defmodule Boruta.Oauth do$/;"	m
OauthController	lib/boruta.ex	/^  defmodule MyApp.OauthController do$/;"	m
OauthMapper	lib/boruta/adapters/ecto/oauth_mapper.ex	/^defimpl Boruta.Ecto.OauthMapper, for: Any do$/;"	i
OauthMapper	lib/boruta/adapters/ecto/oauth_mapper.ex	/^defimpl Boruta.Ecto.OauthMapper, for: Boruta.Ecto.Client do$/;"	i
OauthMapper	lib/boruta/adapters/ecto/oauth_mapper.ex	/^defimpl Boruta.Ecto.OauthMapper, for: Boruta.Ecto.Scope do$/;"	i
OauthMapper	lib/boruta/adapters/ecto/oauth_mapper.ex	/^defimpl Boruta.Ecto.OauthMapper, for: Boruta.Ecto.Token do$/;"	i
OauthMapper	lib/boruta/adapters/ecto/oauth_mapper.ex	/^defprotocol Boruta.Ecto.OauthMapper do$/;"	p
OauthTest	test/boruta/oauth_test.exs	/^defmodule Boruta.OauthTest do$/;"	m
OnDeleteMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule OnDeleteMigration do$/;"	m
OneOf	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule OneOf do$/;"	m
Oneline	deps/credo/lib/credo/cli/command/list/output/oneline.ex	/^defmodule Credo.CLI.Command.List.Output.Oneline do$/;"	m
Oneline	deps/credo/lib/credo/cli/command/suggest/output/oneline.ex	/^defmodule Credo.CLI.Command.Suggest.Output.Oneline do$/;"	m
Oneline	deps/credo/lib/credo/cli/output/formatter/oneline.ex	/^defmodule Credo.CLI.Output.Formatter.Oneline do$/;"	m
OpaqueEquality	deps/dialyxir/lib/dialyxir/warnings/opaque_equality.ex	/^defmodule Dialyxir.Warnings.OpaqueEquality do$/;"	m
OpaqueGuard	deps/dialyxir/lib/dialyxir/warnings/opaque_guard.ex	/^defmodule Dialyxir.Warnings.OpaqueGuard do$/;"	m
OpaqueMatch	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^defmodule Dialyxir.Warnings.OpaqueMatch do$/;"	m
OpaqueNonequality	deps/dialyxir/lib/dialyxir/warnings/opaque_nonequality.ex	/^defmodule Dialyxir.Warnings.OpaqueNonequality do$/;"	m
OpaqueStruct	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^      defmodule OpaqueStruct do$/;"	m
OpaqueStruct	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^      defmodule OpaqueStruct do$/;"	m
OpaqueTypeTest	deps/dialyxir/lib/dialyxir/warnings/opaque_type_test.ex	/^defmodule Dialyxir.Warnings.OpaqueTypeTest do$/;"	m
OperationOnSameValues	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^defmodule Credo.Check.Warning.OperationOnSameValues do$/;"	m
OperationWithConstantResult	deps/credo/lib/credo/check/warning/operation_with_constant_result.ex	/^defmodule Credo.Check.Warning.OperationWithConstantResult do$/;"	m
Options	deps/credo/lib/credo/cli/options.ex	/^defmodule Credo.CLI.Options do$/;"	m
Options	deps/earmark/lib/earmark/options.ex	/^defmodule Earmark.Options do$/;"	m
Order	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Order do$/;"	m
Order	deps/ecto/lib/ecto/schema.ex	/^      defmodule Order do$/;"	m
OrderBy	deps/ecto/lib/ecto/query/builder/order_by.ex	/^defmodule Ecto.Query.Builder.OrderBy do$/;"	m
Organization	deps/ecto/lib/ecto/schema.ex	/^      defmodule Organization do$/;"	m
Output	deps/credo/lib/credo/cli/output.ex	/^defmodule Credo.CLI.Output do$/;"	m
Output	deps/dialyxir/lib/dialyxir/output.ex	/^defmodule Dialyxir.Output do$/;"	m
OverlappingContract	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^defmodule Dialyxir.Warnings.OverlappingContract do$/;"	m
Ownership	deps/db_connection/lib/db_connection/ownership.ex	/^defmodule DBConnection.Ownership do$/;"	m
OwnershipError	deps/db_connection/lib/db_connection/ownership.ex	/^defmodule DBConnection.OwnershipError do$/;"	m
PG2	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^defmodule Phoenix.PubSub.PG2 do$/;"	m
PG2Server	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^defmodule Phoenix.PubSub.PG2Server do$/;"	m
Para	deps/earmark/lib/earmark/block.ex	/^  defmodule Para do$/;"	m
ParaisoDarkStyle	deps/makeup/lib/makeup/styles/html/pygments/paraiso-dark.ex	/^defmodule Makeup.Styles.HTML.ParaisoDarkStyle do$/;"	m
ParaisoLightStyle	deps/makeup/lib/makeup/styles/html/pygments/paraiso-light.ex	/^defmodule Makeup.Styles.HTML.ParaisoLightStyle do$/;"	m
Param	deps/phoenix/lib/phoenix/param.ex	/^      defimpl Phoenix.Param, for: unquote(module) do$/;"	i
Param	deps/phoenix/lib/phoenix/param.ex	/^defimpl Phoenix.Param, for: Any do$/;"	i
Param	deps/phoenix/lib/phoenix/param.ex	/^defimpl Phoenix.Param, for: Atom do$/;"	i
Param	deps/phoenix/lib/phoenix/param.ex	/^defimpl Phoenix.Param, for: BitString do$/;"	i
Param	deps/phoenix/lib/phoenix/param.ex	/^defimpl Phoenix.Param, for: Integer do$/;"	i
Param	deps/phoenix/lib/phoenix/param.ex	/^defimpl Phoenix.Param, for: Map do$/;"	i
Param	deps/phoenix/lib/phoenix/param.ex	/^defprotocol Phoenix.Param do$/;"	p
ParameterPatternMatching	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^defmodule Credo.Check.Consistency.ParameterPatternMatching do$/;"	m
Parameters	deps/credo/lib/credo/code/parameters.ex	/^defmodule Credo.Code.Parameters do$/;"	m
Parameters	deps/postgrex/lib/postgrex/parameters.ex	/^defmodule Postgrex.Parameters do$/;"	m
Params	deps/credo/lib/credo/check/params.ex	/^defmodule Credo.Check.Params do$/;"	m
Parent	deps/ecto/lib/ecto/schema.ex	/^      defmodule Parent do$/;"	m
Parent	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule Parent do$/;"	m
ParenthesesInCondition	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^defmodule Credo.Check.Readability.ParenthesesInCondition do$/;"	m
ParenthesesOnZeroArityDefs	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^defmodule Credo.Check.Readability.ParenthesesOnZeroArityDefs do$/;"	m
ParseError	deps/plug/lib/plug/parsers.ex	/^  defmodule ParseError do$/;"	m
ParseOptions	deps/credo/lib/credo/execution/task/parse_options.ex	/^defmodule Credo.Execution.Task.ParseOptions do$/;"	m
Parser	deps/earmark/lib/earmark/parser.ex	/^defmodule Earmark.Parser do$/;"	m
ParserError	deps/credo/lib/credo/check/consistency/exception_names.ex	/^      defmodule ParserError do$/;"	m
ParserError	deps/credo/lib/credo/code.ex	/^  defmodule ParserError do$/;"	m
Parsers	deps/plug/lib/plug/parsers.ex	/^defmodule Plug.Parsers do$/;"	m
PasswordManager	deps/ecto/lib/ecto/multi.ex	/^      defmodule PasswordManager do$/;"	m
PasswordRequest	lib/boruta/oauth/requests/password_request.ex	/^defmodule Boruta.Oauth.PasswordRequest do$/;"	m
PastieStyle	deps/makeup/lib/makeup/styles/html/pygments/pastie.ex	/^defmodule Makeup.Styles.HTML.PastieStyle do$/;"	m
Path	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Path do$/;"	m
Path	deps/postgrex/lib/postgrex/extensions/path.ex	/^defmodule Postgrex.Extensions.Path do$/;"	m
Pattern	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Pattern do$/;"	m
PatternMatch	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^defmodule Dialyxir.Warnings.PatternMatch do$/;"	m
PatternMatchCovered	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^defmodule Dialyxir.Warnings.PatternMatchCovered do$/;"	m
PerceivedComplexity	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^defmodule Credo.Check.Refactor.PerceivedComplexity do$/;"	m
PerldocStyle	deps/makeup/lib/makeup/styles/html/pygments/perldoc.ex	/^defmodule Makeup.Styles.HTML.PerldocStyle do$/;"	m
Permalink	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Permalink do$/;"	m
Phoenix	deps/phoenix/lib/mix/phoenix.ex	/^defmodule Mix.Phoenix do$/;"	m
Phoenix	deps/phoenix/lib/mix/tasks/compile.phoenix.ex	/^defmodule Mix.Tasks.Compile.Phoenix do$/;"	m
Phoenix	deps/phoenix/lib/phoenix.ex	/^defmodule Phoenix do$/;"	m
Phx	deps/phoenix/lib/mix/tasks/phx.ex	/^defmodule Mix.Tasks.Phx do$/;"	m
PingSocket	deps/phoenix/lib/phoenix/socket/transport.ex	/^      defmodule PingSocket do$/;"	m
PipeChainStart	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^defmodule Credo.Check.Refactor.PipeChainStart do$/;"	m
Pipeline	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^defmodule Phoenix.Controller.Pipeline do$/;"	m
Planner	deps/ecto/lib/ecto/query/planner.ex	/^defmodule Ecto.Query.Planner do$/;"	m
Plt	deps/dialyxir/lib/dialyxir/plt.ex	/^defmodule Dialyxir.Plt do$/;"	m
Plug	deps/plug/lib/plug.ex	/^defmodule Plug do$/;"	m
PlugUsingHalt	deps/plug/lib/plug/builder.ex	/^      defmodule PlugUsingHalt do$/;"	m
PlugWithCustomCall	deps/plug/lib/plug/builder.ex	/^      defmodule PlugWithCustomCall do$/;"	m
PlugWithCustomOptions	deps/plug/lib/plug/builder.ex	/^      defmodule PlugWithCustomOptions do$/;"	m
Plugin	deps/credo/lib/credo/plugin.ex	/^defmodule Credo.Plugin do$/;"	m
Point	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Point do$/;"	m
Point	deps/postgrex/lib/postgrex/extensions/point.ex	/^defmodule Postgrex.Extensions.Point do$/;"	m
Polygon	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Polygon do$/;"	m
Polygon	deps/postgrex/lib/postgrex/extensions/polygon.ex	/^defmodule Postgrex.Extensions.Polygon do$/;"	m
Pool	deps/db_connection/lib/db_connection/connection_pool/pool.ex	/^defmodule DBConnection.ConnectionPool.Pool do$/;"	m
PoolSupervisor	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^defmodule Phoenix.Socket.PoolSupervisor do$/;"	m
PositionHelper	deps/credo/lib/credo/code/token.ex	/^  defmodule PositionHelper do$/;"	m
Post	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Post do$/;"	m
Post	deps/ecto/lib/ecto.ex	/^      defmodule Post do$/;"	m
Post	deps/ecto/lib/ecto/changeset.ex	/^      defmodule Post do$/;"	m
Post	deps/ecto/lib/ecto/schema.ex	/^      defmodule Post do$/;"	m
PostTest	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^      defmodule PostTest do$/;"	m
PostUser	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.PostUser do$/;"	m
PostUserCompositePk	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.PostUserCompositePk do$/;"	m
Postgres	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^defmodule Ecto.Adapters.Postgres do$/;"	m
Postgrex	deps/postgrex/lib/postgrex.ex	/^defmodule Postgrex do$/;"	m
Postprocess	deps/makeup/lib/makeup/lexer/postprocess.ex	/^defmodule Makeup.Lexer.Postprocess do$/;"	m
PredicateFunctionNames	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^defmodule Credo.Check.Readability.PredicateFunctionNames do$/;"	m
PreferImplicitTry	deps/credo/lib/credo/check/readability/prefer_implicit_try.ex	/^defmodule Credo.Check.Readability.PreferImplicitTry do$/;"	m
PreferUnquotedAtoms	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^defmodule Credo.Check.Readability.PreferUnquotedAtoms do$/;"	m
PrefixMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule PrefixMigration do$/;"	m
PrefixedString	deps/ecto/integration_test/support/types.exs	/^defmodule PrefixedString do$/;"	m
Preload	deps/ecto/lib/ecto/query/builder/preload.ex	/^defmodule Ecto.Query.Builder.Preload do$/;"	m
PreloadTest	deps/ecto/integration_test/cases/preload.exs	/^defmodule Ecto.Integration.PreloadTest do$/;"	m
Preloader	deps/ecto/lib/ecto/repo/preloader.ex	/^defmodule Ecto.Repo.Preloader do$/;"	m
PrepareChecksToRun	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^defmodule Credo.CLI.Task.PrepareChecksToRun do$/;"	m
PrepareStream	deps/db_connection/lib/db_connection.ex	/^defmodule DBConnection.PrepareStream do$/;"	m
Presence	deps/phoenix/lib/mix/tasks/phx.gen.presence.ex	/^defmodule Mix.Tasks.Phx.Gen.Presence do$/;"	m
Presence	deps/phoenix/lib/phoenix/presence.ex	/^      defmodule MyApp.Presence do$/;"	m
Presence	deps/phoenix/lib/phoenix/presence.ex	/^defmodule Phoenix.Presence do$/;"	m
Priority	deps/credo/lib/credo/priority.ex	/^defmodule Credo.Priority do$/;"	m
ProcessDefinition	deps/credo/lib/credo/execution/process_definition.ex	/^defmodule Credo.Execution.ProcessDefinition do$/;"	m
Profile	deps/ecto/lib/ecto/schema.ex	/^      defmodule Profile do$/;"	m
Project	deps/dialyxir/lib/dialyxir/project.ex	/^defmodule Dialyxir.Project do$/;"	m
Properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^defmodule ExJsonSchema.Validator.Properties do$/;"	m
Protocol	deps/postgrex/lib/postgrex/protocol.ex	/^defmodule Postgrex.Protocol do$/;"	m
Proxy	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^defmodule DBConnection.Ownership.Proxy do$/;"	m
Proxy	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^defmodule Phoenix.CodeReloader.Proxy do$/;"	m
PubSub	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^defmodule Phoenix.PubSub do$/;"	m
PubSubTest	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^defmodule Phoenix.PubSubTest do$/;"	m
Puid	deps/puid/lib/puid.ex	/^defmodule Puid do$/;"	m
PureLinkHelpers	deps/earmark/lib/earmark/helpers/pure_link_helpers.ex	/^defmodule Earmark.Helpers.PureLinkHelpers do$/;"	m
Query	deps/db_connection/lib/db_connection/query.ex	/^defprotocol DBConnection.Query do$/;"	p
Query	deps/ecto/lib/ecto/query.ex	/^defmodule Ecto.Query do$/;"	m
Query	deps/plug/lib/plug/conn/query.ex	/^defmodule Plug.Conn.Query do$/;"	m
Query	deps/postgrex/lib/postgrex/parameters.ex	/^defimpl DBConnection.Query, for: Postgrex.Parameters do$/;"	i
Query	deps/postgrex/lib/postgrex/query.ex	/^defimpl DBConnection.Query, for: Postgrex.Query do$/;"	i
Query	deps/postgrex/lib/postgrex/query.ex	/^defmodule Postgrex.Query do$/;"	m
Query	deps/postgrex/lib/postgrex/stream.ex	/^defimpl DBConnection.Query, for: Postgrex.Copy do$/;"	i
QueryError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.QueryError do$/;"	m
QueryError	deps/postgrex/lib/postgrex/error.ex	/^defmodule Postgrex.QueryError do$/;"	m
QueryExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule QueryExpr do$/;"	m
Queryable	deps/ecto/lib/ecto/adapter/queryable.ex	/^defmodule Ecto.Adapter.Queryable do$/;"	m
Queryable	deps/ecto/lib/ecto/queryable.ex	/^defimpl Ecto.Queryable, for: Atom do$/;"	i
Queryable	deps/ecto/lib/ecto/queryable.ex	/^defimpl Ecto.Queryable, for: BitString do$/;"	i
Queryable	deps/ecto/lib/ecto/queryable.ex	/^defimpl Ecto.Queryable, for: Ecto.Query do$/;"	i
Queryable	deps/ecto/lib/ecto/queryable.ex	/^defimpl Ecto.Queryable, for: Ecto.SubQuery do$/;"	i
Queryable	deps/ecto/lib/ecto/queryable.ex	/^defimpl Ecto.Queryable, for: Tuple do$/;"	i
Queryable	deps/ecto/lib/ecto/queryable.ex	/^defprotocol Ecto.Queryable do$/;"	p
Queryable	deps/ecto/lib/ecto/repo/queryable.ex	/^defmodule Ecto.Repo.Queryable do$/;"	m
RAW	deps/ecto/integration_test/cases/repo.exs	/^    defmodule RAW do$/;"	m
RaceCondition	deps/dialyxir/lib/dialyxir/warnings/race_condition.ex	/^defmodule Dialyxir.Warnings.RaceCondition do$/;"	m
RainbowDashStyle	deps/makeup/lib/makeup/styles/html/pygments/rainbow_dash.ex	/^defmodule Makeup.Styles.HTML.RainbowDashStyle do$/;"	m
RaiseInsideRescue	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^defmodule Credo.Check.Warning.RaiseInsideRescue do$/;"	m
Range	deps/postgrex/lib/postgrex/builtins.ex	/^defmodule Postgrex.Range do$/;"	m
Range	deps/postgrex/lib/postgrex/extensions/range.ex	/^defmodule Postgrex.Extensions.Range do$/;"	m
Raw	deps/postgrex/lib/postgrex/extensions/raw.ex	/^defmodule Postgrex.Extensions.Raw do$/;"	m
Record	deps/postgrex/lib/postgrex/extensions/record.ex	/^defmodule Postgrex.Extensions.Record do$/;"	m
RecordConstruction	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^defmodule Dialyxir.Warnings.RecordConstruction do$/;"	m
RecordMatching	deps/dialyxir/lib/dialyxir/warnings/record_matching.ex	/^defmodule Dialyxir.Warnings.RecordMatching do$/;"	m
Recorder	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^defmodule NimbleParsec.Recorder do$/;"	m
RedundantBlankLines	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^defmodule Credo.Check.Readability.RedundantBlankLines do$/;"	m
Reference	deps/ecto_sql/lib/ecto/migration.ex	/^  defmodule Reference do$/;"	m
ReferencesRollbackMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule ReferencesRollbackMigration do$/;"	m
RefreshTokenRequest	lib/boruta/oauth/requests/refresh_token_resquest.ex	/^defmodule Boruta.Oauth.RefreshTokenRequest do$/;"	m
RefreshTokenTest	test/boruta/oauth/integration/refresh_token_test.exs	/^defmodule Boruta.OauthTest.RefreshTokenTest do$/;"	m
Refs	deps/ex_doc/lib/ex_doc/refs.ex	/^defmodule ExDoc.Refs do$/;"	m
Registry	deps/ecto/lib/ecto/repo/registry.ex	/^defmodule Ecto.Repo.Registry do$/;"	m
Registry	deps/makeup/lib/makeup/registry.ex	/^defmodule Makeup.Registry do$/;"	m
Relation	deps/ecto/lib/ecto/changeset/relation.ex	/^defmodule Ecto.Changeset.Relation do$/;"	m
Release	deps/ecto_sql/lib/ecto/migrator.ex	/^      defmodule MyApp.Release do$/;"	m
ReleaseTasks	lib/release_tasks.ex	/^defmodule Boruta.ReleaseTasks do$/;"	m
RenameColumnMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule RenameColumnMigration do$/;"	m
RenameMigration	deps/ecto_sql/integration_test/sql/migration.exs	/^  defmodule RenameMigration do$/;"	m
RenderErrors	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^defmodule Phoenix.Endpoint.RenderErrors do$/;"	m
ReparseHelpers	deps/earmark/lib/earmark/helpers/reparse_helpers.ex	/^defmodule Earmark.Helpers.ReparseHelpers do$/;"	m
Replica	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^defmodule Phoenix.Tracker.Replica do$/;"	m
Reply	deps/phoenix/lib/phoenix/socket/message.ex	/^defmodule Phoenix.Socket.Reply do$/;"	m
Repo	deps/ecto/lib/ecto.ex	/^      defmodule Repo do$/;"	m
Repo	deps/ecto/lib/ecto/repo.ex	/^      defmodule Repo do$/;"	m
Repo	deps/ecto/lib/ecto/repo.ex	/^defmodule Ecto.Repo do$/;"	m
Repo	deps/ecto/lib/mix/tasks/ecto.gen.repo.ex	/^defmodule Mix.Tasks.Ecto.Gen.Repo do$/;"	m
Repo	deps/ecto_sql/integration_test/support/repo.exs	/^defmodule Ecto.Integration.Repo do$/;"	m
Repo	lib/boruta/repo.ex	/^defmodule Boruta.Repo do$/;"	m
RepoTest	deps/ecto/integration_test/cases/repo.exs	/^defmodule Ecto.Integration.RepoTest do$/;"	m
Request	lib/boruta/oauth/request.ex	/^defmodule Boruta.Oauth.Request do$/;"	m
RequestId	deps/plug/lib/plug/request_id.ex	/^defmodule Plug.RequestId do$/;"	m
RequestTooLargeError	deps/plug/lib/plug/parsers.ex	/^  defmodule RequestTooLargeError do$/;"	m
RequireRequires	deps/credo/lib/credo/execution/task/require_requires.ex	/^defmodule Credo.Execution.Task.RequireRequires do$/;"	m
Required	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Required do$/;"	m
Resource	deps/phoenix/lib/phoenix/router/resource.ex	/^defmodule Phoenix.Router.Resource do$/;"	m
ResourceOwner	lib/boruta/oauth/authorization/resource_owner.ex	/^defmodule Boruta.Oauth.Authorization.ResourceOwner do$/;"	m
ResourceOwnerAuthorizedScope	lib/boruta/adapters/ecto/schemas/resource_owner_authorized_scope.ex	/^defmodule Boruta.Ecto.ResourceOwnerAuthorizedScope do$/;"	m
ResourceOwnerPasswordCredentialsGrantTest	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^defmodule Boruta.OauthTest.ResourceOwnerPasswordCredentialsGrantTest do$/;"	m
ResourceOwners	lib/boruta.ex	/^  defmodule MyApp.ResourceOwners do$/;"	m
ResourceOwners	lib/boruta/oauth/contexts/resource_owners.ex	/^defmodule Boruta.Oauth.ResourceOwners do$/;"	m
Result	deps/postgrex/lib/postgrex/result.ex	/^defmodule Postgrex.Result do$/;"	m
Retriever	deps/ex_doc/lib/ex_doc/retriever.ex	/^defmodule ExDoc.Retriever do$/;"	m
Revoke	lib/boruta/oauth/request/revoke.ex	/^defmodule Boruta.Oauth.Request.Revoke do$/;"	m
Revoke	lib/boruta/oauth/revoke.ex	/^defmodule Boruta.Oauth.Revoke do$/;"	m
RevokeRequest	lib/boruta/oauth/requests/revoke_request.ex	/^defmodule Boruta.Oauth.RevokeRequest do$/;"	m
RevokeTest	test/boruta/oauth/integration/revoke_test.exs	/^defmodule Boruta.OauthTest.RevokeTest do$/;"	m
Rollback	deps/ecto_sql/lib/mix/tasks/ecto.rollback.ex	/^defmodule Mix.Tasks.Ecto.Rollback do$/;"	m
Root	deps/ex_json_schema/lib/ex_json_schema/schema/root.ex	/^defmodule ExJsonSchema.Schema.Root do$/;"	m
Route	deps/phoenix/lib/phoenix/router/route.ex	/^defmodule Phoenix.Router.Route do$/;"	m
Router	deps/phoenix/lib/phoenix/router.ex	/^      defmodule MyAppWeb.Router do$/;"	m
Router	deps/phoenix/lib/phoenix/router.ex	/^defmodule Phoenix.Router do$/;"	m
Router	deps/plug/lib/plug.ex	/^      defmodule Router do$/;"	m
Router	deps/plug/lib/plug/router.ex	/^defmodule Plug.Router do$/;"	m
Routes	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^defmodule Mix.Tasks.Phx.Routes do$/;"	m
RrtStyle	deps/makeup/lib/makeup/styles/html/pygments/rrt.ex	/^defmodule Makeup.Styles.HTML.RrtStyle do$/;"	m
Ruler	deps/earmark/lib/earmark/block.ex	/^  defmodule Ruler do$/;"	m
Ruler	deps/earmark/lib/earmark/line.ex	/^  defmodule Ruler  do$/;"	m
RunChecks	deps/credo/lib/credo/cli/task/run_checks.ex	/^defmodule Credo.CLI.Task.RunChecks do$/;"	m
RunCommand	deps/credo/lib/credo/execution/task/run_command.ex	/^defmodule Credo.Execution.Task.RunCommand do$/;"	m
Runner	deps/credo/lib/credo/check/runner.ex	/^defmodule Credo.Check.Runner do$/;"	m
Runner	deps/dialyxir/lib/dialyxir/dialyzer.ex	/^  defmodule Runner do$/;"	m
Runner	deps/ecto_sql/lib/ecto/migration/runner.ex	/^defmodule Ecto.Migration.Runner do$/;"	m
SCRAM	deps/postgrex/lib/postgrex/scram.ex	/^defmodule Postgrex.SCRAM do$/;"	m
SERVER	deps/telemetry/src/telemetry_sup.erl	/^-define(SERVER, ?MODULE).$/;"	d
SQL	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^defmodule Ecto.Adapters.SQL do$/;"	m
SQLTest	deps/ecto_sql/integration_test/sql/sql.exs	/^defmodule Ecto.Integration.SQLTest do$/;"	m
SSL	deps/plug/lib/plug/ssl.ex	/^defmodule Plug.SSL do$/;"	m
SambaStyle	deps/makeup/lib/makeup/styles/html/pygments/samba.ex	/^defmodule Makeup.Styles.HTML.SambaStyle do$/;"	m
Sandbox	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^defmodule Ecto.Adapters.SQL.Sandbox do$/;"	m
SandboxTest	deps/ecto_sql/integration_test/sql/sandbox.exs	/^defmodule Ecto.Integration.SandboxTest do$/;"	m
Schema	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Schema do$/;"	m
Schema	deps/ecto/lib/ecto/adapter/schema.ex	/^defmodule Ecto.Adapter.Schema do$/;"	m
Schema	deps/ecto/lib/ecto/repo/schema.ex	/^defmodule Ecto.Repo.Schema do$/;"	m
Schema	deps/ecto/lib/ecto/schema.ex	/^      defmodule MyApp.Schema do$/;"	m
Schema	deps/ecto/lib/ecto/schema.ex	/^defmodule Ecto.Schema do$/;"	m
Schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^defmodule ExJsonSchema.Schema do$/;"	m
Schema	deps/phoenix/lib/mix/phoenix/schema.ex	/^defmodule Mix.Phoenix.Schema do$/;"	m
Schema	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^defmodule Mix.Tasks.Phx.Gen.Schema do$/;"	m
Schema	lib/boruta/oauth/json/schema.ex	/^defmodule Boruta.Oauth.Json.Schema do$/;"	m
SchemaMigration	deps/ecto_sql/lib/ecto/migration/schema_migration.ex	/^defmodule Ecto.Migration.SchemaMigration do$/;"	m
ScientificCalculator	deps/mox/lib/mox.ex	/^      defmodule MyApp.ScientificCalculator do$/;"	m
Scope	deps/credo/lib/credo/code/scope.ex	/^defmodule Credo.Code.Scope do$/;"	m
Scope	deps/phoenix/lib/phoenix/router/scope.ex	/^defmodule Phoenix.Router.Scope do$/;"	m
Scope	lib/boruta/adapters/ecto/schemas/scope.ex	/^defmodule Boruta.Ecto.Scope do$/;"	m
Scope	lib/boruta/oauth/authorization/scope.ex	/^defmodule Boruta.Oauth.Authorization.Scope do$/;"	m
Scope	lib/boruta/oauth/schemas/scope.ex	/^defmodule Boruta.Oauth.Scope do$/;"	m
ScopeTest	test/boruta/oauth/authorization/scope_test.exs	/^defmodule Boruta.Oauth.Authorization.ScopeTest do$/;"	m
Scopes	lib/boruta/adapters/ecto/admin/scopes.ex	/^defmodule Boruta.Ecto.Admin.Scopes do$/;"	m
Scopes	lib/boruta/adapters/ecto/scopes.ex	/^defmodule Boruta.Ecto.Scopes do$/;"	m
Scopes	lib/boruta/oauth/contexts/scopes.ex	/^defmodule Boruta.Oauth.Scopes do$/;"	m
Search	deps/credo/lib/credo/check/design/alias_usage.ex	/^      defmodule MyApp.Web.Search do$/;"	m
Search	deps/credo/lib/credo/check/readability/module_doc.ex	/^      defmodule MyApp.Web.Search do$/;"	m
SearchItems	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^defmodule ExDoc.Formatter.HTML.SearchItems do$/;"	m
Secret	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^defmodule Mix.Tasks.Phx.Gen.Secret do$/;"	m
SecureRandom	deps/secure_random/lib/secure_random.ex	/^defmodule SecureRandom do$/;"	m
Select	deps/ecto/lib/ecto/query/builder/select.ex	/^defmodule Ecto.Query.Builder.Select do$/;"	m
SelectExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule SelectExpr do$/;"	m
Semicolons	deps/credo/lib/credo/check/readability/semicolons.ex	/^defmodule Credo.Check.Readability.Semicolons do$/;"	m
Sequence	deps/bunt/lib/bunt_ansi.ex	/^defmodule Bunt.ANSI.Sequence do$/;"	m
Sequence	deps/ex_machina/lib/ex_machina/sequence.ex	/^defmodule ExMachina.Sequence do$/;"	m
Serializer	deps/phoenix/lib/phoenix/socket/serializer.ex	/^defmodule Phoenix.Socket.Serializer do$/;"	m
Server	deps/mox/lib/mox/server.ex	/^defmodule Mox.Server do$/;"	m
Server	deps/phoenix/lib/mix/tasks/phx.server.ex	/^defmodule Mix.Tasks.Phx.Server do$/;"	m
Server	deps/phoenix/lib/phoenix/channel/server.ex	/^defmodule Phoenix.Channel.Server do$/;"	m
Server	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^defmodule Phoenix.CodeReloader.Server do$/;"	m
Server	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^defmodule Phoenix.Transports.LongPoll.Server do$/;"	m
Session	deps/plug/lib/plug/session.ex	/^defmodule Plug.Session do$/;"	m
SetDefaultCommand	deps/credo/lib/credo/execution/task/set_default_command.ex	/^defmodule Credo.Execution.Task.SetDefaultCommand do$/;"	m
SetRelevantIssues	deps/credo/lib/credo/cli/task/set_relevant_issues.ex	/^defmodule Credo.CLI.Task.SetRelevantIssues do$/;"	m
SetextUnderlineHeading	deps/earmark/lib/earmark/line.ex	/^  defmodule SetextUnderlineHeading  do$/;"	m
Severity	deps/credo/lib/credo/severity.ex	/^defmodule Credo.Severity do$/;"	m
Shard	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^defmodule Phoenix.Tracker.Shard do$/;"	m
Shell	deps/credo/lib/credo/cli/output/shell.ex	/^defmodule Credo.CLI.Output.Shell do$/;"	m
ShortUrl	deps/ecto/lib/ecto/type.ex	/^      defmodule ShortUrl do$/;"	m
Sigils	deps/credo/lib/credo/code/sigils.ex	/^defmodule Credo.Code.Sigils do$/;"	m
SignUp	deps/ecto/lib/ecto/schema.ex	/^      defmodule SignUp do$/;"	m
SimpleJSON	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^defmodule ExDoc.Utils.SimpleJSON do$/;"	m
SimpleXML	deps/nimble_parsec/lib/nimble_parsec.ex	/^      defmodule SimpleXML do$/;"	m
SingleConnectionNoLockRepo	deps/ecto_sql/integration_test/sql/migrator.exs	/^    defmodule SingleConnectionNoLockRepo do$/;"	m
SingleConnectionRepo	deps/ecto_sql/integration_test/sql/migrator.exs	/^    defmodule SingleConnectionRepo do$/;"	m
SinglePipe	deps/credo/lib/credo/check/readability/single_pipe.ex	/^defmodule Credo.Check.Readability.SinglePipe do$/;"	m
Socket	deps/phoenix/lib/phoenix/socket.ex	/^defmodule Phoenix.Socket do$/;"	m
SomeCheck	deps/credo/lib/credo/check/consistency/collector.ex	/^      defmodule Credo.Check.Consistency.SomeCheck do$/;"	m
Sorter	deps/credo/lib/credo/cli/sorter.ex	/^defmodule Credo.CLI.Sorter do$/;"	m
SourceFile	deps/credo/lib/credo/source_file.ex	/^defmodule Credo.SourceFile do$/;"	m
SourceFileAST	deps/credo/lib/credo/service/source_file_ast.ex	/^defmodule Credo.Service.SourceFileAST do$/;"	m
SourceFileLines	deps/credo/lib/credo/service/source_file_lines.ex	/^defmodule Credo.Service.SourceFileLines do$/;"	m
SourceFileScopes	deps/credo/lib/credo/service/source_file_scopes.ex	/^defmodule Credo.Service.SourceFileScopes do$/;"	m
SourceFileSource	deps/credo/lib/credo/service/source_file_source.ex	/^defmodule Credo.Service.SourceFileSource do$/;"	m
Sources	deps/credo/lib/credo/sources.ex	/^defmodule Credo.Sources do$/;"	m
SpaceAfterCommas	deps/credo/lib/credo/check/readability/space_after_commas.ex	/^defmodule Credo.Check.Readability.SpaceAfterCommas do$/;"	m
SpaceAroundOperators	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^defmodule Credo.Check.Consistency.SpaceAroundOperators do$/;"	m
SpaceHelper	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^defmodule Credo.Check.Consistency.SpaceAroundOperators.SpaceHelper do$/;"	m
SpaceInParentheses	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^defmodule Credo.Check.Consistency.SpaceInParentheses do$/;"	m
Specs	deps/credo/lib/credo/check/readability/specs.ex	/^defmodule Credo.Check.Readability.Specs do$/;"	m
StaleEntryError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.StaleEntryError do$/;"	m
State	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^defmodule Phoenix.Tracker.State do$/;"	m
Static	deps/plug/lib/plug/static.ex	/^defmodule Plug.Static do$/;"	m
Status	deps/plug/lib/plug/conn/status.ex	/^defmodule Plug.Conn.Status do$/;"	m
Storage	deps/ecto/lib/ecto/adapter/storage.ex	/^defmodule Ecto.Adapter.Storage do$/;"	m
Store	deps/plug/lib/plug/session/store.ex	/^defmodule Plug.Session.Store do$/;"	m
Strategy	deps/ex_machina/lib/ex_machina/strategy.ex	/^defmodule ExMachina.Strategy do$/;"	m
Stream	deps/db_connection/lib/db_connection.ex	/^defmodule DBConnection.Stream do$/;"	m
Stream	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^defmodule Ecto.Adapters.SQL.Stream do$/;"	m
Stream	deps/postgrex/lib/postgrex/stream.ex	/^defmodule Postgrex.Stream do$/;"	m
StreamTest	deps/ecto_sql/integration_test/sql/stream.exs	/^defmodule Ecto.Integration.StreamTest do$/;"	m
StringFormatter	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^defmodule ExJsonSchema.Validator.Error.StringFormatter do$/;"	m
StringHelpers	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^defmodule Earmark.Helpers.StringHelpers do$/;"	m
StringSigils	deps/credo/lib/credo/check/readability/string_sigils.ex	/^defmodule Credo.Check.Readability.StringSigils do$/;"	m
Strings	deps/credo/lib/credo/code/strings.ex	/^defmodule Credo.Code.Strings do$/;"	m
Structure	deps/ecto_sql/lib/ecto/adapter/structure.ex	/^defmodule Ecto.Adapter.Structure do$/;"	m
Style	deps/makeup/lib/makeup/styles/html.ex	/^  defmodule Style do$/;"	m
StyleMap	deps/makeup/lib/makeup/styles/html/style_map.ex	/^defmodule Makeup.Styles.HTML.StyleMap do$/;"	m
SubQuery	deps/ecto/lib/ecto/query.ex	/^defmodule Ecto.SubQuery do$/;"	m
SubQueryError	deps/ecto/lib/ecto/exceptions.ex	/^defmodule Ecto.SubQueryError do$/;"	m
SubQueryTest	deps/ecto_sql/integration_test/sql/subquery.exs	/^defmodule Ecto.Integration.SubQueryTest do$/;"	m
SuggestCommand	deps/credo/lib/credo/cli/command/suggest/suggest_command.ex	/^defmodule Credo.CLI.Command.Suggest.SuggestCommand do$/;"	m
SuggestOutput	deps/credo/lib/credo/cli/command/suggest/suggest_output.ex	/^defmodule Credo.CLI.Command.Suggest.SuggestOutput do$/;"	m
Summary	deps/credo/lib/credo/cli/output/summary.ex	/^defmodule Credo.CLI.Output.Summary do$/;"	m
SuperExtension	deps/postgrex/lib/postgrex/super_extension.ex	/^defmodule Postgrex.SuperExtension do$/;"	m
Supervisor	deps/ecto/lib/ecto/repo/supervisor.ex	/^defmodule Ecto.Repo.Supervisor do$/;"	m
Supervisor	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^defmodule Phoenix.Endpoint.Supervisor do$/;"	m
Supervisor	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^defmodule Phoenix.Transports.LongPoll.Supervisor do$/;"	m
Supervisor	deps/phoenix_pubsub/lib/phoenix/pubsub/supervisor.ex	/^defmodule Phoenix.PubSub.Supervisor do$/;"	m
TCPConnection	deps/connection/lib/connection.ex	/^      defmodule TCPConnection do$/;"	m
TID	deps/postgrex/lib/postgrex/extensions/tid.ex	/^defmodule Postgrex.Extensions.TID do$/;"	m
TSVector	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^defmodule Postgrex.Extensions.TSVector do$/;"	m
Table	deps/earmark/lib/earmark/block.ex	/^  defmodule Table do$/;"	m
Table	deps/ecto_sql/lib/ecto/migration.ex	/^  defmodule Table do$/;"	m
TableLine	deps/earmark/lib/earmark/line.ex	/^  defmodule TableLine  do$/;"	m
TableRenderer	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^defmodule Earmark.Ast.Renderer.TableRenderer do$/;"	m
TabsOrSpaces	deps/credo/lib/credo/check/consistency/tabs_or_spaces.ex	/^defmodule Credo.Check.Consistency.TabsOrSpaces do$/;"	m
Tag	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Tag do$/;"	m
TagFIXME	deps/credo/lib/credo/check/design/tag_fixme.ex	/^defmodule Credo.Check.Design.TagFIXME do$/;"	m
TagHelper	deps/credo/lib/credo/check/design/tag_helper.ex	/^defmodule Credo.Check.Design.TagHelper do$/;"	m
TagTODO	deps/credo/lib/credo/check/design/tag_todo.ex	/^defmodule Credo.Check.Design.TagTODO do$/;"	m
Tagged	deps/ecto/lib/ecto/query.ex	/^  defmodule Tagged do$/;"	m
TangoStyle	deps/makeup/lib/makeup/styles/html/pygments/tango.ex	/^defmodule Makeup.Styles.HTML.TangoStyle do$/;"	m
Task	deps/credo/lib/credo/execution/task.ex	/^defmodule Credo.Execution.Task do$/;"	m
Task	deps/db_connection/lib/db_connection/task.ex	/^defmodule DBConnection.Task do$/;"	m
Task	deps/ecto/lib/ecto/schema.ex	/^      defmodule Task do$/;"	m
Tds	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^defmodule Ecto.Adapters.Tds do$/;"	m
Telemetry	deps/ecto/lib/ecto/repo.ex	/^      defmodule MyApp.Telemetry do$/;"	m
Telemetry	deps/plug/lib/plug/telemetry.ex	/^defmodule Plug.Telemetry do$/;"	m
Template	deps/phoenix/lib/phoenix/template.ex	/^defmodule Phoenix.Template do$/;"	m
Templates	deps/ex_doc/lib/ex_doc/formatter/epub/templates.ex	/^defmodule ExDoc.Formatter.EPUB.Templates do$/;"	m
Templates	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^defmodule ExDoc.Formatter.HTML.Templates do$/;"	m
Templates	deps/phoenix/lib/phoenix/template.ex	/^      defmodule Templates do$/;"	m
Test	deps/jason/lib/encoder.ex	/^      defmodule Test do$/;"	m
Test	deps/plug/lib/plug/test.ex	/^defmodule Plug.Test do$/;"	m
TestCalculator	deps/mox/lib/mox.ex	/^      defmodule TestCalculator do$/;"	m
Testing	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/testing.ex	/^defmodule Makeup.Lexers.ElixirLexer.Testing do$/;"	m
Text	deps/earmark/lib/earmark/block.ex	/^  defmodule Text do$/;"	m
Text	deps/earmark/lib/earmark/line.ex	/^  defmodule Text  do$/;"	m
Time	deps/postgrex/lib/postgrex/extensions/time.ex	/^defmodule Postgrex.Extensions.Time do$/;"	m
TimeTZ	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^defmodule Postgrex.Extensions.TimeTZ do$/;"	m
TimeoutError	deps/plug/lib/plug/exceptions.ex	/^defmodule Plug.TimeoutError do$/;"	m
Timestamp	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^defmodule Postgrex.Extensions.Timestamp do$/;"	m
TimestampTZ	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^defmodule Postgrex.Extensions.TimestampTZ do$/;"	m
Token	deps/credo/lib/credo/code/token.ex	/^defmodule Credo.Code.Token do$/;"	m
Token	deps/phoenix/lib/phoenix/token.ex	/^defmodule Phoenix.Token do$/;"	m
Token	lib/boruta/adapters/ecto/schemas/token.ex	/^defmodule Boruta.Ecto.Token do$/;"	m
Token	lib/boruta/oauth/request/token.ex	/^defmodule Boruta.Oauth.Request.Token do$/;"	m
Token	lib/boruta/oauth/schemas/token.ex	/^defmodule Boruta.Oauth.Token do$/;"	m
TokenAstCorrelation	deps/credo/lib/credo/code/token_ast_correlation.ex	/^defmodule Credo.Code.TokenAstCorrelation do$/;"	m
TokenGenerator	lib/boruta/oauth/token_generator.ex	/^defmodule Boruta.Oauth.TokenGenerator do$/;"	m
TokenGenerator	lib/boruta/utils/token_generator.ex	/^defmodule Boruta.TokenGenerator do$/;"	m
TokenRequest	lib/boruta/oauth/requests/token_request.ex	/^defmodule Boruta.Oauth.TokenRequest do$/;"	m
TokenResponse	lib/boruta/oauth/responses/token.ex	/^defmodule Boruta.Oauth.TokenResponse do$/;"	m
TokenStyle	deps/makeup/lib/makeup/styles/html.ex	/^  defmodule TokenStyle do$/;"	m
TracStyle	deps/makeup/lib/makeup/styles/html/pygments/trac.ex	/^defmodule Makeup.Styles.HTML.TracStyle do$/;"	m
Tracker	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^defmodule Phoenix.Tracker do$/;"	m
TrailingBlankLine	deps/credo/lib/credo/check/readability/trailing_blank_line.ex	/^defmodule Credo.Check.Readability.TrailingBlankLine do$/;"	m
TrailingWhiteSpace	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^defmodule Credo.Check.Readability.TrailingWhiteSpace do$/;"	m
Trans	deps/ecto_sql/integration_test/sql/transaction.exs	/^  defmodule Trans do$/;"	m
Transaction	deps/ecto/lib/ecto/adapter/transaction.ex	/^defmodule Ecto.Adapter.Transaction do$/;"	m
Transaction	deps/ecto/lib/ecto/repo/transaction.ex	/^defmodule Ecto.Repo.Transaction do$/;"	m
TransactionError	deps/db_connection/lib/db_connection.ex	/^  defmodule TransactionError do$/;"	m
TransactionTest	deps/ecto_sql/integration_test/sql/transaction.exs	/^defmodule Ecto.Integration.TransactionTest do$/;"	m
Transform	deps/earmark/lib/earmark/transform.ex	/^defmodule Earmark.Transform do$/;"	m
Transport	deps/phoenix/lib/phoenix/socket/transport.ex	/^defmodule Phoenix.Socket.Transport do$/;"	m
Type	deps/ecto/lib/ecto/type.ex	/^defmodule Ecto.Type do$/;"	m
Type	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule Type do$/;"	m
Type	deps/ex_json_schema/lib/ex_json_schema/validator/type.ex	/^defmodule ExJsonSchema.Validator.Type do$/;"	m
TypeInfo	deps/postgrex/lib/postgrex/type_info.ex	/^defmodule Postgrex.TypeInfo do$/;"	m
TypeModule	deps/postgrex/lib/postgrex/type_module.ex	/^defmodule Postgrex.TypeModule do$/;"	m
TypeNode	deps/ex_doc/lib/ex_doc/nodes.ex	/^defmodule ExDoc.TypeNode do$/;"	m
TypeServer	deps/postgrex/lib/postgrex/type_server.ex	/^defmodule Postgrex.TypeServer do$/;"	m
TypeSupervisor	deps/postgrex/lib/postgrex/type_supervisor.ex	/^defmodule Postgrex.TypeSupervisor do$/;"	m
TypeTest	deps/ecto/integration_test/cases/type.exs	/^defmodule Ecto.Integration.TypeTest do$/;"	m
Types	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^      defmodule Types do$/;"	m
Types	deps/earmark/lib/earmark/types.ex	/^defmodule Earmark.Types do$/;"	m
Types	deps/makeup/lib/makeup/lexer/types.ex	/^defmodule Makeup.Lexer.Types do$/;"	m
Types	deps/postgrex/lib/postgrex/types.ex	/^defmodule Postgrex.Types do$/;"	m
UI	deps/credo/lib/credo/cli/output/ui.ex	/^defmodule Credo.CLI.Output.UI do$/;"	m
URLENCODED	deps/plug/lib/plug/parsers/urlencoded.ex	/^defmodule Plug.Parsers.URLENCODED do$/;"	m
UUID	deps/ecto/lib/ecto/uuid.ex	/^defmodule Ecto.UUID do$/;"	m
UUID	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^  defmodule Tds.Ecto.UUID do$/;"	m
UUID	deps/postgrex/lib/postgrex/extensions/uuid.ex	/^defmodule Postgrex.Extensions.UUID do$/;"	m
UndefinedError	deps/phoenix/lib/phoenix/template.ex	/^  defmodule UndefinedError do$/;"	m
UndefinedFactoryError	deps/ex_machina/lib/ex_machina.ex	/^  defmodule UndefinedFactoryError do$/;"	m
UndefinedRemoteSchemaResolverError	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defmodule UndefinedRemoteSchemaResolverError do$/;"	m
Unescape	deps/jason/lib/decoder.ex	/^  defmodule Unescape do$/;"	m
UnexpectedCallError	deps/mox/lib/mox.ex	/^  defmodule UnexpectedCallError do$/;"	m
Unfetched	deps/plug/lib/plug/conn/unfetched.ex	/^defmodule Plug.Conn.Unfetched do$/;"	m
UniqueError	deps/ecto_sql/integration_test/sql/transaction.exs	/^  defmodule UniqueError do$/;"	m
UniqueItems	deps/ex_json_schema/lib/ex_json_schema/validator/error.ex	/^  defmodule UniqueItems do$/;"	m
UnknownBehaviour	deps/dialyxir/lib/dialyxir/warnings/unknown_behaviour.ex	/^defmodule Dialyxir.Warnings.UnknownBehaviour do$/;"	m
UnknownFunction	deps/dialyxir/lib/dialyxir/warnings/unknown_function.ex	/^defmodule Dialyxir.Warnings.UnknownFunction do$/;"	m
UnknownType	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^defmodule Dialyxir.Warnings.UnknownType do$/;"	m
UnlessWithElse	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^defmodule Credo.Check.Refactor.UnlessWithElse do$/;"	m
UnmatchedReturn	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^defmodule Dialyxir.Warnings.UnmatchedReturn do$/;"	m
UnnecessaryAliasExpansion	deps/credo/lib/credo/check/readability/unnecessary_alias_expansion.ex	/^defmodule Credo.Check.Readability.UnnecessaryAliasExpansion do$/;"	m
UnsafeToAtom	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^defmodule Credo.Check.Warning.UnsafeToAtom do$/;"	m
UnsupportedMediaTypeError	deps/plug/lib/plug/parsers.ex	/^  defmodule UnsupportedMediaTypeError do$/;"	m
UnsupportedSchemaVersionError	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defmodule UnsupportedSchemaVersionError do$/;"	m
UnusedEnumOperation	deps/credo/lib/credo/check/warning/unused_enum_operation.ex	/^defmodule Credo.Check.Warning.UnusedEnumOperation do$/;"	m
UnusedFileOperation	deps/credo/lib/credo/check/warning/unused_file_operation.ex	/^defmodule Credo.Check.Warning.UnusedFileOperation do$/;"	m
UnusedFunction	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^defmodule Dialyxir.Warnings.UnusedFunction do$/;"	m
UnusedFunctionReturnHelper	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^defmodule Credo.Check.Warning.UnusedFunctionReturnHelper do$/;"	m
UnusedKeywordOperation	deps/credo/lib/credo/check/warning/unused_keyword_operation.ex	/^defmodule Credo.Check.Warning.UnusedKeywordOperation do$/;"	m
UnusedListOperation	deps/credo/lib/credo/check/warning/unused_list_operation.ex	/^defmodule Credo.Check.Warning.UnusedListOperation do$/;"	m
UnusedOperation	deps/credo/lib/credo/check/warning/unused_operation.ex	/^defmodule Credo.Check.Warning.UnusedOperation do$/;"	m
UnusedPathOperation	deps/credo/lib/credo/check/warning/unused_path_operation.ex	/^defmodule Credo.Check.Warning.UnusedPathOperation do$/;"	m
UnusedRegexOperation	deps/credo/lib/credo/check/warning/unused_regex_operation.ex	/^defmodule Credo.Check.Warning.UnusedRegexOperation do$/;"	m
UnusedStringOperation	deps/credo/lib/credo/check/warning/unused_string_operation.ex	/^defmodule Credo.Check.Warning.UnusedStringOperation do$/;"	m
UnusedTupleOperation	deps/credo/lib/credo/check/warning/unused_tuple_operation.ex	/^defmodule Credo.Check.Warning.UnusedTupleOperation do$/;"	m
UnusedVariableNames	deps/credo/lib/credo/check/consistency/unused_variable_names.ex	/^defmodule Credo.Check.Consistency.UnusedVariableNames do$/;"	m
Update	deps/ecto/lib/ecto/query/builder/update.ex	/^defmodule Ecto.Query.Builder.Update do$/;"	m
Upload	deps/plug/lib/plug/upload.ex	/^defmodule Plug.Upload do$/;"	m
UploadError	deps/plug/lib/plug/upload.ex	/^defmodule Plug.UploadError do$/;"	m
UseColors	deps/credo/lib/credo/execution/task/use_colors.ex	/^defmodule Credo.Execution.Task.UseColors do$/;"	m
Usec	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.Usec do$/;"	m
User	deps/ecto/integration_test/support/schemas.exs	/^defmodule Ecto.Integration.User do$/;"	m
User	deps/ecto/lib/ecto.ex	/^      defmodule User do$/;"	m
User	deps/ecto/lib/ecto/changeset.ex	/^      defmodule User do$/;"	m
User	deps/ecto/lib/ecto/schema.ex	/^      defmodule User do$/;"	m
User	deps/phoenix/lib/phoenix/param.ex	/^      defmodule User do$/;"	m
User	test/support/user.ex	/^defmodule Boruta.Support.User do$/;"	m
UserController	deps/phoenix/lib/phoenix/controller.ex	/^      defmodule MyAppWeb.UserController do$/;"	m
UserOrganization	deps/ecto/lib/ecto/schema.ex	/^      defmodule UserOrganization do$/;"	m
UserSocket	deps/phoenix/lib/phoenix/socket.ex	/^      defmodule MyApp.UserSocket do$/;"	m
UserSocket	deps/phoenix/lib/phoenix/token.ex	/^      defmodule MyApp.UserSocket do$/;"	m
UserView	deps/phoenix/lib/phoenix/view.ex	/^      defmodule YourApp.UserView do$/;"	m
Utils	deps/makeup/lib/makeup/token/utils.ex	/^defmodule Makeup.Token.Utils do$/;"	m
Utils	deps/plug/lib/plug/conn/utils.ex	/^defmodule Plug.Conn.Utils do$/;"	m
Utils	deps/plug/lib/plug/router/utils.ex	/^defmodule Plug.Router.Utils do$/;"	m
Utils	deps/postgrex/lib/postgrex/utils.ex	/^defmodule Postgrex.Utils do$/;"	m
ValidateConfig	deps/credo/lib/credo/execution/task/validate_config.ex	/^defmodule Credo.Execution.Task.ValidateConfig do$/;"	m
ValidateOptions	deps/credo/lib/credo/execution/task/validate_options.ex	/^defmodule Credo.Execution.Task.ValidateOptions do$/;"	m
Validator	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^defmodule ExJsonSchema.Validator do$/;"	m
Validator	lib/boruta/oauth/validator.ex	/^defmodule Boruta.Oauth.Validator do$/;"	m
VarChar	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^  defmodule Tds.Ecto.VarChar do$/;"	m
VariableNames	deps/credo/lib/credo/check/readability/variable_names.ex	/^defmodule Credo.Check.Readability.VariableNames do$/;"	m
VariableRebinding	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^defmodule Credo.Check.Refactor.VariableRebinding do$/;"	m
VerificationError	deps/mox/lib/mox.ex	/^  defmodule VerificationError do$/;"	m
Version	deps/credo/lib/credo/cli/command/version.ex	/^defmodule Credo.CLI.Command.Version do$/;"	m
View	deps/phoenix/lib/phoenix/view.ex	/^defmodule Phoenix.View do$/;"	m
VimStyle	deps/makeup/lib/makeup/styles/html/pygments/vim.ex	/^defmodule Makeup.Styles.HTML.VimStyle do$/;"	m
VisualStudioStyle	deps/makeup/lib/makeup/styles/html/pygments/vs.ex	/^defmodule Makeup.Styles.HTML.VisualStudioStyle do$/;"	m
VoidBinary	deps/postgrex/lib/postgrex/extensions/void_binary.ex	/^defmodule Postgrex.Extensions.VoidBinary do$/;"	m
VoidText	deps/postgrex/lib/postgrex/extensions/void_text.ex	/^defmodule Postgrex.Extensions.VoidText do$/;"	m
WITH_STACKTRACE	deps/telemetry/src/telemetry.hrl	/^-define(WITH_STACKTRACE(T, R, S), T:R -> S = erlang:get_stacktrace(),).$/;"	d
WITH_STACKTRACE	deps/telemetry/src/telemetry.hrl	/^-define(WITH_STACKTRACE(T, R, S), T:R:S ->).$/;"	d
Warning	deps/dialyxir/lib/dialyxir/warning.ex	/^defmodule Dialyxir.Warning do$/;"	m
WarningHelpers	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^defmodule Dialyxir.WarningHelpers do$/;"	m
Warnings	deps/dialyxir/lib/dialyxir/warnings.ex	/^defmodule Dialyxir.Warnings do$/;"	m
Watcher	deps/db_connection/lib/db_connection/watcher.ex	/^defmodule DBConnection.Watcher do$/;"	m
Watcher	deps/phoenix/lib/phoenix/endpoint/watcher.ex	/^defmodule Phoenix.Endpoint.Watcher do$/;"	m
Weather	deps/ecto/lib/ecto.ex	/^      defmodule Weather do$/;"	m
WebSearchController	deps/credo/lib/credo/check/readability/module_names.ex	/^      defmodule MyApp.WebSearchController do$/;"	m
WebSocket	deps/phoenix/lib/phoenix/transports/websocket.ex	/^defmodule Phoenix.Transports.WebSocket do$/;"	m
Web_searchController	deps/credo/lib/credo/check/readability/module_names.ex	/^      defmodule MyApp.Web_searchController do$/;"	m
WindowAPI	deps/ecto/lib/ecto/query/window_api.ex	/^defmodule Ecto.Query.WindowAPI do$/;"	m
Windows	deps/ecto/lib/ecto/query/builder/windows.ex	/^defmodule Ecto.Query.Builder.Windows do$/;"	m
WindowsTest	deps/ecto/integration_test/cases/windows.exs	/^defmodule Ecto.Integration.WindowsTest do$/;"	m
WithClauses	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^defmodule Credo.Check.Refactor.WithClauses do$/;"	m
WithExpr	deps/ecto/lib/ecto/query.ex	/^  defmodule WithExpr do$/;"	m
WorkerSupervisor	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^  defmodule WorkerSupervisor do$/;"	m
WrappedInteger	deps/ecto/integration_test/support/types.exs	/^defmodule WrappedInteger do$/;"	m
WrapperError	deps/plug/lib/plug/conn/wrapper_error.ex	/^defmodule Plug.Conn.WrapperError do$/;"	m
WriteDebugReport	deps/credo/lib/credo/execution/task/write_debug_report.ex	/^defmodule Credo.Execution.Task.WriteDebugReport do$/;"	m
XcodeStyle	deps/makeup/lib/makeup/styles/html/pygments/xcode.ex	/^defmodule Makeup.Styles.HTML.XcodeStyle do$/;"	m
YeccHelpers	deps/earmark/lib/earmark/helpers/yecc_helpers.ex	/^defmodule Earmark.Helpers.YeccHelpers do$/;"	m
YourAppWeb	deps/phoenix/lib/phoenix/view.ex	/^      defmodule YourAppWeb do$/;"	m
__action_fallback__	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  def __action_fallback__(plug) do$/;"	f
__adapter__	deps/ecto/lib/ecto/repo.ex	/^      def __adapter__ do$/;"	f
__after_compile__	deps/ecto/lib/ecto/schema.ex	/^  def __after_compile__(%{module: module} = env, _) do$/;"	f
__apply__	deps/ecto/lib/ecto/multi.ex	/^  def __apply__(%Multi{} = multi, repo, wrap, return) do$/;"	f
__as_elixir_language__	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  def __as_elixir_language__({ttype, meta, value}) do$/;"	f
__before_compile__	deps/credo/lib/credo/check.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/credo/lib/credo/execution/process_definition.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__before_compile__	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  defmacro __before_compile__(_env), do: error!()$/;"	a
__before_compile__	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def __before_compile__(driver, _env) do$/;"	f
__before_compile__	deps/ecto_sql/lib/ecto/migration.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__before_compile__	deps/ex_machina/lib/ex_machina.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/channel.ex	/^  defmacro __before_compile__(_) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/endpoint.ex	/^  defmacro __before_compile__(%{module: module}) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defmacro __before_compile__(_) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/router.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/socket.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/template.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/phoenix/lib/phoenix/view.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__before_compile__	deps/plug/lib/plug/builder.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/plug/lib/plug/debugger.ex	/^  defmacro __before_compile__(_) do$/;"	a
__before_compile__	deps/plug/lib/plug/error_handler.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__before_compile__	deps/plug/lib/plug/router.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/puid/lib/puid.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__belongs_to__	deps/ecto/lib/ecto/schema.ex	/^  def __belongs_to__(mod, name, queryable, opts) do$/;"	f
__builder_opts__	deps/plug/lib/plug/builder.ex	/^  def __builder_opts__(module) do$/;"	f
__byte_offset__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __byte_offset__(_rest, acc, context, _line, offset) do$/;"	f
__call__	deps/phoenix/lib/phoenix/router.ex	/^  def __call__($/;"	f
__call__	deps/phoenix/lib/phoenix/router.ex	/^  def __call__(%{private: %{phoenix_bypass: :all}} = conn, {metadata, prepare, _, _}) do$/;"	f
__call__	deps/phoenix/lib/phoenix/router.ex	/^  def __call__(conn, {metadata, prepare, pipeline, {plug, opts}}) do$/;"	f
__catch__	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  def __catch__(%Plug.Conn{} = conn, reason, _controller, _action, stack) do$/;"	f
__catch__	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  def __catch__(%Plug.Conn{}, :function_clause, controller, action,$/;"	f
__catch__	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  def __catch__(conn, kind, reason, stack, opts) do$/;"	f
__catch__	deps/plug/lib/plug/debugger.ex	/^  def __catch__(conn, kind, reason, stack, opts) do$/;"	f
__catch__	deps/plug/lib/plug/error_handler.ex	/^  def __catch__(conn, kind, reason, wrapped_reason, stack, handle_errors) do$/;"	f
__changeset__	deps/ecto/lib/ecto/schema.ex	/^        def __changeset__ do$/;"	f
__channel__	deps/phoenix/lib/phoenix/socket.ex	/^      def __channel__(_topic), do: nil$/;"	f
__channel__	deps/phoenix/lib/phoenix/socket.ex	/^      def __channel__(unquote(topic_match)), do: unquote({channel_module, Macro.escape(opts)})$/;"	f
__checks__	deps/phoenix/lib/phoenix/router.ex	/^      def __checks__, do: unquote({:__block__, [], Map.keys(checks)})$/;"	f
__child_spec__	deps/phoenix/lib/phoenix/socket.ex	/^  def __child_spec__(handler, opts) do$/;"	f
__compile_integer__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __compile_integer__(_rest, acc, context, _line, _offset, _count) when is_list(acc) do$/;"	f
__compile_string__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __compile_string__(_rest, acc, context, _line, _offset, _count, _type) do$/;"	f
__compile_string__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __compile_string__(_rest, acc, context, _line, _offset, _count, type) when is_list(acc) do$/;"	f
__connect__	deps/phoenix/lib/phoenix/socket.ex	/^  def __connect__(user_socket, map, log) do$/;"	f
__connect__	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def __connect__(endpoint, handler, params, connect_info) do$/;"	f
__constant__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __constant__(_rest, _acc, context, _line, _offset, constant) do$/;"	f
__cont_context__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __cont_context__(_rest, context, _line, _offset) do$/;"	f
__debug__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __debug__(rest, acc, context, line, offset) do$/;"	f
__debugger_banner__	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  def __debugger_banner__(_conn, _status, _kind, %NoRouteError{router: router}, _stack) do$/;"	f
__debugger_banner__	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  def __debugger_banner__(_conn, _status, _kind, _reason, _stack), do: nil$/;"	f
__deriving__	deps/jason/lib/encoder.ex	/^  defmacro __deriving__(module, struct, opts) do$/;"	a
__deriving__	deps/phoenix/lib/phoenix/param.ex	/^  defmacro __deriving__(module, struct, options) do$/;"	a
__dispatch__	deps/mox/lib/mox.ex	/^  def __dispatch__(mock, name, arity, args) do$/;"	f
__embeds_many__	deps/ecto/lib/ecto/schema.ex	/^  def __embeds_many__(mod, name, schema, opts) do$/;"	f
__embeds_module__	deps/ecto/lib/ecto/schema.ex	/^  def __embeds_module__(env, name, opts, block) do$/;"	f
__embeds_one__	deps/ecto/lib/ecto/schema.ex	/^  def __embeds_one__(mod, name, schema, opts) do$/;"	f
__field__	deps/ecto/lib/ecto/schema.ex	/^  def __field__(mod, name, type, opts) do$/;"	f
__force_ssl__	deps/phoenix/lib/phoenix/endpoint.ex	/^  def __force_ssl__(module, config) do$/;"	f
__handler__	deps/phoenix/lib/phoenix/endpoint.ex	/^      def __handler__(%{path_info: path} = conn, opts), do: do_handler(path, conn, opts)$/;"	f
__has_many__	deps/ecto/lib/ecto/schema.ex	/^  def __has_many__(mod, name, queryable, opts) do$/;"	f
__has_one__	deps/ecto/lib/ecto/schema.ex	/^  def __has_one__(mod, name, queryable, opts) do$/;"	f
__helpers__	deps/phoenix/lib/phoenix/router.ex	/^      def __helpers__, do: __MODULE__.Helpers$/;"	f
__in__	deps/phoenix/lib/phoenix/socket.ex	/^  def __in__({payload, opts}, {state, socket}) do$/;"	f
__info__	deps/phoenix/lib/phoenix/socket.ex	/^  def __info__(%Broadcast{event: "disconnect"}, state) do$/;"	f
__info__	deps/phoenix/lib/phoenix/socket.ex	/^  def __info__(:garbage_collect, state) do$/;"	f
__info__	deps/phoenix/lib/phoenix/socket.ex	/^  def __info__(_, state) do$/;"	f
__info__	deps/phoenix/lib/phoenix/socket.ex	/^  def __info__({:DOWN, ref, _, pid, reason}, {state, socket}) do$/;"	f
__info__	deps/phoenix/lib/phoenix/socket.ex	/^  def __info__({:socket_close, pid, _reason}, {state, socket}) do$/;"	f
__info__	deps/phoenix/lib/phoenix/socket.ex	/^  def __info__({:socket_push, opcode, payload}, state) do$/;"	f
__init__	deps/phoenix/lib/phoenix/socket.ex	/^  def __init__({state, %{id: id, endpoint: endpoint} = socket}) do$/;"	f
__intercepts__	deps/phoenix/lib/phoenix/channel.ex	/^      def __intercepts__, do: @phoenix_intercepts$/;"	f
__layout__	deps/phoenix/lib/phoenix/controller.ex	/^  def __layout__(controller_module, opts) do$/;"	f
__lexeme__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __lexeme__(_rest, args, context, _line, _offset) do$/;"	f
__line__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __line__(_rest, acc, context, line, _offset) do$/;"	f
__loaded__	deps/ecto/lib/ecto/schema.ex	/^  def __loaded__(module, struct_fields) do$/;"	f
__lookahead__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __lookahead__(rest, _acc, context, line, offset, call) do$/;"	f
__many_to_many__	deps/ecto/lib/ecto/schema.ex	/^  def __many_to_many__(mod, name, queryable, opts) do$/;"	f
__map__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __map__(_rest, acc, context, _line, _offset, var, call) do$/;"	f
__match_route__	deps/phoenix/lib/phoenix/router.ex	/^        def __match_route__(_method, _path_info, _host) do$/;"	f
__match_route__	deps/phoenix/lib/phoenix/router.ex	/^        def __match_route__(unquote(verb_match), unquote(path), unquote(host)) do$/;"	f
__migration__	deps/ecto_sql/lib/ecto/migration.ex	/^      def __migration__ do$/;"	f
__mock_for__	deps/mox/lib/mox.ex	/^        def __mock_for__ do$/;"	f
__on_definition__	deps/phoenix/lib/phoenix/channel.ex	/^  def __on_definition__(_env, _kind, _name, _args, _guards, _body) do$/;"	f
__on_definition__	deps/phoenix/lib/phoenix/channel.ex	/^  def __on_definition__(env, :def, :handle_out, [event, _payload, _socket], _, _)$/;"	f
__phoenix_recompile__?	deps/phoenix/lib/phoenix/template.ex	/^      def __phoenix_recompile__? do$/;"	f
__post_traverse__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __post_traverse__(rest, acc, context, line, offset, call) do$/;"	f
__pre_traverse__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __pre_traverse__(rest, acc, context, line, offset, call) do$/;"	f
__prefix__	deps/ecto_sql/lib/ecto/migration.ex	/^  def __prefix__(%{prefix: prefix} = index_or_table) do$/;"	f
__primary_key__	deps/ecto_sql/lib/ecto/migration.ex	/^  def __primary_key__() do$/;"	f
__pubsub_server__	deps/phoenix/lib/phoenix/endpoint.ex	/^      def __pubsub_server__ do$/;"	f
__pubsub_server__!	deps/phoenix/lib/phoenix/endpoint.ex	/^  def __pubsub_server__!(module) do$/;"	f
__put_render__	deps/phoenix/lib/phoenix/controller.ex	/^  def __put_render__(conn, view, template, format, assigns) do$/;"	f
__put_route__	deps/plug/lib/plug/router.ex	/^  def __put_route__(conn, path, fun) do$/;"	f
__reduce__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __reduce__(_rest, acc, context, _line, _offset, call) do$/;"	f
__repeat_while__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __repeat_while__(quoted, context, line, offset, call) do$/;"	f
__resource__	deps/phoenix/lib/phoenix/view.ex	/^      def __resource__, do: @view_resource$/;"	f
__route__	deps/plug/lib/plug/router.ex	/^  def __route__(method, path, guards, options) do$/;"	f
__routes__	deps/phoenix/lib/phoenix/router.ex	/^      def __routes__,  do: unquote(Macro.escape(routes))$/;"	f
__runtime_integer__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __runtime_integer__(_rest, acc, context, _line, _offset, _min, _max) do$/;"	f
__runtime_integer__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __runtime_integer__(_rest, acc, context, _line, _offset, min, _max)$/;"	f
__runtime_string__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __runtime_string__(_rest, acc, context, _line, _offset, _min, _max, _type) do$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^          def __schema__(unquote_splicing(args)), do: unquote(body)$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:autogenerate), do: unquote(Macro.escape(autogenerate))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:autogenerate_id), do: unquote(Macro.escape(@ecto_autogenerate_id))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:autoupdate), do: unquote(Macro.escape(autoupdate))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:fields), do: unquote(Enum.map(fields, &elem(&1, 0)))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:hash), do: unquote(:erlang.phash2({primary_key_fields, query_fields}))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:loaded), do: unquote(Macro.escape(loaded))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:prefix), do: unquote(prefix)$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:primary_key), do: unquote(primary_key_fields)$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:query) do$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:query_fields), do: unquote(Enum.map(query_fields, &elem(&1, 0)))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:read_after_writes), do: unquote(Enum.reverse(@ecto_raw))$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^        def __schema__(:source), do: unquote(source)$/;"	f
__schema__	deps/ecto/lib/ecto/schema.ex	/^  def __schema__(fields, field_sources, assocs, embeds) do$/;"	f
__socket__	deps/phoenix/lib/phoenix/channel.ex	/^      def __socket__(:private) do$/;"	f
__sockets__	deps/phoenix/lib/phoenix/endpoint.ex	/^      def __sockets__, do: unquote(Macro.escape(sockets))$/;"	f
__stringify__	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def __stringify__(%{__struct__: _} = struct),$/;"	f
__stringify__	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def __stringify__(%{} = params),$/;"	f
__stringify__	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def __stringify__(other),$/;"	f
__tag__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __tag__(_rest, acc, context, _line, _offset, tag) do$/;"	f
__template_options__	deps/phoenix/lib/phoenix/view.ex	/^  def __template_options__(module, opts) do$/;"	f
__templates__	deps/phoenix/lib/phoenix/template.ex	/^      def __templates__ do$/;"	f
__terminate__	deps/phoenix/lib/phoenix/socket.ex	/^  def __terminate__(_reason, _state_socket) do$/;"	f
__timestamps__	deps/ecto/lib/ecto/schema.ex	/^  def __timestamps__(:naive_datetime) do$/;"	f
__timestamps__	deps/ecto/lib/ecto/schema.ex	/^  def __timestamps__(:naive_datetime_usec) do$/;"	f
__timestamps__	deps/ecto/lib/ecto/schema.ex	/^  def __timestamps__(:utc_datetime) do$/;"	f
__timestamps__	deps/ecto/lib/ecto/schema.ex	/^  def __timestamps__(:utc_datetime_usec) do$/;"	f
__timestamps__	deps/ecto/lib/ecto/schema.ex	/^  def __timestamps__(type) do$/;"	f
__token__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __token__(_rest, [arg], context, _line, _offset, token_type) do$/;"	f
__token__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __token__(_rest, [arg], context, _line, _offset, token_type, attrs) do$/;"	f
__token__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __token__(_rest, arg, context, _line, _offset, token_type) when is_binary(arg) do$/;"	f
__token__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __token__(_rest, arg, context, _line, _offset, token_type, attrs) when is_binary(arg) do$/;"	f
__token__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __token__(_rest, args, context, _line, _offset, token_type) do$/;"	f
__token__	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def __token__(_rest, args, context, _line, _offset, token_type, attrs) do$/;"	f
__transport__	deps/phoenix/lib/phoenix/socket.ex	/^  def __transport__(transports, name, module, user_conf) do$/;"	f
__transports__	deps/phoenix/lib/phoenix/socket.ex	/^      def __transports__, do: unquote(Macro.escape(transports))$/;"	f
__unwrap_and_tag__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __unwrap_and_tag__(_rest, acc, context, _line, _offset, tag) do$/;"	f
__unwrap_and_tag__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __unwrap_and_tag__(_rest, acc, context, _line, _offset, tag) when is_list(acc) do$/;"	f
__using__	deps/connection/lib/connection.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/credo/lib/credo/check.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/credo/lib/credo/check/consistency/collector.ex	/^  defmacro __using__(_opts) do$/;"	a
__using__	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^        def __using__(opts \\\\\\\\ []) do$/;"	f
__using__	deps/credo/lib/credo/cli/command.ex	/^  defmacro __using__(_opts) do$/;"	a
__using__	deps/credo/lib/credo/cli/output/format_delegator.ex	/^  defmacro __using__(format_list) do$/;"	a
__using__	deps/credo/lib/credo/execution/process_definition.ex	/^  defmacro __using__(_opts \\\\ []) do$/;"	a
__using__	deps/credo/lib/credo/execution/task.ex	/^  defmacro __using__(_opts \\\\ []) do$/;"	a
__using__	deps/credo/lib/credo/service/ets_table_helper.ex	/^  defmacro __using__(_opts \\\\ []) do$/;"	a
__using__	deps/db_connection/lib/db_connection.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/earmark/lib/earmark/types.ex	/^  defmacro __using__(_options \\\\ []) do$/;"	a
__using__	deps/ecto/integration_test/support/schemas.exs	/^  defmacro __using__(_) do$/;"	a
__using__	deps/ecto/lib/ecto/repo.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/ecto/lib/ecto/schema.ex	/^        defmacro __using__(_) do$/;"	a
__using__	deps/ecto/lib/ecto/schema.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/ecto/lib/ecto/type.ex	/^  defmacro __using__(_opts) do$/;"	a
__using__	deps/ecto_sql/integration_test/support/repo.exs	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/ecto_sql/lib/ecto/migration.ex	/^        defmacro __using__(_) do$/;"	a
__using__	deps/ecto_sql/lib/ecto/migration.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/ex_machina/lib/ex_machina.ex	/^  defmacro __using__(_opts) do$/;"	a
__using__	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/ex_machina/lib/ex_machina/strategy.ex	/^      defmacro __using__(opts) do$/;"	a
__using__	deps/ex_machina/lib/ex_machina/strategy.ex	/^  defmacro __using__(function_name: function_name) do$/;"	a
__using__	deps/ex_machina/lib/ex_machina/strategy.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/channel.ex	/^  defmacro __using__(opts \\\\ []) do$/;"	a
__using__	deps/phoenix/lib/phoenix/controller.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/endpoint.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/presence.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/router.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/phoenix/lib/phoenix/socket.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/phoenix/lib/phoenix/template.ex	/^  defmacro __using__(options) do$/;"	a
__using__	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/phoenix/lib/phoenix/view.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/builder.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/debugger.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/error_handler.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/plug/lib/plug/router.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/test.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/postgrex/lib/postgrex/binary_extension.ex	/^  defmacro __using__(matching) do$/;"	a
__using__	deps/puid/lib/puid.ex	/^  defmacro __using__(opts) do$/;"	a
__view__	deps/phoenix/lib/phoenix/controller.ex	/^  def __view__(controller_module) do$/;"	f
__wrap__	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def __wrap__(_rest, acc, context, _line, _offset) do$/;"	f
_align_to_style	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _align_to_style(:center), do: [{"style", "text-align: center;"}]$/;"	f
_align_to_style	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _align_to_style(:left), do: [{"style", "text-align: left;"}]$/;"	f
_align_to_style	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _align_to_style(:right), do: [{"style", "text-align: right;"}]$/;"	f
_align_to_style	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _align_to_style(_), do: []$/;"	f
_align_to_style	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _align_to_style(align)$/;"	f
_already_loose?	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _already_loose?([%{loose?: loose?}|_]), do: loose?$/;"	f
_already_loose?	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _already_loose?([]), do: false # Can this happen?$/;"	f
_already_loose?	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _already_loose?(items)$/;"	f
_as_ast	deps/earmark/lib/earmark.ex	/^  defp _as_ast(lines, options) do$/;"	f
_attribute_escape	deps/earmark/lib/earmark/line_scanner.ex	/^  defp _attribute_escape(string), do:$/;"	f
_behead_spaces	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _behead_spaces(str, len) do$/;"	f
_close_tag_tail	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _close_tag_tail(tag, atts, closing?, suffix) do$/;"	f
_closes_tag?	deps/earmark/lib/earmark/parser.ex	/^  defp _closes_tag?(%Line.HtmlCloseTag{tag: ctag}, %Line.HtmlOpenTag{tag: otag}) do $/;"	f
_closes_tag?	deps/earmark/lib/earmark/parser.ex	/^  defp _closes_tag?(_, _), do: false$/;"	f
_consolidate_para	deps/earmark/lib/earmark/parser.ex	/^  defp _consolidate_para( [], result, pending ) do$/;"	f
_consolidate_para	deps/earmark/lib/earmark/parser.ex	/^  defp _consolidate_para( [line | rest] = lines, result, pending ) do$/;"	f
_convert	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _convert("", _, context, _), do: context$/;"	f
_convert	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _convert(src, current_lnb, context, use_linky?) do$/;"	f
_convert	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _convert(src, current_lnb, context, use_linky?)$/;"	f
_convert_next	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _convert_next(src, lnb, context, use_linky?) do$/;"	f
_converter_for_simple_tag	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _converter_for_simple_tag({src, lnb, context, use_linky?}, match, for_tag) do$/;"	f
_determine_if_header	deps/earmark/lib/earmark/line_scanner.ex	/^  defp _determine_if_header(columns) do$/;"	f
_empty_list	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _empty_list([%Block.ListItem{loose?: loose?, type: type}|_]) do$/;"	f
_escape	deps/earmark/lib/earmark/helpers.ex	/^  defp _escape(html) do$/;"	f
_extract_start	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _extract_start(%{bullet: bullet}) do$/;"	f
_find_and_execute_converter	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _find_and_execute_converter({src, lnb, context, use_linky?}, converters) do$/;"	f
_find_closing_tags	deps/earmark/lib/earmark/parser.ex	/^  defp _find_closing_tags([], rest, html_lines), do: {html_lines, rest, []}$/;"	f
_find_closing_tags	deps/earmark/lib/earmark/parser.ex	/^  defp _find_closing_tags(needed = [needed_hd|needed_tl], [rest_hd|rest_tl], html_lines) do$/;"	f
_find_closing_tags	deps/earmark/lib/earmark/parser.ex	/^  defp _find_closing_tags(needed, [], html_lines), do: {html_lines, [], needed}$/;"	f
_find_closing_tags	deps/earmark/lib/earmark/parser.ex	/^  defp _find_closing_tags(needed, input, html_lines)$/;"	f
_finish_list_item	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _finish_list_item([%Block.ListItem{}=item|items], _at_start?, ctxt) do$/;"	f
_finish_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _finish_list_items(input, items, at_start?, ctxt) do$/;"	f
_fix_loose_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_loose_text_line(node)$/;"	f
_fix_loose_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_loose_text_line(node), do: node$/;"	f
_fix_loose_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_loose_text_line({:text, _, lines}) when is_list(lines), do: {"p", [], lines}$/;"	f
_fix_loose_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_loose_text_line({:text, _, lines}), do: {"p", [], [lines]}$/;"	f
_fix_text_lines	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_text_lines(ast, false), do: Enum.map(ast, &_fix_tight_text_line\/1)$/;"	f
_fix_text_lines	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_text_lines(ast, loose?)$/;"	f
_fix_text_lines	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_text_lines(ast, true), do: Enum.map(ast, &_fix_loose_text_line\/1)$/;"	f
_fix_tight_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_tight_text_line(node)$/;"	f
_fix_tight_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_tight_text_line(node), do: node$/;"	f
_fix_tight_text_line	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _fix_tight_text_line({:text, _, lines}), do: lines$/;"	f
_html_match_to_closing	deps/earmark/lib/earmark/parser.ex	/^  defp _html_match_to_closing(opener, rest), do: _find_closing_tags([opener], rest, [String.trim_leading(opener.line)])$/;"	f
_inline_or_text?	deps/earmark/lib/earmark/parser.ex	/^  defp _inline_or_text?( _line, @not_pending), do: %{pending: @not_pending, continue: false}$/;"	f
_inline_or_text?	deps/earmark/lib/earmark/parser.ex	/^  defp _inline_or_text?( line, pending ) do$/;"	f
_inline_or_text?	deps/earmark/lib/earmark/parser.ex	/^  defp _inline_or_text?(line = %Line.TableLine{}, @not_pending) do$/;"	f
_inline_or_text?	deps/earmark/lib/earmark/parser.ex	/^  defp _inline_or_text?(line = %Line.Text{}, @not_pending) do$/;"	f
_inline_or_text?	deps/earmark/lib/earmark/parser.ex	/^  defp _inline_or_text?(line, pending)$/;"	f
_join_pmap_results_or_raise	deps/earmark/lib/earmark.ex	/^  defp _join_pmap_results_or_raise(yield_tuples, timeout)$/;"	f
_join_pmap_results_or_raise	deps/earmark/lib/earmark.ex	/^  defp _join_pmap_results_or_raise({_task, {:ok, result}}, _timeout), do: result$/;"	f
_join_pmap_results_or_raise	deps/earmark/lib/earmark.ex	/^  defp _join_pmap_results_or_raise({task, nil}, timeout),$/;"	f
_join_pmap_results_or_raise	deps/earmark/lib/earmark.ex	/^  defp _join_pmap_results_or_raise({task, {:error, reason}}, _timeout),$/;"	f
_loose	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _loose(ctxt), do: %{ctxt| loose?: true}$/;"	f
_make_and_prepend_list_item	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _make_and_prepend_list_item(%Line.ListItem{bullet: bullet, lnb: lnb, type: type}, list_items) do$/;"	f
_make_list	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _make_list([%Block.ListItem{bullet: bullet, lnb: lnb}=item], %Block.List{loose?: loose?}=list) do$/;"	f
_make_list	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _make_list([%Block.ListItem{}=item|rest], %Block.List{loose?: loose?}=list) do$/;"	f
_make_list	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _make_list(items, list)$/;"	f
_normalize_start	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _normalize_start(start) do$/;"	f
_opens_tag?	deps/earmark/lib/earmark/parser.ex	/^  defp _opens_tag?(%Line.HtmlOpenTag{}), do: true$/;"	f
_opens_tag?	deps/earmark/lib/earmark/parser.ex	/^  defp _opens_tag?(_), do: false$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ %Line.Blank{} | rest ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ %Line.Ial{attrs: attrs, lnb: lnb, verbatim: verbatim} | rest ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ %Line.ListItem{}|_ ]=input, result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ anything = %{lnb: lnb} | rest ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ defn = %Line.FnDef{id: _id, lnb: lnb} | rest ], result , options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ defn = %Line.IdDef{lnb: lnb} | rest ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( [ defn = %Line.IdDef{title: title, lnb: lnb}, maybe_title | rest ], result, options, recursive)$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( lines = [ %Line.BlockQuote{lnb: lnb} | _ ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( lines = [ %Line.TableLine{columns: cols1, lnb: lnb1, needs_header: false},$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( lines = [ %Line.TableLine{columns: cols1, lnb: lnb1, needs_header: true},$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( lines = [ %Line.TableLine{lnb: lnb} | _ ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( lines = [ %Line.Text{lnb: lnb} | _ ], result, options, recursive)$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse( list = [%Line.Indent{lnb: lnb} | _], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([  %Line.Blank{},$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([ %Line.Blank{},$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([ %Line.Heading{content: content, level: level, lnb: lnb} | rest ], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([ %Line.HtmlOneLine{line: line, lnb: lnb} | rest], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([ %Line.Ruler{type: type, lnb: lnb} | rest], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([ line = %Line.HtmlComment{complete: true, lnb: lnb} | rest], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([ opener = %Line.HtmlOpenTag{tag: tag, lnb: lnb} | rest], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([%Line.Fence{delimiter: delimiter, language: language, lnb: lnb} | rest], result, options, recursive) do$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse([], result, options, _recursive), do: {result, options}$/;"	f
_parse	deps/earmark/lib/earmark/parser.ex	/^  defp _parse(lines = [ %Line.HtmlComment{complete: false, lnb: lnb} | _], result, options, recursive) do$/;"	f
_parse_attrs	deps/earmark/lib/earmark/helpers/attr_parser.ex	/^  defp _parse_attrs(dict, attrs, errors, lnb) do$/;"	f
_parse_atts	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_atts(string, tag, atts) do$/;"	f
_parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items(:end, rest, items, ctxt), do: {items, rest, ctxt.options}$/;"	f
_parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items(:init, [item|rest], list_items, options) do$/;"	f
_parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items(:spaced, rest, items, ctxt), do: _parse_list_items_spaced(rest, items, ctxt)$/;"	f
_parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items(:start, rest, items, ctxt), do: _parse_list_items_start(rest, items, ctxt)$/;"	f
_parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items(state, input, output, ctxt)$/;"	f
_parse_list_items_spaced	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced(input, items, %{list_info: %{pending: @not_pending}}=ctxt) do$/;"	f
_parse_list_items_spaced	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced(input, items, ctxt) do$/;"	f
_parse_list_items_spaced	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced(input, items, ctxt)$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np([%Line.Blank{}|rest], items, ctxt) do$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np([%Line.Indent{indent: ii}=item|rest], list_items, %{list_info: %{width: w}}=ctxt)$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np([%Line.ListItem{indent: ii}=item|_]=input, list_items, %{list_info: %{width: w}}=ctxt)$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np([%Line.ListItem{}=line|rest], items, ctxt) do$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np([%Line.Ruler{}|_]=lines, items, ctxt) do$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np([%{indent: indent, line: str_line}=line|rest], items, %{list_info: %{width: width}}=ctxt) when$/;"	f
_parse_list_items_spaced_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_np(input, items, ctxt) do$/;"	f
_parse_list_items_spaced_pdg	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_pdg([], items, %{list_info: %{pending: {pending, lnb}}}=ctxt) do$/;"	f
_parse_list_items_spaced_pdg	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_pdg([line|rest], items, ctxt) do$/;"	f
_parse_list_items_spaced_pdg	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_spaced_pdg(input, items, ctxt)$/;"	f
_parse_list_items_start	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start(input, list_items, %{list_info: %{pending: @not_pending}}=ctxt) do$/;"	f
_parse_list_items_start	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start(input, list_items, ctxt) do$/;"	f
_parse_list_items_start	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start(input, list_items, ctxt)$/;"	f
_parse_list_items_start_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_np([%Line.Blank{}|input], items, ctxt) do$/;"	f
_parse_list_items_start_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_np([%Line.ListItem{indent: ii}=item|_]=input, list_items, %{list_info: %{ width: w}}=ctxt)$/;"	f
_parse_list_items_start_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_np([%Line.Ruler{}|_]=input, list_items, ctxt) do$/;"	f
_parse_list_items_start_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_np([%{line: str_line}=line|rest], items, ctxt) do$/;"	f
_parse_list_items_start_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_np([], list_items, ctxt) do$/;"	f
_parse_list_items_start_np	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_np(input, list_items, ctxt)$/;"	f
_parse_list_items_start_pdg	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_pdg([], items, ctxt) do$/;"	f
_parse_list_items_start_pdg	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_pdg([line|rest], items, ctxt) do$/;"	f
_parse_list_items_start_pdg	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _parse_list_items_start_pdg(input, items, ctxt)$/;"	f
_parse_rest	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_rest([], tag_tpl, lines) do$/;"	f
_parse_rest	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_rest([inner_line|rest], tag_tpl, lines) do$/;"	f
_parse_rest	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_rest([last_line], {tag, _}=tag_tpl, lines) do$/;"	f
_parse_rest	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_rest(rest, tag_tpl, lines)$/;"	f
_parse_tag	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_tag(string) do$/;"	f
_parse_tag_tail	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  defp _parse_tag_tail(string, tag, atts) do$/;"	f
_prepend	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _prepend(%Context{value: [str|rest]}=context, prep) when is_binary(str) and is_binary(prep) do$/;"	f
_prepend	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _prepend(%Context{value: value}=context, prep) do$/;"	f
_prepend	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _prepend(%Context{value: value}=context, prep) when is_list(prep) do$/;"	f
_prepend	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _prepend(context, [bin|rest]) when is_binary(bin) do$/;"	f
_prepend	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _prepend(context, value)$/;"	f
_prepend	deps/earmark/lib/earmark/context.ex	/^  defp _prepend(%{value: value}=ctxt, list) when is_list(list), do: %{ctxt|value: List.flatten(list ++ value)}$/;"	f
_prepend	deps/earmark/lib/earmark/context.ex	/^  defp _prepend(%{value: value}=ctxt, string) when is_binary(string), do: %{ctxt|value: [string|value] |> List.flatten}$/;"	f
_prepend	deps/earmark/lib/earmark/context.ex	/^  defp _prepend(%{value: value}=ctxt, tuple) when is_tuple(tuple) do$/;"	f
_prepend	deps/earmark/lib/earmark/context.ex	/^  defp _prepend(%{value: value}=ctxt, {:comment, _}=ct), do: %{ctxt|value: [ct|value]}$/;"	f
_prepend	deps/earmark/lib/earmark/context.ex	/^  defp _prepend(ctxt, []), do: ctxt$/;"	f
_prepend_line	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _prepend_line(%Ctxt{lines: lines}=ctxt, line) do$/;"	f
_remove_leading_empty	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _remove_leading_empty([""|rest]), do: rest$/;"	f
_remove_leading_empty	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _remove_leading_empty(list)$/;"	f
_remove_leading_empty	deps/earmark/lib/earmark/ast/inline.ex	/^  defp _remove_leading_empty(list), do: list$/;"	f
_render	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _render([], context, _loose?), do: context$/;"	f
_render	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _render([block|blocks], context, loose?) do$/;"	f
_render	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp _render(blocks, context, loose?)$/;"	f
_render_col	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _render_col({col, align}, context, lnb, coltype) do$/;"	f
_render_cols	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _render_cols(row, lnb, aligns, context, coltype \\\\ :td) do$/;"	f
_render_footnote_backlink	deps/earmark/lib/earmark/ast/renderer/footnote_list_renderer.ex	/^  defp _render_footnote_backlink(%{class: _, href: _, title: _}=atts) do$/;"	f
_render_footnote_list_item	deps/earmark/lib/earmark/ast/renderer/footnote_list_renderer.ex	/^  defp _render_footnote_list_item(%Block.ListItem{attrs: %{id: [id]}, blocks: [%Block.Para{attrs: atts, lines: lines}]}) do$/;"	f
_render_footnote_list_items	deps/earmark/lib/earmark/ast/renderer/footnote_list_renderer.ex	/^  defp _render_footnote_list_items(items) do$/;"	f
_render_row	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  defp _render_row({row, lnb}, context, aligns) do$/;"	f
_starts_list?	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _starts_list?(%{bullet: bullet1}, [%Block.ListItem{bullet: bullet2}|_]) do$/;"	f
_starts_list?	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _starts_list?(_item, []), do: true$/;"	f
_starts_list?	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _starts_list?(line_list_item, list_items)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html(ast, options, level, verbatim \\\\ false)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html(element, options, level, false) when is_binary(element) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html(element, options, level, true) when is_binary(element) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html(elements, options, level, verbatim) when is_list(elements) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"area", _, _}=tag, options, level, _verbatim), do: void_tag(tag, options, level)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"br", _, _}=tag, options, level, _verbatim), do: void_tag(tag, options, level)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"code", atts, children}, options, _level, _verbatim) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"hr", _, _}=tag, options, level, _verbatim), do: void_tag(tag, options, level)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"img", _, _}=tag, options, level, _verbatim), do: void_tag(tag, options, level)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"pre", atts, children, meta}, options, level, _verbatim) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"pre", atts, children}, options, level, _verbatim) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({"wbr", _, _}=tag, options, level, _verbatim), do: void_tag(tag, options, level)$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({:comment, children}, options, level, _verbatim) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({tag, atts, []}, options, level, _verbatim) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({tag, atts, children, meta}, options, level, _verbatim) do$/;"	f
_to_html	deps/earmark/lib/earmark/transform.ex	/^  defp _to_html({tag, atts, children}, options, level, _verbatim) do$/;"	f
_type_of	deps/earmark/lib/earmark/line_scanner.ex	/^  defp _type_of(line, options = %Options{}, recursive) do$/;"	f
_update_ctxt	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _update_ctxt(ctxt, line, pending_line, loose? \\\\ false)$/;"	f
_update_ctxt	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _update_ctxt(ctxt, line, pending_line, loose?) do$/;"	f
_update_ctxt	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _update_ctxt(ctxt, nil, pending_line, loose?), do: %{ctxt | list_info: _update_list_info(ctxt.list_info, pending_line), loose?: loose?}$/;"	f
_update_list_info	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp _update_list_info(%{pending: pending}=list_info, line) do$/;"	f
_value_merger	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp _value_merger(_, val1, val2) do$/;"	f
_value_merger	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp _value_merger(_, val1, val2) when is_list(val1) and is_list(val2) do$/;"	f
_value_merger	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp _value_merger(_, val1, val2) when is_list(val1) do$/;"	f
_value_merger	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp _value_merger(key, val1, val2)$/;"	f
_walk	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk([], _fun, _ignore_map_keys, _child_of_map), do: []$/;"	f
_walk	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk(ele, fun, _ignore_map_keys, _child_of_map), do: fun.(ele)$/;"	f
_walk	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk(list, fun, ignore_map_keys, _child_of_map) when is_list(list) do$/;"	f
_walk	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk(map, fun, ignore_map_keys, _child_of_map) when is_map(map) do$/;"	f
_walk	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk(tuple, fun, ignore_map_keys, child_of_map) when is_tuple(tuple) do$/;"	f
_walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_ast([], _fun, res), do: Enum.reverse(res)$/;"	f
_walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_ast([list|rest], fun, res) when is_list(list) do$/;"	f
_walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_ast([stringy|rest], fun, res) when is_binary(stringy) do$/;"	f
_walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_ast([{tag, atts, content}|rest], fun, res) do$/;"	f
_walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_ast(ast, fun, res)$/;"	f
_walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_ast(stringy, fun, res) when is_binary(stringy), do: _walk_ast([stringy], fun, res)$/;"	f
_walk_map_element	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  defp _walk_map_element({key, value}, fun, ignore_map_keys) do $/;"	f
a	deps/erlex/lib/erlex.ex	/^    def a() do$/;"	f
abap_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def abap_style, do: HTML.AbapStyle.style()$/;"	f
abc_size_for	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  def abc_size_for(ast, arguments, excluded_functions) do$/;"	f
abc_size_for	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  def abc_size_for(nil, _arguments, _excluded_functions), do: 0$/;"	f
abc_size_for	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  def abc_size_for({_def_op, _meta, arguments}, excluded_functions) when is_list(arguments) do$/;"	f
abs	deps/decimal/lib/decimal.ex	/^  def abs(%Decimal{coef: :qNaN} = num), do: %{num | sign: 1}$/;"	f
abs	deps/decimal/lib/decimal.ex	/^  def abs(%Decimal{coef: :sNaN} = num), do: error(:invalid_operation, "operation on NaN", num)$/;"	f
abs	deps/decimal/lib/decimal.ex	/^  def abs(%Decimal{} = num), do: context(%{num | sign: 1})$/;"	f
abs_timeout	deps/db_connection/lib/db_connection/holder.ex	/^  defp abs_timeout(now, opts) do$/;"	f
absolute_digested_url	deps/phoenix/lib/phoenix/digester.ex	/^  defp absolute_digested_url(url, digested_path) do$/;"	f
absolute_digested_url	deps/phoenix/lib/phoenix/digester.ex	/^  defp absolute_digested_url(url, digested_path, false) do$/;"	f
absolute_digested_url	deps/phoenix/lib/phoenix/digester.ex	/^  defp absolute_digested_url(url, digested_path, true) do$/;"	f
accept_encoding?	deps/plug/lib/plug/static.ex	/^  defp accept_encoding?(conn, encoding) do$/;"	f
accepted_mime?	deps/plug/lib/plug/parsers.ex	/^  defp accepted_mime?(_type, _subtype, ["*\/*"]),$/;"	f
accepted_mime?	deps/plug/lib/plug/parsers.ex	/^  defp accepted_mime?(type, subtype, pass),$/;"	f
accepts	deps/phoenix/lib/phoenix/controller.ex	/^  def accepts(conn, [_|_] = accepted) do$/;"	f
accepts_html?	deps/plug/lib/plug/debugger.ex	/^  defp accepts_html?(_accept_header = []), do: false$/;"	f
accepts_html?	deps/plug/lib/plug/debugger.ex	/^  defp accepts_html?(_accept_header = [header | _]),$/;"	f
accumulate_alias_into_group	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp accumulate_alias_into_group(ast, modules, _, aliases) do$/;"	f
accumulate_alias_into_group	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp accumulate_alias_into_group(ast, modules, line, [{line_no, _, _} | _] = aliases)$/;"	f
accumulate_joins	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp accumulate_joins(local, remote_map) do$/;"	f
action	deps/phoenix/lib/phoenix/controller.ex	/^      def action(conn, _) do$/;"	f
action	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^      def action(%Plug.Conn{private: %{phoenix_action: action}} = conn, _options) do$/;"	f
action	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^      def action(var!(conn_before), opts) do$/;"	f
action_fallback	deps/phoenix/lib/phoenix/controller.ex	/^  defmacro action_fallback(plug) do$/;"	a
action_from_changeset	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp action_from_changeset(%{data: %{__meta__: %{state: state}}}) do$/;"	f
action_from_changeset	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp action_from_changeset(_) do$/;"	f
action_name	deps/phoenix/lib/phoenix/controller.ex	/^  def action_name(conn), do: conn.private.phoenix_action$/;"	f
action_to_auto	deps/ecto/lib/ecto/embedded.ex	/^  defp action_to_auto(:insert), do: :autogenerate$/;"	f
action_to_auto	deps/ecto/lib/ecto/embedded.ex	/^  defp action_to_auto(:update), do: :autoupdate$/;"	f
action_to_auto	deps/ecto/lib/ecto/repo/schema.ex	/^  defp action_to_auto(:insert), do: :autogenerate$/;"	f
action_to_auto	deps/ecto/lib/ecto/repo/schema.ex	/^  defp action_to_auto(:update), do: :autoupdate$/;"	f
actions	deps/phoenix/lib/phoenix/exceptions.ex	/^  def actions(_), do: []$/;"	f
actions	deps/plug/lib/plug/exceptions.ex	/^        def actions(_), do: [%{label: "Print HI", handler: {IO, :puts, ["Hi!"]}}]$/;"	f
actions	deps/plug/lib/plug/exceptions.ex	/^  def actions(_exception), do: []$/;"	f
actions	deps/plug/lib/plug/exceptions.ex	/^  def actions(exception)$/;"	f
actions_redirect_path	deps/plug/lib/plug/debugger.ex	/^  def actions_redirect_path(%Plug.Conn{method: "GET", request_path: request_path}),$/;"	f
actions_redirect_path	deps/plug/lib/plug/debugger.ex	/^  def actions_redirect_path(conn) do$/;"	f
activate	deps/postgrex/lib/postgrex/protocol.ex	/^  defp activate(%{sock: {mod, sock}} = s, buffer) do$/;"	f
activate	deps/postgrex/lib/postgrex/protocol.ex	/^  defp activate(s, <<>>) do$/;"	f
activity	deps/credo/lib/credo/execution/process_definition.ex	/^  defmacro activity(name, do: block) do$/;"	a
activity	deps/credo/lib/credo/execution/process_definition.ex	/^  defmacro activity(name, do_block)$/;"	a
actual_def	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp actual_def(name, arity, :macro) do$/;"	f
actual_def	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp actual_def(name, arity, :macrocallback) do$/;"	f
actual_def	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp actual_def(name, arity, _), do: {name, arity}$/;"	f
actual_for	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  def actual_for(:after = _expected), do: :before$/;"	f
actual_for	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  def actual_for(:before = _expected), do: :after$/;"	f
adapter_autogenerate	deps/ecto/lib/ecto/type.ex	/^  def adapter_autogenerate(adapter, type) do$/;"	f
adapter_config	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp adapter_config(config) do$/;"	f
adapter_dump	deps/ecto/lib/ecto/type.ex	/^  def adapter_dump(_adapter, type, nil),$/;"	f
adapter_dump	deps/ecto/lib/ecto/type.ex	/^  def adapter_dump(adapter, type, value),$/;"	f
adapter_dump	deps/ecto/lib/ecto/type.ex	/^  def adapter_dump(adapter, {:maybe, type}, value) do$/;"	f
adapter_inform	deps/plug/lib/plug/conn.ex	/^  defp adapter_inform(%Conn{adapter: {adapter, payload}}, status, headers),$/;"	f
adapter_inform	deps/plug/lib/plug/conn.ex	/^  defp adapter_inform(%Conn{state: state}, _status, _headers)$/;"	f
adapter_inform	deps/plug/lib/plug/conn.ex	/^  defp adapter_inform(_conn, status, _headers)$/;"	f
adapter_load	deps/ecto/lib/ecto/type.ex	/^  def adapter_load(_adapter, _type, nil) do$/;"	f
adapter_load	deps/ecto/lib/ecto/type.ex	/^  def adapter_load(_adapter, {:embed, embed}, nil) do$/;"	f
adapter_load	deps/ecto/lib/ecto/type.ex	/^  def adapter_load(adapter, type, value) do$/;"	f
adapter_load	deps/ecto/lib/ecto/type.ex	/^  def adapter_load(adapter, {:maybe, type}, value) do$/;"	f
adapter_push	deps/plug/lib/plug/conn.ex	/^  defp adapter_push(%Conn{adapter: {adapter, payload}}, path, headers) do$/;"	f
adapter_push	deps/plug/lib/plug/conn.ex	/^  defp adapter_push(%Conn{state: state}, _path, _headers)$/;"	f
add	deps/credo/lib/credo/check/readability/specs.ex	/^      def add(a, b), do: a + b$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{coef: :inf, sign: sign} = num1, %Decimal{coef: :inf, sign: sign} = num2) do$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{coef: :inf} = num1, %Decimal{}), do: num1$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{coef: :inf}, %Decimal{coef: :inf}),$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{coef: :qNaN} = num1, %Decimal{}), do: num1$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{coef: :sNaN} = num1, %Decimal{}),$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{}, %Decimal{coef: :inf} = num2), do: num2$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{}, %Decimal{coef: :qNaN} = num2), do: num2$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(%Decimal{}, %Decimal{coef: :sNaN} = num2),$/;"	f
add	deps/decimal/lib/decimal.ex	/^  def add(num1, num2), do: add(decimal(num1), decimal(num2))$/;"	f
add	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp add({parsed_text, url_text, nil}, text), do: {[text | parsed_text], [text | url_text], nil}$/;"	f
add	deps/ecto_sql/lib/ecto/migration.ex	/^  def add(column, type, opts \\\\ []) when is_atom(column) and is_list(opts) do$/;"	f
add	deps/mox/lib/mox.ex	/^        def add(a, b), do: a + b$/;"	f
add	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp add(%State{} = state, pid, topic, key, meta) do$/;"	f
add column	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "add column", %{migration_number: num} do$/;"	t
add column if not exists	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "add column if not exists", %{migration_number: num} do$/;"	t
add if not exists and remove if exists does not raise on failure	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "add if not exists and remove if exists does not raise on failure", %{migration_number: num} do$/;"	t
add_align	deps/decimal/lib/decimal.ex	/^  defp add_align(coef1, exp1, coef2, exp2) when exp1 < exp2,$/;"	f
add_align	deps/decimal/lib/decimal.ex	/^  defp add_align(coef1, exp1, coef2, exp2) when exp1 == exp2, do: {coef1, coef2}$/;"	f
add_align	deps/decimal/lib/decimal.ex	/^  defp add_align(coef1, exp1, coef2, exp2) when exp1 > exp2,$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def add_attrs(_context, _text, attrs, default, _lnb) do$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def add_attrs(context, text, attrs, default, lnb) when is_binary(attrs) do$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def add_attrs(context, text, attrs_as_string_or_map, default_attrs, lnb)$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def add_attrs(context, text, nil, [], _lnb), do: {context, text}$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def add_attrs(context, text, nil, default, lnb), do: add_attrs(context, text, %{}, default, lnb)$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  def add_attrs(context, text, attrs, default, _lnb) do$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  def add_attrs(context, text, attrs, default, lnb) when is_binary(attrs) do$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  def add_attrs(context, text, attrs_as_string_or_map, default_attrs, lnb )$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  def add_attrs(context, text, nil, [], _lnb), do: {context, text}$/;"	f
add_attrs	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  def add_attrs(context, text, nil, default, lnb), do: add_attrs(context, text, %{}, default, lnb)$/;"	f
add_changeset	deps/ecto/lib/ecto/multi.ex	/^  defp add_changeset(multi, action, name, changeset, opts) when is_list(opts) do$/;"	f
add_check_and_category	deps/credo/lib/credo/check.ex	/^  defp add_check_and_category(issue, check, issue_category) do$/;"	f
add_column_if_missing	deps/credo/lib/credo/check.ex	/^  defp add_column_if_missing(issue, trigger, line_no, column, source_file) do$/;"	f
add_config_dirs	deps/credo/lib/credo/config_file.ex	/^  defp add_config_dirs(paths) do$/;"	f
add_config_file_to_exec	deps/credo/lib/credo/config_builder.ex	/^  defp add_config_file_to_exec(exec, %ConfigFile{} = config_file) do$/;"	f
add_config_files	deps/credo/lib/credo/config_file.ex	/^  defp add_config_files(paths) do$/;"	f
add_constraint	deps/ecto/lib/ecto/changeset.ex	/^  defp add_constraint(%Changeset{constraints: constraints} = changeset,$/;"	f
add_constraint	deps/ecto/lib/ecto/changeset.ex	/^  defp add_constraint(changeset, type, constraint, match, field, message) do$/;"	f
add_digested_content	deps/phoenix/lib/phoenix/digester.ex	/^  defp add_digested_content({files, manifest}) do$/;"	f
add_directory_to_file	deps/credo/lib/credo/config_file.ex	/^  defp add_directory_to_file(file_or_glob, dir) when is_binary(file_or_glob) do$/;"	f
add_directory_to_file	deps/credo/lib/credo/config_file.ex	/^  defp add_directory_to_file(regex, _), do: regex$/;"	f
add_error	deps/ecto/lib/ecto/changeset.ex	/^  def add_error(%Changeset{errors: errors} = changeset, key, message, keys \\\\ []) when is_binary(message) do$/;"	f
add_errors	deps/earmark/lib/earmark/helpers/attr_parser.ex	/^  defp add_errors(context, [], _lnb), do: context$/;"	f
add_errors	deps/earmark/lib/earmark/helpers/attr_parser.ex	/^  defp add_errors(context, errors, lnb), do: add_message(context, {:warning, lnb, "Illegal attributes #{inspect errors} ignored in IAL"})$/;"	f
add_expectation	deps/mox/lib/mox/server.ex	/^  def add_expectation(owner_pid, key, value) do$/;"	f
add_expectation!	deps/mox/lib/mox.ex	/^  defp add_expectation!(mock, name, code, value) do$/;"	f
add_filename	deps/earmark/lib/earmark/cli.ex	/^  defp add_filename(options, filename),$/;"	f
add_given_directory_to_files	deps/credo/lib/credo/config_file.ex	/^  defp add_given_directory_to_files({:error, _} = error, _dir) do$/;"	f
add_given_directory_to_files	deps/credo/lib/credo/config_file.ex	/^  defp add_given_directory_to_files({:ok, %__MODULE__{files: files} = config}, dir) do$/;"	f
add_if_not_exists	deps/ecto_sql/lib/ecto/migration.ex	/^  def add_if_not_exists(column, type, opts \\\\ []) when is_atom(column) and is_list(opts) do$/;"	f
add_issue	deps/credo/lib/credo/check/readability/alias_as.ex	/^  defp add_issue(issues, issue), do: [issue | issues]$/;"	f
add_issue	deps/credo/lib/credo/check/readability/alias_as.ex	/^  defp add_issue(issues, nil), do: issues$/;"	f
add_issue	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp add_issue(issues, name, arity, issue), do: Map.put_new(issues, {name, arity}, issue)$/;"	f
add_issue_to_state	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp add_issue_to_state(state, nil), do: state$/;"	f
add_issue_to_state	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp add_issue_to_state({module_contains_import?, issues}, issue) do$/;"	f
add_line	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp add_line(line, offset, var) do$/;"	f
add_line_no_options	deps/credo/lib/credo/check.ex	/^  defp add_line_no_options(issue, line_no, source_file) do$/;"	f
add_mass_to_subnode	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp add_mass_to_subnode({hash, node_items}) do$/;"	f
add_masses	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def add_masses(found_hashes) do$/;"	f
add_message	deps/earmark/lib/earmark/message.ex	/^  def add_message(container, message)$/;"	f
add_message	deps/earmark/lib/earmark/message.ex	/^  def add_message(context = %Context{}, message) do$/;"	f
add_message	deps/earmark/lib/earmark/message.ex	/^  def add_message(options = %Options{}, message) do$/;"	f
add_messages	deps/earmark/lib/earmark/message.ex	/^  def add_messages(container, messages), do:$/;"	f
add_messages_from	deps/earmark/lib/earmark/message.ex	/^  def add_messages_from(context, message_container) do$/;"	f
add_offset	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp add_offset(var, extra) do$/;"	f
add_offset	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp add_offset({:+, _, [var, current]}, extra)$/;"	f
add_operation	deps/ecto/lib/ecto/multi.ex	/^  defp add_operation(%Multi{} = multi, name, operation) do$/;"	f
add_pk_filter!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp add_pk_filter!(filters, struct) do$/;"	f
add_read_after_writes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp add_read_after_writes([], schema),$/;"	f
add_read_after_writes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp add_read_after_writes(return, schema),$/;"	f
add_resources	deps/phoenix/lib/phoenix/router.ex	/^  defp add_resources(path, controller, options, do: context) do$/;"	f
add_route	deps/phoenix/lib/phoenix/router.ex	/^  defp add_route(kind, verb, path, plug, plug_opts, options) do$/;"	f
add_seconds	deps/plug/lib/plug/conn/cookies.ex	/^  defp add_seconds(time, seconds_to_add) do$/;"	f
add_sign	deps/decimal/lib/decimal.ex	/^  defp add_sign(sign1, sign2, coef) do$/;"	f
add_strict_to_exec	deps/credo/lib/credo/config_builder.ex	/^  defp add_strict_to_exec(exec, %ConfigFile{} = config_file, options) do$/;"	f
add_switch_all	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_all(exec, %{all: true}) do$/;"	f
add_switch_all	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_all(exec, _), do: exec$/;"	f
add_switch_color	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_color(exec, %{color: color}) do$/;"	f
add_switch_color	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_color(exec, _), do: exec$/;"	f
add_switch_crash_on_error	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_crash_on_error(exec, %{crash_on_error: true}) do$/;"	f
add_switch_crash_on_error	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_crash_on_error(exec, _), do: exec$/;"	f
add_switch_debug	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_debug(exec, %{debug: debug}) do$/;"	f
add_switch_debug	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_debug(exec, _), do: exec$/;"	f
add_switch_format	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_format(exec, %{format: format}) do$/;"	f
add_switch_format	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_format(exec, _), do: exec$/;"	f
add_switch_help	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_help(exec, %{help: true}) do$/;"	f
add_switch_help	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_help(exec, _), do: exec$/;"	f
add_switch_ignore	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_ignore(exec, %{ignore: ignore}) do$/;"	f
add_switch_ignore	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_ignore(exec, %{ignore_checks: ignore_pattern}) do$/;"	f
add_switch_ignore	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_ignore(exec, _), do: exec$/;"	f
add_switch_min_priority	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_min_priority(exec, %{min_priority: min_priority}) do$/;"	f
add_switch_min_priority	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_min_priority(exec, _), do: exec$/;"	f
add_switch_mute_exit_status	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_mute_exit_status(exec, %{mute_exit_status: true}) do$/;"	f
add_switch_mute_exit_status	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_mute_exit_status(exec, _), do: exec$/;"	f
add_switch_only	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_only(exec, %{checks: check_pattern}) do$/;"	f
add_switch_only	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_only(exec, %{only: only}) do$/;"	f
add_switch_only	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_only(exec, _), do: exec$/;"	f
add_switch_read_from_stdin	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_read_from_stdin(exec, %{read_from_stdin: true}) do$/;"	f
add_switch_read_from_stdin	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_read_from_stdin(exec, _), do: exec$/;"	f
add_switch_strict	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_strict(exec, %{all_priorities: true}) do$/;"	f
add_switch_strict	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_strict(exec, %{strict: false}) do$/;"	f
add_switch_strict	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_strict(exec, %{strict: true}) do$/;"	f
add_switch_strict	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_strict(exec, _), do: Execution.set_strict(exec)$/;"	f
add_switch_verbose	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_verbose(exec, %{verbose: true}) do$/;"	f
add_switch_verbose	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_verbose(exec, _), do: exec$/;"	f
add_switch_version	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_version(exec, %{version: true}) do$/;"	f
add_switch_version	deps/credo/lib/credo/config_builder.ex	/^  defp add_switch_version(exec, _), do: exec$/;"	f
add_switches_to_exec	deps/credo/lib/credo/config_builder.ex	/^  defp add_switches_to_exec(%Execution{} = exec, switches) do$/;"	f
add_take	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp add_take(take, key, value) do$/;"	f
add_title	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp add_title({parsed_text, url_text, _}, {parsed, inner}),$/;"	f
add_to	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  defp add_to(attrs, text) do$/;"	f
add_to_col_start_and_end	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp add_to_col_start_and_end(positions, padding) do$/;"	f
add_underscores_to_number_string	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp add_underscores_to_number_string(string) do$/;"	f
add_ws_prefix	deps/earmark/src/link_text_parser.erl	/^add_ws_prefix({Value, _}, {Link, LT, LP}) -> {Link, LT, string:concat(Value, LP)}. $/;"	f	module:link_text_parser
adjust_line	deps/earmark/src/link_text_lexer.erl	/^adjust_line(N, N, _Cs, L) -> L;$/;"	f	module:link_text_lexer
adjust_line	deps/earmark/src/link_text_lexer.erl	/^adjust_line(T, A, [$\\n|Cs], L) ->$/;"	f	module:link_text_lexer
adjust_line	deps/earmark/src/link_text_lexer.erl	/^adjust_line(T, A, [_|Cs], L) ->$/;"	f	module:link_text_lexer
adjust_line	deps/earmark/src/string_lexer.erl	/^adjust_line(N, N, _Cs, L) -> L;$/;"	f	module:string_lexer
adjust_line	deps/earmark/src/string_lexer.erl	/^adjust_line(T, A, [$\\n|Cs], L) ->$/;"	f	module:string_lexer
adjust_line	deps/earmark/src/string_lexer.erl	/^adjust_line(T, A, [_|Cs], L) ->$/;"	f	module:string_lexer
adjust_line	deps/erlex/src/lexer.erl	/^adjust_line(N, N, _Cs, L) -> L;$/;"	f	module:lexer
adjust_line	deps/erlex/src/lexer.erl	/^adjust_line(T, A, [$\\n|Cs], L) ->$/;"	f	module:lexer
adjust_line	deps/erlex/src/lexer.erl	/^adjust_line(T, A, [_|Cs], L) ->$/;"	f	module:lexer
adjust_microsecond	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^  defp adjust_microsecond(microsec, tz) do$/;"	f
aes128_gcm_decrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes128_gcm_decrypt(cipher_text, secret, sign_secret) when bit_size(secret) > 256 do$/;"	f
aes128_gcm_decrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes128_gcm_decrypt(cipher_text, secret, sign_secret)$/;"	f
aes128_gcm_encrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes128_gcm_encrypt(plain_text, secret, sign_secret) when bit_size(secret) > 256 do$/;"	f
aes128_gcm_encrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes128_gcm_encrypt(plain_text, secret, sign_secret)$/;"	f
aes_gcm_key_unwrap	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes_gcm_key_unwrap(wrapped_cek, secret, sign_secret) when bit_size(secret) > 256 do$/;"	f
aes_gcm_key_unwrap	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes_gcm_key_unwrap(wrapped_cek, secret, sign_secret)$/;"	f
aes_gcm_key_wrap	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes_gcm_key_wrap(cek, secret, sign_secret) when bit_size(secret) > 256 do$/;"	f
aes_gcm_key_wrap	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp aes_gcm_key_wrap(cek, secret, sign_secret)$/;"	f
after_begin	deps/ecto_sql/lib/ecto/migration.ex	/^            def after_begin() do$/;"	f
after_block?	deps/credo/lib/credo/code/block.ex	/^  def after_block?(ast) do$/;"	f
after_block_for	deps/credo/lib/credo/code/block.ex	/^  def after_block_for(_) do$/;"	f
after_block_for	deps/credo/lib/credo/code/block.ex	/^  def after_block_for(arguments) when is_list(arguments) do$/;"	f
after_block_for	deps/credo/lib/credo/code/block.ex	/^  def after_block_for(do: _do_block, after: after_block) do$/;"	f
after_block_for	deps/credo/lib/credo/code/block.ex	/^  def after_block_for({_atom, _meta, arguments}) when is_list(arguments) do$/;"	f
after_block_for!	deps/credo/lib/credo/code/block.ex	/^  def after_block_for!(ast) do$/;"	f
after_compile_validation	deps/ecto/lib/ecto/association.ex	/^  def after_compile_validation(%{queryable: queryable, join_through: join_through}, env) do$/;"	f
after_compile_validation	deps/ecto/lib/ecto/association.ex	/^  def after_compile_validation(%{queryable: queryable, related_key: related_key}, env) do$/;"	f
after_compile_validation	deps/ecto/lib/ecto/association.ex	/^  def after_compile_validation(_, _) do$/;"	f
after_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp after_expr(_), do: []$/;"	f
after_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp after_expr(column) when is_atom(column) or is_binary(column), do: " AFTER `#{column}`"$/;"	f
after_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp after_expr(nil), do: []$/;"	f
aggregate	deps/ecto/integration_test/cases/repo.exs	/^  test "aggregate" do$/;"	t
aggregate	deps/ecto/lib/ecto/repo.ex	/^        def aggregate(queryable, aggregate, field)$/;"	f
aggregate	deps/ecto/lib/ecto/repo.ex	/^        def aggregate(queryable, aggregate, field, opts)$/;"	f
aggregate	deps/ecto/lib/ecto/repo.ex	/^        def aggregate(queryable, aggregate, opts \\\\ [])$/;"	f
aggregate	deps/ecto/lib/ecto/repo.ex	/^        def aggregate(queryable, aggregate, opts)$/;"	f
aggregate	deps/ecto/lib/ecto/repo/queryable.ex	/^  def aggregate(name, queryable, aggregate, field, opts) do$/;"	f
aggregate	deps/ecto/lib/ecto/repo/queryable.ex	/^  def aggregate(name, queryable, aggregate, opts) do$/;"	f
aggregate avg	deps/ecto/integration_test/cases/repo.exs	/^  test "aggregate avg" do$/;"	t
aggregate custom types	deps/ecto/integration_test/cases/type.exs	/^  test "aggregate custom types" do$/;"	t
aggregate filter types	deps/ecto/integration_test/cases/type.exs	/^  test "aggregate filter types" do$/;"	t
aggregate types	deps/ecto/integration_test/cases/type.exs	/^  test "aggregate types" do$/;"	t
aggregate with distinct	deps/ecto/integration_test/cases/repo.exs	/^  test "aggregate with distinct" do$/;"	t
ago	deps/ecto/integration_test/cases/interval.exs	/^  test "ago" do$/;"	t
ago	deps/ecto/lib/ecto/query/api.ex	/^  def ago(count, interval), do: doc! [count, interval]$/;"	f
ajax?	deps/phoenix/lib/phoenix/controller.ex	/^  defp ajax?(conn) do$/;"	f
algol_nu_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def algol_nu_style, do: HTML.Algol_NuStyle.style()$/;"	f
algol_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def algol_style, do: HTML.AlgolStyle.style()$/;"	f
aliases	deps/credo/lib/credo/code/module.ex	/^  def aliases({:defmodule, _, _arguments} = ast) do$/;"	f
aliases	deps/ex_doc/mix.exs	/^  defp aliases do$/;"	f
aliases	deps/makeup/mix.exs	/^  defp aliases do$/;"	f
aliases	deps/makeup_elixir/mix.exs	/^  defp aliases do$/;"	f
aliases	deps/phoenix/mix.exs	/^  defp aliases do$/;"	f
aliases	mix.exs	/^  defp aliases do$/;"	f
all	deps/credo/lib/credo/execution/execution_timing.ex	/^  def all(%Execution{timing_pid: pid}) do$/;"	f
all	deps/ecto/lib/ecto/repo.ex	/^        def all(queryable, opts \\\\ []) do$/;"	f
all	deps/ecto/lib/ecto/repo/queryable.ex	/^  def all(name, queryable, opts) when is_list(opts) do$/;"	f
all	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def all(query, as_prefix \\\\ []) do$/;"	f
all	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def all(query, as_prefix \\\\ []) do$/;"	f
all	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def all(query, as_prefix \\\\ []) do$/;"	f
all empty	deps/ecto/integration_test/cases/repo.exs	/^  test "all empty" do$/;"	t
all shares metadata	deps/ecto/integration_test/cases/repo.exs	/^  test "all shares metadata" do$/;"	t
all using named from	deps/ecto/integration_test/cases/repo.exs	/^  test "all using named from" do$/;"	t
all with in	deps/ecto/integration_test/cases/repo.exs	/^  test "all with in" do$/;"	t
all with invalid prefix	deps/ecto/integration_test/cases/repo.exs	/^  test "all with invalid prefix" do$/;"	t
all without schema	deps/ecto/integration_test/cases/repo.exs	/^  test "all without schema" do$/;"	t
all_blocks_for!	deps/credo/lib/credo/code/block.ex	/^  def all_blocks_for!(ast) do$/;"	f
all_bound_combinators?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp all_bound_combinators?(combinators) do$/;"	f
all_converters	deps/earmark/lib/earmark/ast/inline.ex	/^  defp all_converters do$/;"	f
all_no_context_combinators?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp all_no_context_combinators?([{:lookahead, look_combinators, _kind} | combinators]) do$/;"	f
all_no_context_combinators?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp all_no_context_combinators?(combinators) do$/;"	f
all_no_context_combinators_next?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp all_no_context_combinators_next?([{:choice, choice_combinators, _kind} | combinators]) do$/;"	f
all_no_context_combinators_next?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp all_no_context_combinators_next?(combinators) do$/;"	f
all_tasks	deps/credo/lib/credo/execution/process_definition.ex	/^      defp all_tasks do$/;"	f
all_waiting	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp all_waiting(acc, endpoint) do$/;"	f
allow	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def allow(manager, parent, allow, opts) do$/;"	f
allow	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def allow(repo, parent, allow, _opts \\\\ []) when is_atom(repo) do$/;"	f
allow	deps/mox/lib/mox.ex	/^  def allow(mock, owner_pid, allowed_via) when is_atom(mock) and is_pid(owner_pid) do$/;"	f
allow	deps/mox/lib/mox/server.ex	/^  def allow(mock, owner_pid, pid) do$/;"	f
allow_jsonp	deps/phoenix/lib/phoenix/controller.ex	/^  def allow_jsonp(conn, opts \\\\ []) do$/;"	f
allowed?	deps/plug/lib/plug/static.ex	/^  defp allowed?(_only_rules, []), do: false$/;"	f
allowed?	deps/plug/lib/plug/static.ex	/^  defp allowed?({[], []}, _list), do: true$/;"	f
allowed?	deps/plug/lib/plug/static.ex	/^  defp allowed?({full, prefix}, [h | _]) do$/;"	f
allowed_actions	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp allowed_actions(pk_values) do$/;"	f
allowed_host?	deps/plug/lib/plug/csrf_protection.ex	/^  defp allowed_host?("." <> _ = allowed, host), do: String.ends_with?(host, allowed)$/;"	f
allowed_host?	deps/plug/lib/plug/csrf_protection.ex	/^  defp allowed_host?(allowed, host), do: allowed == host$/;"	f
alpha_chars	deps/puid/lib/puid.ex	/^        defp alpha_chars(0, _, _, _, string), do: string$/;"	f
alpha_chars	deps/puid/lib/puid.ex	/^        defp alpha_chars(n, bits, uniform_offset, uniform_bytes, string) do$/;"	f
alphanum_chars	deps/puid/lib/puid.ex	/^        defp alphanum_chars(0, _, _, _, string), do: string$/;"	f
alphanum_chars	deps/puid/lib/puid.ex	/^        defp alphanum_chars(n, bits, uniform_offset, uniform_bytes, string) do$/;"	f
already_checked_out	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp already_checked_out(checkouts, pid) do$/;"	f
alter	deps/ecto_sql/lib/ecto/migration.ex	/^  defmacro alter(object, do: block) do$/;"	a
alter primary key	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "alter primary key", %{migration_number: num} do$/;"	t
anno_line	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp anno_line(anno), do: anno |> :erl_anno.line() |> abs()$/;"	f
anno_line	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp anno_line(line) when is_integer(line), do: abs(line)$/;"	f
annotations_from_metadata	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp annotations_from_metadata(metadata) do$/;"	f
ansi_option	deps/ecto_sql/mix.exs	/^  defp ansi_option do$/;"	f
any_nonzero	deps/decimal/lib/decimal.ex	/^  defp any_nonzero(digits), do: :lists.any(fn digit -> digit != ?0 end, digits)$/;"	f
any_spaced_items?	deps/earmark/lib/earmark/parser.ex	/^  defp any_spaced_items?([%{spaced: true}|_]), do: true$/;"	f
any_spaced_items?	deps/earmark/lib/earmark/parser.ex	/^  defp any_spaced_items?([]), do: false$/;"	f
any_spaced_items?	deps/earmark/lib/earmark/parser.ex	/^  defp any_spaced_items?([_|tail]), do: any_spaced_items?(tail)$/;"	f
app	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp app(source_beam) do$/;"	f
app_base	deps/phoenix/lib/mix/phoenix.ex	/^  defp app_base(app) do$/;"	f
app_info	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp app_info(app) do$/;"	f
app_instrumenters	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp app_instrumenters(otp_app, endpoint) do$/;"	f
app_list	deps/ex_machina/mix.exs	/^  def app_list(), do: [:logger]$/;"	f
app_list	deps/ex_machina/mix.exs	/^  def app_list(:test), do: app_list() ++ [:ecto, :postgrex]$/;"	f
app_list	deps/ex_machina/mix.exs	/^  def app_list(_), do: app_list()$/;"	f
app_mod	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp app_mod(base, name), do: Module.concat([base, name])$/;"	f
append	deps/credo/lib/credo/execution/execution_issues.ex	/^  def append(%Execution{issues_pid: pid}, %SourceFile{filename: filename}, issue) do$/;"	f
append	deps/credo/lib/credo/execution/execution_timing.ex	/^  def append(%Execution{timing_pid: pid}, tags, started_at, duration) do$/;"	f
append	deps/ecto/lib/ecto/multi.ex	/^  def append(lhs, rhs) do$/;"	f
append_clock	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def append_clock(clockset, {_, clock}) when map_size(clock) == 0, do: clockset$/;"	f
append_clock	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def append_clock(clockset, {node, clock}) do$/;"	f
append_config_file	deps/credo/lib/credo/execution.ex	/^  def append_config_file(exec, {_, _, _} = config_file) do$/;"	f
append_footnote_link	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp append_footnote_link(note = %Block.FnDef{}) do$/;"	f
append_footnote_link	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp append_footnote_link(note)$/;"	f
append_issue_via_issue_service	deps/credo/lib/credo/check/consistency/collector.ex	/^  def append_issue_via_issue_service(%Issue{filename: filename} = issue, exec) do$/;"	f
append_issues_and_timings	deps/credo/lib/credo/check/runner.ex	/^  defp append_issues_and_timings(exec, source_file, {issues, nil}) do$/;"	f
append_issues_and_timings	deps/credo/lib/credo/check/runner.ex	/^  defp append_issues_and_timings(exec, source_file, {issues, {check, filename, started_at, time}}) do$/;"	f
append_issues_and_timings	deps/credo/lib/credo/check/runner.ex	/^  defp append_issues_and_timings(exec, source_file, {issues, {check, started_at, time}}) do$/;"	f
append_issues_via_issue_service	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp append_issues_via_issue_service(found_hashes, source_files, nodes_threshold, params, exec)$/;"	f
append_match_path	deps/plug/lib/plug/router.ex	/^  defp append_match_path(%Plug.Conn{private: %{plug_route: {base_path, _}}}, path) do$/;"	f
append_match_path	deps/plug/lib/plug/router.ex	/^  defp append_match_path(%Plug.Conn{}, path) do$/;"	f
append_slash	deps/ex_doc/lib/ex_doc.ex	/^  defp append_slash(url) do$/;"	f
append_task	deps/credo/lib/credo/execution.ex	/^  def append_task(exec, _plugin_mod, group_name, task_tuple) do$/;"	f
append_task	deps/credo/lib/credo/execution.ex	/^  def append_task(exec, plugin_mod, group_name, task_mod) when is_atom(task_mod) do$/;"	f
append_task	deps/credo/lib/credo/plugin.ex	/^  def append_task(%Execution{initializing_plugin: plugin_mod} = exec, group_name, task_mod) do$/;"	f
append_unless_false	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp append_unless_false(top, opts, key, fun) do$/;"	f
append_versions	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp append_versions(_table, [], contents) do$/;"	f
append_versions	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp append_versions(table, versions, contents) do$/;"	f
append_versions	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp append_versions(_table, [], path) do$/;"	f
append_versions	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp append_versions(table, versions, path) do$/;"	f
application	deps/bunt/mix.exs	/^  def application do$/;"	f
application	deps/connection/mix.exs	/^  def application do$/;"	f
application	deps/credo/mix.exs	/^  def application do$/;"	f
application	deps/db_connection/mix.exs	/^  def application do$/;"	f
application	deps/decimal/mix.exs	/^  def application() do$/;"	f
application	deps/dialyxir/mix.exs	/^  def application do$/;"	f
application	deps/earmark/mix.exs	/^  def application do$/;"	f
application	deps/ecto/mix.exs	/^  def application do$/;"	f
application	deps/ecto_sql/mix.exs	/^  def application do$/;"	f
application	deps/erlex/mix.exs	/^  def application do$/;"	f
application	deps/ex_doc/mix.exs	/^  def application do$/;"	f
application	deps/ex_json_schema/mix.exs	/^  def application do$/;"	f
application	deps/ex_machina/mix.exs	/^  def application() do$/;"	f
application	deps/jason/mix.exs	/^  def application() do$/;"	f
application	deps/makeup/mix.exs	/^  def application do$/;"	f
application	deps/makeup_elixir/mix.exs	/^  def application do$/;"	f
application	deps/mime/mix.exs	/^  def application do$/;"	f
application	deps/mox/mix.exs	/^  def application do$/;"	f
application	deps/nimble_parsec/mix.exs	/^  def application do$/;"	f
application	deps/phoenix/mix.exs	/^  def application do$/;"	f
application	deps/phoenix_pubsub/mix.exs	/^  def application do$/;"	f
application	deps/plug/mix.exs	/^  def application do$/;"	f
application	deps/plug_crypto/mix.exs	/^  def application do$/;"	f
application	deps/postgrex/lib/postgrex.ex	/^        def application do$/;"	f
application	deps/postgrex/mix.exs	/^  def application do$/;"	f
application	deps/secure_random/mix.exs	/^  def application do$/;"	f
application	mix.exs	/^  def application do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/combination.ex	/^  def apply(%Ecto.Query{combinations: combinations} = query, value) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/combination.ex	/^  def apply(query, value) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def apply(%Ecto.Query{with_ctes: with_expr} = query, name, with_query) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def apply(query, name, with_query) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def apply(%Ecto.Query{distinct: nil} = query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def apply(%Ecto.Query{}, _expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def apply(query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def apply(%Ecto.Query{havings: havings} = query, :having, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def apply(%Ecto.Query{wheres: wheres} = query, :where, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def apply(query, _, %{expr: true}) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def apply(query, kind, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/from.ex	/^  def apply(query, binds, as, prefix, hints) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def apply(%Ecto.Query{group_bys: group_bys} = query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def apply(query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/join.ex	/^  def apply(%Ecto.Query{joins: joins, aliases: aliases} = query, expr, as, count_bind) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/join.ex	/^  def apply(%Ecto.Query{joins: joins} = query, expr, nil, _count_bind) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/join.ex	/^  def apply(query, expr, as, count_bind) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/limit_offset.ex	/^  def apply(%Ecto.Query{} = query, :limit, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/limit_offset.ex	/^  def apply(%Ecto.Query{} = query, :offset, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/limit_offset.ex	/^  def apply(query, kind, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/lock.ex	/^  def apply(%Ecto.Query{} = query, value) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/lock.ex	/^  def apply(query, value) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def apply(%Ecto.Query{order_bys: order_bys} = query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def apply(query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/preload.ex	/^  def apply(%Ecto.Query{preloads: p, assocs: a} = query, preloads, assocs) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/preload.ex	/^  def apply(query, preloads, assocs) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/select.ex	/^  def apply(%Ecto.Query{select: nil} = query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/select.ex	/^  def apply(%Ecto.Query{}, _expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/select.ex	/^  def apply(query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/update.ex	/^  def apply(%Ecto.Query{updates: updates} = query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/update.ex	/^  def apply(query, expr) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def apply(%Ecto.Query{windows: windows} = query, definitions) do$/;"	f
apply	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def apply(query, definitions) do$/;"	f
apply	deps/ecto/lib/ecto/repo/schema.ex	/^  defp apply(_user_changeset, _adapter, :noop, _args) do$/;"	f
apply	deps/ecto/lib/ecto/repo/schema.ex	/^  defp apply(user_changeset, adapter, action, args) do$/;"	f
apply_action	deps/ecto/lib/ecto/changeset.ex	/^  def apply_action(%Changeset{} = changeset, action) when is_atom(action) do$/;"	f
apply_action	deps/ecto/lib/ecto/changeset.ex	/^  def apply_action(%Changeset{}, action) do$/;"	f
apply_action!	deps/ecto/lib/ecto/changeset.ex	/^  def apply_action!(%Changeset{} = changeset, action) do$/;"	f
apply_bin_modifiers	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp apply_bin_modifiers(expr, modifiers) do$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset.ex	/^  def apply_changes(%Changeset{changes: changes, data: data, types: types}) do$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset.ex	/^  def apply_changes(%Changeset{changes: changes, data: data}) when changes == %{} do$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  def apply_changes(%{cardinality: :many}, changesets) do$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  def apply_changes(%{cardinality: :one}, changeset) do$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  def apply_changes(%{cardinality: :one}, nil) do$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp apply_changes(%Changeset{action: :delete}),  do: nil$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp apply_changes(%Changeset{action: :replace}), do: nil$/;"	f
apply_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp apply_changes(changeset), do: Changeset.apply_changes(changeset)$/;"	f
apply_defaults	deps/ecto/lib/ecto/association.ex	/^  def apply_defaults(struct, defaults, _owner) when is_list(defaults) do$/;"	f
apply_defaults	deps/ecto/lib/ecto/association.ex	/^  def apply_defaults(struct, {mod, fun, args}, owner) do$/;"	f
apply_embeds	deps/ecto/lib/ecto/embedded.ex	/^  defp apply_embeds(changes, struct) do$/;"	f
apply_merge_fun	deps/ecto/lib/ecto/multi.ex	/^  defp apply_merge_fun(fun, acc), do: apply(fun, [acc])$/;"	f
apply_merge_fun	deps/ecto/lib/ecto/multi.ex	/^  defp apply_merge_fun({mod, fun, args}, acc), do: apply(mod, fun, [acc | args])$/;"	f
apply_metadata	deps/ecto/lib/ecto/repo/schema.ex	/^  defp apply_metadata(%{__meta__: meta} = data, state, %{source: source, prefix: prefix}) do$/;"	f
apply_mfa	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp apply_mfa({mod, fun, args}, extra) do$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({:changeset, changeset, opts}, _acc, _apply_args, repo),$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({:delete_all, query, opts}, _acc, _apply_args, repo),$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({:error, value}, _acc, _apply_args, _repo),$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({:insert_all, source, entries, opts}, _acc, _apply_args, repo),$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({:run, run}, acc, _apply_args, repo),$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({:update_all, query, updates, opts}, _acc, _apply_args, repo),$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({_, {:merge, merge}}, repo, wrap, return, {acc, names}) do$/;"	f
apply_operation	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operation({name, operation}, repo, wrap, return, {acc, names}) do$/;"	f
apply_operations	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operations([], _names, _repo, _wrap, _return), do: {:ok, %{}}$/;"	f
apply_operations	deps/ecto/lib/ecto/multi.ex	/^  defp apply_operations(operations, names, repo, wrap, return) do$/;"	f
apply_query	deps/ecto/lib/ecto/query/builder.ex	/^  def apply_query(query, module, args, env) do$/;"	f
apply_run_fun	deps/ecto/lib/ecto/multi.ex	/^  defp apply_run_fun(fun, repo, acc), do: apply(fun, [repo, acc])$/;"	f
apply_run_fun	deps/ecto/lib/ecto/multi.ex	/^  defp apply_run_fun({mod, fun, args}, repo, acc), do: apply(mod, fun, [repo, acc | args])$/;"	f
apply_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp apply_traverse([], _rest, acc_context, _line, _offset) do$/;"	f
apply_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp apply_traverse([mfargs | tail], rest, {acc, context}, line, offset) when acc != :error do$/;"	f
apply_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp apply_traverse(mfargs, rest, acc, context, line, offset) do$/;"	f
apply_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp apply_traverse(tail, rest, acc_context, line, offset) do$/;"	f
arduino_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def arduino_style, do: HTML.ArduinoStyle.style()$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^    defp argument_type({unquote(sigil_atom), _, _}) do$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(nil), do: []$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v) when is_atom(v), do: [:atom]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v) when is_binary(v), do: [:binary]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v) when is_bitstring(v), do: [:bitstring]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v) when is_boolean(v), do: [:boolean]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v) when is_list(v) do$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v) when is_number(v), do: [:number]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type(v), do: [:credo_type_error, v]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type({:%{}, _, _}), do: [:map]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type({:fn, _, _}), do: [:fn]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type({:sigil_R, _, _}), do: [:sigil_R, :regex]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type({:sigil_r, _, _}), do: [:sigil_r, :regex]$/;"	f
argument_type	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp argument_type({:{}, _, _}), do: [:tuple]$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array([], _fun, acc) do$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array([], _type, _fun, acc) do$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array([h | t], fun, acc) do$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array([h | t], type, fun, acc) do$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array([nil | t], fun, acc) do$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array(_, _, _) do$/;"	f
array	deps/ecto/lib/ecto/type.ex	/^  defp array(_, _, _, _) do$/;"	f
array	deps/jason/lib/decoder.ex	/^  defp array(data, original, skip, stack, key_decode, string_decode, value) do$/;"	f
array	deps/jason/lib/decoder.ex	/^  defp array(rest, original, skip, stack, key_decode, string_decode) do$/;"	f
array type	deps/ecto/integration_test/cases/type.exs	/^  test "array type" do$/;"	t
array type with custom types	deps/ecto/integration_test/cases/type.exs	/^  test "array type with custom types" do$/;"	t
array type with nil in array	deps/ecto/integration_test/cases/type.exs	/^  test "array type with nil in array" do$/;"	t
arrow_in_typespec?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp arrow_in_typespec?(line, column) do$/;"	f
article_factory	deps/ex_machina/lib/ex_machina.ex	/^      def article_factory do$/;"	f
article_factory	deps/ex_machina/lib/ex_machina.ex	/^      def article_factory(attrs) do$/;"	f
article_factory	deps/ex_machina/lib/ex_machina/ecto.ex	/^      def article_factory do$/;"	f
as	deps/ecto/lib/ecto/query/api.ex	/^  def as(binding), do: doc! [binding]$/;"	f
as_ast	deps/earmark/lib/earmark.ex	/^  def as_ast(lines, options \\\\ %Options{})$/;"	f
as_ast	deps/earmark/lib/earmark.ex	/^  def as_ast(lines, options) do$/;"	f
as_ast	deps/earmark/lib/earmark.ex	/^  def as_ast(lines, options) when is_list(options) do$/;"	f
as_html	deps/earmark/lib/earmark.ex	/^  def as_html(lines, options \\\\ %Options{})$/;"	f
as_html	deps/earmark/lib/earmark.ex	/^  def as_html(lines, options) do$/;"	f
as_html	deps/earmark/lib/earmark.ex	/^  def as_html(lines, options) when is_list(options) do$/;"	f
as_html!	deps/earmark/lib/earmark.ex	/^  def as_html!(lines, options = %Options{}) do$/;"	f
as_html!	deps/earmark/lib/earmark.ex	/^  def as_html!(lines, options \\\\ %Options{})$/;"	f
as_html!	deps/earmark/lib/earmark.ex	/^  def as_html!(lines, options) when is_list(options) do$/;"	f
as_string	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp as_string(atom) when is_atom(atom), do: Atom.to_string(atom)$/;"	f
as_string	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp as_string(str), do: str$/;"	f
ascii_char	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def ascii_char(combinator \\\\ empty(), ranges)$/;"	f
ascii_string	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def ascii_string(combinator \\\\ empty(), range, count_or_opts)$/;"	f
assert_assoc!	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp assert_assoc!(_mode, atom, var) do$/;"	f
assert_assoc!	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp assert_assoc!(mode, _atom, _var) when mode in [:both, :assoc], do: :ok$/;"	f
assert_broadcast	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro assert_broadcast(event, payload, timeout \\\\ Application.fetch_env!(:ex_unit, :assert_receive_timeout)) do$/;"	a
assert_changeset_struct!	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp assert_changeset_struct!(%{data: %{__struct__: mod}} = changeset, %{related: mod}) do$/;"	f
assert_changeset_struct!	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp assert_changeset_struct!(%{data: data}, %{related: mod}) do$/;"	f
assert_error_sent	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def assert_error_sent(status_int_or_atom, func) do$/;"	f
assert_event_name	deps/telemetry/src/telemetry.erl	/^assert_event_name(Term) ->$/;"	f	module:telemetry
assert_event_name	deps/telemetry/src/telemetry.erl	/^assert_event_name([_ | _] = List) ->$/;"	f	module:telemetry
assert_event_names	deps/telemetry/src/telemetry.erl	/^assert_event_names(List) when is_list(List) ->$/;"	f	module:telemetry
assert_event_names	deps/telemetry/src/telemetry.erl	/^assert_event_names(Term) ->$/;"	f	module:telemetry
assert_event_prefix	deps/telemetry/src/telemetry.erl	/^assert_event_prefix(List) ->$/;"	f	module:telemetry
assert_event_prefix	deps/telemetry/src/telemetry.erl	/^assert_event_prefix(List) when is_list(List) ->$/;"	f	module:telemetry
assert_file	deps/ecto_sql/integration_test/support/file_helpers.exs	/^  def assert_file(file) do$/;"	f
assert_file	deps/ecto_sql/integration_test/support/file_helpers.exs	/^  def assert_file(file, callback) when is_function(callback, 1) do$/;"	f
assert_file	deps/ecto_sql/integration_test/support/file_helpers.exs	/^  def assert_file(file, match) do$/;"	f
assert_joined!	deps/phoenix/lib/phoenix/channel.ex	/^  defp assert_joined!(%Socket{joined: false}) do$/;"	f
assert_joined!	deps/phoenix/lib/phoenix/channel.ex	/^  defp assert_joined!(%Socket{joined: true} = socket) do$/;"	f
assert_named_binds_in_tail!	deps/ecto/lib/ecto/query/builder.ex	/^  defp assert_named_binds_in_tail!(named_vars, binding) do$/;"	f
assert_no_duplicate_binding!	deps/ecto/lib/ecto/query/builder.ex	/^  defp assert_no_duplicate_binding!(vars) do$/;"	f
assert_no_subquery_assocs!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_no_subquery_assocs!(%{assocs: assocs, preloads: preloads} = query)$/;"	f
assert_no_subquery_assocs!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_no_subquery_assocs!(query) do$/;"	f
assert_no_update!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_no_update!(query, operation) do$/;"	f
assert_only_filter_expressions!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_only_filter_expressions!(query, operation) do$/;"	f
assert_push	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro assert_push(event, payload, timeout \\\\ Application.fetch_env!(:ex_unit, :assert_receive_timeout)) do$/;"	a
assert_reply	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro assert_reply(ref, status, payload \\\\ Macro.escape(%{}), timeout \\\\ Application.fetch_env!(:ex_unit, :assert_receive_timeout)) do$/;"	a
assert_schema!	deps/ecto/lib/ecto/query.ex	/^  defp assert_schema!(%{from: %Ecto.Query.FromExpr{source: {_source, schema}}}) when schema != nil, do: schema$/;"	f
assert_schema!	deps/ecto/lib/ecto/query.ex	/^  defp assert_schema!(query) do$/;"	f
assert_schema!	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp assert_schema!(%{from: %{source: {_source, schema}}}) when schema != nil, do: schema$/;"	f
assert_schema!	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp assert_schema!(query) do$/;"	f
assert_struct!	deps/ecto/lib/ecto.ex	/^  defp assert_struct!(module, %{__struct__: struct}) do$/;"	f
assert_struct!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp assert_struct!(mod, %{__struct__: mod}), do: true$/;"	f
assert_struct!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp assert_struct!(mod, %{__struct__: struct}) do$/;"	f
assert_subquery_fields!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_subquery_fields!(query, expr, pairs) do$/;"	f
assert_supported_schema_version	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp assert_supported_schema_version(version) do$/;"	f
assert_type!	deps/ecto/lib/ecto/query/builder.ex	/^  defp assert_type!(expr, type, actual) do$/;"	f
assert_update!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_update!(%Ecto.Query{updates: updates} = query, operation) do$/;"	f
assert_valid_combinations!	deps/ecto/lib/ecto/query/planner.ex	/^  defp assert_valid_combinations!(query) do$/;"	f
assert_valid_schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp assert_valid_schema(schema) do$/;"	f
asset_rev	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def asset_rev(output, pattern) do$/;"	f
assign	deps/phoenix/lib/phoenix/socket.ex	/^  def assign(%Socket{} = socket, attrs)$/;"	f
assign	deps/phoenix/lib/phoenix/socket.ex	/^  def assign(%Socket{} = socket, key, value) do$/;"	f
assign	deps/plug/lib/plug/conn.ex	/^  def assign(%Conn{assigns: assigns} = conn, key, value) when is_atom(key) do$/;"	f
assign_attributes_to_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp assign_attributes_to_blocks([ %Block.Ial{attrs: attrs}, block | rest], result) do$/;"	f
assign_attributes_to_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp assign_attributes_to_blocks([ block | rest], result) do$/;"	f
assign_attributes_to_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp assign_attributes_to_blocks([], result), do: Enum.reverse(result)$/;"	f
assign_map	deps/plug/lib/plug/conn/query.ex	/^  defp assign_map(acc, key, value) do$/;"	f
assign_resource	deps/phoenix/lib/phoenix/view.ex	/^  defp assign_resource(assigns, view, resource) do$/;"	f
assign_split	deps/plug/lib/plug/conn/query.ex	/^  defp assign_split(["", rest], value, acc, pattern) do$/;"	f
assign_split	deps/plug/lib/plug/conn/query.ex	/^  defp assign_split([""], nil, acc, _pattern) do$/;"	f
assign_split	deps/plug/lib/plug/conn/query.ex	/^  defp assign_split([""], value, acc, _pattern) do$/;"	f
assign_split	deps/plug/lib/plug/conn/query.ex	/^  defp assign_split([key, rest], value, acc, pattern) do$/;"	f
assign_split	deps/plug/lib/plug/conn/query.ex	/^  defp assign_split([key], value, acc, _pattern) do$/;"	f
assoc	deps/ecto/lib/ecto.ex	/^  def assoc(struct_or_structs, assocs) do$/;"	f
assoc constraint	deps/ecto/integration_test/cases/repo.exs	/^  test "assoc constraint" do$/;"	t
assoc_changeset	lib/boruta/adapters/ecto/schemas/scope.ex	/^  def assoc_changeset(scope, attrs) do$/;"	f
assoc_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def assoc_constraint(changeset, assoc, opts \\\\ []) do$/;"	f
assoc_loaded?	deps/ecto/lib/ecto.ex	/^  def assoc_loaded?(%Ecto.Association.NotLoaded{}), do: false$/;"	f
assoc_loaded?	deps/ecto/lib/ecto.ex	/^  def assoc_loaded?(%_{}), do: true$/;"	f
assoc_loaded?	deps/ecto/lib/ecto.ex	/^  def assoc_loaded?(list) when is_list(list), do: true$/;"	f
assoc_loaded?	deps/ecto/lib/ecto.ex	/^  def assoc_loaded?(nil), do: true$/;"	f
assoc_map	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp assoc_map(:many, ids, structs) do$/;"	f
assoc_map	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp assoc_map(:one, ids, structs) do$/;"	f
assoc_opts	deps/ecto/lib/ecto/repo/schema.ex	/^  defp assoc_opts([], _opts), do: []$/;"	f
assoc_opts	deps/ecto/lib/ecto/repo/schema.ex	/^  defp assoc_opts(_assocs, opts) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(%module{} = refl, [], query, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(%{owner: owner, through: [h|t], field: field}, extra, query, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(%{queryable: queryable} = refl, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(%{related_key: related_key, queryable: queryable} = assoc, query, [value]) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(%{related_key: related_key, queryable: queryable} = assoc, query, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(assoc, query, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(refl, query, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(refl, t, query, values) do$/;"	f
assoc_query	deps/ecto/lib/ecto/association.ex	/^  def assoc_query(refl, through, query, values)$/;"	f
assoc_to_where	deps/ecto/lib/ecto/association.ex	/^  defp assoc_to_where(%{on: %QueryExpr{} = on}) do$/;"	f
associate	deps/ecto/lib/ecto/repo/registry.ex	/^  def associate(pid, value) when is_pid(pid) do$/;"	f
associate	deps/postgrex/lib/postgrex/type_server.ex	/^  defp associate(%{types: types, lock: ref} = state, type_infos, from) do$/;"	f
associate_type_infos	deps/postgrex/lib/postgrex/types.ex	/^  def associate_type_infos(type_infos, {module, table}) do$/;"	f
association	deps/ecto/lib/ecto/schema.ex	/^  def association(schema, cardinality, name, association, opts) do$/;"	f
association with composite pk join	deps/ecto/integration_test/cases/joins.exs	/^  test "association with composite pk join" do$/;"	t
association_from_schema!	deps/ecto/lib/ecto/association.ex	/^  def association_from_schema!(schema, assoc) do$/;"	f
association_from_schema!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp association_from_schema!(schema, assoc) do$/;"	f
association_key	deps/ecto/lib/ecto/association.ex	/^  def association_key(module, suffix) do$/;"	f
assocs	deps/ecto/lib/ecto/query/inspect.ex	/^  defp assocs([], _names), do: []$/;"	f
assocs	deps/ecto/lib/ecto/query/inspect.ex	/^  defp assocs(assocs) do$/;"	f
assocs	deps/ecto/lib/ecto/query/inspect.ex	/^  defp assocs(assocs, names), do: [preload: expr(assocs(assocs), names, %{})]$/;"	f
ast	deps/credo/lib/credo/code.ex	/^  def ast(%SourceFile{filename: filename} = source_file) do$/;"	f
ast	deps/credo/lib/credo/code.ex	/^  def ast(source, filename \\\\ "nofilename") when is_binary(source) do$/;"	f
ast	deps/credo/lib/credo/code.ex	/^  def ast(string_or_source_file)$/;"	f
ast	deps/credo/lib/credo/source_file.ex	/^  def ast(%__MODULE__{filename: filename}) do$/;"	f
ast	deps/credo/lib/credo/source_file.ex	/^  def ast(source_file)$/;"	f
ast_to_html	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp ast_to_html(binary) when is_binary(binary), do: Templates.h(binary)$/;"	f
ast_to_html	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp ast_to_html(list) when is_list(list), do: Enum.map(list, &ast_to_html\/1)$/;"	f
ast_to_html	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp ast_to_html({tag, attrs, ast}) do$/;"	f
async_assign	deps/plug/lib/plug/conn.ex	/^  def async_assign(%Conn{} = conn, key, fun) when is_atom(key) and is_function(fun, 0) do$/;"	f
async_migrate_maybe_in_transaction	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp async_migrate_maybe_in_transaction(repo, version, module, direction, opts, fun) do$/;"	f
at_least_four	deps/ecto/lib/ecto/query/api.ex	/^      def at_least_four(doors_or_tires) do$/;"	f
atom	deps/jason/lib/encode.ex	/^  def atom(atom, {escape, _encode_map}) do$/;"	f
atom_part_to_string	deps/erlex/lib/erlex.ex	/^  defp atom_part_to_string(atom_part), do: atom_part$/;"	f
atom_part_to_string	deps/erlex/lib/erlex.ex	/^  defp atom_part_to_string({:int, atom_part}), do: Integer.to_charlist(atom_part)$/;"	f
atomize	deps/erlex/lib/erlex.ex	/^  defp atomize("Elixir." <> module_name) do$/;"	f
atomize	deps/erlex/lib/erlex.ex	/^  defp atomize(<<atom>>) when is_number(atom) do$/;"	f
atomize	deps/erlex/lib/erlex.ex	/^  defp atomize([char]) do$/;"	f
atomize	deps/erlex/lib/erlex.ex	/^  defp atomize(atom) do$/;"	f
atomize	deps/erlex/lib/erlex.ex	/^  defp atomize(atom) when is_list(atom) do$/;"	f
attach	deps/telemetry/src/telemetry.erl	/^attach(HandlerId, EventName, Function, Config) ->$/;"	f	module:telemetry
attach_many	deps/telemetry/src/telemetry.erl	/^attach_many(HandlerId, EventNames, Function, Config) when is_function(Function, 4) ->$/;"	f	module:telemetry
attach_on	deps/ecto/lib/ecto/query/planner.ex	/^  defp attach_on([%{on: on} = h | t], %{expr: expr, params: params}) do$/;"	f
attach_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp attach_prefix(%{prefix: nil} = query, %{prefix: prefix}), do: %{query | prefix: prefix}$/;"	f
attach_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp attach_prefix(query, _), do: query$/;"	f
attach_prefix	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp attach_prefix(query, opts) do$/;"	f
attempt	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp attempt(repo, version, module, direction, operation, reference, opts) do$/;"	f
attribute	deps/credo/lib/credo/code/module.ex	/^  def attribute(ast, attr_name) do$/;"	f
attributes	deps/postgrex/lib/postgrex/type_module.ex	/^  defp attributes(opts) do$/;"	f
attrs	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def attrs(attrs) do$/;"	f
attrs_to_string	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  defp attrs_to_string(attrs) do$/;"	f
attrs_to_string_keys	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp attrs_to_string_keys(key_value_pair)$/;"	f
attrs_to_string_keys	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp attrs_to_string_keys({k, vs}) do$/;"	f
attrs_to_string_keys	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  defp attrs_to_string_keys({k, vs}) when is_list(vs) do$/;"	f
augment_disconnect	deps/db_connection/lib/db_connection/holder.ex	/^  defp augment_disconnect(result), do: result$/;"	f
augment_disconnect	deps/db_connection/lib/db_connection/holder.ex	/^  defp augment_disconnect({:disconnect, %DBConnection.ConnectionError{} = err, state}) do$/;"	f
augment_tag_with_ial	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def augment_tag_with_ial([], _atts) do$/;"	f
augment_tag_with_ial	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def augment_tag_with_ial([{t, a, c}|tags], atts) do$/;"	f
augment_tag_with_ial	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def augment_tag_with_ial(tags, ial)$/;"	f
augment_tag_with_ial	deps/earmark/lib/earmark/helpers/html_helpers.ex	/^  def augment_tag_with_ial(context, tag, ial, lnb) do $/;"	f
auth	deps/plug/lib/plug/basic_auth.ex	/^      defp auth(conn, _opts) do$/;"	f
auth_cleartext	deps/postgrex/lib/postgrex/protocol.ex	/^  defp auth_cleartext(s, %{opts: opts} = status, buffer) do$/;"	f
auth_cont	deps/postgrex/lib/postgrex/protocol.ex	/^  defp auth_cont(s, %{opts: opts} = status, data, buffer) do$/;"	f
auth_md5	deps/postgrex/lib/postgrex/protocol.ex	/^  defp auth_md5(s, %{opts: opts} = status, salt, buffer) do$/;"	f
auth_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp auth_recv(s, status, buffer) do$/;"	f
auth_sasl	deps/postgrex/lib/postgrex/protocol.ex	/^  defp auth_sasl(s, status = _, buffer) do$/;"	f
auth_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp auth_send(s, msg, status, buffer) do$/;"	f
authenticate	deps/phoenix/lib/phoenix/controller.ex	/^        defp authenticate(conn, options) do$/;"	f
authorization_code	lib/boruta/oauth/json/schema.ex	/^  def authorization_code do$/;"	f
authorization_header	lib/boruta/oauth/request/base.ex	/^  def authorization_header(req_headers) do$/;"	f
authorize	lib/boruta/oauth.ex	/^  def authorize(conn, resource_owner, module) do$/;"	f
authorize	lib/boruta/oauth/authorization/access_token.ex	/^  def authorize(refresh_token: refresh_token) do$/;"	f
authorize	lib/boruta/oauth/authorization/access_token.ex	/^  def authorize(value: value) do$/;"	f
authorize	lib/boruta/oauth/authorization/client.ex	/^  def authorize(id: id, redirect_uri: redirect_uri, grant_type: grant_type) do$/;"	f
authorize	lib/boruta/oauth/authorization/client.ex	/^  def authorize(id: id, secret: secret) do$/;"	f
authorize	lib/boruta/oauth/authorization/client.ex	/^  def authorize(id: id, secret: secret, grant_type: grant_type) do$/;"	f
authorize	lib/boruta/oauth/authorization/code.ex	/^  def authorize(value: value, redirect_uri: redirect_uri) do$/;"	f
authorize	lib/boruta/oauth/authorization/resource_owner.ex	/^  def authorize(_) do$/;"	f
authorize	lib/boruta/oauth/authorization/resource_owner.ex	/^  def authorize(resource_owner: resource_owner) do$/;"	f
authorize	lib/boruta/oauth/authorization/resource_owner.ex	/^  def authorize(username: username, password: password) do$/;"	f
authorize	lib/boruta/oauth/authorization/scope.ex	/^  def authorize(scope: "" <> scope, against: %{client: _, resource_owner: _, token: token}) do$/;"	f
authorize	lib/boruta/oauth/authorization/scope.ex	/^  def authorize(scope: "" <> scope, against: %{client: client, resource_owner: resource_owner, token: nil}) do$/;"	f
authorize	lib/boruta/oauth/authorization/scope.ex	/^  def authorize(scope: "", against: %{client: _, resource_owner: _, token: _}), do: {:ok, ""}$/;"	f
authorize	lib/boruta/oauth/authorization/scope.ex	/^  def authorize(scope: nil, against: %{client: _, resource_owner: _, token: _}), do: {:ok, ""}$/;"	f
authorize	lib/boruta/oauth/authorization/scope.ex	/^  def authorize(scope: scope, against: %{} = against) do$/;"	f
authorize_error	test/support/boruta/oauth/application_mock.ex	/^  def authorize_error(_conn, error), do: {:authorize_error, error}$/;"	f
authorize_request	lib/boruta/oauth/request.ex	/^  defdelegate authorize_request(conn, resource_owner), to: Request.Authorize, as: :request$/;"	d
authorize_success	test/support/boruta/oauth/application_mock.ex	/^  def authorize_success(_conn, authorize), do: {:authorize_success, authorize}$/;"	f
authorized?	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  defp authorized?(_payload) do$/;"	f
authorized?	deps/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  defp authorized?(_payload) do$/;"	f
authorized?	lib/boruta/oauth/authorization/scope.ex	/^  defp authorized?(scopes, authorized_scopes) do$/;"	f
authorized_scopes	lib/boruta.ex	/^    def authorized_scopes(%User{}), do: []$/;"	f
authorized_scopes	lib/boruta/adapters/ecto/clients.ex	/^  def authorized_scopes(%Oauth.Client{id: id}) do$/;"	f
autogenerate	deps/ecto/lib/ecto/embedded.ex	/^  defp autogenerate(changes, action, schema) do$/;"	f
autogenerate	deps/ecto/lib/ecto/uuid.ex	/^  def autogenerate, do: generate()$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def autogenerate(:binary_id), do: Ecto.UUID.bingenerate()$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def autogenerate(:embed_id),  do: Ecto.UUID.generate()$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def autogenerate(:id),        do: nil$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def autogenerate(:binary_id), do: Tds.Ecto.UUID.bingenerate()$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def autogenerate(:embed_id), do: Tds.Ecto.UUID.generate()$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def autogenerate(type), do: super(type)$/;"	f
autogenerate	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def autogenerate, do: generate()$/;"	f
autogenerate_changes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp autogenerate_changes(schema, action, changes) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/embedded.ex	/^  defp autogenerate_id(changes, _struct, :insert, schema, adapter) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/embedded.ex	/^  defp autogenerate_id(changes, struct, :update, _schema, _adapter) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/repo/schema.ex	/^  defp autogenerate_id(nil, changes, return_types, return_sources, _adapter) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/repo/schema.ex	/^  defp autogenerate_id(nil, fields, header, _adapter) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/repo/schema.ex	/^  defp autogenerate_id({key, source, type}, changes, return_types, return_sources, adapter) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/repo/schema.ex	/^  defp autogenerate_id({key, source, type}, fields, header, adapter) do$/;"	f
autogenerate_id	deps/ecto/lib/ecto/schema.ex	/^  defp autogenerate_id(type) do$/;"	f
autolink_and_render	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp autolink_and_render(doc, autolink_opts, opts) do$/;"	f
autumn_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def autumn_style, do: HTML.AutumnStyle.style()$/;"	f
available?	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  def available? do$/;"	f
available_templates	deps/phoenix/lib/phoenix/template.ex	/^    defp available_templates([]), do: "No templates were compiled for this module."$/;"	f
available_templates	deps/phoenix/lib/phoenix/template.ex	/^    defp available_templates(available) do$/;"	f
avg	deps/ecto/lib/ecto/query/api.ex	/^  def avg(value), do: doc! [value]$/;"	f
avg	deps/ecto/lib/ecto/query/window_api.ex	/^  def avg(value), do: doc! [value]$/;"	f
await_assign	deps/plug/lib/plug/conn.ex	/^  def await_assign(%Conn{} = conn, key, timeout \\\\ 5000) when is_atom(key) do$/;"	f
backoff	deps/db_connection/lib/db_connection/backoff.ex	/^  def backoff(%Backoff{type: :exp, max: max, state: prev} = s) do$/;"	f
backoff	deps/db_connection/lib/db_connection/backoff.ex	/^  def backoff(%Backoff{type: :exp, min: min, state: nil} = s) do$/;"	f
backoff	deps/db_connection/lib/db_connection/backoff.ex	/^  def backoff(%Backoff{type: :rand, min: min, max: max, state: state} = s) do$/;"	f
backoff	deps/db_connection/lib/db_connection/backoff.ex	/^  def backoff(%Backoff{type: :rand_exp, max: max, state: state} = s) do$/;"	f
bad execute migration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "bad execute migration" do$/;"	t
bad_fragment_message	deps/ecto/lib/ecto/query/builder.ex	/^  defp bad_fragment_message(arg) do$/;"	f
bad_func	deps/dialyxir/lib/example.ex	/^  def bad_func do$/;"	f
bad_return!	deps/db_connection/lib/db_connection.ex	/^  defp bad_return!(other, conn, meter) do$/;"	f
bail_out_to_title	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp bail_out_to_title(ts, result) do$/;"	f
bang_sigil	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp bang_sigil({name, _}, allowed) do$/;"	f
banner	deps/credo/lib/credo/cli/command/help.ex	/^  def banner do$/;"	f
banner	deps/plug/lib/plug/debugger.ex	/^  defp banner(conn, status, kind, reason, stack, opts) do$/;"	f
base	deps/phoenix/lib/mix/phoenix.ex	/^  def base do$/;"	f
base10?	deps/decimal/lib/decimal.ex	/^      defp base10?(unquote(acc)), do: true$/;"	f
base10?	deps/decimal/lib/decimal.ex	/^  defp base10?(_num), do: false$/;"	f
base10?	deps/decimal/lib/decimal.ex	/^  defp base10?(num) when num > unquote(pow10_max) do$/;"	f
base64	deps/secure_random/lib/secure_random.ex	/^  def base64(n \\\\ @default_length) do$/;"	f
base?	deps/ecto/lib/ecto/type.ex	/^  def base?(atom), do: atom in @base$/;"	f
base_priority	deps/credo/lib/credo/check.ex	/^      def base_priority do$/;"	f
basic_auth	deps/plug/lib/plug/basic_auth.ex	/^  def basic_auth(conn, options \\\\ []) do$/;"	f
basic_info	deps/credo/lib/credo/cli/command/info/output/default.ex	/^  defp basic_info(info) do$/;"	f
basic_info	deps/credo/lib/credo/cli/command/info/output/json.ex	/^  defp basic_info(info) do$/;"	f
basic_rules	deps/earmark/lib/earmark/context.ex	/^  defp basic_rules do$/;"	f
beam_files_with_paths	deps/dialyxir/lib/dialyxir/project.ex	/^  defp beam_files_with_paths(path) do$/;"	f
beam_to_module	deps/phoenix/lib/mix/phoenix.ex	/^  defp beam_to_module(path) do$/;"	f
before_closing_body_tag	deps/ex_doc/lib/ex_doc/config.ex	/^  def before_closing_body_tag(_), do: ""$/;"	f
before_closing_head_tag	deps/ex_doc/lib/ex_doc/config.ex	/^  def before_closing_head_tag(_), do: ""$/;"	f
before_parse_headers	deps/plug/src/plug_multipart.erl	/^before_parse_headers(<< "\\r\\n", Stream\/bits >>) ->$/;"	f	module:plug_multipart
before_parse_headers	deps/plug/src/plug_multipart.erl	/^before_parse_headers(<< "\\r\\n\\r\\n", Stream\/bits >>) ->$/;"	f	module:plug_multipart
before_send	deps/plug/lib/plug/session.ex	/^  defp before_send(sid, config) do$/;"	f
begin	deps/db_connection/lib/db_connection.ex	/^  defp begin(conn, run, opts) do$/;"	f
behaviours_implemented_by	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp behaviours_implemented_by(module) do$/;"	f
behead	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^  def behead(str, ignore) when is_integer(ignore) do$/;"	f
behead	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^  def behead(str, leading_string) do$/;"	f
behead_indent	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^  def behead_indent(str, size) do$/;"	f
behead_tuple	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^  def behead_tuple(str, lead) do$/;"	f
belongs_to	deps/ecto/lib/ecto/schema.ex	/^  defmacro belongs_to(name, queryable, opts \\\\ []) do$/;"	a
belongs_to assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "belongs_to assoc" do$/;"	t
belongs_to assoc selector	deps/ecto/integration_test/cases/joins.exs	/^  test "belongs_to assoc selector" do$/;"	t
belongs_to association join	deps/ecto/integration_test/cases/joins.exs	/^  test "belongs_to association join" do$/;"	t
belongs_to changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "belongs_to changeset assoc (on_replace: :update)" do$/;"	t
belongs_to changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "belongs_to changeset assoc" do$/;"	t
betail	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^  def betail(str, length) do$/;"	f
betail	deps/earmark/lib/earmark/helpers/string_helpers.ex	/^  def betail(str, length)$/;"	f
bigenerate	deps/secure_random/lib/secure_random.ex	/^  defp bigenerate do$/;"	f
bin_opt_info	deps/postgrex/lib/postgrex/type_module.ex	/^  defp bin_opt_info(opts) do$/;"	f
bin_range_to_guard	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp bin_range_to_guard(var, range) do$/;"	f
bin_segment	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp bin_segment(combinator, inclusive, exclusive, [_ | _] = modifiers) do$/;"	f
binaries are much easier on the eyes	deps/makeup/lib/makeup/lexer/postprocess.ex	/^    test "binaries are much easier on the eyes" do$/;"	t
binary	deps/postgrex/lib/postgrex/binary_utils.ex	/^  defmacro binary(size) do$/;"	a
binary	deps/postgrex/lib/postgrex/binary_utils.ex	/^  defmacro binary(size, unit) do$/;"	a
binary id type	deps/ecto/integration_test/cases/type.exs	/^  test "binary id type" do$/;"	t
binary_to_identifier	deps/plug/lib/plug/router/utils.ex	/^  defp binary_to_identifier(prefix, <<letter, _::binary>> = binary)$/;"	f
binary_to_identifier	deps/plug/lib/plug/router/utils.ex	/^  defp binary_to_identifier(prefix, _) do$/;"	f
bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bind(s, %{mode: :savepoint} = status, query, params, cursor) do$/;"	f
bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bind(s, %{mode: :transaction} = status, query, params, cursor) do$/;"	f
bind_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bind_execute(s, %{mode: :savepoint} = status, query, params) do$/;"	f
bind_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bind_execute(s, %{mode: :transaction} = status, query, params) do$/;"	f
bind_execute_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bind_execute_close(s, %{mode: :savepoint} = status, query, params) do$/;"	f
bind_execute_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bind_execute_close(s, %{mode: :transaction} = status, query, params) do$/;"	f
binding	deps/ecto/lib/ecto/query/inspect.ex	/^  defp binding(names, pos) do$/;"	f
bingenerate	deps/ecto/lib/ecto/uuid.ex	/^  def bingenerate() do$/;"	f
bingenerate	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def bingenerate do$/;"	f
binwrite!	deps/plug/lib/plug/parsers/multipart.ex	/^  defp binwrite!(device, contents) do$/;"	f
bits	deps/puid/lib/entropy.ex	/^  def bits(1, _), do: 0$/;"	f
bits	deps/puid/lib/entropy.ex	/^  def bits(_, 1), do: 0$/;"	f
bits	deps/puid/lib/entropy.ex	/^  def bits(total, risk) when is_number(total) and is_number(risk) do$/;"	f
bits_for_len	deps/puid/lib/entropy.ex	/^  def bits_for_len(len, charset) when -1 < len and (is_atom(charset) or is_binary(charset)) do$/;"	f
bits_for_len!	deps/puid/lib/entropy.ex	/^  def bits_for_len!(len, charset) when -1 < len and (is_atom(charset) or is_binary(charset)) do$/;"	f
bits_for_length	deps/puid/lib/entropy.ex	/^  defdelegate bits_for_length(len, charset), to: Puid.Entropy, as: :bits_for_len$/;"	d
bits_for_length!	deps/puid/lib/entropy.ex	/^  defdelegate bits_for_length!(len, charset), to: Puid.Entropy, as: :bits_for_len!$/;"	d
bits_per_char	deps/puid/lib/entropy.ex	/^  def bits_per_char(chars) when is_binary(chars) do$/;"	f
bits_per_char	deps/puid/lib/entropy.ex	/^  def bits_per_char(charset) when is_atom(charset) do$/;"	f
bits_per_char	deps/puid/lib/entropy.ex	/^  def bits_per_char(charset)$/;"	f
bits_per_char!	deps/puid/lib/entropy.ex	/^  def bits_per_char!(arg) do$/;"	f
bits_per_char!	deps/puid/lib/entropy.ex	/^  def bits_per_char!(charset)$/;"	f
blame	deps/phoenix/lib/phoenix/exceptions.ex	/^  def blame(exception, stacktrace) do$/;"	f
blank?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blank?(%Line.Blank{}),   do: true$/;"	f
blank?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blank?(_),               do: false$/;"	f
blank_line_in?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blank_line_in?([ %Line.Blank{} | _ ]), do: true$/;"	f
blank_line_in?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blank_line_in?([ _ | rest ]),          do: blank_line_in?(rest)$/;"	f
blank_line_in?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blank_line_in?([]),                    do: false$/;"	f
blank_lines	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^  defp blank_lines(lines) do$/;"	f
block_decrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp block_decrypt(algo, key, iv, payload) do$/;"	f
block_encrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp block_encrypt(algo, key, iv, payload) do$/;"	f
block_tag?	deps/earmark/lib/earmark/line_scanner.ex	/^  defp block_tag?(tag), do: MapSet.member?(@block_tags, tag)$/;"	f
blockquote_or_text?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blockquote_or_text?(%Line.BlockQuote{}), do: true$/;"	f
blockquote_or_text?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def blockquote_or_text?(struct),             do: text?(struct)$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(body, query, headers, _method) when is_binary(body) do$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(nil, query, headers, _method), do: {"", nil, nil, query, headers}$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(params, query, headers, _method) when is_map(params) do$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(params, query, headers, method) when is_list(params) do$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(params, query, headers, method)$/;"	f
bool_decode	deps/ecto/lib/ecto/adapter.ex	/^      defp bool_decode(0), do: {:ok, false}$/;"	f
bool_decode	deps/ecto/lib/ecto/adapter.ex	/^      defp bool_decode(1), do: {:ok, true}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(0), do: {:ok, false}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(1), do: {:ok, true}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(<<0::size(1)>>), do: {:ok, false}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(<<0>>), do: {:ok, false}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(<<1::size(1)>>), do: {:ok, true}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(<<1>>), do: {:ok, true}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp bool_decode(x), do: {:ok, x}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp bool_decode(0), do: {:ok, false}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp bool_decode(1), do: {:ok, true}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp bool_decode(<<0>>), do: {:ok, false}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp bool_decode(<<1>>), do: {:ok, true}$/;"	f
bool_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp bool_decode(x) when is_boolean(x), do: {:ok, x}$/;"	f
bool_encode	deps/ecto/lib/ecto/adapter.ex	/^      defp bool_encode(false), do: {:ok, 0}$/;"	f
bool_encode	deps/ecto/lib/ecto/adapter.ex	/^      defp bool_encode(true), do: {:ok, 1}$/;"	f
bool_exprs	deps/ecto/lib/ecto/query/inspect.ex	/^  defp bool_exprs(keys, exprs, names) do$/;"	f
boolean	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp boolean(_name, [], _sources, _query), do: []$/;"	f
boolean	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp boolean(name, [%{expr: expr, op: op} | query_exprs], sources, query) do$/;"	f
boolean	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp boolean(_name, [], _sources, _query), do: []$/;"	f
boolean	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp boolean(name, [%{expr: expr, op: op} | query_exprs], sources, query) do$/;"	f
boolean	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp boolean(_name, [], _sources, _query), do: []$/;"	f
boolean	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp boolean(name, [%{expr: expr, op: op} | query_exprs], sources, query) do$/;"	f
booleanify	deps/earmark/lib/earmark/cli.ex	/^  defp booleanify( keywords ), do: Enum.map(keywords, &booleanify_option\/1)$/;"	f
booleanify_option	deps/earmark/lib/earmark/cli.ex	/^  defp booleanify_option({k, v}) do$/;"	f
boom	deps/plug/lib/plug/debugger.ex	/^        def boom(conn, _) do$/;"	f
bootstrap	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap(s, %{types_key: nil}, buffer) do$/;"	f
bootstrap	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap(s, status, buffer) do$/;"	f
bootstrap_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_done(s, %{prepare: :named}, buffer),$/;"	f
bootstrap_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_done(s, %{prepare: :unnamed}, buffer),$/;"	f
bootstrap_fail	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_fail(s, err, %{types_lock: {server, ref}}) do$/;"	f
bootstrap_fail	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_fail(s, err, status, buffer) do$/;"	f
bootstrap_query	deps/postgrex/lib/postgrex/types.ex	/^  def bootstrap_query(version, {_, table}) do$/;"	f
bootstrap_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_recv(s, status, type_infos, buffer) do$/;"	f
bootstrap_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_send(%{types: types} = s, status, buffer) do$/;"	f
bootstrap_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_send(s, status, statement, buffer) do$/;"	f
bootstrap_sync_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_sync_recv(s, status, buffer) do$/;"	f
bootstrap_types	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrap_types(s, status, type_infos, buffer) do$/;"	f
bootstrapped?	deps/postgrex/lib/postgrex/protocol.ex	/^  defp bootstrapped?(types, oid) do$/;"	f
borland_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def borland_style, do: HTML.BorlandStyle.style()$/;"	f
bound_address	deps/phoenix/lib/phoenix/endpoint/cowboy2_adapter.ex	/^  defp bound_address(scheme, ref) do$/;"	f
bound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp bound_combinator(_, _) do$/;"	f
bound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp bound_combinator({:bin_segment, inclusive, exclusive, modifiers}, metadata) do$/;"	f
bound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp bound_combinator({:label, combinators, _labels}, metadata) do$/;"	f
bound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp bound_combinator({:string, string}, %{line: line, offset: offset} = metadata) do$/;"	f
bound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp bound_combinator({:traverse, combinators, kind, mfargs}, pre_metadata) do$/;"	f
bound_from	deps/ecto/lib/ecto/query/inspect.ex	/^  defp bound_from(%{source: source} = from, name) do$/;"	f
bound_from	deps/ecto/lib/ecto/query/inspect.ex	/^  defp bound_from(nil, name), do: ["from #{name} in query"]$/;"	f
boundary	deps/plug/src/plug_multipart.erl	/^boundary() ->$/;"	f	module:plug_multipart
branches_for_stack	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp branches_for_stack({stack_name, parts}) do$/;"	f
broadcast	deps/phoenix/lib/phoenix/channel.ex	/^  def broadcast(socket, event, message) do$/;"	f
broadcast	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast(_, topic, event, payload) do$/;"	f
broadcast	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast(pubsub_server, topic, event, payload)$/;"	f
broadcast	deps/phoenix/lib/phoenix/endpoint.ex	/^      def broadcast(topic, event, msg) do$/;"	f
broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def broadcast(server, topic, message) when is_atom(server) or is_tuple(server),$/;"	f
broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def broadcast(fastlane, pubsub_server, 1 = _pool_size, from, topic, msg) when is_atom(pubsub_server) do$/;"	f
broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def broadcast(fastlane, pubsub_server, pool_size, from, topic, msg) when is_atom(pubsub_server) do$/;"	f
broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  def broadcast(fastlane, server_name, pool_size, from_pid, topic, msg) do$/;"	f
broadcast!	deps/phoenix/lib/phoenix/channel.ex	/^  def broadcast!(socket, event, message) do$/;"	f
broadcast!	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast!(_, topic, event, payload) do$/;"	f
broadcast!	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast!(pubsub_server, topic, event, payload)$/;"	f
broadcast!	deps/phoenix/lib/phoenix/endpoint.ex	/^      def broadcast!(topic, event, msg) do$/;"	f
broadcast!	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def broadcast!(server, topic, message) do$/;"	f
broadcast_delta_heartbeat	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp broadcast_delta_heartbeat(%{presences: presences} = state) do$/;"	f
broadcast_from	deps/phoenix/lib/phoenix/channel.ex	/^  def broadcast_from(socket, event, message) do$/;"	f
broadcast_from	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast_from(_, _from, topic, event, payload) do$/;"	f
broadcast_from	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast_from(pubsub_server, from, topic, event, payload)$/;"	f
broadcast_from	deps/phoenix/lib/phoenix/endpoint.ex	/^      def broadcast_from(from, topic, event, msg) do$/;"	f
broadcast_from	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def broadcast_from(socket, event, message) do$/;"	f
broadcast_from	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def broadcast_from(server, from_pid, topic, message) when is_atom(server) and is_pid(from_pid),$/;"	f
broadcast_from	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp broadcast_from(state, from, msg) do$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/channel.ex	/^  def broadcast_from!(socket, event, message) do$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast_from!(_, _from, topic, event, payload) do$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/channel/server.ex	/^  def broadcast_from!(pubsub_server, from, topic, event, payload)$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/endpoint.ex	/^      def broadcast_from!(from, topic, event, msg) do$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def broadcast_from!(socket, event, message) do$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp broadcast_from!(_endpoint, pid, msg) when is_pid(pid),$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp broadcast_from!(endpoint, topic, msg) when is_binary(topic),$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp broadcast_from!(_state, client_ref, msg) when is_pid(client_ref),$/;"	f
broadcast_from!	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp broadcast_from!(state, client_ref, msg) when is_binary(client_ref),$/;"	f
broadcast_from!	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def broadcast_from!(server, from_pid, topic, message) when is_atom(server) and is_pid(from_pid) do$/;"	f
broadcasts are pushed to the client	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel_test.exs	/^  test "broadcasts are pushed to the client", %{socket: socket} do$/;"	t
broadcasts are pushed to the client	deps/phoenix/priv/templates/phx.gen.channel/channel_test.exs	/^  test "broadcasts are pushed to the client", %{socket: socket} do$/;"	t
broken link migration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "broken link migration" do$/;"	t
build	deps/credo/lib/credo/execution.ex	/^  def build(argv \\\\ []) when is_list(argv) do$/;"	f
build	deps/ecto/lib/ecto/association.ex	/^  def build(%{field: name}, %{__struct__: owner}, _attributes) do$/;"	f
build	deps/ecto/lib/ecto/association.ex	/^  def build(%{owner_key: owner_key, related_key: related_key} = refl, owner, attributes) do$/;"	f
build	deps/ecto/lib/ecto/association.ex	/^  def build(%{related: related, queryable: queryable, defaults: defaults}, owner) do$/;"	f
build	deps/ecto/lib/ecto/association.ex	/^  def build(refl, owner, attributes) do$/;"	f
build	deps/ecto/lib/ecto/embedded.ex	/^  def build(%Embedded{related: related}, _owner) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/combination.ex	/^  def build(kind, _query, other, _env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/combination.ex	/^  def build(kind, query, {:^, _, [expr]}, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def build(query, name, cte, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def build(query, _binding, {:^, _, [var]}, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def build(query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/dynamic.ex	/^  def build(binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def build(kind, op, query, _binding, {:^, _, [var]}, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def build(kind, op, query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/from.ex	/^  def build(query, env, as, prefix, maybe_hints) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def build(query, _binding, {:^, _, [var]}, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def build(query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/join.ex	/^  def build(query, qual, binding, expr, count_bind, on, as, prefix, maybe_hints, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/limit_offset.ex	/^  def build(type, query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/lock.ex	/^  def build(query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def build(query, _binding, {:^, _, [var]}, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def build(query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/preload.ex	/^  def build(query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/select.ex	/^  def build(kind, query, _binding, {:^, _, [var]}, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/select.ex	/^  def build(kind, query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/update.ex	/^  def build(query, binding, expr, env) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def build(_, _, windows, _) do$/;"	f
build	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def build(query, binding, windows, env) when is_list(windows) do$/;"	f
build	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  def build(meta, statement, params, opts) do$/;"	f
build	deps/ex_machina/lib/ex_machina.ex	/^      def build(factory_name, attrs \\\\ %{}) do$/;"	f
build	deps/ex_machina/lib/ex_machina.ex	/^  def build(module, factory_name, attrs \\\\ %{}) do$/;"	f
build	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def build(args) do$/;"	f
build	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def build(args) do$/;"	f
build	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def build(args, parent_opts, help \\\\ __MODULE__) do$/;"	f
build	deps/phoenix/lib/phoenix/router/resource.ex	/^  def build(path, controller, options) when is_atom(controller) and is_list(options) do$/;"	f
build	deps/phoenix/lib/phoenix/router/route.ex	/^  def build(line, kind, verb, path, host, plug, plug_opts, helper, pipe_through, private, assigns, metadata, trailing_slash?)$/;"	f
build_acc_depth	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_acc_depth(1, acc, stack), do: [{:|, [], [acc, stack]}]$/;"	f
build_acc_depth	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_acc_depth(n, acc, stack), do: [quote(do: _) | build_acc_depth(n - 1, acc, stack)]$/;"	f
build_api_reference	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp build_api_reference(nodes_map, config) do$/;"	f
build_assoc	deps/ecto/lib/ecto.ex	/^  def build_assoc(%{__struct__: schema} = struct, assoc, attributes \\\\ %{}) do$/;"	f
build_bootstrap_query	deps/postgrex/lib/postgrex/types.ex	/^  defp build_bootstrap_query(version, filter_oids) do$/;"	f
build_catch_all	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_catch_all(_kind, name, _combinators, %{catch_all: next, acc_depth: n}) do$/;"	f
build_catch_all	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_catch_all(kind, name, combinators, %{catch_all: nil, labels: labels}) do$/;"	f
build_compile_window	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp build_compile_window({name, compile_acc, _, params}, env) do$/;"	f
build_config	deps/ex_doc/lib/ex_doc.ex	/^  def build_config(project, vsn, options) do$/;"	f
build_conn	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def build_conn() do$/;"	f
build_conn	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def build_conn(method, path, params_or_body \\\\ nil) do$/;"	f
build_conn_forward_path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp build_conn_forward_path(%Conn{private: %{phoenix_router: phx_router}} = conn, router, path) do$/;"	f
build_conn_forward_path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp build_conn_forward_path(_conn, _router, _path), do: nil$/;"	f
build_cte	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def build_cte(_name, {:^, _, [expr]}, _env) do$/;"	f
build_cte	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def build_cte(_name, {:fragment, _, _} = fragment, env) do$/;"	f
build_cte	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def build_cte(name, cte, _env) do$/;"	f
build_detail	deps/postgrex/lib/postgrex/error.ex	/^  defp build_detail(%{detail: detail}) when is_binary(detail), do: ["\\n\\n" | detail]$/;"	f
build_detail	deps/postgrex/lib/postgrex/error.ex	/^  defp build_detail(_), do: []$/;"	f
build_digest	deps/phoenix/lib/phoenix/digester.ex	/^  defp build_digest(file) do$/;"	f
build_dispatch	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_dispatch(%Route{kind: :forward} = route) do$/;"	f
build_dispatch	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_dispatch(%Route{} = route) do$/;"	f
build_docs	deps/earmark/mix.exs	/^  defp build_docs(_) do$/;"	f
build_docs	deps/makeup/mix.exs	/^  defp build_docs(_) do$/;"	f
build_docs	deps/makeup_elixir/mix.exs	/^  defp build_docs(_) do$/;"	f
build_docs	deps/nimble_parsec/mix.exs	/^  defp build_docs(_) do$/;"	f
build_env	deps/dialyxir/lib/dialyxir/project.ex	/^  defp build_env() do$/;"	f
build_eventually_next_def	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_eventually_next_def(current, failure) do$/;"	f
build_extra	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp build_extra(input, groups, config, ext) do$/;"	f
build_extra	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp build_extra(input, id, title, groups, config, ext) do$/;"	f
build_extra	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp build_extra({input, options}, groups, config, ext) do$/;"	f
build_extras	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def build_extras(config, ext) do$/;"	f
build_fallback	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp build_fallback(:unregistered) do$/;"	f
build_fallback	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp build_fallback({:function, plug}) do$/;"	f
build_fallback	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp build_fallback({:module, plug}) do$/;"	f
build_function_name	deps/ex_machina/lib/ex_machina.ex	/^  defp build_function_name(factory_name) do$/;"	f
build_host	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_host(host) do$/;"	f
build_host_match	deps/plug/lib/plug/router/utils.ex	/^  def build_host_match(host) do$/;"	f
build_kv_iodata	deps/jason/lib/codegen.ex	/^  def build_kv_iodata(kv, encode_args) do$/;"	f
build_list	deps/ex_machina/lib/ex_machina.ex	/^      def build_list(number_of_records, factory_name, attrs \\\\ %{}) do$/;"	f
build_list	deps/ex_machina/lib/ex_machina.ex	/^  def build_list(module, number_of_records, factory_name, attrs \\\\ %{}) do$/;"	f
build_match	deps/phoenix/lib/phoenix/router.ex	/^  defp build_match({route, exprs}, known_pipelines) do$/;"	f
build_meta	deps/ecto/lib/ecto/query/planner.ex	/^  defp build_meta(%{sources: sources, preloads: preloads}, select) do$/;"	f
build_metadata	deps/phoenix/lib/phoenix/router.ex	/^  defp build_metadata(route, path_params) do$/;"	f
build_metadata	deps/postgrex/lib/postgrex/error.ex	/^  defp build_metadata(map) do$/;"	f
build_methods	deps/plug/lib/plug/router.ex	/^  defp build_methods([], guards) do$/;"	f
build_methods	deps/plug/lib/plug/router.ex	/^  defp build_methods([method], guards) do$/;"	f
build_methods	deps/plug/lib/plug/router.ex	/^  defp build_methods(methods, guards) do$/;"	f
build_next	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_next(step, %{name: name}) do$/;"	f
build_ok	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_ok(current) do$/;"	f
build_on	deps/ecto/lib/ecto/query/builder/join.ex	/^  def build_on(on, join, as, query, binding, count_bind, env) do$/;"	f
build_on	deps/ecto/lib/ecto/query/builder/join.ex	/^  def build_on({:^, _, [var]}, join, as, query, _binding, count_bind, env) do$/;"	f
build_own_forward_path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp build_own_forward_path(conn, router, path) do$/;"	f
build_pair	deps/ex_machina/lib/ex_machina.ex	/^      def build_pair(factory_name, attrs \\\\ %{}) do$/;"	f
build_pair	deps/ex_machina/lib/ex_machina.ex	/^  def build_pair(module, factory_name, attrs \\\\ %{}) do$/;"	f
build_params	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_params([]), do: {[], []}$/;"	f
build_params	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_params(_binding) do$/;"	f
build_parent_plt	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp build_parent_plt() do$/;"	f
build_path_and_binding	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_path_and_binding(%Route{path: path} = route) do$/;"	f
build_path_match	deps/phoenix/lib/phoenix/router/route.ex	/^    defp build_path_match(path) do$/;"	f
build_path_match	deps/plug/lib/plug/router/utils.ex	/^  def build_path_match(spec, context \\\\ nil) when is_binary(spec) do$/;"	f
build_path_match	deps/plug/lib/plug/router/utils.ex	/^  defp build_path_match([], _context, vars, acc) do$/;"	f
build_path_match	deps/plug/lib/plug/router/utils.ex	/^  defp build_path_match([h | t], context, vars, acc) do$/;"	f
build_path_params	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_path_params(binding), do: {:%{}, [], binding}$/;"	f
build_path_params_match	deps/plug/lib/plug/router/utils.ex	/^  def build_path_params_match(vars) do$/;"	f
build_pipes	deps/phoenix/lib/phoenix/router.ex	/^  defp build_pipes(name, []) do$/;"	f
build_pipes	deps/phoenix/lib/phoenix/router.ex	/^  defp build_pipes(name, pipe_through) do$/;"	f
build_prepare	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_prepare(route, binding) do$/;"	f
build_prepare_expr	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_prepare_expr(_key, data) when data == %{}, do: {[], []}$/;"	f
build_prepare_expr	deps/phoenix/lib/phoenix/router/route.ex	/^  defp build_prepare_expr(key, data) do$/;"	f
build_proxy_to	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_proxy_to(name, next, 0) do$/;"	f
build_proxy_to	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_proxy_to(name, next, n) do$/;"	f
build_query	deps/postgrex/lib/postgrex/error.ex	/^  defp build_query(nil), do: []$/;"	f
build_query	deps/postgrex/lib/postgrex/error.ex	/^  defp build_query(query), do: ["\\n\\n    query: ", query]$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"grant_type" => "authorization_code"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"grant_type" => "client_credentials"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"grant_type" => "password"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"grant_type" => "refresh_token"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"response_type" => "code"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"response_type" => "introspect"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"response_type" => "token"} = params) do$/;"	f
build_request	lib/boruta/oauth/request/base.ex	/^  def build_request(%{"token" => _} = params) do # revoke request$/;"	f
build_result_variable	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp build_result_variable(index) when is_integer(index) do$/;"	f
build_runtime_window	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp build_runtime_window({name, compile_acc, runtime_acc, params}, _env) do$/;"	f
build_socket	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defp build_socket(socket, id, assigns, caller) do$/;"	f
build_type_info	deps/postgrex/lib/postgrex/types.ex	/^  def build_type_info(row) do$/;"	f
build_url	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp build_url(endpoint, url) do$/;"	f
build_url	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp build_url(https, http, url) do$/;"	f
build_var	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp build_var(counter) do$/;"	f
builder_call	deps/credo/lib/credo/execution/process_definition.ex	/^  def builder_call(exec, compiled_tasks, current_task) do$/;"	f
builder_opts	deps/plug/lib/plug/builder.ex	/^  defmacro builder_opts() do$/;"	a
bump_clock	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp bump_clock(%State{mode: :normal, replica: rep, clouds: clouds, context: ctx, delta: delta} = state) do$/;"	f
bump_interpolations	deps/ecto/lib/ecto/query/builder.ex	/^  def bump_interpolations(expr, []), do: expr$/;"	f
bump_interpolations	deps/ecto/lib/ecto/query/builder.ex	/^  def bump_interpolations(expr, params) do$/;"	f
bw_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def bw_style, do: HTML.BlackWhiteStyle.style()$/;"	f
by_tag	deps/credo/lib/credo/execution/execution_timing.ex	/^  def by_tag(exec, tag_name) do$/;"	f
by_tag	deps/credo/lib/credo/execution/execution_timing.ex	/^  def by_tag(exec, tag_name, regex) do$/;"	f
bypass_through	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def bypass_through(conn) do$/;"	f
bypass_through	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def bypass_through(conn, router) do$/;"	f
bypass_through	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def bypass_through(conn, router, pipelines) do$/;"	f
byte_offset	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def byte_offset(combinator \\\\ empty(), to_wrap)$/;"	f
bytecase	deps/jason/lib/codegen.ex	/^  defmacro bytecase(var, do: clauses) do$/;"	a
bytecase	deps/jason/lib/codegen.ex	/^  defmacro bytecase(var, max, do: clauses) do$/;"	a
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?0), do: ?0$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?1), do: ?1$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?2), do: ?2$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?3), do: ?3$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?4), do: ?4$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?5), do: ?5$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?6), do: ?6$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?7), do: ?7$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?8), do: ?8$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?9), do: ?9$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?A), do: ?a$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?B), do: ?b$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?C), do: ?c$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?D), do: ?d$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?E), do: ?e$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?F), do: ?f$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?a), do: ?a$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?b), do: ?b$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?c), do: ?c$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?d), do: ?d$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?e), do: ?e$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(?f), do: ?f$/;"	f
c	deps/ecto/lib/ecto/uuid.ex	/^  defp c(_),  do: throw(:error)$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?0), do: ?0$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?1), do: ?1$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?2), do: ?2$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?3), do: ?3$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?4), do: ?4$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?5), do: ?5$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?6), do: ?6$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?7), do: ?7$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?8), do: ?8$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?9), do: ?9$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?A), do: ?a$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?B), do: ?b$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?C), do: ?c$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?D), do: ?d$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?E), do: ?e$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?F), do: ?f$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?a), do: ?a$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?b), do: ?b$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?c), do: ?c$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?d), do: ?d$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?e), do: ?e$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(?f), do: ?f$/;"	f
c	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp c(_),  do: throw(:error)$/;"	f
cache	deps/phoenix/lib/phoenix/config.ex	/^  def cache(module, key, fun) do$/;"	f
cache_insert	deps/ecto/lib/ecto/query/planner.ex	/^  defp cache_insert(cache, key, elem) do$/;"	f
cache_key	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp cache_key(parent_key, child_key, _sub_structs, dict) when is_map(dict) do$/;"	f
cache_key	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp cache_key(parent_key, child_key, sub_structs, dict) when is_list(dict) do$/;"	f
cache_mod_diff	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp cache_mod_diff(new, old) do$/;"	f
cache_reset	deps/ecto/lib/ecto/query/planner.ex	/^  defp cache_reset(cache, key, prepared) do$/;"	f
cache_static_manifest	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp cache_static_manifest(endpoint) do$/;"	f
cache_update	deps/ecto/lib/ecto/query/planner.ex	/^  defp cache_update(cache, key, cached) do$/;"	f
cached_query	deps/postgrex/lib/postgrex/protocol.ex	/^  defp cached_query(%{queries: queries}, %Query{cache: :statement} = query) do$/;"	f
cached_query	deps/postgrex/lib/postgrex/protocol.ex	/^  defp cached_query(_, _) do$/;"	f
calc_mass	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp calc_mass(ast, acc) do$/;"	f
calc_mass	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp calc_mass(ast, acc) when is_tuple(ast) do$/;"	f
calculate_column_widths	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp calculate_column_widths(routes, endpoint) do$/;"	f
calculate_hashes	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def calculate_hashes($/;"	f
calculate_named_binds	deps/ecto/lib/ecto/query/builder.ex	/^  def calculate_named_binds(query, []), do: {query, []}$/;"	f
calculate_named_binds	deps/ecto/lib/ecto/query/builder.ex	/^  def calculate_named_binds(query, vars) do$/;"	f
calculate_positional_binds	deps/ecto/lib/ecto/query/builder.ex	/^  defp calculate_positional_binds(query, vars) do$/;"	f
call	deps/connection/lib/connection.ex	/^  defdelegate call(conn, req), to: :gen_server$/;"	d
call	deps/connection/lib/connection.ex	/^  defdelegate call(conn, req, timeout), to: :gen_server$/;"	d
call	deps/credo/lib/credo/cli/command.ex	/^        def call(_exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/categories/categories_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  def call(%Execution{help: true} = exec, _opts), do: Output.print_help(exec)$/;"	f
call	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/gen.check.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/gen.config.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/help.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/info/info_command.ex	/^  def call(%Execution{help: true} = exec, _opts), do: InfoOutput.print_help(exec)$/;"	f
call	deps/credo/lib/credo/cli/command/info/info_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/list/list_command.ex	/^  def call(%Execution{help: true} = exec, _opts), do: ListOutput.print_help(exec)$/;"	f
call	deps/credo/lib/credo/cli/command/list/list_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/suggest/suggest_command.ex	/^  def call(%Execution{help: true} = exec, _opts), do: SuggestOutput.print_help(exec)$/;"	f
call	deps/credo/lib/credo/cli/command/suggest/suggest_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/command/version.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/cli/task/load_and_validate_source_files.ex	/^  def call(exec, _opts \\\\ []) do$/;"	f
call	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^  def call(exec, _opts \\\\ []) do$/;"	f
call	deps/credo/lib/credo/cli/task/run_checks.ex	/^  def call(exec, _opts \\\\ []) do$/;"	f
call	deps/credo/lib/credo/cli/task/set_relevant_issues.ex	/^  def call(exec, _opts \\\\ []) do$/;"	f
call	deps/credo/lib/credo/execution/process_definition.ex	/^      def call(exec, opts \\\\ []) do$/;"	f
call	deps/credo/lib/credo/execution/task.ex	/^      def call(%Execution{halted: false} = exec, opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/append_default_config.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/assign_exit_status_for_issues.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/determine_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/initialize_plugins.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/parse_options.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/require_requires.ex	/^  def call(%Execution{requires: requires} = exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/run_command.ex	/^  def call(exec, opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/set_default_command.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/use_colors.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/validate_config.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/validate_options.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/write_debug_report.ex	/^  def call(%Credo.Execution{debug: true} = exec, _opts) do$/;"	f
call	deps/credo/lib/credo/execution/task/write_debug_report.ex	/^  def call(exec, _opts) do$/;"	f
call	deps/phoenix/lib/phoenix/code_reloader.ex	/^  def call(conn, opts) do$/;"	f
call	deps/phoenix/lib/phoenix/controller.ex	/^        def call(conn, {:error, :not_found}) do$/;"	f
call	deps/phoenix/lib/phoenix/controller.ex	/^        def call(conn, {:error, :unauthorized}) do$/;"	f
call	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^      def call(conn, action) when is_atom(action) do$/;"	f
call	deps/phoenix/lib/phoenix/endpoint.ex	/^      def call(conn, opts) do$/;"	f
call	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^      def call(conn, opts) do$/;"	f
call	deps/phoenix/lib/phoenix/router.ex	/^      def call(conn, _opts) do$/;"	f
call	deps/phoenix/lib/phoenix/router/route.ex	/^  def call(%{path_info: path, script_name: script} = conn, {fwd_segments, plug, opts}) do$/;"	f
call	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  def call(conn, {endpoint, handler, opts}) do$/;"	f
call	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  defp call(server, kind, args) do$/;"	f
call	deps/plug/lib/plug.ex	/^        def call(conn, _opts) do$/;"	f
call	deps/plug/lib/plug.ex	/^        def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/builder.ex	/^        def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/builder.ex	/^      def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/csrf_protection.ex	/^  def call(conn, {session_key, mode, allow_hosts}) do$/;"	f
call	deps/plug/lib/plug/debugger.ex	/^      def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/error_handler.ex	/^      def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/head.ex	/^  def call(%Conn{method: "HEAD"} = conn, []), do: %{conn | method: "GET"}$/;"	f
call	deps/plug/lib/plug/head.ex	/^  def call(conn, []), do: conn$/;"	f
call	deps/plug/lib/plug/logger.ex	/^  def call(conn, level) do$/;"	f
call	deps/plug/lib/plug/method_override.ex	/^  def call(%Plug.Conn{method: "POST", body_params: body_params} = conn, []),$/;"	f
call	deps/plug/lib/plug/method_override.ex	/^  def call(%Plug.Conn{} = conn, []), do: conn$/;"	f
call	deps/plug/lib/plug/parsers.ex	/^  def call(%{body_params: body_params} = conn, {_, _, query_string_length, validate_utf8}) do$/;"	f
call	deps/plug/lib/plug/parsers.ex	/^  def call(%{method: method, body_params: %Plug.Conn.Unfetched{}} = conn, options)$/;"	f
call	deps/plug/lib/plug/request_id.ex	/^  def call(conn, req_id_header) do$/;"	f
call	deps/plug/lib/plug/session.ex	/^  def call(conn, config) do$/;"	f
call	deps/plug/lib/plug/ssl.ex	/^  def call(conn, {hsts, exclude, host, rewrite_on, log_level}) do$/;"	f
call	deps/plug/lib/plug/static.ex	/^  def call($/;"	f
call	deps/plug/lib/plug/static.ex	/^  def call(conn, _options) do$/;"	f
call	deps/plug/lib/plug/telemetry.ex	/^  def call(conn, {start_event, stop_event, opts}) do$/;"	f
call_or_apply_to_string	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^  def call_or_apply_to_string($/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^    defp call_type(unquote(agg), unquote(arity)), do: {:any, :any}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^    defp call_type(unquote(agg), unquote(arity)), do: {:any, unquote(return)}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^    defp call_type(unquote(comp), unquote(arity)), do: {:any, :boolean}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp call_type(:and, 2), do: {:boolean, :boolean}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp call_type(:ilike, 2), do: {:string, :boolean}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp call_type(:like, 2), do: {:string, :boolean}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp call_type(:not, 1), do: {:boolean, :boolean}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp call_type(:or, 2), do: {:boolean, :boolean}$/;"	f
call_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp call_type(_, _), do: nil$/;"	f
callback_defined?	deps/ex_machina/lib/ex_machina/strategy.ex	/^        defp callback_defined?(module, func_name) do$/;"	f
callback_stop	deps/connection/lib/connection.ex	/^  defp callback_stop(:throw, value, stack, s) do$/;"	f
callback_stop	deps/connection/lib/connection.ex	/^  defp callback_stop(class, reason, stack, s) do$/;"	f
callbacks_defined_by	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp callbacks_defined_by(module) do$/;"	f
caller_pids	deps/mox/lib/mox.ex	/^  defp caller_pids do$/;"	f
calling a mock from a different process	deps/mox/lib/mox.ex	/^      test "calling a mock from a different process" do$/;"	t
calls worker that runs a query	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^      test "calls worker that runs a query" do$/;"	t
calls_in_do_block	deps/credo/lib/credo/code/block.ex	/^  def calls_in_do_block(arg) do$/;"	f
calls_in_do_block	deps/credo/lib/credo/code/block.ex	/^  def calls_in_do_block({_op, _meta, arguments}) do$/;"	f
calls_in_rescue_block	deps/credo/lib/credo/code/block.ex	/^  def calls_in_rescue_block(arg) do$/;"	f
calls_in_rescue_block	deps/credo/lib/credo/code/block.ex	/^  def calls_in_rescue_block({_op, _meta, arguments}) do$/;"	f
camelize	deps/phoenix/lib/phoenix/naming.ex	/^  def camelize("", :lower), do: ""$/;"	f
camelize	deps/phoenix/lib/phoenix/naming.ex	/^  def camelize(<<?_, t :: binary>>, :lower) do$/;"	f
camelize	deps/phoenix/lib/phoenix/naming.ex	/^  def camelize(<<h, _t :: binary>> = value, :lower) do$/;"	f
camelize	deps/phoenix/lib/phoenix/naming.ex	/^  def camelize(value), do: Macro.camelize(value)$/;"	f
can set shared mode	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "can set shared mode" do$/;"	t
can_symlink?	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp can_symlink?() do$/;"	f
cancel_backoff	deps/connection/lib/connection.ex	/^  defp cancel_backoff(%{backoff: backoff} = s) do$/;"	f
cancel_backoff	deps/connection/lib/connection.ex	/^  defp cancel_backoff(%{backoff: nil} = s), do: s$/;"	f
cancel_deadline	deps/db_connection/lib/db_connection/holder.ex	/^  defp cancel_deadline(deadline) do$/;"	f
cancel_deadline	deps/db_connection/lib/db_connection/holder.ex	/^  defp cancel_deadline(nil) do$/;"	f
cancel_handshake_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  def cancel_handshake_timer(:infinity), do: :ok$/;"	f
cancel_handshake_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  def cancel_handshake_timer({:timer, tref}) do$/;"	f
cancel_listener_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  def cancel_listener_timer(:infinity), do: :ok$/;"	f
cancel_listener_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  def cancel_listener_timer({:timer, tref}) do$/;"	f
cancel_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp cancel_recv(%{timeout: timeout}, sock) do$/;"	f
cancel_request	deps/postgrex/lib/postgrex/protocol.ex	/^  defp cancel_request(%{connection_key: nil}), do: :ok$/;"	f
cancel_request	deps/postgrex/lib/postgrex/protocol.ex	/^  defp cancel_request(s) do$/;"	f
cancel_send_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp cancel_send_recv(%{connection_id: pid, connection_key: key} = s, sock) do$/;"	f
cancel_timer	deps/db_connection/lib/db_connection/connection.ex	/^  defp cancel_timer(nil), do: :ok$/;"	f
cancel_timer	deps/db_connection/lib/db_connection/connection.ex	/^  defp cancel_timer(timer) do$/;"	f
canonical_xsd	deps/decimal/lib/decimal.ex	/^  defp canonical_xsd(%Decimal{coef: 0} = decimal), do: %{decimal | exp: -1}$/;"	f
canonical_xsd	deps/decimal/lib/decimal.ex	/^  defp canonical_xsd(%Decimal{coef: coef, exp: 0} = decimal),$/;"	f
canonical_xsd	deps/decimal/lib/decimal.ex	/^  defp canonical_xsd(%Decimal{coef: coef, exp: exp} = decimal)$/;"	f
canonical_xsd	deps/decimal/lib/decimal.ex	/^  defp canonical_xsd(%Decimal{coef: coef, exp: exp} = decimal),$/;"	f
canonical_xsd	deps/decimal/lib/decimal.ex	/^  defp canonical_xsd(%Decimal{coef: coef} = decimal)$/;"	f
cardinality_to_empty	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp cardinality_to_empty(:many), do: []$/;"	f
cardinality_to_empty	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp cardinality_to_empty(:one), do: nil$/;"	f
case_sensitive_file_regular?	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp case_sensitive_file_regular?(path) do$/;"	f
case_statement_for	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  defp case_statement_for(_), do: nil$/;"	f
case_statement_for	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  defp case_statement_for({:->, _, [[false], _]}), do: false$/;"	f
case_statement_for	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  defp case_statement_for({:->, _, [[true], _]}), do: true$/;"	f
cast	deps/connection/lib/connection.ex	/^  defdelegate cast(conn, req), to: GenServer$/;"	d
cast	deps/decimal/lib/decimal.ex	/^  def cast(float) when is_float(float), do: from_float(float)$/;"	f
cast	deps/decimal/lib/decimal.ex	/^  def cast(value), do: new(value)$/;"	f
cast	deps/ecto/integration_test/support/types.exs	/^  def cast(_), do: :error$/;"	f
cast	deps/ecto/integration_test/support/types.exs	/^  def cast(integer) when is_integer(integer), do: {:ok, integer}$/;"	f
cast	deps/ecto/integration_test/support/types.exs	/^  def cast(integer), do: {:ok, {:int, integer}}$/;"	f
cast	deps/ecto/integration_test/support/types.exs	/^  def cast(string) when is_binary(string) do$/;"	f
cast	deps/ecto/integration_test/support/types.exs	/^  def cast(string), do: {:ok, string}$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  def cast(%Changeset{changes: changes, data: data, types: types, empty_values: empty_values} = changeset,$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  def cast(%Changeset{types: nil}, _params, _permitted, _opts) do$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  def cast(%{__struct__: module} = data, params, permitted, opts) do$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  def cast(_data, %{__struct__: _} = params, _permitted, _opts) do$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  def cast(data, params, permitted, opts \\\\ [])$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  def cast({data, types}, params, permitted, opts) when is_map(data) do$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  defp cast(%{} = data, %{} = types, %{} = changes, %{} = params, permitted, opts) when is_list(permitted) do$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  defp cast(%{} = data, %{} = types, %{} = changes, :invalid, permitted, opts) when is_list(permitted) do$/;"	f
cast	deps/ecto/lib/ecto/changeset.ex	/^  defp cast(%{}, %{}, %{}, params, permitted, _opts) when is_list(permitted) do$/;"	f
cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  def cast(%{cardinality: :many} = relation, owner, params, current, on_cast) when is_map(params) do$/;"	f
cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  def cast(%{cardinality: :one} = relation, _owner, nil, current, _on_cast) do$/;"	f
cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  def cast(%{related: mod} = relation, owner, params, current, on_cast) do$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^        def cast(%URI{} = uri), do: {:ok, uri}$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^        def cast(_), do: :error$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^        def cast(uri) when is_binary(uri) do$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^  def cast(_type, nil), do: {:ok, nil}$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^  def cast(type, value) do$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^  def cast({:embed, type}, value), do: cast_embed(type, value)$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^  def cast({:in, _type}, nil), do: :error$/;"	f
cast	deps/ecto/lib/ecto/type.ex	/^  def cast({:maybe, type}, value) do$/;"	f
cast	deps/ecto/lib/ecto/uuid.ex	/^  def cast(<< _::128 >> = binary), do: encode(binary)$/;"	f
cast	deps/ecto/lib/ecto/uuid.ex	/^  def cast(<< a1, a2, a3, a4, a5, a6, a7, a8, ?-,$/;"	f
cast	deps/ecto/lib/ecto/uuid.ex	/^  def cast(_), do: :error$/;"	f
cast	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def cast(<< a1, a2, a3, a4, a5, a6, a7, a8, ?-,$/;"	f
cast	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def cast(<<bin::binary-size(16)>>), do: encode(bin)$/;"	f
cast	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def cast(_), do: :error$/;"	f
cast	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def cast(value) when is_binary(value) do$/;"	f
cast	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def cast({value, :varchar}) do$/;"	f
cast	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast(record) do$/;"	f
cast!	deps/ecto/lib/ecto/uuid.ex	/^  def cast!(value) do$/;"	f
cast!	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def cast!(value) do$/;"	f
cast_all_assocs	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_all_assocs(%{__struct__: schema} = struct) do$/;"	f
cast_all_embeds	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_all_embeds(%{__struct__: schema} = struct) do$/;"	f
cast_all_fields	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_all_fields(%{__struct__: schema} = struct) do$/;"	f
cast_and_merge_params	deps/ecto/lib/ecto/query/planner.ex	/^  defp cast_and_merge_params(kind, query, expr, params, adapter) do$/;"	f
cast_any_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_any_datetime(%DateTime{} = datetime), do: cast_utc_datetime(datetime)$/;"	f
cast_any_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_any_datetime(other), do: cast_naive_datetime(other)$/;"	f
cast_assoc	deps/ecto/lib/ecto/changeset.ex	/^  def cast_assoc(changeset, name, opts \\\\ []) when is_atom(name) do$/;"	f
cast_assoc	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_assoc(assoc, assoc_key, %{__struct__: schema}) do$/;"	f
cast_assoc	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_assoc(has_many_assoc, assoc_key, struct) when is_list(has_many_assoc) do$/;"	f
cast_binary	deps/ecto/lib/ecto/type.ex	/^  defp cast_binary(_), do: :error$/;"	f
cast_binary	deps/ecto/lib/ecto/type.ex	/^  defp cast_binary(term) when is_binary(term), do: {:ok, term}$/;"	f
cast_boolean	deps/ecto/lib/ecto/type.ex	/^  defp cast_boolean(_), do: :error$/;"	f
cast_boolean	deps/ecto/lib/ecto/type.ex	/^  defp cast_boolean(term) when is_boolean(term), do: {:ok, term}$/;"	f
cast_boolean	deps/ecto/lib/ecto/type.ex	/^  defp cast_boolean(term) when term in ~w(false 0), do: {:ok, false}$/;"	f
cast_boolean	deps/ecto/lib/ecto/type.ex	/^  defp cast_boolean(term) when term in ~w(true 1),  do: {:ok, true}$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(%{"year" => empty, "month" => empty, "day" => empty}) when empty in ["", nil],$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(%{"year" => year, "month" => month, "day" => day}),$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(%{year: empty, month: empty, day: empty}) when empty in ["", nil],$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(%{year: year, month: month, day: day}),$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(_),$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(_, _, _),$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(binary) when is_binary(binary) do$/;"	f
cast_date	deps/ecto/lib/ecto/type.ex	/^  defp cast_date(year, month, day) when is_integer(year) and is_integer(month) and is_integer(day) do$/;"	f
cast_decimal	deps/ecto/lib/ecto/type.ex	/^  defp cast_decimal(term) when is_binary(term) do$/;"	f
cast_decimal	deps/ecto/lib/ecto/type.ex	/^  defp cast_decimal(term), do: same_decimal(term)$/;"	f
cast_embed	deps/ecto/lib/ecto/changeset.ex	/^  def cast_embed(changeset, name, opts \\\\ []) when is_atom(name) do$/;"	f
cast_embed	deps/ecto/lib/ecto/type.ex	/^  defp cast_embed(%{cardinality: :many, related: schema}, value) when is_list(value) do$/;"	f
cast_embed	deps/ecto/lib/ecto/type.ex	/^  defp cast_embed(%{cardinality: :many}, nil), do: {:ok, []}$/;"	f
cast_embed	deps/ecto/lib/ecto/type.ex	/^  defp cast_embed(%{cardinality: :one, related: schema}, %{__struct__: schema} = struct) do$/;"	f
cast_embed	deps/ecto/lib/ecto/type.ex	/^  defp cast_embed(%{cardinality: :one}, nil), do: {:ok, nil}$/;"	f
cast_embed	deps/ecto/lib/ecto/type.ex	/^  defp cast_embed(_embed, _value) do$/;"	f
cast_embed	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_embed(embed, embed_key, %{__struct__: schema}) do$/;"	f
cast_embed	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_embed(embeds_many, embed_key, struct) when is_list(embeds_many) do$/;"	f
cast_field	deps/ecto/lib/ecto/changeset.ex	/^  defp cast_field(key, param_key, type, params, current, empty_values, defaults, valid?) do$/;"	f
cast_field	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_field(field_key, %{__struct__: schema} = struct) do$/;"	f
cast_float	deps/ecto/lib/ecto/type.ex	/^  defp cast_float(_), do: :error$/;"	f
cast_float	deps/ecto/lib/ecto/type.ex	/^  defp cast_float(term) when is_binary(term) do$/;"	f
cast_float	deps/ecto/lib/ecto/type.ex	/^  defp cast_float(term) when is_float(term), do: {:ok, term}$/;"	f
cast_float	deps/ecto/lib/ecto/type.ex	/^  defp cast_float(term) when is_integer(term), do: {:ok, :erlang.float(term)}$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:any), do: &{:ok, &1}$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:binary), do: &cast_binary\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:binary_id), do: &cast_binary\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:boolean), do: &cast_boolean\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:date), do: &cast_date\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:decimal), do: &cast_decimal\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:float), do: &cast_float\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:id), do: &cast_integer\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:integer), do: &cast_integer\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:map), do: &cast_map\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:naive_datetime), do: &maybe_truncate_usec(cast_naive_datetime(&1))$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:naive_datetime_usec), do: &maybe_pad_usec(cast_naive_datetime(&1))$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:string), do: &cast_binary\/1$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:time), do: &maybe_truncate_usec(cast_time(&1))$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:time_usec), do: &maybe_pad_usec(cast_time(&1))$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:utc_datetime), do: &maybe_truncate_usec(cast_utc_datetime(&1))$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(:utc_datetime_usec), do: &maybe_pad_usec(cast_utc_datetime(&1))$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun(mod) when is_atom(mod), do: &mod.cast(&1)$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun({:array, type}), do: &array(&1, cast_fun(type), [])$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun({:in, type}), do: &array(&1, cast_fun(type), [])$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun({:map, type}), do: &map(&1, cast_fun(type), %{})$/;"	f
cast_fun	deps/ecto/lib/ecto/type.ex	/^  defp cast_fun({:param, :any_datetime}), do: &cast_any_datetime(&1)$/;"	f
cast_integer	deps/ecto/lib/ecto/type.ex	/^  defp cast_integer(_), do: :error$/;"	f
cast_integer	deps/ecto/lib/ecto/type.ex	/^  defp cast_integer(term) when is_binary(term) do$/;"	f
cast_integer	deps/ecto/lib/ecto/type.ex	/^  defp cast_integer(term) when is_integer(term), do: {:ok, term}$/;"	f
cast_key	deps/ecto/lib/ecto/changeset.ex	/^  defp cast_key(key) when is_atom(key),$/;"	f
cast_key	deps/ecto/lib/ecto/changeset.ex	/^  defp cast_key(key),$/;"	f
cast_map	deps/ecto/lib/ecto/type.ex	/^  defp cast_map(_), do: :error$/;"	f
cast_map	deps/ecto/lib/ecto/type.ex	/^  defp cast_map(term) when is_map(term), do: {:ok, term}$/;"	f
cast_merge	deps/ecto/lib/ecto/changeset.ex	/^  defp cast_merge(cs1, cs2) do$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime("-" <> rest) do$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime(%{"year" => empty, "month" => empty, "day" => empty,$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime(%{year: empty, month: empty, day: empty,$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime(%{} = map) do$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime(<<year::4-bytes, ?-, month::2-bytes, ?-, day::2-bytes, sep, hour::2-bytes, ?:, minute::2-bytes>>)$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime(_) do$/;"	f
cast_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_naive_datetime(binary) when is_binary(binary) do$/;"	f
cast_or_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp cast_or_change(%{cardinality: :many} = relation, value, current, current_pks_fun, new_pks_fun, fun)$/;"	f
cast_or_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp cast_or_change(%{cardinality: :many}, [], [], _current_pks, _new_pks, _fun) do$/;"	f
cast_or_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp cast_or_change(%{cardinality: :one} = relation, value, current, current_pks_fun, new_pks_fun, fun)$/;"	f
cast_or_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp cast_or_change(_, _, _, _, _, _), do: :error$/;"	f
cast_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp cast_param(_kind, query, expr, %DynamicExpr{}, _type, _value) do$/;"	f
cast_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp cast_param(_kind, query, expr, [{key, _} | _], _type, _value) when is_atom(key) do$/;"	f
cast_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp cast_param(kind, query, expr, v, type, adapter) do$/;"	f
cast_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp cast_param(kind, type, v) do$/;"	f
cast_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp cast_param(kind, type, v, adapter) do$/;"	f
cast_relation	deps/ecto/lib/ecto/changeset.ex	/^  defp cast_relation(type, %Changeset{data: data, types: types}, _name, _opts)$/;"	f
cast_relation	deps/ecto/lib/ecto/changeset.ex	/^  defp cast_relation(type, %Changeset{} = changeset, key, opts) do$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(%{"hour" => empty, "minute" => empty}) when empty in ["", nil],$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(%{"hour" => hour, "minute" => minute} = map),$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(%{hour: empty, minute: empty}) when empty in ["", nil],$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(%{hour: hour, minute: minute, second: second, microsecond: {microsecond, precision}}),$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(%{hour: hour, minute: minute} = map),$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(<<hour::2-bytes, ?:, minute::2-bytes>>),$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(_),$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(_, _, _, _) do$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(binary) when is_binary(binary) do$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(hour, minute, sec, nil) do$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(hour, minute, sec, usec) when is_integer(usec) do$/;"	f
cast_time	deps/ecto/lib/ecto/type.ex	/^  defp cast_time(hour, minute, sec, {usec, precision})$/;"	f
cast_to_explanation	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp cast_to_explanation(issue, source_file) do$/;"	f
cast_to_json	deps/credo/lib/credo/cli/command/explain/output/json.ex	/^  defp cast_to_json(explanation) do$/;"	f
cast_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_utc_datetime("-" <> rest) do$/;"	f
cast_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_utc_datetime(%DateTime{time_zone: "Etc\/UTC"} = datetime), do: {:ok, datetime}$/;"	f
cast_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_utc_datetime(%DateTime{} = datetime) do$/;"	f
cast_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_utc_datetime(<<year::4-bytes, ?-, month::2-bytes, ?-, day::2-bytes, sep, hour::2-bytes, ?:, minute::2-bytes>>)$/;"	f
cast_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_utc_datetime(binary) when is_binary(binary) do$/;"	f
cast_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp cast_utc_datetime(value) do$/;"	f
cast_value	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp cast_value(field_type, value, struct) do$/;"	f
category	deps/credo/lib/credo/check.ex	/^      def category do$/;"	f
category_body	deps/credo/lib/credo/check.ex	/^  defp category_body(nil) do$/;"	f
category_body	deps/credo/lib/credo/check.ex	/^  defp category_body(value), do: value$/;"	f
category_count	deps/credo/lib/credo/cli/output/summary.ex	/^  defp category_count(issues, category) do$/;"	f
cd	deps/phoenix/lib/phoenix/endpoint/watcher.ex	/^  defp cd(opts), do: opts[:cd] || File.cwd!()$/;"	f
certificate_and_key	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  def certificate_and_key(key_size, name, hostnames) do$/;"	f
challenge	deps/postgrex/lib/postgrex/scram.ex	/^  def challenge do$/;"	f
change	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191009182339_create_boruta.exs	/^  def change do$/;"	f
change	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^  def change do$/;"	f
change	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^  def change do$/;"	f
change	.elixir_ls/build/test/lib/ex_machina/priv/test_repo/migrations/1_migrate_all.exs	/^  def change do$/;"	f
change	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.schema/migration.exs	/^  def change do$/;"	f
change	_build/dev/lib/boruta/priv/repo/migrations/20191009182339_create_boruta.exs	/^  def change do$/;"	f
change	_build/dev/lib/boruta/priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^  def change do$/;"	f
change	_build/dev/lib/boruta/priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^  def change do$/;"	f
change	_build/test/lib/boruta/priv/repo/migrations/20191009182339_create_boruta.exs	/^  def change do$/;"	f
change	_build/test/lib/boruta/priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^  def change do$/;"	f
change	_build/test/lib/boruta/priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^  def change do$/;"	f
change	_build/test/lib/ex_machina/priv/test_repo/migrations/1_migrate_all.exs	/^  def change do$/;"	f
change	deps/ecto/lib/ecto/changeset.ex	/^  def change(%Changeset{changes: changes, types: types} = changeset, new_changes)$/;"	f
change	deps/ecto/lib/ecto/changeset.ex	/^  def change(%Changeset{types: nil}, _changes) do$/;"	f
change	deps/ecto/lib/ecto/changeset.ex	/^  def change(%{__struct__: struct} = data, changes) when is_map(changes) or is_list(changes) do$/;"	f
change	deps/ecto/lib/ecto/changeset.ex	/^  def change(data, changes \\\\ %{})$/;"	f
change	deps/ecto/lib/ecto/changeset.ex	/^  def change({data, types}, changes) when is_map(data) do$/;"	f
change	deps/ecto/lib/ecto/changeset/relation.ex	/^  def change(%{cardinality: :one} = relation, nil, current) do$/;"	f
change	deps/ecto/lib/ecto/changeset/relation.ex	/^  def change(%{related: mod} = relation, value, current) do$/;"	f
change	deps/ecto/lib/ecto/schema.ex	/^        def change do$/;"	f
change	deps/ecto_sql/integration_test/sql/migration.exs	/^    def change do$/;"	f
change	deps/ecto_sql/integration_test/sql/migrator.exs	/^    def change do$/;"	f
change	deps/ecto_sql/integration_test/support/migration.exs	/^  def change do$/;"	f
change	deps/ecto_sql/lib/ecto/migration.ex	/^        def change do$/;"	f
change	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^    def change do$/;"	f
change	deps/ex_machina/priv/test_repo/migrations/1_migrate_all.exs	/^  def change do$/;"	f
change	deps/phoenix/priv/templates/phx.gen.schema/migration.exs	/^  def change do$/;"	f
change	lib/mix/tasks/boruta.gen.migrations.ex	/^    def change do$/;"	f
change	priv/repo/migrations/20191009182339_create_boruta.exs	/^  def change do$/;"	f
change	priv/repo/migrations/20191127201313_add_revoked_at_to_tokens.exs	/^  def change do$/;"	f
change	priv/repo/migrations/20200218193706_add_supported_grant_types_to_clients.exs	/^  def change do$/;"	f
change_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def change_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
change_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def change_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
change_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "change_<%= schema.singular %>\/1 returns a <%= schema.singular %> changeset" do$/;"	t
change_	deps/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def change_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
change_	deps/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def change_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
change_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "change_<%= schema.singular %>\/1 returns a <%= schema.singular %> changeset" do$/;"	t
change_as_field	deps/ecto/lib/ecto/changeset.ex	/^  defp change_as_field(types, key, value) do$/;"	f
change_parents	deps/ecto/lib/ecto/repo/schema.ex	/^  defp change_parents(changes, struct, assocs) do$/;"	f
changeset	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.embedded/embedded_schema.ex	/^  def changeset(%<%= inspect schema.alias %>{} = <%= schema.singular %>, attrs) do$/;"	f
changeset	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.schema/schema.ex	/^  def changeset(<%= schema.singular %>, attrs) do$/;"	f
changeset	deps/ecto/integration_test/support/schemas.exs	/^  def changeset(schema, params) do$/;"	f
changeset	deps/ecto/lib/ecto.ex	/^        def changeset(user, params \\\\ %{}) do$/;"	f
changeset	deps/ecto/lib/ecto/changeset.ex	/^        def changeset(:update, struct, params \\\\ %{}) do$/;"	f
changeset	deps/ecto/lib/ecto/changeset.ex	/^        def changeset(comment, %{"delete" => "true"}) do$/;"	f
changeset	deps/ecto/lib/ecto/changeset.ex	/^        def changeset(comment, params) do$/;"	f
changeset	deps/ecto/lib/ecto/changeset.ex	/^        def changeset(user, params \\\\ %{}) do$/;"	f
changeset	deps/ecto/lib/ecto/changeset.ex	/^      def changeset(struct, params) do$/;"	f
changeset	deps/ecto/lib/ecto/schema.ex	/^        def changeset(struct, params \\\\ %{}) do$/;"	f
changeset	deps/ecto/lib/ecto/schema.ex	/^      def changeset(schema, params) do$/;"	f
changeset	deps/phoenix/priv/templates/phx.gen.embedded/embedded_schema.ex	/^  def changeset(%<%= inspect schema.alias %>{} = <%= schema.singular %>, attrs) do$/;"	f
changeset	deps/phoenix/priv/templates/phx.gen.schema/schema.ex	/^  def changeset(<%= schema.singular %>, attrs) do$/;"	f
changeset	lib/boruta/adapters/ecto/schemas/resource_owner_authorized_scope.ex	/^  def changeset(scope, attrs) do$/;"	f
changeset	lib/boruta/adapters/ecto/schemas/scope.ex	/^  def changeset(scope, attrs) do$/;"	f
changeset	lib/boruta/adapters/ecto/schemas/token.ex	/^  def changeset(token, attrs) do$/;"	f
changeset_method	lib/boruta/adapters/ecto/access_tokens.ex	/^  defp changeset_method(_options), do: :changeset$/;"	f
changeset_method	lib/boruta/adapters/ecto/access_tokens.ex	/^  defp changeset_method(refresh_token: true), do: :changeset_with_refresh_token$/;"	f
changeset_with_refresh_token	lib/boruta/adapters/ecto/schemas/token.ex	/^  def changeset_with_refresh_token(token, attrs) do$/;"	f
channel	deps/phoenix/lib/phoenix/socket.ex	/^  defmacro channel(topic_pattern, module, opts \\\\ []) do$/;"	a
channel_join	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp channel_join(channel, topic, auth_payload, socket) do$/;"	f
channel_log	deps/phoenix/lib/phoenix/logger.ex	/^  defp channel_log(_log_option, %{topic: "phoenix" <> _}, _fun), do: :ok$/;"	f
channel_log	deps/phoenix/lib/phoenix/logger.ex	/^  defp channel_log(log_option, %{private: private}, fun) do$/;"	f
char_at	deps/puid/lib/puid.ex	/^          defp char_at(ndx), do: @puid_chars |> :binary.part(ndx, 1)$/;"	f
char_at	deps/puid/lib/puid.ex	/^          defp char_at(ndx), do: @puid_chars |> String.at(ndx)$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:alpha), do: chars(:alpha_upper) <> chars(:alpha_lower)$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:alpha_lower), do: "abcdefghijklmnopqrstuvwxyz"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:alpha_upper), do: "ABCDEFGHIJKLMNOPQRSTUVWXYZ"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:alphanum), do: chars(:alpha) <> chars(:decimal)$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:alphanum_lower), do: chars(:alpha_lower) <> chars(:decimal)$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:alphanum_upper), do: chars(:alpha_upper) <> chars(:decimal)$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:base32), do: chars(:alpha_upper) <> "234567"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:base32_hex), do: chars(:decimal) <> "abcdefghijklmnopqrstuv"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:base32_hex_upper), do: chars(:decimal) <> "ABCDEFGHIJKLMNOPQRSTUV"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:decimal), do: "0123456789"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:hex), do: chars(:decimal) <> "abcdef"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:hex_upper), do: chars(:decimal) <> "ABCDEF"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:printable_ascii), do: ?!..?~ |> Enum.to_list() |> to_string()$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:safe32), do: "2346789bdfghjmnpqrtBDFGHJLMNPQRT"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(:safe64), do: chars(:alpha_upper) <> chars(:alpha_lower) <> chars(:decimal) <> "-_"$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(_), do: :undefined$/;"	f
chars	deps/puid/lib/charset.ex	/^  def chars(charset)$/;"	f
check	deps/dialyxir/lib/dialyxir/plt.ex	/^  def check(plts, fun \\\\ &check_plt\/4) do$/;"	f
check_action!	deps/ecto/lib/ecto/association.ex	/^  defp check_action!(%{related: schema}, :delete, :insert),$/;"	f
check_action!	deps/ecto/lib/ecto/association.ex	/^  defp check_action!(_, _, _), do: :ok$/;"	f
check_action!	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp check_action!(changeset, allowed_actions) do$/;"	f
check_action!	deps/ecto/lib/ecto/embedded.ex	/^  defp check_action!(:replace, action, %{on_replace: :delete} = embed),$/;"	f
check_action!	deps/ecto/lib/ecto/embedded.ex	/^  defp check_action!(:update, :insert, %{related: schema}),$/;"	f
check_action!	deps/ecto/lib/ecto/embedded.ex	/^  defp check_action!(action, _, _), do: action$/;"	f
check_beams	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp check_beams(plt, beams, nil, prev_plt) do$/;"	f
check_beams	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp check_beams(plt, beams, old_beams) do$/;"	f
check_beams	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp check_beams(plt, beams, old_beams, _prev_plt) do$/;"	f
check_binds	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp check_binds(query, count) do$/;"	f
check_color	deps/credo/lib/credo/cli/output.ex	/^  def check_color(category) when is_atom(category) do$/;"	f
check_color	deps/credo/lib/credo/cli/output.ex	/^  def check_color(category) when is_binary(category) do$/;"	f
check_color	deps/credo/lib/credo/cli/output.ex	/^  def check_color(check_mod) do$/;"	f
check_config	deps/dialyxir/lib/dialyxir/project.ex	/^  def check_config do$/;"	f
check_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def check_constraint(changeset, field, opts \\\\ []) do$/;"	f
check_decimal	deps/ecto/lib/ecto/type.ex	/^  defp check_decimal(%Decimal{coef: coef} = decimal, _) when is_integer(coef), do: {:ok, decimal}$/;"	f
check_decimal	deps/ecto/lib/ecto/type.ex	/^  defp check_decimal(_decimal, false), do: :error$/;"	f
check_decimal	deps/ecto/lib/ecto/type.ex	/^  defp check_decimal(decimal, true) do$/;"	f
check_defined?	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp check_defined?({atom, _}), do: check_defined?({atom})$/;"	f
check_defined?	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp check_defined?({atom}) do$/;"	f
check_dialyzer	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp check_dialyzer do$/;"	f
check_field_type!	deps/ecto/lib/ecto/schema.ex	/^  defp check_field_type!(name, :datetime, _opts) do$/;"	f
check_field_type!	deps/ecto/lib/ecto/schema.ex	/^  defp check_field_type!(name, type, opts) do$/;"	f
check_field_type!	deps/ecto/lib/ecto/schema.ex	/^  defp check_field_type!(name, {:embed, _}, _opts) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_, _, _, _), do: false$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_, {:and_op, _, _}, [{:"(", _} | _], _) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_, {:comp_op, _, _}, [{:"(", _} | _], _) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_, {:or_op, _, _}, [{:"(", _} | _], _) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_start, {:")", _}, [{:and_op, _, _} | _tail], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_start, {:")", _}, [{:comp_op, _, _} | _tail], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_start, {:")", _}, [{:dual_op, _, _} | _tail], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_start, {:")", _}, [{:mult_op, _, _} | _tail], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_start, {:")", _}, [{:or_op, _, _} | _tail], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(_start, {:")", _}, [{:rel_op, _, _} | _tail], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(start, token, [next_token | t], _prev_head) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(start, {:",", _}, _, {:")", _}) do$/;"	f
check_for_closing_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_closing_paren(start, {:do, _}, _tail, {:")", _}) do$/;"	f
check_for_missing_keys	deps/plug/lib/plug/ssl.ex	/^  defp check_for_missing_keys(options) do$/;"	f
check_for_nils	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp check_for_nils(value, _field), do: value$/;"	f
check_for_nils	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp check_for_nils({:^, _, [var]}, field) do$/;"	f
check_for_opening_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_opening_paren($/;"	f
check_for_opening_paren	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp check_for_opening_paren(_, _, _), do: false$/;"	f
check_formatter_module	deps/ex_doc/lib/ex_doc.ex	/^  defp check_formatter_module(modname, argname) do$/;"	f
check_hash?	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp check_hash?(hash) do$/;"	f
check_module_name_availability!	deps/phoenix/lib/mix/phoenix.ex	/^  def check_module_name_availability!(name) do$/;"	f
check_name	deps/credo/lib/credo/cli/output.ex	/^  defp check_name({check, _check_info}), do: check_name({check})$/;"	f
check_name	deps/credo/lib/credo/cli/output.ex	/^  defp check_name({check}) do$/;"	f
check_name_for	deps/credo/lib/credo/cli/command/gen.check.ex	/^  def check_name_for(filename) do$/;"	f
check_no_usec!	deps/ecto/lib/ecto/type.ex	/^  defp check_no_usec!(%struct{} = datetime, kind) do$/;"	f
check_no_usec!	deps/ecto/lib/ecto/type.ex	/^  defp check_no_usec!(%{microsecond: {0, 0}} = datetime, _kind), do: datetime$/;"	f
check_operations_valid	deps/ecto/lib/ecto/multi.ex	/^  defp check_operations_valid(operations) do$/;"	f
check_options!	deps/ecto/lib/ecto/schema.ex	/^  defp check_options!(opts, valid, fun_arity) do$/;"	f
check_origin	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_origin(%Plug.Conn{halted: true} = conn, _handler, _endpoint, _opts, _sender),$/;"	f
check_origin	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_origin(conn, handler, endpoint, opts, sender \\\\ &Plug.Conn.send_resp\/1)$/;"	f
check_origin	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_origin(conn, handler, endpoint, opts, sender) do$/;"	f
check_origin_config	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp check_origin_config(handler, endpoint, opts) do$/;"	f
check_plt	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp check_plt(plt, apps, old_beams, {prev_plt, prev_beams, prev_cache}) do$/;"	f
check_plt	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp check_plt(force_check?) do$/;"	f
check_plts	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp check_plts(plts, fun) do$/;"	f
check_processes	deps/postgrex/lib/postgrex/type_server.ex	/^  defp check_processes(%{connections: connections} = state) do$/;"	f
check_processes	deps/postgrex/lib/postgrex/type_server.ex	/^  defp check_processes(%{lock: ref} = state) when is_reference(ref) do$/;"	f
check_safe_key!	deps/jason/lib/codegen.ex	/^  defp check_safe_key!(binary) do$/;"	f
check_serializer	deps/plug/lib/plug/session/cookie.ex	/^  defp check_serializer(_),$/;"	f
check_serializer	deps/plug/lib/plug/session/cookie.ex	/^  defp check_serializer(serializer) when is_atom(serializer), do: serializer$/;"	f
check_signing_salt	deps/plug/lib/plug/session/cookie.ex	/^  defp check_signing_salt(opts) do$/;"	f
check_subprotocols	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_subprotocols(%Plug.Conn{halted: true} = conn, _subprotocols), do: conn$/;"	f
check_subprotocols	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_subprotocols(conn, nil), do: conn$/;"	f
check_subprotocols	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_subprotocols(conn, subprotocols) when is_list(subprotocols) do$/;"	f
check_subprotocols	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_subprotocols(conn, subprotocols)$/;"	f
check_subprotocols	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def check_subprotocols(conn, subprotocols), do: subprotocols_error_response(conn, subprotocols)$/;"	f
check_symlinks	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def check_symlinks do$/;"	f
check_tag	deps/credo/lib/credo/cli/output.ex	/^  def check_tag(category, in_parens \\\\ true)$/;"	f
check_tag	deps/credo/lib/credo/cli/output.ex	/^  def check_tag(category, in_parens) when is_atom(category) do$/;"	f
check_tag	deps/credo/lib/credo/cli/output.ex	/^  def check_tag(category, in_parens) when is_binary(category) do$/;"	f
check_tag	deps/credo/lib/credo/cli/output.ex	/^  def check_tag(check_mod, in_parens) do$/;"	f
check_tuple_ignores_issue?	deps/credo/lib/credo/check/config_comment.ex	/^  defp check_tuple_ignores_issue?(check_or_regex, issue) do$/;"	f
check_usec!	deps/ecto/lib/ecto/type.ex	/^  defp check_usec!(%{microsecond: {_, 6}} = datetime, _kind), do: datetime$/;"	f
check_usec!	deps/ecto/lib/ecto/type.ex	/^  defp check_usec!(datetime, kind) do$/;"	f
check_utc_timezone!	deps/ecto/lib/ecto/type.ex	/^  defp check_utc_timezone!(%{time_zone: "Etc\/UTC"} = datetime, _kind), do: datetime$/;"	f
check_utc_timezone!	deps/ecto/lib/ecto/type.ex	/^  defp check_utc_timezone!(datetime, kind) do$/;"	f
checkin	deps/db_connection/lib/db_connection.ex	/^  defp checkin(%DBConnection{pool_ref: pool_ref}) do$/;"	f
checkin	deps/db_connection/lib/db_connection.ex	/^  defp checkin(%DBConnection{} = conn, fun, meter, opts) do$/;"	f
checkin	deps/db_connection/lib/db_connection.ex	/^  defp checkin(pool, fun, meter, opts) do$/;"	f
checkin	deps/db_connection/lib/db_connection/holder.ex	/^  def checkin(pool_ref) do$/;"	f
checkin	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def checkin(manager, opts) do$/;"	f
checkin	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp checkin(state) do$/;"	f
checkin	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def checkin(state), do: proxy(:checkin, state, [])$/;"	f
checkin	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def checkin(repo, _opts \\\\ []) when is_atom(repo) do$/;"	f
checkin	deps/postgrex/lib/postgrex/notifications.ex	/^  defp checkin(protocol, s) do$/;"	f
checkin	deps/postgrex/lib/postgrex/protocol.ex	/^  def checkin(%{buffer: buffer} = s) when is_binary(buffer) do$/;"	f
checkin	deps/postgrex/lib/postgrex/protocol.ex	/^  def checkin(%{postgres: :transaction, transactions: :strict} = s) do$/;"	f
checking_suffix	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp checking_suffix(_), do: ""$/;"	f
checking_suffix	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp checking_suffix(count) when count > @many_source_files do$/;"	f
checkout	deps/db_connection/lib/db_connection.ex	/^  defp checkout(%DBConnection{} = conn, fun, meter, opts) do$/;"	f
checkout	deps/db_connection/lib/db_connection.ex	/^  defp checkout(pool, fun, meter, opts) do$/;"	f
checkout	deps/db_connection/lib/db_connection.ex	/^  defp checkout(pool, meter, opts) do$/;"	f
checkout	deps/db_connection/lib/db_connection/holder.ex	/^  def checkout(pool, opts) do$/;"	f
checkout	deps/db_connection/lib/db_connection/holder.ex	/^  defp checkout(pool, callers, queue?, start, timeout) do$/;"	f
checkout	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def checkout(manager, opts) do$/;"	f
checkout	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp checkout({pid, ref} = from, %{holder: holder} = state) do$/;"	f
checkout	deps/db_connection/lib/db_connection/task.ex	/^  def checkout({:via, __MODULE__, pool_ref}, _opts) do$/;"	f
checkout	deps/ecto/lib/ecto/repo.ex	/^      def checkout(fun, opts \\\\ []) when is_function(fun) do$/;"	f
checkout	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  def checkout(_, _, _), do: error!()$/;"	f
checkout	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def checkout(meta, opts, fun) do$/;"	f
checkout	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def checkout(adapter_meta, opts, callback) do$/;"	f
checkout	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def checkout(state), do: proxy(:checkout, state, [])$/;"	f
checkout	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def checkout(repo, opts \\\\ []) when is_atom(repo) do$/;"	f
checkout	deps/postgrex/lib/postgrex/protocol.ex	/^  def checkout(%{buffer: :active_once} = s) do$/;"	f
checkout	deps/postgrex/lib/postgrex/protocol.ex	/^  def checkout(%{postgres: :transaction, transactions: :strict} = s) do$/;"	f
checkout inside transaction	deps/ecto_sql/integration_test/sql/transaction.exs	/^    test "checkout inside transaction" do$/;"	t
checkout raises on transaction attempt	deps/ecto_sql/integration_test/sql/transaction.exs	/^    test "checkout raises on transaction attempt" do$/;"	t
checkout_call	deps/db_connection/lib/db_connection/holder.ex	/^  defp checkout_call(pid, callers, queue?, start, timeout) do$/;"	f
checkout_or_transaction	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp checkout_or_transaction(fun, adapter_meta, opts, callback) do$/;"	f
checkout_result	deps/db_connection/lib/db_connection/holder.ex	/^  defp checkout_result(holder, pool_ref, checkin_time) do$/;"	f
checks	deps/credo/lib/credo/cli/command/info/info_command.ex	/^  defp checks(exec) do$/;"	f
checks	deps/credo/lib/credo/execution.ex	/^  def checks(%__MODULE__{checks: checks, only_checks: only_checks, ignore_checks: ignore_checks}) do$/;"	f
checks	deps/credo/lib/credo/execution.ex	/^  def checks(%__MODULE__{checks: nil}) do$/;"	f
checks	deps/credo/lib/credo/execution.ex	/^  def checks(exec)$/;"	f
checks out the connection	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "checks out the connection" do$/;"	t
checks_from_data	deps/credo/lib/credo/config_file.ex	/^  defp checks_from_data(data) do$/;"	f
child_changeset	deps/ecto/lib/ecto/schema.ex	/^      defp child_changeset(schema, params) do$/;"	f
child_spec	deps/db_connection/lib/db_connection.ex	/^  def child_spec(conn_mod, opts) do$/;"	f
child_spec	deps/db_connection/lib/db_connection/connection.ex	/^  def child_spec(mod, opts, pool, tag, child_opts) do$/;"	f
child_spec	deps/db_connection/lib/db_connection/ownership.ex	/^  def child_spec(args) do$/;"	f
child_spec	deps/ecto/lib/ecto/repo.ex	/^      def child_spec(opts) do$/;"	f
child_spec	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def child_spec(opts) do$/;"	f
child_spec	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def child_spec(opts) do$/;"	f
child_spec	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def child_spec(opts) do$/;"	f
child_spec	deps/phoenix/lib/phoenix/endpoint.ex	/^      def child_spec(opts) do$/;"	f
child_spec	deps/phoenix/lib/phoenix/endpoint/cowboy2_adapter.ex	/^  def child_spec(scheme, endpoint, config) do$/;"	f
child_spec	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  def child_spec(scheme, endpoint, config) do$/;"	f
child_spec	deps/phoenix/lib/phoenix/presence.ex	/^      def child_spec(opts) do$/;"	f
child_spec	deps/phoenix/lib/phoenix/socket.ex	/^      def child_spec(opts) do$/;"	f
child_spec	deps/phoenix/lib/phoenix/socket/transport.ex	/^        def child_spec(opts) do$/;"	f
child_spec	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  def child_spec(opts) when is_list(opts) do$/;"	f
child_spec	deps/plug/lib/plug/adapters/cowboy.ex	/^  def child_spec(opts) do$/;"	f
child_spec	deps/plug/lib/plug/adapters/cowboy.ex	/^  def child_spec(scheme, plug, opts, cowboy_options \\\\ []) do$/;"	f
child_spec	deps/plug/lib/plug/adapters/cowboy2.ex	/^  def child_spec(opts) do$/;"	f
child_spec	deps/postgrex/lib/postgrex.ex	/^  def child_spec(opts) do$/;"	f
choice	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def choice(combinator \\\\ empty(), [_, _ | _] = choices) when is_combinator(combinator) do$/;"	f
chunk	deps/plug/lib/plug/adapters/test/conn.ex	/^  def chunk(%{chunks: chunks} = state, body) do$/;"	f
chunk	deps/plug/lib/plug/adapters/test/conn.ex	/^  def chunk(%{method: "HEAD"} = state, _body), do: {:ok, "", state}$/;"	f
chunk	deps/plug/lib/plug/conn.ex	/^  def chunk(%Conn{adapter: {adapter, payload}, state: :chunked} = conn, chunk) do$/;"	f
chunk	deps/plug/lib/plug/conn.ex	/^  def chunk(%Conn{}, chunk) when is_binary(chunk) or is_list(chunk) do$/;"	f
chunk_every	deps/credo/lib/credo/backports/enum.ex	/^    def chunk_every(list, count, step), do: Enum.chunk(list, count, step, [])$/;"	f
chunk_every	deps/credo/lib/credo/backports/enum.ex	/^    def chunk_every(list, count, step), do: Enum.chunk_every(list, count, step)$/;"	f
chunk_every	deps/credo/lib/credo/backports/enum.ex	/^  def chunk_every(list, count, step)$/;"	f
classify_merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp classify_merge(_, _take) do$/;"	f
classify_merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp classify_merge({:%, meta, [name, {:%{}, _, fields}]}, _take)$/;"	f
classify_merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp classify_merge({:%{}, meta, _}, _take) do$/;"	f
classify_merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp classify_merge({:%{}, meta, fields}, _take)$/;"	f
classify_merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp classify_merge({:&, meta, [ix]}, take) when is_integer(ix) do$/;"	f
clause_match	deps/plug/lib/plug/debugger.ex	/^  defp clause_match(%{match?: false, node: node}, _),$/;"	f
clause_match	deps/plug/lib/plug/debugger.ex	/^  defp clause_match(%{match?: true, node: node}, _),$/;"	f
clause_match	deps/plug/lib/plug/debugger.ex	/^  defp clause_match(_, string), do: string$/;"	f
clauses_to_ranges	deps/jason/lib/codegen.ex	/^  defp clauses_to_ranges([{:->, _, [[default, rest], action]} | tail], acc) do$/;"	f
clauses_to_ranges	deps/jason/lib/codegen.ex	/^  defp clauses_to_ranges([{:->, _, [[{:in, _, [byte, range]}, rest], action]} | tail], acc) do$/;"	f
clean	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  def clean(opts, fun \\\\ &delete_plt\/4) do$/;"	f
clean	deps/phoenix/lib/phoenix/digester.ex	/^  def clean(path, age, keep, now \\\\ now()) do$/;"	f
clean_and_verify_options!	deps/credo/lib/credo/check/warning/unused_keyword_operation.ex	/^      def clean_and_verify_options!(keywords) do$/;"	f
clean_charlists_strings_and_sigils	deps/credo/lib/credo/code.ex	/^  def clean_charlists_strings_and_sigils(source_file_or_source) do$/;"	f
clean_charlists_strings_sigils_and_comments	deps/credo/lib/credo/code.ex	/^  def clean_charlists_strings_sigils_and_comments(source_file_or_source, sigil_replacement \\\\ " ") do$/;"	f
clean_doc	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  defp clean_doc(doc) do$/;"	f
clean_extension_registry	deps/makeup/lib/makeup/registry.ex	/^  def clean_extension_registry() do$/;"	f
clean_name_registry	deps/makeup/lib/makeup/registry.ex	/^  def clean_name_registry() do$/;"	f
clean_test_fixtures	deps/ex_doc/mix.exs	/^  defp clean_test_fixtures(_args) do$/;"	f
cleanup	deps/db_connection/lib/db_connection.ex	/^  defp cleanup(conn, fun, args, meter, opts) do$/;"	f
cleanup	deps/db_connection/lib/db_connection/holder.ex	/^  def cleanup(pool_ref, fun, args, opts) do$/;"	f
cleanup_stacktrace	deps/db_connection/lib/db_connection/connection.ex	/^  defp cleanup_stacktrace(stack) do$/;"	f
clear	deps/crypto_rand/lib/crypto_rand.ex	/^  def clear(),$/;"	f
clear	deps/earmark/lib/earmark/context.ex	/^  def clear(%__MODULE__{} = ctx) do$/;"	f
clear	deps/ex_doc/lib/ex_doc/refs.ex	/^  def clear() do$/;"	f
clear_cache	deps/phoenix/lib/phoenix/config.ex	/^  def clear_cache(module) do$/;"	f
clear_flash	deps/phoenix/lib/phoenix/controller.ex	/^  def clear_flash(conn) do$/;"	f
clear_flash	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate clear_flash(conn), to: Phoenix.Controller$/;"	d
clear_session	deps/plug/lib/plug/conn.ex	/^  def clear_session(conn) do$/;"	f
clear_value	deps/earmark/lib/earmark/context.ex	/^  def clear_value(%__MODULE__{} = ctx), do: %{ctx | value: []}$/;"	f
client_credentials	lib/boruta/oauth/json/schema.ex	/^  def client_credentials do$/;"	f
client_factory	test/support/boruta_factory.ex	/^  def client_factory do$/;"	f
client_fixture	test/boruta/admin_test.exs	/^  def client_fixture(attrs \\\\ %{}) do$/;"	f
client_ref	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp client_ref(pid) when is_pid(pid), do: self()$/;"	f
client_ref	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp client_ref(topic) when is_binary(topic), do: topic$/;"	f
clock	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp clock(state), do: State.clocks(state.presences)$/;"	f
clock	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp clock(%State{replica: rep, context: ctx}), do: Map.get(ctx, rep, 0)$/;"	f
clocks	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def clocks(%State{replica: rep, context: ctx}), do: {rep, ctx}$/;"	f
clockset_replicas	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def clockset_replicas(clockset) do$/;"	f
clockset_to_sync	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp clockset_to_sync(state) do$/;"	f
close	deps/connection/lib/connection.ex	/^        def close(conn), do: Connection.call(conn, :close)$/;"	f
close	deps/db_connection/lib/db_connection.ex	/^  def close(conn, query, opts \\\\ []) do$/;"	f
close	deps/phoenix/lib/phoenix/channel/server.ex	/^  def close(pid, timeout) do$/;"	f
close	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def close(socket, timeout \\\\ 5000) do$/;"	f
close	deps/plug/src/plug_multipart.erl	/^close(Boundary) ->$/;"	f	module:plug_multipart
close	deps/postgrex/lib/postgrex.ex	/^  def close(conn, query, opts \\\\ []) do$/;"	f
close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close(s, status, %Query{name: name} = query) do$/;"	f
close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close(s, status, %{portal: portal}) do$/;"	f
close!	deps/db_connection/lib/db_connection.ex	/^  def close!(conn, query, opts \\\\ []) do$/;"	f
close!	deps/postgrex/lib/postgrex.ex	/^  def close!(conn, query, opts \\\\ []) do$/;"	f
close_branch	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp close_branch(stack_name, pattern, group_prefix_varname, group_nr_varname) do$/;"	f
close_parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close_parse_describe(%{postgres: :transaction} = s, %{mode: :savepoint} = status, query) do$/;"	f
close_parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close_parse_describe(%{postgres: postgres} = s, %{mode: :savepoint}, _)$/;"	f
close_parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close_parse_describe(s, %{mode: :transaction} = status, query) do$/;"	f
close_parse_describe_flush	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close_parse_describe_flush($/;"	f
close_parse_describe_flush	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close_parse_describe_flush(%{postgres: postgres} = s, %{mode: :savepoint}, _)$/;"	f
close_parse_describe_flush	deps/postgrex/lib/postgrex/protocol.ex	/^  defp close_parse_describe_flush(s, %{mode: :transaction} = status, query) do$/;"	f
close_tag	deps/earmark/lib/earmark/transform.ex	/^  defp close_tag(tag, options, level) do$/;"	f
cmp	deps/decimal/lib/decimal.ex	/^  def cmp(num1, num2) do$/;"	f
coalesce	deps/ecto/lib/ecto/query/api.ex	/^        defmacro coalesce(left, right) do$/;"	a
coalesce	deps/ecto/lib/ecto/query/api.ex	/^  def coalesce(value, expr), do: doc! [value, expr]$/;"	f
coalesce text type when default	deps/ecto/integration_test/cases/type.exs	/^  test "coalesce text type when default" do$/;"	t
coalesce text type when value	deps/ecto/integration_test/cases/type.exs	/^  test "coalesce text type when value" do$/;"	t
code	deps/plug/lib/plug/conn/status.ex	/^    def code(unquote(atom)), do: unquote(code)$/;"	f
code	deps/plug/lib/plug/conn/status.ex	/^  def code(integer) when integer in 100..999 do$/;"	f
code	deps/plug/lib/plug/conn/status.ex	/^  def code(integer_or_atom)$/;"	f
code	lib/boruta/oauth/json/schema.ex	/^  def code do$/;"	f
code_change	deps/connection/lib/connection.ex	/^      def code_change(_old, state, _extra) do$/;"	f
code_change	deps/connection/lib/connection.ex	/^  def code_change(old_vsn, %{mod: mod, mod_state: mod_state} = s, extra) do$/;"	f
code_change	deps/phoenix/lib/phoenix/channel/server.ex	/^  def code_change(old, %{channel: channel} = socket, extra) do$/;"	f
code_change	deps/telemetry/src/telemetry_handler_table.erl	/^code_change(_, State, _) ->$/;"	f	module:telemetry_handler_table
code_changeset	lib/boruta/adapters/ecto/schemas/token.ex	/^  def code_changeset(token, attrs) do$/;"	f
code_classes	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def code_classes(language, prefix) do$/;"	f
code_reload	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def code_reload(conn, endpoint, opts) do$/;"	f
code_to_name	deps/postgrex/lib/postgrex/error_code.ex	/^    def code_to_name(unquote(code)), do: unquote(name)$/;"	f
code_to_name	deps/postgrex/lib/postgrex/error_code.ex	/^  def code_to_name(_), do: nil$/;"	f
code_to_name	deps/postgrex/lib/postgrex/error_code.ex	/^  def code_to_name(code)$/;"	f
codepoints_length	deps/ecto/lib/ecto/changeset.ex	/^  defp codepoints_length(<<>>, acc), do: acc$/;"	f
codepoints_length	deps/ecto/lib/ecto/changeset.ex	/^  defp codepoints_length(<<_, rest::binary>>, acc), do: codepoints_length(rest, acc + 1)$/;"	f
codepoints_length	deps/ecto/lib/ecto/changeset.ex	/^  defp codepoints_length(<<_::utf8, rest::binary>>, acc), do: codepoints_length(rest, acc + 1)$/;"	f
codespan	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def codespan(text) do $/;"	f
collapse_static	deps/jason/lib/codegen.ex	/^  defp collapse_static([]) do$/;"	f
collapse_static	deps/jason/lib/codegen.ex	/^  defp collapse_static([bin1, bin2 | rest]) when is_binary(bin1) and is_binary(bin2) do$/;"	f
collapse_static	deps/jason/lib/codegen.ex	/^  defp collapse_static([other | rest]) do$/;"	f
collect_and_print_whens	deps/erlex/lib/erlex.ex	/^  defp collect_and_print_whens(whens) do$/;"	f
collect_args	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_args([], fields, from, _query, _take, _keep_literals?, acc) do$/;"	f
collect_args	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_args([elem | elems], fields, from, query, take, keep_literals?, acc) do$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints([{:as, _} | _], _, _, _),$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints([{:as, as} | t], nil, prefix, hints),$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints([{:hints, _} | _], _, _, _),$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints([{:hints, hints} | t], as, prefix, nil),$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints([{:prefix, _} | _], _, _, _),$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints([{:prefix, prefix} | t], as, nil, hints),$/;"	f
collect_as_and_prefix_and_hints	deps/ecto/lib/ecto/query.ex	/^  defp collect_as_and_prefix_and_hints(t, as, prefix, hints),$/;"	f
collect_assocs	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_assocs(exprs, fields, _query, _tag, _take, []) do$/;"	f
collect_assocs	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_assocs(exprs, fields, query, tag, take, [{assoc, {ix, children}}|tail]) do$/;"	f
collect_defs	deps/credo/lib/credo/code/module.ex	/^    defp collect_defs({:@, _, [{unquote(op), _, arguments} = ast]}, defs)$/;"	f
collect_defs	deps/credo/lib/credo/code/module.ex	/^    defp collect_defs({unquote(op), _, arguments} = ast, defs)$/;"	f
collect_defs	deps/credo/lib/credo/code/module.ex	/^  defp collect_defs(ast, defs) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(%Ecto.Query.Tagged{tag: tag} = expr, fields, from, _query, _take, _keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(args, fields, from, query, take, keep_literals?) when is_list(args) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(expr, fields, from, _query, _take, _keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(expr, fields, from, _query, _take, _keep_literals?) when is_atom(expr) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(expr, fields, from, _query, _take, false)$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(expr, fields, from, _query, _take, true) when is_binary(expr) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(expr, fields, from, _query, _take, true) when is_float(expr) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields(expr, fields, from, _query, _take, true) when is_integer(expr) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:%, _, [name, {:%{}, _, [{:|, _, [data, args]}]}]},$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:%, _, [name, {:%{}, _, args}]}, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:%{}, _, [{:|, _, [data, args]}]}, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:%{}, _, args}, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:&, _, [0]}, fields, :error, query, take, _keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:&, _, [0]}, fields, from, _query, _take, _keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:&, _, [ix]}, fields, from, query, take, _keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:coalesce, _, [left, right]} = expr, fields, from, query, take, _keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:date_add, _, [arg | _]} = expr, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:datetime_add, _, [arg | _]} = expr, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:filter, _, [call, _]} = expr, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:merge, _, [{:&, _, [0]}, right]}, fields, :error, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:merge, _, args}, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:over, _, [call, window]} = expr, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({:{}, _, args}, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({agg, _, [{{:., dot_meta, [{:&, _, [_]}, _]}, _, []} | _]} = expr,$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({left, right}, fields, from, query, take, keep_literals?) do$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({op, _, [_, _]} = expr, fields, from, _query, _take, _keep_literals?)$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({op, _, [_]} = expr, fields, from, _query, _take, _keep_literals?)$/;"	f
collect_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_fields({{:., dot_meta, [{:&, _, [_]}, _]}, _, []} = expr,$/;"	f
collect_hashes	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp collect_hashes(ast, acc, filename, mass_threshold) do$/;"	f
collect_issues	deps/credo/lib/credo/check/readability/semicolons.ex	/^  defp collect_issues([], acc, _issue_meta), do: acc$/;"	f
collect_issues	deps/credo/lib/credo/check/readability/semicolons.ex	/^  defp collect_issues([_ | rest], acc, issue_meta), do: collect_issues(rest, acc, issue_meta)$/;"	f
collect_issues	deps/credo/lib/credo/check/readability/semicolons.ex	/^  defp collect_issues([{:";", {line_no, column1, _}} | rest], acc, issue_meta) do$/;"	f
collect_kv	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_kv([], fields, from, _query, _take, _keep_literals?, acc) do$/;"	f
collect_kv	deps/ecto/lib/ecto/query/planner.ex	/^  defp collect_kv([{key, value} | elems], fields, from, query, take, keep_literals?, acc) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/collector.ex	/^        def collect_matches(source_file, params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/line_endings/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/space_in_parentheses/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/tabs_or_spaces/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_matches	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  def collect_matches(source_file, _params) do$/;"	f
collect_migrations	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp collect_migrations(versions, migration_source) do$/;"	f
collect_number_tokens	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp collect_number_tokens([], acc, _), do: acc$/;"	f
collect_number_tokens	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp collect_number_tokens([head | t], acc, min_number) do$/;"	f
collect_on	deps/ecto/lib/ecto/query.ex	/^  defp collect_on([{:on, expr} | t], on, as, prefix, hints),$/;"	f
collect_on	deps/ecto/lib/ecto/query.ex	/^  defp collect_on([{:on, on} | t], nil, as, prefix, hints),$/;"	f
collect_on	deps/ecto/lib/ecto/query.ex	/^  defp collect_on([{key, _} | _] = t, on, as, prefix, hints) when key in @from_join_opts do$/;"	f
collect_on	deps/ecto/lib/ecto/query.ex	/^  defp collect_on(t, on, as, prefix, hints),$/;"	f
collect_paren_child	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_paren_child(_, {_, _} = state), do: state$/;"	f
collect_paren_child	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_paren_child(token, {0, tokens}), do: {0, tokens ++ [token]}$/;"	f
collect_paren_child	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_paren_child({:"(", _}, {nest_level, tokens}), do: {nest_level + 1, tokens}$/;"	f
collect_paren_child	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_paren_child({:")", _}, {nest_level, tokens}), do: {nest_level - 1, tokens}$/;"	f
collect_paren_children	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_paren_children(x) do$/;"	f
collect_parenthetical_tokens	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_parenthetical_tokens([], acc, _), do: acc$/;"	f
collect_parenthetical_tokens	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp collect_parenthetical_tokens([head | t], acc, prev_head) do$/;"	f
collect_raw_chars_and_binaries	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def collect_raw_chars_and_binaries(_rest, args, context, _line, _offset, ttype, attrs) do$/;"	f
collect_sources	deps/ecto/lib/ecto/query/inspect.ex	/^  defp collect_sources(%{from: %{source: source}, joins: joins}) do$/;"	f
collect_sources	deps/ecto/lib/ecto/query/inspect.ex	/^  defp collect_sources(%{from: nil, joins: joins}) do$/;"	f
collect_subhashes	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp collect_subhashes({_hash, node_items}, mass_threshold) do$/;"	f
color	deps/dialyxir/lib/dialyxir/output.ex	/^  def color(text, color) when is_binary(text) do$/;"	f
color_aliases	deps/bunt/lib/bunt_ansi.ex	/^  def color_aliases, do: @color_aliases$/;"	f
color_for	deps/credo/lib/credo/cli/command/help.ex	/^  def color_for("#"), do: [:faint]$/;"	f
color_for	deps/credo/lib/credo/cli/command/help.ex	/^  def color_for("L"), do: :olive$/;"	f
color_for	deps/credo/lib/credo/cli/command/help.ex	/^  def color_for("\/"), do: :olive$/;"	f
color_for	deps/credo/lib/credo/cli/command/help.ex	/^  def color_for("\\\\"), do: :olive$/;"	f
color_for	deps/credo/lib/credo/cli/command/help.ex	/^  def color_for(_), do: [:reset, :white]$/;"	f
color_list	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^  defp color_list(_, _), do: [:faint]$/;"	f
color_list	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^  defp color_list(line_no, line_no2) when line_no == line_no2, do: [:bright, :cyan]$/;"	f
color_tuples	deps/bunt/lib/bunt_ansi.ex	/^  def color_tuples, do: @color_tuples$/;"	f
colorful_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def colorful_style, do: HTML.ColorfulStyle.style()$/;"	f
column	deps/credo/lib/credo/source_file.ex	/^  def column(%__MODULE__{} = source_file, line_no, trigger)$/;"	f
column	deps/credo/lib/credo/source_file.ex	/^  def column(_, _, _), do: nil$/;"	f
column	deps/credo/lib/credo/source_file.ex	/^  def column(source_file, line_no, trigger)$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(_table, {:add, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(_table, {:add_if_not_exists, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(_table, {:remove, name, _type, _opts}), do: ["DROP ", quote_name(name)]$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(_table, {:remove, name}), do: ["DROP ", quote_name(name)]$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(_table, {:remove_if_exists, name, _type}), do: ["DROP IF EXISTS ", quote_name(name)]$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(table, {:add, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(table, {:add_if_not_exists, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(table, {:modify, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(table, {:modify, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(table, {:remove, name, %Reference{} = ref, _opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_change(table, {:remove_if_exists, name, %Reference{} = ref}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(_table, {:add, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(_table, {:add_if_not_exists, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(_table, {:remove, name, _type, _opts}), do: ["DROP COLUMN ", quote_name(name)]$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(_table, {:remove, name}), do: ["DROP COLUMN ", quote_name(name)]$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(_table, {:remove_if_exists, name, _type}), do: ["DROP COLUMN IF EXISTS ", quote_name(name)]$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(table, {:add, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(table, {:add_if_not_exists, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(table, {:modify, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(table, {:modify, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(table, {:remove, name, %Reference{} = ref, _opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_change(table, {:remove_if_exists, name, %Reference{} = ref}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_change($/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_change(statement_prefix, _table, {:remove, name}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_change(statement_prefix, table, {:add, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_change(statement_prefix, table, {:add, name, type, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_change(statement_prefix, table, {:modify, name, %Reference{} = ref, opts}) do$/;"	f
column_change	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_change(statement_prefix, table, {:modify, name, type, opts}) do$/;"	f
column_changes	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_changes(table, columns) do$/;"	f
column_changes	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_changes(table, columns) do$/;"	f
column_changes	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_changes(statement, table, columns) do$/;"	f
column_default_value	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_default_value(statement_prefix, table, name, opts) do$/;"	f
column_definition	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_definition(_table, {:add, name, type, opts}) do$/;"	f
column_definition	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_definition(table, {:add, name, %Reference{} = ref, opts}) do$/;"	f
column_definition	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_definition(_table, {:add, name, type, opts}) do$/;"	f
column_definition	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_definition(table, {:add, name, %Reference{} = ref, opts}) do$/;"	f
column_definition	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_definition(table, {:add, name, %Reference{} = ref, opts}) do$/;"	f
column_definition	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_definition(table, {:add, name, type, opts}) do$/;"	f
column_definitions	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_definitions(table, columns) do$/;"	f
column_definitions	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_definitions(table, columns) do$/;"	f
column_definitions	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_definitions(table, columns) do$/;"	f
column_options	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_options(opts) do$/;"	f
column_options	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_options(type, opts) do$/;"	f
column_options	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_options(table, name, opts) do$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_type(type, _opts) when type in ~w(time utc_datetime naive_datetime)a,$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_type(type, opts) do$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp column_type(type, opts) when type in ~w(time_usec utc_datetime_usec naive_datetime_usec)a do$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_type(type, _opts) when type in ~w(time utc_datetime naive_datetime)a,$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_type(type, opts) do$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_type(type, opts) when type in ~w(time_usec utc_datetime_usec naive_datetime_usec)a do$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp column_type({:array, type}, opts),$/;"	f
column_type	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp column_type(type, opts) do$/;"	f
columns	deps/postgrex/lib/postgrex/protocol.ex	/^  defp columns(fields) do$/;"	f
combinations	deps/ecto/lib/ecto/query/inspect.ex	/^  defp combinations(combinations) do$/;"	f
combinations	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp combinations(%{combinations: combinations}) do$/;"	f
combinations	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp combinations(%{combinations: combinations}) do$/;"	f
combinations	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp combinations(%{combinations: combinations}) do$/;"	f
combine_assoc_query	deps/ecto/lib/ecto/association.ex	/^  def combine_assoc_query(%{wheres: wheres} = query, conditions) do$/;"	f
combine_assoc_query	deps/ecto/lib/ecto/association.ex	/^  def combine_assoc_query(query, []), do: query$/;"	f
combine_clocks	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  defp combine_clocks(clockset) do$/;"	f
combine_configs	deps/credo/lib/credo/config_file.ex	/^  defp combine_configs(files, exec, dir, config_name, safe) do$/;"	f
combine_joins_query	deps/ecto/lib/ecto/association.ex	/^  def combine_joins_query(%{joins: joins} = query, [_ | _] = conditions, binding) do$/;"	f
combine_joins_query	deps/ecto/lib/ecto/association.ex	/^  def combine_joins_query(query, [], _binding), do: query$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command(ddl) when is_binary(ddl) or is_list(ddl),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:alter, %Table{} = table, _}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create, %Constraint{check: check, exclude: exclude}}) when is_binary(check) and is_binary(exclude),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create, %Constraint{check: check} = constraint}) when is_binary(check),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create, %Constraint{check: nil, exclude: nil}}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create, %Constraint{exclude: exclude} = constraint}) when is_binary(exclude),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create, %Index{} = index}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create, %Table{} = table, _}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create_if_not_exists, %Index{} = index}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:create_if_not_exists, %Table{} = table, _}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:drop, %Constraint{} = constraint}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:drop, %Index{} = index}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:drop, %Table{} = table}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:drop_if_exists, %Constraint{} = constraint}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:drop_if_exists, %Index{} = index}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:drop_if_exists, %Table{} = table}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:rename, %Table{} = current_table, %Table{} = new_table}),$/;"	f
command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp command({:rename, %Table{} = table, current_column, new_column}),$/;"	f
comments_for_columns	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp comments_for_columns(table_name, columns) do$/;"	f
comments_on	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp comments_on(_object, _name, nil), do: []$/;"	f
comments_on	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp comments_on(_object, _name, nil, _table_name), do:  []$/;"	f
comments_on	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp comments_on(object, name, comment) do$/;"	f
comments_on	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp comments_on(object, name, comment, table_name) do$/;"	f
commit	deps/db_connection/lib/db_connection.ex	/^  defp commit(conn, run, opts) do$/;"	f
compact	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def compact(%State{context: ctx, clouds: clouds} = state) do$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(%Decimal{coef: :inf, sign: sign1}, %Decimal{coef: :inf, sign: sign2})$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(%Decimal{coef: :inf, sign: sign}, %Decimal{coef: :inf, sign: sign}),$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(%Decimal{coef: :inf, sign: sign}, _num2), do: %Decimal{sign: sign, coef: 1}$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(%Decimal{coef: :qNaN} = num1, _num2), do: num1$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(_num1, %Decimal{coef: :inf, sign: sign}), do: %Decimal{sign: sign * -1, coef: 1}$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(_num1, %Decimal{coef: :qNaN} = num2), do: num2$/;"	f
compare	deps/decimal/lib/decimal.ex	/^  def compare(num1, num2) do$/;"	f
compare?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp compare?(request_val, allowed_val) do$/;"	f
compare_host?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp compare_host?(_request_host, nil),$/;"	f
compare_host?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp compare_host?(request_host, "*." <> allowed_host),$/;"	f
compare_host?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp compare_host?(request_host, allowed_host),$/;"	f
compare_name	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp compare_name(value) do$/;"	f
compatibility_notice	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp compatibility_notice do$/;"	f
compile	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^  defp compile(input, opts) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile(kind, name, combinator, opts) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  def compile(name, [], _opts) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  def compile(name, combinators, opts) when is_list(combinators) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile([], defs, inline, current, step, _config) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile([{:update, key, fun} | combinators], defs, inline, current, step, config) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile(combinators, defs, inline, current, step, config) do$/;"	f
compile	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile(name, combinators) do$/;"	f
compile	deps/phoenix/lib/phoenix/digester.ex	/^  def compile(input_path, output_path) do$/;"	f
compile	deps/phoenix/lib/phoenix/template.ex	/^  defp compile(path, root, engines) do$/;"	f
compile	deps/phoenix/lib/phoenix/template/eex_engine.ex	/^  def compile(path, name) do$/;"	f
compile	deps/phoenix/lib/phoenix/template/engine.ex	/^      def compile(template_path, template_name)$/;"	f
compile	deps/phoenix/lib/phoenix/template/exs_engine.ex	/^  def compile(path, _name) do$/;"	f
compile	deps/plug/lib/plug/builder.ex	/^  def compile(env, pipeline, builder_opts) do$/;"	f
compile	deps/plug/lib/plug/router.ex	/^  defp compile(method, expr, options, contents) do$/;"	f
compile_aliases	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp compile_aliases(aliases, name, join_count) do$/;"	f
compile_aliases	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp compile_aliases({:%{}, meta, aliases}, name, join_count)$/;"	f
compile_bin_ranges	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_bin_ranges(var, ors, ands) do$/;"	f
compile_bound_bin_pattern	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_bound_bin_pattern(inputs, %{eos: eos?}, var) do$/;"	f
compile_bound_choice	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_bound_choice(choices, current, step, config) do$/;"	f
compile_bound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_bound_combinator(inputs, guards, outputs, metadata, current, step, config) do$/;"	f
compile_bound_repeat	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_bound_repeat(combinators, while, current, failure, step, config) do$/;"	f
compile_bound_times	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_bound_times(combinators, count, current, step, config) do$/;"	f
compile_call!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_call!(_args, unknown, context) do$/;"	f
compile_call!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_call!(extra, function, _context) when is_atom(function) do$/;"	f
compile_call!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_call!(extra, {function, args}, _context)$/;"	f
compile_call!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_call!(extra, {module, function, args}, _context)$/;"	f
compile_config	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def compile_config(_repo, opts) do$/;"	f
compile_error!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp compile_error!(expr) do$/;"	f
compile_eventually	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_eventually(combinators, current, step, config) do$/;"	f
compile_guards	deps/plug/lib/plug/builder.ex	/^  defp compile_guards(call, guards) do$/;"	f
compile_guards	deps/plug/lib/plug/builder.ex	/^  defp compile_guards(call, true) do$/;"	f
compile_parser	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_parser(_name, nil) do$/;"	f
compile_parser	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_parser(name, :def) do$/;"	f
compile_parser	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp compile_parser(name, :defp) do$/;"	f
compile_start_callbacks	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  def compile_start_callbacks(event, instrumenters) do$/;"	f
compile_stop_callbacks	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  def compile_stop_callbacks(event, instrumenters) do$/;"	f
compile_time_repeat_while	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_time_repeat_while(_), do: :none$/;"	f
compile_time_repeat_while	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_time_repeat_while({:cont, quote(do: context)}), do: :cont$/;"	f
compile_time_repeat_while	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_time_repeat_while({:halt, quote(do: context)}), do: :halt$/;"	f
compile_unbound_choice	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_choice([], defs, inline, previous, step, _success, _config) do$/;"	f
compile_unbound_choice	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_choice([choice | choices], defs, inline, _previous, step, done, config) do$/;"	f
compile_unbound_choice	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_choice(choices, current, step, config) do$/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator($/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator({:choice, choices} = combinator, current, step, config) do$/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator({:eventually, combinators}, current, step, config) do$/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator({:lookahead, combinators, kind}, current, step, config) do$/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator({:parsec, parsec}, current, step, config) do$/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator({:repeat, combinators, while}, current, step, config) do$/;"	f
compile_unbound_combinator	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_combinator({:times, combinators, 0, count}, current, step, config) do$/;"	f
compile_unbound_lookahead	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_lookahead(combinators, kind, current, step, config) do$/;"	f
compile_unbound_repeat	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_repeat(combinators, while, current, failure, step, config) do$/;"	f
compile_unbound_times	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_times(combinators, count, current, step, config) do$/;"	f
compile_unbound_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_traverse([], _kind, current, step, config, fun) do$/;"	f
compile_unbound_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp compile_unbound_traverse(combinators, kind, current, step, config, fun) do$/;"	f
compiled_custom_types	deps/mime/lib/mime/application.ex	/^      def compiled_custom_types do$/;"	f
compiled_engines	deps/phoenix/lib/phoenix/template.ex	/^  defp compiled_engines do$/;"	f
compiled_file?	deps/phoenix/lib/phoenix/digester.ex	/^  defp compiled_file?(file_path) do$/;"	f
compiled_format_encoders	deps/phoenix/lib/phoenix/template.ex	/^  defp compiled_format_encoders do$/;"	f
compiler_paths	deps/makeup/mix.exs	/^  def compiler_paths(:dev), do: ["test\/helpers"] ++ compiler_paths(:prod)$/;"	f
compiler_paths	deps/makeup/mix.exs	/^  def compiler_paths(:test), do: ["test\/helpers"] ++ compiler_paths(:prod)$/;"	f
compiler_paths	deps/makeup/mix.exs	/^  def compiler_paths(_), do: ["lib"]$/;"	f
complain_about_invalid_source_files	deps/credo/lib/credo/cli/output.ex	/^  def complain_about_invalid_source_files([]), do: nil$/;"	f
complain_about_invalid_source_files	deps/credo/lib/credo/cli/output.ex	/^  def complain_about_invalid_source_files(invalid_source_files) do$/;"	f
complain_about_timed_out_source_files	deps/credo/lib/credo/cli/output.ex	/^  def complain_about_timed_out_source_files([]), do: nil$/;"	f
complain_about_timed_out_source_files	deps/credo/lib/credo/cli/output.ex	/^  def complain_about_timed_out_source_files(large_source_files) do$/;"	f
complexity_for	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  def complexity_for({_def_op, _meta, _arguments} = ast) do$/;"	f
complexity_for	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  def complexity_for({_def_op, _meta, _arguments} = ast) do$/;"	f
composite?	deps/ecto/lib/ecto/type.ex	/^  def composite?(atom), do: atom in @composite$/;"	f
compress_file?	deps/phoenix/lib/phoenix/digester.ex	/^  defp compress_file?(file) do$/;"	f
compute	deps/credo/lib/credo/severity.ex	/^  def compute(_, 0), do: 65_536$/;"	f
compute	deps/credo/lib/credo/severity.ex	/^  def compute(value, max_value), do: value \/ max_value$/;"	f
compute_list_spacing	deps/earmark/lib/earmark/parser.ex	/^  defp compute_list_spacing( anything_else ), do: anything_else # nop$/;"	f
compute_list_spacing	deps/earmark/lib/earmark/parser.ex	/^  defp compute_list_spacing( list = %Block.List{blocks: items} ) do$/;"	f
concat	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def concat(left, right) when is_combinator(left) and is_combinator(right) do$/;"	f
concat_3t	deps/earmark/src/link_text_parser.erl	/^concat_3t(L, {MT, MP}, R) -> {string:join([L, MT, R], ""), string:join([ L, MP, R ], "")}.$/;"	f	module:link_text_parser
concat_if	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp concat_if(content, nil, _fun),  do: content$/;"	f
concat_if	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp concat_if(content, value, fun), do: content <> " " <> fun.(value)$/;"	f
concat_if	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp concat_if(content, nil, _fun),  do: content$/;"	f
concat_if	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp concat_if(content, value, fun), do: content <> " " <> fun.(value)$/;"	f
concat_if	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp concat_if(content, nil, _fun), do: content$/;"	f
concat_if	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp concat_if(content, value, fun), do: content <> " " <> fun.(value)$/;"	f
concat_tuple	deps/earmark/src/link_text_parser.erl	/^concat_tuple({LT, LP}, {RT, RP}) -> {string:concat(LT, RT), string:concat(LP, RP)}.$/;"	f	module:link_text_parser
conclude	deps/db_connection/lib/db_connection.ex	/^  defp conclude(%DBConnection{pool_ref: pool_ref, conn_ref: conn_ref}, result) do$/;"	f
conditional_lock_for_migrations	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp conditional_lock_for_migrations(module, repo, opts, fun) do$/;"	f
config	deps/ecto/lib/ecto/repo.ex	/^      def config do$/;"	f
config	deps/phoenix/lib/phoenix/endpoint.ex	/^      def config(key, default \\\\ nil) do$/;"	f
config	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp config(opts) do$/;"	f
config	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def config(otp_app, endpoint) do$/;"	f
config_change	deps/phoenix/lib/phoenix/config.ex	/^  def config_change(module, changed, removed) do$/;"	f
config_change	deps/phoenix/lib/phoenix/endpoint.ex	/^      def config_change(changed, removed) do$/;"	f
config_change	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def config_change(endpoint, changed, removed) do$/;"	f
config_children	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp config_children(mod, conf, otp_app) do$/;"	f
configure	deps/plug/lib/plug/ssl.ex	/^  def configure(options) do$/;"	f
configure	deps/postgrex/lib/postgrex/type_module.ex	/^  defp configure(extension) do$/;"	f
configure	deps/postgrex/lib/postgrex/type_module.ex	/^  defp configure(extensions, opts) do$/;"	f
configure	deps/postgrex/lib/postgrex/type_module.ex	/^  defp configure({extension, opts}) do$/;"	f
configure_managed_tls	deps/plug/lib/plug/ssl.ex	/^  defp configure_managed_tls(options) do$/;"	f
configure_session	deps/plug/lib/plug/conn.ex	/^  def configure_session(%Conn{state: state}, _opts) when not (state in @unsent),$/;"	f
configure_session	deps/plug/lib/plug/conn.ex	/^  def configure_session(conn, opts) do$/;"	f
configure_session	deps/plug/lib/plug/conn.ex	/^  def configure_session(conn, opts)$/;"	f
confirm_load	deps/ecto_sql/lib/mix/tasks/ecto.load.ex	/^  defp confirm_load(repo, false) do$/;"	f
confirm_load	deps/ecto_sql/lib/mix/tasks/ecto.load.ex	/^  defp confirm_load(repo, true) do$/;"	f
confirmation_missing	deps/ecto/lib/ecto/changeset.ex	/^  defp confirmation_missing(opts, error_field) do$/;"	f
conflict_target	deps/ecto/lib/ecto/repo/schema.ex	/^  defp conflict_target(conflict_target, dumper) do$/;"	f
conflict_target	deps/ecto/lib/ecto/repo/schema.ex	/^  defp conflict_target({:constraint, constraint}, _dumper) when is_atom(constraint) do$/;"	f
conflict_target	deps/ecto/lib/ecto/repo/schema.ex	/^  defp conflict_target({:unsafe_fragment, fragment}, _dumper) when is_binary(fragment) do$/;"	f
conflict_target	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp conflict_target([]),$/;"	f
conflict_target	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp conflict_target(targets),$/;"	f
conflict_target	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp conflict_target({:constraint, constraint}),$/;"	f
conflict_target	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp conflict_target({:unsafe_fragment, fragment}),$/;"	f
conflicting_alias?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp conflicting_alias?(alias_name, mod_list, last_name) do$/;"	f
conflicting_with_aliases?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp conflicting_with_aliases?(mod_list, aliases) do$/;"	f
conflicting_with_other_modules?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp conflicting_with_other_modules?(mod_list, mod_deps) do$/;"	f
conn	deps/db_connection/lib/db_connection/connection_pool/pool.ex	/^  defp conn(owner, tag, id, mod, opts) do$/;"	f
conn	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def conn() do$/;"	f
conn	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def conn(method, path, params_or_body \\\\ nil) do$/;"	f
conn	deps/plug/lib/plug/adapters/test/conn.ex	/^  def conn(conn, method, uri, body_or_params) do$/;"	f
conn	deps/plug/lib/plug/test.ex	/^  def conn(method, path, params_or_body \\\\ nil) do$/;"	f
conn_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp conn_error(:ssl, action, reason) do$/;"	f
conn_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp conn_error(:tcp, action, reason) do$/;"	f
conn_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp conn_error(message) do$/;"	f
conn_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp conn_error(mod, action, reason) when reason in @nonposix_errors do$/;"	f
connect	deps/connection/lib/connection.ex	/^        def connect(_, %{sock: nil, host: host, port: port, opts: opts,$/;"	f
connect	deps/connection/lib/connection.ex	/^      def connect(info, state) do$/;"	f
connect	deps/connection/lib/connection.ex	/^  defp connect(info, mod_state, %{mod: mod} = s) do$/;"	f
connect	deps/db_connection/lib/db_connection/connection.ex	/^  def connect(_, s) do$/;"	f
connect	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def connect(_opts) do$/;"	f
connect	deps/phoenix/lib/phoenix/socket.ex	/^        def connect(params, socket, _connect_info) do$/;"	f
connect	deps/phoenix/lib/phoenix/socket.ex	/^      def connect(map), do: Phoenix.Socket.__connect__(__MODULE__, map, @phoenix_log)$/;"	f
connect	deps/phoenix/lib/phoenix/socket/transport.ex	/^        def connect(map) do$/;"	f
connect	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def connect(endpoint, handler, _transport_name, transport, serializers, params, _pid \\\\ self()) do$/;"	f
connect	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro connect(handler, params, connect_info \\\\ quote(do: %{})) do$/;"	a
connect	deps/phoenix/lib/phoenix/token.ex	/^        def connect(%{"token" => token}, socket, _connect_info) do$/;"	f
connect	deps/phoenix/lib/phoenix/token.ex	/^        def connect(_params, _socket, _connect_info), do: :error$/;"	f
connect	deps/phoenix/lib/phoenix/transports/websocket.ex	/^  def connect(%{method: "GET"} = conn, endpoint, handler, opts) do$/;"	f
connect	deps/phoenix/lib/phoenix/transports/websocket.ex	/^  def connect(conn, _, _, _) do$/;"	f
connect	deps/postgrex/lib/postgrex/notifications.ex	/^  def connect(_, s) do$/;"	f
connect	deps/postgrex/lib/postgrex/protocol.ex	/^  def connect(opts) do$/;"	f
connect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp connect(host, port, sock_opts, timeout, s) do$/;"	f
connect_info	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def connect_info(conn, endpoint, keys) do$/;"	f
connect_opts	deps/db_connection/lib/db_connection/connection.ex	/^  defp connect_opts(opts) do$/;"	f
connect_result	deps/phoenix/lib/phoenix/logger.ex	/^  defp connect_result(:error), do: "REFUSED CONNECTION TO "$/;"	f
connect_result	deps/phoenix/lib/phoenix/logger.ex	/^  defp connect_result(:ok), do: "CONNECTED TO "$/;"	f
connection_type	deps/phoenix/lib/phoenix/logger.ex	/^  defp connection_type(:set_chunked), do: "Chunked"$/;"	f
connection_type	deps/phoenix/lib/phoenix/logger.ex	/^  defp connection_type(_), do: "Sent"$/;"	f
connection_type	deps/plug/lib/plug/logger.ex	/^  defp connection_type(%{state: :set_chunked}), do: "Chunked"$/;"	f
connection_type	deps/plug/lib/plug/logger.ex	/^  defp connection_type(_), do: "Sent"$/;"	f
cons_apps	deps/dialyxir/lib/dialyxir/project.ex	/^  def cons_apps do$/;"	f
consecutive_lines	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^  defp consecutive_lines([], _), do: []$/;"	f
consecutive_lines	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^  defp consecutive_lines([first_line | other_lines], max_blank_lines) do$/;"	f
consecutive_lines_reducer	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^  defp consecutive_lines_reducer(max_blank_lines) do$/;"	f
consolidate_list_items	deps/earmark/lib/earmark/parser.ex	/^  defp consolidate_list_items($/;"	f
consolidate_list_items	deps/earmark/lib/earmark/parser.ex	/^  defp consolidate_list_items([ head | rest ], result) do$/;"	f
consolidate_list_items	deps/earmark/lib/earmark/parser.ex	/^  defp consolidate_list_items([ item = %Block.ListItem{type: type} | rest], result) do$/;"	f
consolidate_list_items	deps/earmark/lib/earmark/parser.ex	/^  defp consolidate_list_items([], result) do$/;"	f
consolidate_para	deps/earmark/lib/earmark/parser.ex	/^  defp consolidate_para( lines ), do: _consolidate_para( lines, [], @not_pending )$/;"	f
consolidate_protocols?	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp consolidate_protocols? do$/;"	f
constraint	deps/ecto_sql/lib/ecto/migration.ex	/^  def constraint(table, name, opts \\\\ [])$/;"	f
constraint	deps/ecto_sql/lib/ecto/migration.ex	/^  def constraint(table, name, opts) when is_atom(table) do$/;"	f
constraint	deps/ecto_sql/lib/ecto/migration.ex	/^  def constraint(table, name, opts) when is_binary(table) and is_list(opts) do$/;"	f
constraint_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp constraint_expr(%Reference{} = ref, table, name),$/;"	f
constraint_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp constraint_expr(%Reference{} = ref, table, name),$/;"	f
constraint_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp constraint_expr(%Reference{} = ref, table, name) do$/;"	f
constraint_if_not_exists_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp constraint_if_not_exists_expr(%Reference{} = ref, table, name),$/;"	f
constraint_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp constraint_name(type, table, name),$/;"	f
constraints	deps/ecto/lib/ecto/changeset.ex	/^  def constraints(%Changeset{constraints: constraints}) do$/;"	f
constraints_to_errors	deps/ecto/lib/ecto/repo/schema.ex	/^  defp constraints_to_errors(%{constraints: user_constraints, errors: errors} = changeset, action, constraints) do$/;"	f
contains_child?	deps/credo/lib/credo/code.ex	/^  def contains_child?(parent, child) do$/;"	f
contains_line_no?	deps/credo/lib/credo/cli/filename.ex	/^  def contains_line_no?(filename) do$/;"	f
contains_line_no?	deps/credo/lib/credo/cli/filename.ex	/^  def contains_line_no?(nil), do: false$/;"	f
contains_variable?	deps/ecto/lib/ecto/query/builder/limit_offset.ex	/^  defp contains_variable?(ast) do$/;"	f
content_type	deps/plug/lib/plug/conn/utils.ex	/^  def content_type(binary) do$/;"	f
context	deps/decimal/lib/decimal.ex	/^  defp context(num, signals \\\\ []) do$/;"	f
context_app	deps/phoenix/lib/mix/phoenix.ex	/^  def context_app do$/;"	f
context_app_path	deps/phoenix/lib/mix/phoenix.ex	/^  def context_app_path(ctx_app, rel_path) when is_atom(ctx_app) do$/;"	f
context_base	deps/phoenix/lib/mix/phoenix.ex	/^  def context_base(ctx_app) do$/;"	f
context_files	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  defp context_files(%Context{generate?: false}) do$/;"	f
context_files	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  defp context_files(%Context{generate?: true} = context) do$/;"	f
context_files	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  defp context_files(%Context{generate?: false}) do$/;"	f
context_files	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  defp context_files(%Context{generate?: true} = context) do$/;"	f
context_lib_path	deps/phoenix/lib/mix/phoenix.ex	/^  def context_lib_path(ctx_app, rel_path) when is_atom(ctx_app) do$/;"	f
context_test_path	deps/phoenix/lib/mix/phoenix.ex	/^  def context_test_path(ctx_app, rel_path) when is_atom(ctx_app) do$/;"	f
continue	deps/jason/lib/decoder.ex	/^  defp continue(rest, original, skip, stack, key_decode, string_decode, value) do$/;"	f
controller_module	deps/phoenix/lib/phoenix/controller.ex	/^  def controller_module(conn), do: conn.private.phoenix_controller$/;"	f
convert	deps/earmark/lib/earmark/ast/inline.ex	/^  def convert(list, lnb, context) when is_list(list),$/;"	f
convert	deps/earmark/lib/earmark/ast/inline.ex	/^  def convert(src, lnb, context)$/;"	f
convert	deps/earmark/lib/earmark/ast/inline.ex	/^  def convert(src, lnb, context), do: _convert(src, lnb, context, true)$/;"	f
convert_atom_keys_to_strings	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp convert_atom_keys_to_strings(%{__struct__: _} = record) when is_map(record) do$/;"	f
convert_atom_keys_to_strings	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp convert_atom_keys_to_strings(record) when is_map(record) do$/;"	f
convert_atom_keys_to_strings	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp convert_atom_keys_to_strings(value), do: value$/;"	f
convert_atom_keys_to_strings	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp convert_atom_keys_to_strings(values) when is_list(values) do$/;"	f
convert_autolink	deps/earmark/lib/earmark/ast/inline.ex	/^  defp convert_autolink(link, _separator = "@") do$/;"	f
convert_autolink	deps/earmark/lib/earmark/ast/inline.ex	/^  defp convert_autolink(link, _separator) do$/;"	f
convert_autolink	deps/earmark/lib/earmark/ast/inline.ex	/^  defp convert_autolink(link, separator)$/;"	f
convert_params	deps/ecto/lib/ecto/changeset.ex	/^    defp convert_params(params) do$/;"	f
convert_parsers	deps/plug/lib/plug/parsers.ex	/^  defp convert_parsers(parsers, root_opts) do$/;"	f
convert_pure_link	deps/earmark/lib/earmark/helpers/pure_link_helpers.ex	/^  def convert_pure_link(src) do$/;"	f
convert_to_charlist	deps/plug/lib/plug/ssl.ex	/^  defp convert_to_charlist(options) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end($/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:aliases, {line_no, col_start, _}, list}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:bin_string, {line_no, col_start, nil}, list})$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:bin_string, {line_no, col_start, nil}, value}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:eol, {line_no, col_start, _}}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:list_string, {line_no, col_start, nil}, value}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:sigil, {line_no, col_start, nil}, _, list, _, _})$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {:sigil, {line_no, col_start, nil}, _, value, _, _}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {_, {line_no, col_start, _}, value}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {_, {line_no, col_start, nil}, list})$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {_, {line_no, col_start, nil}, value}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {value, {line_no, col_start, _}}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(_, _, {{line_no, col_start, _}, list}) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(line_no, col_start, list) when is_list(list) do$/;"	f
convert_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp convert_to_col_end(line_no, col_start, value) do$/;"	f
converter_for_autolink	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_autolink({src, lnb, context, use_linky?}) do$/;"	f
converter_for_br	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_br({src, lnb, context, use_linky?}) do$/;"	f
converter_for_code	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_code({src, lnb, context, use_linky?}) do$/;"	f
converter_for_em	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_em({src, _, _, _}=conv_tuple) do$/;"	f
converter_for_escape	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_escape({src, lnb, context, use_linky?}) do$/;"	f
converter_for_footnote	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_footnote({src, lnb, context, use_linky?}) do$/;"	f
converter_for_inline_ial	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_inline_ial($/;"	f
converter_for_inline_ial	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_inline_ial(_conv_data), do: nil$/;"	f
converter_for_inline_ial	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_inline_ial(conv_data)$/;"	f
converter_for_link_and_image	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_link_and_image({src, lnb, context, use_linky?}) do$/;"	f
converter_for_nolink	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_nolink({src, lnb, context, use_linky?}) do$/;"	f
converter_for_only_image	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_only_image({src, lnb, context, use_linky?}) do$/;"	f
converter_for_pure_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_pure_link({src, lnb, context, use_linky?}) do$/;"	f
converter_for_reflink	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_reflink({src, lnb, context, use_linky?}) do$/;"	f
converter_for_strikethrough_gfm	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_strikethrough_gfm({src, _, _, _}=conv_tuple) do$/;"	f
converter_for_strong	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_strong({src, _, _, _}=conv_tuple) do$/;"	f
converter_for_text	deps/earmark/lib/earmark/ast/inline.ex	/^  defp converter_for_text({src, lnb, context, _}) do$/;"	f
copied	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copied(%{connection_id: connection_id}) do$/;"	f
copy_assets	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp copy_assets(config, assets_dir) do$/;"	f
copy_both_disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_both_disconnect(s, query, buffer) do$/;"	f
copy_from	deps/phoenix/lib/mix/phoenix.ex	/^  def copy_from(apps, source_dir, binding, mapping) when is_list(mapping) do$/;"	f
copy_headers	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp copy_headers(conn, headers, copy) do$/;"	f
copy_in_data	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_in_data(%{sock: {mod, sock}} = s, %{query: query}, data) do$/;"	f
copy_in_data	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_in_data(s, %{mode: :savepoint} = status, copy, data) do$/;"	f
copy_in_data	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_in_data(s, %{mode: :transaction}, copy, data) do$/;"	f
copy_in_disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_in_disconnect(s, query, buffer) do$/;"	f
copy_in_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_in_done(s, %{mode: :savepoint} = status, %Copy{query: query}) do$/;"	f
copy_in_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_in_done(s, %{mode: :transaction} = status, %Copy{query: query}) do$/;"	f
copy_new_files	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def copy_new_files(%Context{schema: schema} = context, paths, binding) do$/;"	f
copy_new_files	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def copy_new_files(%Schema{} = schema, paths, binding) do$/;"	f
copy_new_files	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  def copy_new_files(%Context{} = context, paths, binding) do$/;"	f
copy_new_files	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  def copy_new_files(%Context{} = context, paths, binding) do$/;"	f
copy_new_files	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def copy_new_files(%Schema{context_app: ctx_app} = schema, paths, binding) do$/;"	f
copy_out_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_out_done(s, %{mode: :savepoint} = status, query) do$/;"	f
copy_out_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp copy_out_done(s, %{mode: :transaction} = status, query) do$/;"	f
copy_resp_headers	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp copy_resp_headers(%Plug.Conn{} = conn, req) do$/;"	f
copy_resp_headers	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp copy_resp_headers(%Plug.Conn{} = conn, req) do$/;"	f
core_path	deps/dialyxir/lib/dialyxir/project.ex	/^  defp core_path(), do: dialyzer_config()[:plt_core_path] || Mix.Utils.mix_home()$/;"	f
correctly infers how to drop index	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "correctly infers how to drop index", %{migration_number: num} do$/;"	t
count	deps/credo/lib/credo/code/parameters.ex	/^    def count({unquote(op), _, arguments}) when is_list(arguments) do$/;"	f
count	deps/credo/lib/credo/code/parameters.ex	/^  def count(nil), do: 0$/;"	f
count	deps/db_connection/lib/db_connection.ex	/^  def count(_), do: {:error, __MODULE__}$/;"	f
count	deps/ecto/lib/ecto/query/api.ex	/^  def count(value), do: doc! [value]$/;"	f
count	deps/ecto/lib/ecto/query/api.ex	/^  def count(value, :distinct), do: doc! [value, :distinct]$/;"	f
count	deps/ecto/lib/ecto/query/api.ex	/^  def count, do: doc! []$/;"	f
count	deps/ecto/lib/ecto/query/window_api.ex	/^  def count(value), do: doc! [value]$/;"	f
count	deps/ecto/lib/ecto/query/window_api.ex	/^  def count, do: doc! []$/;"	f
count	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  def count(_), do: {:error, __MODULE__}$/;"	f
count	deps/postgrex/lib/postgrex/stream.ex	/^  def count(_) do$/;"	f
count_alias!	deps/ecto/lib/ecto/query/builder.ex	/^  def count_alias!(%{aliases: aliases} = query, name) do$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("", _counter, acc), do: acc$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("(" <> rest, counter, acc), do: count_args(rest, counter + 1, acc)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("()" <> _, 0, 0), do: 0$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args(")" <> _, 1, acc), do: acc + 1$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args(")" <> rest, counter, acc), do: count_args(rest, counter - 1, acc)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("," <> rest, 1, acc), do: count_args(rest, 1, acc + 1)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("[" <> rest, counter, acc), do: count_args(rest, counter + 1, acc)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("]" <> rest, counter, acc), do: count_args(rest, counter - 1, acc)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("{" <> rest, counter, acc), do: count_args(rest, counter + 1, acc)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args("}" <> rest, counter, acc), do: count_args(rest, counter - 1, acc)$/;"	f
count_args	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp count_args(<<_>> <> rest, counter, acc), do: count_args(rest, counter, acc)$/;"	f
count_binds	deps/ecto/lib/ecto/query/builder.ex	/^  def count_binds(%Query{joins: joins}) do$/;"	f
count_checks	deps/credo/lib/credo/cli/output/summary.ex	/^  defp count_checks(exec) do$/;"	f
count_entries	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defp count_entries() do$/;"	f
count_occurrences	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp count_occurrences({multi, single}) do$/;"	f
count_unnecessary_skips	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp count_unnecessary_skips(filter_map) do$/;"	f
counter	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^      defp counter do$/;"	f
cowboy_version_adapter	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp cowboy_version_adapter() do$/;"	f
crash_reason	deps/db_connection/lib/db_connection.ex	/^  defp crash_reason(:throw, value), do: {:nocatch, value}$/;"	f
crash_reason	deps/db_connection/lib/db_connection.ex	/^  defp crash_reason(_, value), do: value$/;"	f
create	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def create(conn, %{<%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
create	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def create(conn, %{<%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
create	deps/ecto_sql/lib/ecto/migration.ex	/^  def create(%Constraint{} = constraint) do$/;"	f
create	deps/ecto_sql/lib/ecto/migration.ex	/^  def create(%Index{} = index) do$/;"	f
create	deps/ecto_sql/lib/ecto/migration.ex	/^  def create(%Table{} = table) do$/;"	f
create	deps/ecto_sql/lib/ecto/migration.ex	/^  defmacro create(object, do: block) do$/;"	a
create	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  def create(nodes, extras) do$/;"	f
create	deps/ex_machina/lib/ex_machina.ex	/^      def create(_) do$/;"	f
create	deps/ex_machina/lib/ex_machina.ex	/^      def create(_, _) do$/;"	f
create	deps/phoenix/lib/phoenix/channel.ex	/^      def create(conn, params) do$/;"	f
create	deps/phoenix/lib/phoenix/token.ex	/^      def create(conn, params) do$/;"	f
create	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def create(conn, %{<%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
create	deps/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def create(conn, %{<%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
create	lib/boruta/adapters/ecto/access_tokens.ex	/^  def create($/;"	f
create	lib/boruta/adapters/ecto/codes.ex	/^  def create(%{$/;"	f
create and drop table and indexes	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "create and drop table and indexes", %{migration_number: num} do$/;"	t
create index if not exists and drop index if exists does not raise on failure	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "create index if not exists and drop index if exists does not raise on failure", %{migration_number: num} do$/;"	t
create post	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^        test "create post" do$/;"	t
create table if not exists and drop table if exists does not raise on failure	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "create table if not exists and drop table if exists does not raise on failure", %{migration_number: num} do$/;"	t
create_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def create_<%= schema.singular %>(attrs \\\\ %{}) do$/;"	f
create_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def create_<%= schema.singular %>(attrs \\\\ %{}) do$/;"	f
create_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "create_<%= schema.singular %>\/1 with invalid data returns error changeset" do$/;"	t
create_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "create_<%= schema.singular %>\/1 with valid data creates a <%= schema.singular %>" do$/;"	t
create_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^  defp create_<%= schema.singular %>(_) do$/;"	f
create_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^  defp create_<%= schema.singular %>(_) do$/;"	f
create_	deps/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def create_<%= schema.singular %>(attrs \\\\ %{}) do$/;"	f
create_	deps/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def create_<%= schema.singular %>(attrs \\\\ %{}) do$/;"	f
create_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "create_<%= schema.singular %>\/1 with invalid data returns error changeset" do$/;"	t
create_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "create_<%= schema.singular %>\/1 with valid data creates a <%= schema.singular %>" do$/;"	t
create_	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^  defp create_<%= schema.singular %>(_) do$/;"	f
create_	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^  defp create_<%= schema.singular %>(_) do$/;"	f
create_accs	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp create_accs(idx, fields, sources, initial_dict) do$/;"	f
create_alias	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp create_alias(<<first, _rest::binary>>) when first in ?a..?z when first in ?A..?Z do$/;"	f
create_alias	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp create_alias(_) do$/;"	f
create_alias	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp create_alias(<<first, _rest::binary>>) when first in ?a..?z when first in ?A..?Z do$/;"	f
create_alias	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp create_alias(_) do$/;"	f
create_alias	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp create_alias(<<first, _rest::binary>>) when first in ?a..?z when first in ?A..?Z do$/;"	f
create_alias	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp create_alias(_) do$/;"	f
create_changeset	lib/boruta/adapters/ecto/schemas/client.ex	/^  def create_changeset(client, attrs) do$/;"	f
create_check_file	deps/credo/lib/credo/cli/command/gen.check.ex	/^  defp create_check_file(filename) do$/;"	f
create_check_file	deps/credo/lib/credo/cli/command/gen.check.ex	/^  defp create_check_file(nil) do$/;"	f
create_client	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate create_client(attrs), to: Boruta.Ecto.Admin.Clients$/;"	d
create_client	lib/boruta/adapters/ecto/admin/clients.ex	/^  def create_client(attrs \\\\ %{}) do$/;"	f
create_comment	deps/ecto/lib/ecto/changeset.ex	/^      def create_comment(comment, params) do$/;"	f
create_config_file	deps/credo/lib/credo/cli/command/gen.config.ex	/^  defp create_config_file(filename) do$/;"	f
create_extension_registry	deps/makeup/lib/makeup/registry.ex	/^  def create_extension_registry() do$/;"	f
create_footnote_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp create_footnote_blocks(blocks, []), do: blocks$/;"	f
create_footnote_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp create_footnote_blocks(blocks, footnotes) do$/;"	f
create_if_not_exists	deps/ecto_sql/lib/ecto/migration.ex	/^  def create_if_not_exists(%Index{} = index) do$/;"	f
create_if_not_exists	deps/ecto_sql/lib/ecto/migration.ex	/^  def create_if_not_exists(%Table{} = table) do$/;"	f
create_if_not_exists	deps/ecto_sql/lib/ecto/migration.ex	/^  defmacro create_if_not_exists(object, do: block) do$/;"	a
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(_, _, _), do: true$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(line, column, trigger) when trigger == :-> do$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(line, column, trigger) when trigger == :\/ do$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(line, column, trigger) when trigger in [:+, :-] do$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(location, tokens, ast, issue_meta) do$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(trigger, _line_no, column, line, _tokens, _ast) do$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp create_issue?(trigger, line_no, column, line, tokens, ast) when trigger in [:+, :-] do$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^  defp create_issue?(:without_space, ", ]"), do: false$/;"	f
create_issue?	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^  defp create_issue?(_expected, _trigger), do: true$/;"	f
create_issue?	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def create_issue?([do: {atom, _, arguments}], excluded_macros)$/;"	f
create_issue?	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def create_issue?(_ast, _), do: true$/;"	f
create_issue?	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def create_issue?({:@, _, _}, _), do: false$/;"	f
create_issue?	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def create_issue?({atom, _, arguments}, excluded_macros)$/;"	f
create_list	deps/ex_machina/lib/ex_machina.ex	/^      def create_list(_, _, _) do$/;"	f
create_migration	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defp create_migration(num, config) do$/;"	f
create_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp create_name(sources, pos, as_prefix) do$/;"	f
create_name	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp create_name(sources, pos, as_prefix) do$/;"	f
create_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp create_name(sources, pos, as_prefix) do$/;"	f
create_name_registry	deps/makeup/lib/makeup/registry.ex	/^  def create_name_registry() do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp create_names(%{sources: sources}, as_prefix) do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp create_names(_sources, pos, pos, _as_prefix) do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp create_names(sources, pos, limit, as_prefix) when pos < limit do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp create_names(%{sources: sources}, as_prefix) do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp create_names(_sources, pos, pos, _as_prefix) do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp create_names(sources, pos, limit, as_prefix) when pos < limit do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp create_names(%{sources: sources}, as_prefix) do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp create_names(_sources, pos, pos, _as_prefix) do$/;"	f
create_names	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp create_names(sources, pos, limit, as_prefix) when pos < limit do$/;"	f
create_pair	deps/ex_machina/lib/ex_machina.ex	/^      def create_pair(_, _) do$/;"	f
create_refls	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp create_refls(idx, fields, dicts, sources) do$/;"	f
create_scope	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate create_scope(attrs), to: Boruta.Ecto.Admin.Scopes$/;"	d
create_scope	lib/boruta/adapters/ecto/admin/scopes.ex	/^  def create_scope(attrs \\\\ %{}) do$/;"	f
create_sidebar_items	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def create_sidebar_items(nodes_map, extras) do$/;"	f
create_table	deps/telemetry/src/telemetry_handler_table.erl	/^create_table() ->$/;"	f	module:telemetry_handler_table
creates a client	test/boruta/admin_test.exs	/^    test "creates a client" do$/;"	t
creates a client with a secret	test/boruta/admin_test.exs	/^    test "creates a client with a secret" do$/;"	t
creates a client with authorized scopes	test/boruta/admin_test.exs	/^    test "creates a client with authorized scopes" do$/;"	t
creates a scope	test/boruta/admin_test.exs	/^    test "creates a scope" do$/;"	t
creates a scope with public default to false	test/boruta/admin_test.exs	/^    test "creates a scope with public default to false" do$/;"	t
cross joins with missing entries	deps/ecto/integration_test/cases/joins.exs	/^  test "cross joins with missing entries" do$/;"	t
cross_origin_js?	deps/plug/lib/plug/csrf_protection.ex	/^  defp cross_origin_js?(%Plug.Conn{method: "GET"} = conn),$/;"	f
cross_origin_js?	deps/plug/lib/plug/csrf_protection.ex	/^  defp cross_origin_js?(%Plug.Conn{}), do: false$/;"	f
css_class_for_token_type	deps/makeup/lib/makeup/token/utils.ex	/^  def css_class_for_token_type(token_type) do$/;"	f
cte	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp cte(%{with_ctes: %WithExpr{recursive: recursive, queries: [_ | _] = queries}} = query, sources) do$/;"	f
cte	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp cte(%{with_ctes: _}, _), do: []$/;"	f
cte	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp cte(%{with_ctes: %WithExpr{recursive: recursive, queries: [_ | _] = queries}} = query, sources) do$/;"	f
cte	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp cte(%{with_ctes: _}, _), do: []$/;"	f
cte	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp cte(%{with_ctes: %WithExpr{queries: [_ | _] = queries}} = query, sources) do$/;"	f
cte	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp cte(%{with_ctes: _}, _), do: []$/;"	f
cte_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp cte_expr({name, cte}, sources, query) do$/;"	f
cte_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp cte_expr({name, cte}, sources, query) do$/;"	f
cte_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp cte_expr({name, cte}, sources, query) do$/;"	f
cte_header	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp cte_header(%Ecto.Query{select: %{fields: fields}} = query, _) do$/;"	f
cte_header	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp cte_header(%QueryExpr{}, query) do$/;"	f
cte_query	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp cte_query(%Ecto.Query{} = query, _, _), do: ["(", all(query), ")"]$/;"	f
cte_query	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp cte_query(%QueryExpr{expr: expr}, sources, query), do: expr(expr, sources, query)$/;"	f
cte_query	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp cte_query(%Ecto.Query{} = query, _, _), do: ["(", all(query), ")"]$/;"	f
cte_query	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp cte_query(%QueryExpr{expr: expr}, sources, query), do: expr(expr, sources, query)$/;"	f
cte_query	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp cte_query(%Ecto.Query{} = query, _, _), do: [?(, all(query), ?)]$/;"	f
cume_dist	deps/ecto/lib/ecto/query/window_api.ex	/^  def cume_dist(), do: doc! []$/;"	f
current_path	deps/phoenix/lib/phoenix/controller.ex	/^  def current_path(%Plug.Conn{query_string: ""} = conn) do$/;"	f
current_path	deps/phoenix/lib/phoenix/controller.ex	/^  def current_path(%Plug.Conn{query_string: query_string} = conn) do$/;"	f
current_path	deps/phoenix/lib/phoenix/controller.ex	/^  def current_path(%Plug.Conn{} = conn, params) do$/;"	f
current_path	deps/phoenix/lib/phoenix/controller.ex	/^  def current_path(%Plug.Conn{} = conn, params) when params == %{} do$/;"	f
current_secure_url	deps/phoenix/lib/phoenix/controller.ex	/^      def current_secure_url(conn, params \\\\ %{}) do$/;"	f
current_url	deps/phoenix/lib/phoenix/controller.ex	/^  def current_url(%Plug.Conn{} = conn) do$/;"	f
current_url	deps/phoenix/lib/phoenix/controller.ex	/^  def current_url(%Plug.Conn{} = conn, %{} = params) do$/;"	f
custom_chars	deps/puid/lib/puid.ex	/^        defp custom_chars(0, _, _, _, _, string), do: string$/;"	f
custom_chars	deps/puid/lib/puid.ex	/^        defp custom_chars(n, bits, uniform_offset, uniform_bytes, alphabet, string) do$/;"	f
custom_link	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp custom_link(attrs, config) do$/;"	f
custom_plug_parsers	deps/plug/lib/plug/builder.ex	/^      defp custom_plug_parsers(conn, opts) do$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?0), do: 0$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?1), do: 1$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?2), do: 2$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?3), do: 3$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?4), do: 4$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?5), do: 5$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?6), do: 6$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?7), do: 7$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?8), do: 8$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?9), do: 9$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?A), do: 10$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?B), do: 11$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?C), do: 12$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?D), do: 13$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?E), do: 14$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?F), do: 15$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?a), do: 10$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?b), do: 11$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?c), do: 12$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?d), do: 13$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?e), do: 14$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(?f), do: 15$/;"	f
d	deps/ecto/lib/ecto/uuid.ex	/^  defp d(_),  do: throw(:error)$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?0), do: 0$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?1), do: 1$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?2), do: 2$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?3), do: 3$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?4), do: 4$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?5), do: 5$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?6), do: 6$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?7), do: 7$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?8), do: 8$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?9), do: 9$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?A), do: 10$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?B), do: 11$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?C), do: 12$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?D), do: 13$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?E), do: 14$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?F), do: 15$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?a), do: 10$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?b), do: 11$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?c), do: 12$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?d), do: 13$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?e), do: 14$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(?f), do: 15$/;"	f
d	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp d(_),  do: throw(:error)$/;"	f
data	deps/postgrex/lib/postgrex/protocol.ex	/^  defp data(%{timeout: timeout} = s, status, buffer) do$/;"	f
data_as_field	deps/ecto/lib/ecto/changeset.ex	/^  defp data_as_field(data, types, key, value) do$/;"	f
data_pk	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp data_pk(pks) do$/;"	f
data_type	deps/ex_json_schema/lib/ex_json_schema/validator/type.ex	/^  defp data_type(data) do$/;"	f
date	deps/nimble_parsec/lib/nimble_parsec.ex	/^        def date do$/;"	f
date_add	deps/ecto/lib/ecto/query/api.ex	/^  def date_add(date, count, interval), do: doc! [date, count, interval]$/;"	f
date_add with day	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with day" do$/;"	t
date_add with dynamic	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with dynamic" do$/;"	t
date_add with hour	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with hour" do$/;"	t
date_add with month	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with month" do$/;"	t
date_add with negative interval	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with negative interval" do$/;"	t
date_add with week	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with week" do$/;"	t
date_add with year	deps/ecto/integration_test/cases/interval.exs	/^  test "date_add with year" do$/;"	t
datetime	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^        def datetime(binary, opts \\\\ []) do$/;"	f
datetime__0	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^        defp datetime__0(...) do$/;"	f
datetime_add	deps/ecto/lib/ecto/query/api.ex	/^  def datetime_add(datetime, count, interval), do: doc! [datetime, count, interval]$/;"	f
datetime_add uses utc_datetime_usec with decimal increment	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add uses utc_datetime_usec with decimal increment" do$/;"	t
datetime_add with day	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with day" do$/;"	t
datetime_add with dynamic	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with dynamic" do$/;"	t
datetime_add with dynamic in filters	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with dynamic in filters" do$/;"	t
datetime_add with hour	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with hour" do$/;"	t
datetime_add with microsecond	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with microsecond" do$/;"	t
datetime_add with millisecond	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with millisecond" do$/;"	t
datetime_add with minute	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with minute" do$/;"	t
datetime_add with month	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with month" do$/;"	t
datetime_add with naive_datetime_usec	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with naive_datetime_usec" do$/;"	t
datetime_add with naive_datetime_usec and decimal increment	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with naive_datetime_usec and decimal increment" do$/;"	t
datetime_add with negative interval	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with negative interval" do$/;"	t
datetime_add with second	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with second" do$/;"	t
datetime_add with utc_datetime	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with utc_datetime" do$/;"	t
datetime_add with utc_datetime_usec	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with utc_datetime_usec" do$/;"	t
datetime_add with week	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with week" do$/;"	t
datetime_add with year	deps/ecto/integration_test/cases/interval.exs	/^  test "datetime_add with year" do$/;"	t
day_to_elixir	deps/postgrex/lib/postgrex/extensions/date.ex	/^  def day_to_elixir(days) do$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("DEBUG"), do: :debug$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("ERROR"), do: :error$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("FATAL"), do: :error$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("INFO"), do: :info$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("LOG"), do: :info$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("NOTICE"), do: :info$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("PANIC"), do: :error$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level("WARNING"), do: :warn$/;"	f
ddl_log_level	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ddl_log_level(_severity), do: :info$/;"	f
ddl_logs	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def ddl_logs(_), do: []$/;"	f
ddl_logs	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def ddl_logs(%Postgrex.Result{} = result) do$/;"	f
ddl_logs	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def ddl_logs(_), do: []$/;"	f
deallocate	deps/db_connection/lib/db_connection.ex	/^  defp deallocate(conn, query, cursor, opts) do$/;"	f
deatomize	deps/erlex/lib/erlex.ex	/^  defp deatomize([:_, :_, '@', {:int, _}]) do$/;"	f
deatomize	deps/erlex/lib/erlex.ex	/^  defp deatomize(chars) when is_list(chars) do$/;"	f
deatomize_char	deps/erlex/lib/erlex.ex	/^  defp deatomize_char(char) when is_atom(char) do$/;"	f
deatomize_char	deps/erlex/lib/erlex.ex	/^  defp deatomize_char(char), do: char$/;"	f
debug	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def debug(combinator \\\\ empty(), to_debug)$/;"	f
decimal	deps/decimal/lib/decimal.ex	/^  defp decimal(%Decimal{} = num), do: num$/;"	f
decimal	deps/decimal/lib/decimal.ex	/^  defp decimal(num) when is_binary(num), do: new(num)$/;"	f
decimal	deps/decimal/lib/decimal.ex	/^  defp decimal(num) when is_integer(num), do: new(num)$/;"	f
decimal	deps/decimal/lib/decimal.ex	/^  defp decimal(other) when is_float(other) do$/;"	f
decimal type	deps/ecto/integration_test/cases/type.exs	/^  test "decimal type" do$/;"	t
decimal type cast	deps/ecto/integration_test/cases/type.exs	/^  test "decimal type cast" do$/;"	t
decimal typed aggregations	deps/ecto/integration_test/cases/type.exs	/^  test "decimal typed aggregations" do$/;"	t
decimal?	deps/decimal/lib/decimal.ex	/^  def decimal?(%Decimal{}), do: true$/;"	f
decimal?	deps/decimal/lib/decimal.ex	/^  def decimal?(_), do: false$/;"	f
decimal_chars	deps/puid/lib/puid.ex	/^        defp decimal_chars(0, _, _, _, string), do: string$/;"	f
decimal_chars	deps/puid/lib/puid.ex	/^        defp decimal_chars(n, bits, uniform_offset, uniform_bytes, string) do$/;"	f
decimal_compare	deps/ecto/lib/ecto/changeset.ex	/^  defp decimal_compare(:eq, spec), do: spec in [:equal_to, :less_than_or_equal_to, :greater_than_or_equal_to]$/;"	f
decimal_compare	deps/ecto/lib/ecto/changeset.ex	/^  defp decimal_compare(:gt, spec), do: spec in [:greater_than, :greater_than_or_equal_to, :not_equal_to]$/;"	f
decimal_compare	deps/ecto/lib/ecto/changeset.ex	/^  defp decimal_compare(:lt, spec), do: spec in [:less_than, :less_than_or_equal_to, :not_equal_to]$/;"	f
decimal_in_source?	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp decimal_in_source?(source) do$/;"	f
decimal_new	deps/ecto/lib/ecto/changeset.ex	/^  defp decimal_new(term) when is_float(term), do: Decimal.from_float(term)$/;"	f
decimal_new	deps/ecto/lib/ecto/changeset.ex	/^  defp decimal_new(term), do: Decimal.new(term)$/;"	f
decimal_to_float	deps/decimal/lib/decimal.ex	/^  defp decimal_to_float(sign, num, den, exp) do$/;"	f
declare	deps/db_connection/lib/db_connection.ex	/^  defp declare(conn, query, params, opts) do$/;"	f
decode	deps/db_connection/lib/db_connection.ex	/^  defp decode(query, result, meter, opts) do$/;"	f
decode	deps/db_connection/lib/db_connection/query.ex	/^  def decode(query, result, opts)$/;"	f
decode	deps/jason/lib/jason.ex	/^  def decode(input, opts \\\\ []) do$/;"	f
decode	deps/phoenix/lib/phoenix/token.ex	/^  defp decode(message, opts) do$/;"	f
decode	deps/plug/lib/plug/conn/cookies.ex	/^  def decode(cookie) do$/;"	f
decode	deps/plug/lib/plug/conn/query.ex	/^  def decode("", initial, _invalid_exception, _validate_utf8) do$/;"	f
decode	deps/plug/lib/plug/conn/query.ex	/^  def decode($/;"	f
decode	deps/plug/lib/plug/conn/query.ex	/^  def decode(query, initial, invalid_exception, validate_utf8) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:error, :timeout}, _decoder) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:error, _}, _decoder) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:more, _, conn}, _decoder) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:ok, "", conn}, _decoder) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:ok, body, conn}, {module, fun, args}) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode(:error, _serializer, false) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode(:error, _serializer, log) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode({:ok, binary}, :external_term_format, log) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode({:ok, binary}, serializer, _log) do$/;"	f
decode	deps/plug_crypto/lib/plug/crypto.ex	/^  defp decode(message, opts) do$/;"	f
decode	deps/postgrex/lib/postgrex/extension.ex	/^        def decode(:copy) do$/;"	f
decode	deps/postgrex/lib/postgrex/extension.ex	/^        def decode(:reference) do$/;"	f
decode	deps/postgrex/lib/postgrex/extension.ex	/^      def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def decode(dims, elems) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/bit_string.ex	/^  def decode(:copy) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/bit_string.ex	/^  def decode(:reference) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/bool.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/box.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/circle.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/date.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/float4.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/float8.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  def decode(mode) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/inet.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/int2.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/int4.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/int8.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/interval.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def decode({library, :copy}) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def decode({library, :reference}) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def decode({library, :copy}) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def decode({library, :reference}) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/line.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/line_segment.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/macaddr.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/name.ex	/^  def decode(:copy) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/name.ex	/^  def decode(:reference) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/oid.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/path.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/point.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/polygon.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def decode(flags, _oid, []) when (flags &&& @range_empty) != 0 do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def decode(flags, _oid, elems) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/raw.ex	/^  def decode(:copy) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/raw.ex	/^  def decode(:reference) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/tid.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/time.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def decode(infinity?) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def decode(infinity?) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/uuid.ex	/^  def decode(:copy) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/uuid.ex	/^  def decode(:reference) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/void_binary.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/extensions/void_text.ex	/^  def decode(_) do$/;"	f
decode	deps/postgrex/lib/postgrex/parameters.ex	/^  def decode(_, parameters, _), do: parameters$/;"	f
decode	deps/postgrex/lib/postgrex/query.ex	/^  def decode(_, %Postgrex.Copy{} = copy, _opts) do$/;"	f
decode	deps/postgrex/lib/postgrex/query.ex	/^  def decode(_, %Postgrex.Result{rows: nil} = res, _opts) do$/;"	f
decode	deps/postgrex/lib/postgrex/query.ex	/^  def decode(_, %Postgrex.Result{rows: rows} = res, opts) do$/;"	f
decode	deps/postgrex/lib/postgrex/stream.ex	/^  def decode(copy, _result, _opts) do$/;"	f
decode	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode(config, define_opts) do$/;"	f
decode	lib/boruta/utils/basic_auth.ex	/^  def decode("Basic " <> encoded) do$/;"	f
decode	lib/boruta/utils/basic_auth.ex	/^  def decode(string) when is_binary(string), do: {:error, "`#{string}` is not a valid Basic authorization header."}$/;"	f
decode!	deps/jason/lib/jason.ex	/^  def decode!(input, opts \\\\ []) do$/;"	f
decode!	deps/phoenix/lib/phoenix/socket/serializers/v1_json_serializer.ex	/^  def decode!(message, _opts) do$/;"	f
decode!	deps/phoenix/lib/phoenix/socket/serializers/v2_json_serializer.ex	/^  def decode!(raw_message, _opts) do$/;"	f
decode!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^    def decode!(message, _opts), do: message$/;"	f
decode_auth_type	deps/postgrex/lib/postgrex/messages.ex	/^    def decode_auth_type(unquote(value)), do: unquote(type)$/;"	f
decode_copy	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_copy(<<format::int8, len::uint16, rest::binary(len, 16)>>) do$/;"	f
decode_dims	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp decode_dims(<<>>, acc) do$/;"	f
decode_dims	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp decode_dims(<<len::int32, _lbound::int32, rest::binary>>, acc) do$/;"	f
decode_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_extension(extension, clause, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_extension(extension, pattern, body, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_extension(extension, pattern, guard, body, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_extension_null	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_extension_null(extension, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_field_type	deps/postgrex/lib/postgrex/messages.ex	/^    def decode_field_type(unquote(char)), do: unquote(field)$/;"	f
decode_field_type	deps/postgrex/lib/postgrex/messages.ex	/^  def decode_field_type(_), do: :unknown$/;"	f
decode_fields	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_fields(<<0>>), do: []$/;"	f
decode_fields	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_fields(<<field::int8, rest::binary>>) do$/;"	f
decode_format	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_format(0), do: :text$/;"	f
decode_format	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_format(1), do: :binary$/;"	f
decode_hstore	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  def decode_hstore(<<_length::int32, pairs::binary>>, :copy) do$/;"	f
decode_hstore	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  def decode_hstore(<<_length::int32, pairs::binary>>, :reference) do$/;"	f
decode_hstore_copy	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp decode_hstore_copy($/;"	f
decode_hstore_copy	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp decode_hstore_copy(<<>>, acc) do$/;"	f
decode_hstore_ref	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp decode_hstore_ref($/;"	f
decode_hstore_ref	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp decode_hstore_ref(<<>>, acc) do$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key("", _key), do: false$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<<?=, _::binary>>, ""), do: false$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<<?=, t::binary>>, key), do: decode_value(t, "", key, "")$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<<h, _::binary>>, _key) when h in [?\\s, ?\\t, ?\\r, ?\\n, ?\\v, ?\\f], do: false$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<<h, t::binary>>, key), do: decode_key(t, <<key::binary, h>>)$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(""), do: false$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(<<h, t::binary>>) when h in [?\\s, ?\\t], do: decode_kv(t)$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(kv), do: decode_key(kv, "")$/;"	f
decode_list	deps/postgrex/lib/postgrex/type_module.ex	/^      def decode_list(<<unquote(rest)::binary>>, type) do$/;"	f
decode_list	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_list(config) do$/;"	f
decode_list_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_list_dispatch(extension, :super_binary, rest) do$/;"	f
decode_list_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_list_dispatch(extension, _, rest) do$/;"	f
decode_map	deps/postgrex/lib/postgrex/query.ex	/^  defp decode_map([], _, decoded) do$/;"	f
decode_map	deps/postgrex/lib/postgrex/query.ex	/^  defp decode_map([row | data], mapper, decoded) do$/;"	f
decode_map	deps/postgrex/lib/postgrex/query.ex	/^  defp decode_map(data, opts) do$/;"	f
decode_null	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_null(extension, :super_binary, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_null	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_null(extension, _, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  def decode_numeric(<<ndigits::int16, weight::int16, sign::uint16, scale::int16, tail::binary>>) do$/;"	f
decode_numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp decode_numeric(0, _weight, 0xC000, _scale, "") do$/;"	f
decode_numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp decode_numeric(_num_digits, weight, sign, scale, bin) do$/;"	f
decode_numeric_int	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp decode_numeric_int("", weight, acc), do: {acc, weight}$/;"	f
decode_numeric_int	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp decode_numeric_int(<<digit::int16, tail::binary>>, weight, acc) do$/;"	f
decode_pair	deps/plug/lib/plug/conn/query.ex	/^  def decode_pair({key, value}, acc) do$/;"	f
decode_path	deps/postgrex/lib/postgrex/extensions/path.ex	/^  def decode_path(<<o::int8, n::int32, point_data::binary-size(n)-unit(128)>>) do$/;"	f
decode_path_info!	deps/plug/lib/plug/router/utils.ex	/^  def decode_path_info!(conn) do$/;"	f
decode_points	deps/postgrex/lib/postgrex/extensions/path.ex	/^  defp decode_points(<<>>, points), do: Enum.reverse(points)$/;"	f
decode_points	deps/postgrex/lib/postgrex/extensions/path.ex	/^  defp decode_points(<<x::float64, y::float64, rest::bits>>, points) do$/;"	f
decode_row_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_row_dispatch(extension, :super_binary, rest, acc, rem, full, rows) do$/;"	f
decode_row_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_row_dispatch(extension, _, rest, acc, rem, full, rows) do$/;"	f
decode_row_field	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_row_field(rest) do$/;"	f
decode_row_fields	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_row_fields("", 0), do: []$/;"	f
decode_row_fields	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_row_fields(rest, count) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^      def decode_rows(binary, types, rows) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_rows($/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_rows(<<?D, rest::binary>>, _, _, rows) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_rows(<<?D, size::int32, rest::binary>>, rem, _, rows) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_rows(<<rest::binary-size(0)>>, _, _, rows) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_rows(<<rest::binary>>, _, _, rows) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_rows(dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_rows	deps/postgrex/lib/postgrex/types.ex	/^  def decode_rows(binary, types, rows, {mod, _}) do$/;"	f
decode_rows_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_rows_dispatch(rest, acc, rem, full, rows) do$/;"	f
decode_sign	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp decode_sign(0x0000), do: 1$/;"	f
decode_sign	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp decode_sign(0x4000), do: -1$/;"	f
decode_string	deps/postgrex/lib/postgrex/messages.ex	/^  defp decode_string(bin) do$/;"	f
decode_super	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_super($/;"	f
decode_super	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_super(extension, clause, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_super_null	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_super_null(extension, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("BEGIN"), do: {:begin, nil}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("COMMIT"), do: {:commit, nil}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("COPY " <> int), do: {:copy, String.to_integer(int)}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("DELETE " <> int), do: {:delete, String.to_integer(int)}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("FETCH " <> int), do: {:fetch, String.to_integer(int)}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("INSERT " <> rest) do$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("MOVE " <> int), do: {:move, String.to_integer(int)}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("ROLLBACK"), do: {:rollback, nil}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("SELECT " <> int), do: {:select, String.to_integer(int)}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag("UPDATE " <> int), do: {:update, String.to_integer(int)}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag(<<>>, acc), do: {String.to_atom(acc), nil}$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag(<<?\\s, t::binary>>, acc), do: decode_tag(t, <<acc::binary, ?_>>)$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag(<<_h, _t::binary>>, acc) do$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag(<<h, t::binary>>, acc) when h in ?A..?Z,$/;"	f
decode_tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tag(tag), do: decode_tag(tag, "")$/;"	f
decode_tags	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tags([tag]), do: decode_tag(tag)$/;"	f
decode_tags	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tags(tag, acc) do$/;"	f
decode_tags	deps/postgrex/lib/postgrex/protocol.ex	/^  defp decode_tags(tags), do: Enum.map_reduce(tags, nil, &decode_tags\/2)$/;"	f
decode_token	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp decode_token(token) do$/;"	f
decode_token	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp decode_token(token) do$/;"	f
decode_tsvector_values	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  def decode_tsvector_values("") do$/;"	f
decode_tsvector_values	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  def decode_tsvector_values(words) do$/;"	f
decode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      def decode_tuple(<<rest::binary>>, count, types) when is_integer(count) do$/;"	f
decode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      def decode_tuple(<<rest::binary>>, oids, types) do$/;"	f
decode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_tuple($/;"	f
decode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_tuple(<<>>, 0, _types, n, acc) do$/;"	f
decode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      defp decode_tuple(<<>>, [], [], n, acc) do$/;"	f
decode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_tuple(config) do$/;"	f
decode_tuple_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_tuple_dispatch(extension, :super_binary, rest, oids, n, acc) do$/;"	f
decode_tuple_dispatch	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_tuple_dispatch(extension, _, rest, oids, n, acc) do$/;"	f
decode_type	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_type(extension, :super_binary, clause, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_type	deps/postgrex/lib/postgrex/type_module.ex	/^  defp decode_type(extension, _, clause, dispatch, rest, acc, rem, full, rows) do$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value("", _spaces, key, value), do: {key, value}$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value(<<?\\s, t::binary>>, spaces, key, value),$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value(<<h, _::binary>>, _spaces, _key, _value) when h in [?\\t, ?\\r, ?\\n, ?\\v, ?\\f],$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value(<<h, t::binary>>, spaces, key, value),$/;"	f
decode_vertices	deps/postgrex/lib/postgrex/extensions/polygon.ex	/^  def decode_vertices(<<n::int32, vert_data::binary-size(n)-unit(128)>>) do$/;"	f
decode_vertices	deps/postgrex/lib/postgrex/extensions/polygon.ex	/^  defp decode_vertices(<<>>, v), do: Enum.reverse(v)$/;"	f
decode_vertices	deps/postgrex/lib/postgrex/extensions/polygon.ex	/^  defp decode_vertices(<<x::float64, y::float64, rest::bits>>, v) do$/;"	f
decode_weight	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp decode_weight(0), do: nil$/;"	f
decode_weight	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp decode_weight(1), do: :C$/;"	f
decode_weight	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp decode_weight(2), do: :B$/;"	f
decode_weight	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp decode_weight(3), do: :A$/;"	f
decode_www_form	deps/plug/lib/plug/conn/query.ex	/^  defp decode_www_form(value, invalid_exception, validate_utf8) do$/;"	f
decode_www_pair	deps/plug/lib/plug/conn/query.ex	/^  defp decode_www_pair("", acc, _invalid_exception, _validate_utf8) do$/;"	f
decode_www_pair	deps/plug/lib/plug/conn/query.ex	/^  defp decode_www_pair(binary, acc, invalid_exception, validate_utf8) do$/;"	f
decrypt	deps/phoenix/lib/phoenix/token.ex	/^  def decrypt(_context, _secret, _salt, nil, _opts) do$/;"	f
decrypt	deps/phoenix/lib/phoenix/token.ex	/^  def decrypt(context, secret, salt, token) when is_binary(secret) and is_binary(salt) do$/;"	f
decrypt	deps/phoenix/lib/phoenix/token.ex	/^  def decrypt(context, secret, salt, token, opts) when is_binary(token) do$/;"	f
decrypt	deps/phoenix/lib/phoenix/token.ex	/^  def decrypt(context, secret, token, opts \\\\ [])$/;"	f
decrypt	deps/phoenix/lib/phoenix/token.ex	/^  def decrypt(context, secret, token, opts) when is_binary(secret) and is_list(opts) do$/;"	f
decrypt	deps/plug_crypto/lib/plug/crypto.ex	/^  def decrypt(_key_base, _secret, _salt, nil, _opts) do$/;"	f
decrypt	deps/plug_crypto/lib/plug/crypto.ex	/^  def decrypt(key_base, secret, salt, token, opts) when is_binary(token) do$/;"	f
decrypt	deps/plug_crypto/lib/plug/crypto.ex	/^  def decrypt(key_base, secret, token, opts \\\\ [])$/;"	f
decrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  def decrypt(encrypted, secret, sign_secret)$/;"	f
def_arity	deps/credo/lib/credo/code/module.ex	/^    def def_arity({unquote(op) = op, _, [{:when, _, fun_ast}, _]}) do$/;"	f
def_arity	deps/credo/lib/credo/code/module.ex	/^    def def_arity({unquote(op), _, [{_fun_name, _, _}, _]}), do: 0$/;"	f
def_arity	deps/credo/lib/credo/code/module.ex	/^    def def_arity({unquote(op), _, [{_fun_name, _, arguments}, _]})$/;"	f
def_arity	deps/credo/lib/credo/code/module.ex	/^  def def_arity(_), do: nil$/;"	f
def_count	deps/credo/lib/credo/code/module.ex	/^  def def_count(nil), do: 0$/;"	f
def_count	deps/credo/lib/credo/code/module.ex	/^  def def_count({:defmodule, _, _arguments} = ast) do$/;"	f
def_name	deps/credo/lib/credo/code/module.ex	/^    def def_name({unquote(op) = op, _, [{:when, _, fun_ast}, _]}) do$/;"	f
def_name	deps/credo/lib/credo/code/module.ex	/^    def def_name({unquote(op), _, [{fun_name, _, _arguments}, _]})$/;"	f
def_name	deps/credo/lib/credo/code/module.ex	/^  def def_name(_), do: nil$/;"	f
def_name_with_op	deps/credo/lib/credo/code/module.ex	/^    def def_name_with_op({unquote(op) = op, _, _} = ast) do$/;"	f
def_name_with_op	deps/credo/lib/credo/code/module.ex	/^    def def_name_with_op({unquote(op) = op, _, _} = ast, arity) do$/;"	f
def_name_with_op	deps/credo/lib/credo/code/module.ex	/^  def def_name_with_op(_), do: nil$/;"	f
def_names	deps/credo/lib/credo/code/module.ex	/^  def def_names(nil), do: []$/;"	f
def_names	deps/credo/lib/credo/code/module.ex	/^  def def_names({:defmodule, _, _arguments} = ast) do$/;"	f
def_names_with_op	deps/credo/lib/credo/code/module.ex	/^  def def_names_with_op(nil), do: []$/;"	f
def_names_with_op	deps/credo/lib/credo/code/module.ex	/^  def def_names_with_op(nil, _arity), do: []$/;"	f
def_names_with_op	deps/credo/lib/credo/code/module.ex	/^  def def_names_with_op({:defmodule, _, _arguments} = ast) do$/;"	f
def_names_with_op	deps/credo/lib/credo/code/module.ex	/^  def def_names_with_op({:defmodule, _, _arguments} = ast, arity) do$/;"	f
defalias	deps/bunt/lib/bunt_ansi.ex	/^  defmacro defalias(alias_name, original_name) do$/;"	a
default_actions	deps/phoenix/lib/phoenix/router/resource.ex	/^  defp default_actions(false = _singleton), do: @actions$/;"	f
default_actions	deps/phoenix/lib/phoenix/router/resource.ex	/^  defp default_actions(true = _singleton),  do: @actions -- [:index]$/;"	f
default_assets	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp default_assets do$/;"	f
default_assets	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp default_assets(_config) do$/;"	f
default_config	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  def default_config() do$/;"	f
default_config	deps/phoenix/lib/phoenix/transports/websocket.ex	/^  def default_config() do$/;"	f
default_encoders	deps/phoenix/lib/phoenix/template.ex	/^  defp default_encoders do$/;"	f
default_explain	deps/dialyxir/lib/dialyxir/warning.ex	/^  def default_explain() do$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp default_expr(:error),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp default_expr({:ok, literal}) when is_binary(literal),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp default_expr({:ok, literal}) when is_number(literal) or is_boolean(literal),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp default_expr({:ok, nil}),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp default_expr({:ok, value}) when is_map(value),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp default_expr({:ok, {:fragment, expr}}),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_expr(:error, _),            do: []$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_expr({:ok, literal}, type), do: [" DEFAULT ", default_type(literal, type)]$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_expr({:ok, nil}, _type),    do: " DEFAULT NULL"$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(_table, _name, :error), do: []$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(_table, _name, {:ok, nil}),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(table, name, {:ok, false}),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(table, name, {:ok, literal}) when is_binary(literal),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(table, name, {:ok, literal}) when is_number(literal),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(table, name, {:ok, true}),$/;"	f
default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp default_expr(table, name, {:ok, {:fragment, expr}}),$/;"	f
default_extension?	deps/postgrex/lib/postgrex/utils.ex	/^    def default_extension?(unquote(ext)), do: true$/;"	f
default_extension?	deps/postgrex/lib/postgrex/utils.ex	/^  def default_extension?(_), do: false$/;"	f
default_extensions	deps/postgrex/lib/postgrex/utils.ex	/^  def default_extensions(opts \\\\ []) do$/;"	f
default_for	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp default_for(Phoenix.Transports.LongPoll), do: Plug.Adapters.Cowboy.Handler$/;"	f
default_for	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp default_for(Phoenix.Transports.WebSocket), do: Phoenix.Endpoint.CowboyWebSocket$/;"	f
default_for	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp default_for(_), do: nil$/;"	f
default_ignore_warnings	deps/dialyxir/lib/dialyxir/project.ex	/^  def default_ignore_warnings() do$/;"	f
default_index_name	deps/ecto_sql/lib/ecto/migration.ex	/^  defp default_index_name(index) do$/;"	f
default_join_keys	deps/ecto/lib/ecto/association.ex	/^  defp default_join_keys(module, related) do$/;"	f
default_options	deps/ecto/lib/ecto/repo.ex	/^      def default_options(_operation), do: []$/;"	f
default_opts	deps/postgrex/lib/postgrex/utils.ex	/^  def default_opts(opts) do$/;"	f
default_param	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def default_param(%Schema{} = schema, action) do$/;"	f
default_params_module_attribute	deps/credo/lib/credo/check.ex	/^  defp default_params_module_attribute(env) do$/;"	f
default_paths	deps/dialyxir/lib/dialyxir/project.ex	/^  defp default_paths() do$/;"	f
default_reloadable_apps	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp default_reloadable_apps() do$/;"	f
default_source_ref	deps/ex_doc/lib/ex_doc/config.ex	/^  def default_source_ref do$/;"	f
default_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def default_style, do: HTML.DefaultStyle.style()$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type(%{} = map, :map) do$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type(expr, type),$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type(list, {:array, inner} = type) when is_list(list) do$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type(literal, _type) when is_binary(literal) do$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type(literal, _type) when is_boolean(literal), do: to_string(literal)$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type(literal, _type) when is_number(literal),  do: to_string(literal)$/;"	f
default_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp default_type({:fragment, expr}, _type),$/;"	f
default_value	deps/credo/lib/credo/severity.ex	/^  def default_value, do: 1$/;"	f
defaults	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp defaults(otp_app, module) do$/;"	f
defchannel	deps/phoenix/lib/phoenix/socket.ex	/^  defp defchannel(topic_match, channel_module, opts) do$/;"	f
defcombinatorp	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defmacro defcombinatorp(name, combinator, opts \\\\ []) do$/;"	a
defexception?	deps/credo/lib/credo/code/module.ex	/^  defp defexception?(_), do: false$/;"	f
defexception?	deps/credo/lib/credo/code/module.ex	/^  defp defexception?({:defexception, _, _}), do: true$/;"	f
defgroupmatcher	deps/makeup/lib/makeup/lexer/groups.ex	/^  defmacro defgroupmatcher(name, stacks, opts \\\\ []) do$/;"	a
defhelper	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def defhelper(%Route{} = route, exprs) do$/;"	f
defhelper_catch_all	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def defhelper_catch_all({helper, routes_and_exprs}) do$/;"	f
define	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def define(env, routes) do$/;"	f
define	deps/postgrex/lib/postgrex/type_module.ex	/^  def define(module, extensions, opts) do$/;"	f
define	deps/postgrex/lib/postgrex/types.ex	/^  def define(module, extensions, opts \\\\ []) do$/;"	f
define_field	deps/ecto/lib/ecto/schema.ex	/^  defp define_field(mod, name, type, opts) do$/;"	f
define_inline	deps/postgrex/lib/postgrex/type_module.ex	/^  defp define_inline(module, config, opts) do$/;"	f
define_mock_module	deps/mox/lib/mox.ex	/^  defp define_mock_module(name, behaviours, body) do$/;"	f
definstrument	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  def definstrument(otp_app, endpoint) do$/;"	f
defmock	deps/mox/lib/mox.ex	/^  def defmock(name, options) when is_atom(name) and is_list(options) do$/;"	f
defparsec	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defmacro defparsec(name, combinator, opts \\\\ []) do$/;"	a
defparsecp	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defmacro defparsecp(name, combinator, opts \\\\ []) do$/;"	a
defs	deps/credo/lib/credo/code/module.ex	/^  def defs(nil), do: []$/;"	f
defs	deps/credo/lib/credo/code/module.ex	/^  def defs({:defmodule, _, _arguments} = ast) do$/;"	f
defs	deps/phoenix/lib/phoenix/router.ex	/^  defp defs() do$/;"	f
defsequence	deps/bunt/lib/bunt_ansi.ex	/^  defmacro defsequence(name, code, prefix \\\\ "", terminator \\\\ "m") do$/;"	a
delegate_doc	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp delegate_doc(nil), do: nil$/;"	f
delegate_doc	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp delegate_doc({m, f, a}),$/;"	f
delete	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def delete(conn, %{"id" => id}) do$/;"	f
delete	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def delete(conn, %{"id" => id}) do$/;"	f
delete	deps/db_connection/lib/db_connection/holder.ex	/^  def delete(holder) do$/;"	f
delete	deps/ecto/lib/ecto/multi.ex	/^  def delete(multi, name, %Changeset{} = changeset, opts) do$/;"	f
delete	deps/ecto/lib/ecto/multi.ex	/^  def delete(multi, name, %_{} = struct, opts) do$/;"	f
delete	deps/ecto/lib/ecto/multi.ex	/^  def delete(multi, name, changeset_or_struct_fun, opts \\\\ [])$/;"	f
delete	deps/ecto/lib/ecto/multi.ex	/^  def delete(multi, name, fun, opts) when is_function(fun, 1) do$/;"	f
delete	deps/ecto/lib/ecto/repo.ex	/^        def delete(struct, opts \\\\ []) do$/;"	f
delete	deps/ecto/lib/ecto/repo/schema.ex	/^  def delete(repo, name, %Changeset{} = changeset, opts) when is_list(opts) do$/;"	f
delete	deps/ecto/lib/ecto/repo/schema.ex	/^  def delete(repo, name, %{__struct__: _} = struct, opts) when is_list(opts) do$/;"	f
delete	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def delete(prefix, table, filters, _returning) do$/;"	f
delete	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def delete(prefix, table, filters, returning) do$/;"	f
delete	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def delete(adapter_meta, %{source: source, prefix: prefix}, params, opts) do$/;"	f
delete	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def delete(prefix, table, filters, returning) do$/;"	f
delete	deps/phoenix/lib/phoenix/controller.ex	/^      def delete(conn, %{"id" => id}, user) do$/;"	f
delete	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def delete(conn, %{"id" => id}) do$/;"	f
delete	deps/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def delete(conn, %{"id" => id}) do$/;"	f
delete	deps/plug/lib/plug/router.ex	/^  defmacro delete(path, options, contents \\\\ []) do$/;"	a
delete	deps/plug/lib/plug/session/cookie.ex	/^  def delete(_conn, _sid, _opts) do$/;"	f
delete	deps/plug/lib/plug/session/ets.ex	/^  def delete(_conn, sid, table) do$/;"	f
delete	deps/postgrex/lib/postgrex/parameters.ex	/^  def delete(ref) do$/;"	f
delete	deps/telemetry/src/telemetry_handler_table.erl	/^delete(HandlerId) ->$/;"	f	module:telemetry_handler_table
delete all	deps/ecto/integration_test/cases/repo.exs	/^  test "delete all" do$/;"	t
delete all no entries	deps/ecto/integration_test/cases/repo.exs	/^  test "delete all no entries" do$/;"	t
delete all with filter	deps/ecto/integration_test/cases/repo.exs	/^  test "delete all with filter" do$/;"	t
delete all with invalid prefix	deps/ecto/integration_test/cases/repo.exs	/^  test "delete all with invalid prefix" do$/;"	t
delete all with joins	deps/ecto/integration_test/cases/joins.exs	/^  test "delete all with joins" do$/;"	t
delete all with returning with schema	deps/ecto/integration_test/cases/repo.exs	/^  test "delete all with returning with schema" do$/;"	t
delete all with returning without schema	deps/ecto/integration_test/cases/repo.exs	/^  test "delete all with returning without schema" do$/;"	t
delete!	deps/ecto/lib/ecto/repo.ex	/^        def delete!(struct, opts \\\\ []) do$/;"	f
delete!	deps/ecto/lib/ecto/repo/schema.ex	/^  def delete!(repo, name, struct_or_changeset, opts) do$/;"	f
delete_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def delete_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
delete_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def delete_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
delete_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "delete_<%= schema.singular %>\/1 deletes the <%= schema.singular %>" do$/;"	t
delete_	deps/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def delete_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
delete_	deps/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def delete_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>) do$/;"	f
delete_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "delete_<%= schema.singular %>\/1 deletes the <%= schema.singular %>" do$/;"	t
delete_all	deps/ecto/lib/ecto/association.ex	/^  def delete_all(refl, parent, repo_name, opts) do$/;"	f
delete_all	deps/ecto/lib/ecto/multi.ex	/^  def delete_all(multi, name, queryable, opts \\\\ []) when is_list(opts) do$/;"	f
delete_all	deps/ecto/lib/ecto/repo.ex	/^          def delete_all(queryable, opts \\\\ []) do$/;"	f
delete_all	deps/ecto/lib/ecto/repo/queryable.ex	/^  def delete_all(name, queryable, opts) when is_list(opts) do$/;"	f
delete_all	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def delete_all(query) do$/;"	f
delete_all	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def delete_all(%{from: from} = query) do$/;"	f
delete_all	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def delete_all(query) do$/;"	f
delete_change	deps/ecto/lib/ecto/changeset.ex	/^  def delete_change(%Changeset{} = changeset, key) when is_atom(key) do$/;"	f
delete_channel	deps/phoenix/lib/phoenix/socket.ex	/^  defp delete_channel(state, pid, topic, monitor_ref) do$/;"	f
delete_client	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate delete_client(client), to: Boruta.Ecto.Admin.Clients$/;"	d
delete_client	lib/boruta/adapters/ecto/admin/clients.ex	/^  def delete_client(%Client{} = client) do$/;"	f
delete_cookie	deps/plug/lib/plug/session.ex	/^  defp delete_cookie(conn, %{cookie_opts: cookie_opts, key: key}),$/;"	f
delete_csrf_token	deps/phoenix/lib/phoenix/controller.ex	/^  defdelegate delete_csrf_token(), to: Plug.CSRFProtection$/;"	d
delete_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  def delete_csrf_token do$/;"	f
delete_keys	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp delete_keys([], acc), do: acc$/;"	f
delete_keys	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp delete_keys([head | tail], acc) do$/;"	f
delete_parameters	deps/postgrex/lib/postgrex/protocol.ex	/^  defp delete_parameters(%{parameters: ref}) when is_reference(ref) do$/;"	f
delete_parameters	deps/postgrex/lib/postgrex/protocol.ex	/^  defp delete_parameters(_), do: :ok$/;"	f
delete_paths	deps/plug/lib/plug/upload.ex	/^  defp delete_paths(paths) do$/;"	f
delete_plt	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  def delete_plt(plt, _, _, _) do$/;"	f
delete_req_cookie	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate delete_req_cookie(conn, key), to: Plug.Test$/;"	d
delete_req_cookie	deps/plug/lib/plug/test.ex	/^  def delete_req_cookie(%Conn{req_cookies: %Plug.Conn.Unfetched{}} = conn, key)$/;"	f
delete_req_cookie	deps/plug/lib/plug/test.ex	/^  def delete_req_cookie(_conn, key) when is_binary(key) do$/;"	f
delete_req_header	deps/plug/lib/plug/conn.ex	/^  def delete_req_header(%Conn{req_headers: headers} = conn, key)$/;"	f
delete_req_header	deps/plug/lib/plug/conn.ex	/^  def delete_req_header(%Conn{state: :chunked}, _key) do$/;"	f
delete_req_header	deps/plug/lib/plug/conn.ex	/^  def delete_req_header(%Conn{state: :sent}, _key) do$/;"	f
delete_req_header	deps/plug/lib/plug/conn.ex	/^  def delete_req_header(conn, key)$/;"	f
delete_resp_cookie	deps/plug/lib/plug/conn.ex	/^  def delete_resp_cookie(%Conn{resp_cookies: resp_cookies} = conn, key, opts \\\\ [])$/;"	f
delete_resp_header	deps/plug/lib/plug/conn.ex	/^  def delete_resp_header(%Conn{resp_headers: headers} = conn, key)$/;"	f
delete_resp_header	deps/plug/lib/plug/conn.ex	/^  def delete_resp_header(%Conn{state: :chunked}, _key) do$/;"	f
delete_resp_header	deps/plug/lib/plug/conn.ex	/^  def delete_resp_header(%Conn{state: :sent}, _key) do$/;"	f
delete_scope	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate delete_scope(scope), to: Boruta.Ecto.Admin.Scopes$/;"	d
delete_scope	lib/boruta/adapters/ecto/admin/scopes.ex	/^  def delete_scope(%Scope{} = scope) do$/;"	f
delete_session	deps/plug/lib/plug/conn.ex	/^  def delete_session(%Conn{state: state}, _key) when not (state in @unsent),$/;"	f
delete_session	deps/plug/lib/plug/conn.ex	/^  def delete_session(conn, key) when is_atom(key) or is_binary(key) do$/;"	f
delete_session	deps/plug/lib/plug/session.ex	/^  defp delete_session(sid, conn, %{store: store, store_config: store_config}),$/;"	f
delete_tag	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp delete_tag(clouds, {name, _clock} = tag) do$/;"	f
deletes chosen	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "deletes chosen <%= schema.singular %>", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
deletes chosen	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "deletes chosen <%= schema.singular %>", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
deletes chosen	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "deletes chosen <%= schema.singular %>", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
deletes chosen	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "deletes chosen <%= schema.singular %>", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
deletes the client	test/boruta/admin_test.exs	/^    test "deletes the client" do$/;"	t
deletes the scope	test/boruta/admin_test.exs	/^    test "deletes the scope" do$/;"	t
delta_fullfilling_clock	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  defp delta_fullfilling_clock(generations, remote_context) do$/;"	f
delta_size	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def delta_size(%State{mode: :delta, clouds: clouds, values: values}) do$/;"	f
demonitor	deps/db_connection/lib/db_connection/connection.ex	/^  defp demonitor(nil), do: true$/;"	f
demonitor	deps/db_connection/lib/db_connection/connection.ex	/^  defp demonitor({_, _}), do: true$/;"	f
demonitor	deps/db_connection/lib/db_connection/connection.ex	/^  defp demonitor({_, mon}) when is_reference(mon) do$/;"	f
demonitor	deps/db_connection/lib/db_connection/connection.ex	/^  defp demonitor({mon, :after_connect}) when is_reference(mon) do$/;"	f
dense_rank	deps/ecto/lib/ecto/query/window_api.ex	/^  def dense_rank(), do: doc! []$/;"	f
dep_only	deps/dialyxir/lib/dialyxir/project.ex	/^  defp dep_only(_), do: nil$/;"	f
dep_only	deps/dialyxir/lib/dialyxir/project.ex	/^  defp dep_only({_, _, opts}) when is_list(opts), do: opts[:only]$/;"	f
dep_only	deps/dialyxir/lib/dialyxir/project.ex	/^  defp dep_only({_, opts}) when is_list(opts), do: opts[:only]$/;"	f
dependencies	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  defp dependencies(_terminal), do: []$/;"	f
dependencies	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  defp dependencies({tag, _, children} = node) do$/;"	f
dependency_hash	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  def dependency_hash do$/;"	f
deprecated?	deps/ex_doc/lib/ex_doc.ex	/^  defp deprecated?(%{deprecated: deprecated}), do: is_binary(deprecated)$/;"	f
deprecated_transports	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp deprecated_transports(socket) do$/;"	f
deps	deps/bunt/mix.exs	/^  defp deps do$/;"	f
deps	deps/connection/mix.exs	/^  defp deps() do$/;"	f
deps	deps/credo/mix.exs	/^  defp deps do$/;"	f
deps	deps/crypto_rand/mix.exs	/^  defp deps,$/;"	f
deps	deps/db_connection/mix.exs	/^  defp deps do$/;"	f
deps	deps/decimal/mix.exs	/^  defp deps() do$/;"	f
deps	deps/dialyxir/mix.exs	/^  defp deps do$/;"	f
deps	deps/ecto/mix.exs	/^  defp deps do$/;"	f
deps	deps/ecto_sql/mix.exs	/^  defp deps do$/;"	f
deps	deps/erlex/mix.exs	/^  defp deps do$/;"	f
deps	deps/ex_doc/mix.exs	/^  defp deps do$/;"	f
deps	deps/ex_json_schema/mix.exs	/^  defp deps do$/;"	f
deps	deps/ex_machina/mix.exs	/^  defp deps() do$/;"	f
deps	deps/jason/mix.exs	/^  defp deps() do$/;"	f
deps	deps/makeup/mix.exs	/^  defp deps do$/;"	f
deps	deps/makeup_elixir/mix.exs	/^  defp deps do$/;"	f
deps	deps/mime/mix.exs	/^  defp deps do$/;"	f
deps	deps/mox/mix.exs	/^  defp deps do$/;"	f
deps	deps/phoenix/lib/mix/phoenix.ex	/^            def deps do$/;"	f
deps	deps/phoenix/mix.exs	/^  defp deps do$/;"	f
deps	deps/phoenix_pubsub/mix.exs	/^  defp deps do$/;"	f
deps	deps/plug/mix.exs	/^  def deps do$/;"	f
deps	deps/plug_crypto/mix.exs	/^  defp deps do$/;"	f
deps	deps/postgrex/mix.exs	/^  defp deps do$/;"	f
deps	deps/puid/mix.exs	/^  defp deps do$/;"	f
deps	deps/secure_random/mix.exs	/^  def deps do$/;"	f
deps	mix.exs	/^  defp deps do$/;"	f
deps_app	deps/dialyxir/lib/dialyxir/project.ex	/^  defp deps_app(app, recursive) do$/;"	f
deps_app	deps/dialyxir/lib/dialyxir/project.ex	/^  defp deps_app(recursive) do$/;"	f
deps_plt	deps/dialyxir/lib/dialyxir/project.ex	/^  def deps_plt() do$/;"	f
deps_project	deps/dialyxir/lib/dialyxir/project.ex	/^  defp deps_project do$/;"	f
deps_transitive	deps/dialyxir/lib/dialyxir/project.ex	/^  defp deps_transitive do$/;"	f
dequeue	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp dequeue(time, holder, queue, codel) do$/;"	f
dequeue_fast	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp dequeue_fast(time, holder, queue, codel) do$/;"	f
dequeue_first	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp dequeue_first(time, slow?, holder, queue, codel) do$/;"	f
dequeue_slow	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp dequeue_slow(time, timeout, holder, queue, codel) do$/;"	f
derive	deps/plug/lib/plug/session/cookie.ex	/^  defp derive(_secret_key_base, {:prederived, value}, _key_opts) do$/;"	f
derive	deps/plug/lib/plug/session/cookie.ex	/^  defp derive(secret_key_base, key, key_opts) do$/;"	f
derive	deps/plug/lib/plug/session/cookie.ex	/^  defp derive(secret_key_base, {module, function, args}, key_opts) do$/;"	f
descendants	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  defp descendants(_terminal), do: []$/;"	f
descendants	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  defp descendants({_, _, children}) do$/;"	f
describe	deps/db_connection/lib/db_connection.ex	/^  defp describe(conn, query, meter, opts) do$/;"	f
describe	deps/db_connection/lib/db_connection/query.ex	/^  def describe(query, opts)$/;"	f
describe	deps/postgrex/lib/postgrex/parameters.ex	/^  def describe(query, _), do: query$/;"	f
describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp describe(s, query, param_oids, result_oids, columns, buffer) do$/;"	f
describe	deps/postgrex/lib/postgrex/query.ex	/^  def describe(query, _), do: query$/;"	f
describe	deps/postgrex/lib/postgrex/stream.ex	/^  def describe(copy, _) do$/;"	f
describe_params	deps/postgrex/lib/postgrex/protocol.ex	/^  defp describe_params(%{types: types}, query, param_oids) do$/;"	f
describe_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp describe_result(%{types: types}, query, nil, nil) do$/;"	f
describe_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp describe_result(%{types: types}, query, result_oids, columns) do$/;"	f
description	deps/connection/mix.exs	/^  defp description do$/;"	f
description	deps/crypto_rand/mix.exs	/^  defp description do$/;"	f
description	deps/db_connection/mix.exs	/^  defp description do$/;"	f
description	deps/decimal/mix.exs	/^  defp description() do$/;"	f
description	deps/dialyxir/mix.exs	/^  defp description do$/;"	f
description	deps/erlex/mix.exs	/^  defp description do$/;"	f
description	deps/jason/mix.exs	/^  defp description() do$/;"	f
description	deps/makeup/mix.exs	/^  defp description do$/;"	f
description	deps/makeup_elixir/mix.exs	/^  defp description do$/;"	f
description	deps/puid/mix.exs	/^  defp description do$/;"	f
description	mix.exs	/^  defp description do$/;"	f
detach	deps/telemetry/src/telemetry.erl	/^detach(HandlerId) ->$/;"	f	module:telemetry
detect_down	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  def detect_down(replicas, replica, temp_interval, perm_interval, now \\\\ now_ms()) do$/;"	f
detect_downs	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp detect_downs(%{permdown_period: perm_int, down_period: temp_int} = state) do$/;"	f
detect_unused_call	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp detect_unused_call(candidate, ast) do$/;"	f
determine_command	deps/credo/lib/credo/execution/task/determine_command.ex	/^  defp determine_command($/;"	f
determine_command	deps/credo/lib/credo/execution/task/determine_command.ex	/^  defp determine_command(exec, options) do$/;"	f
determine_command	deps/credo/lib/credo/execution/task/set_default_command.ex	/^  defp determine_command(exec, %Options{command: nil, args: args} = options) do$/;"	f
determine_command	deps/credo/lib/credo/execution/task/set_default_command.ex	/^  defp determine_command(exec, _options), do: exec$/;"	f
determine_ending_parens_by_count	deps/earmark/lib/earmark/helpers/pure_link_helpers.ex	/^  defp determine_ending_parens_by_count(leading_spaces_count, prefix, surplus_on_closing_parens) do$/;"	f
determine_padding_at_start_of_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp determine_padding_at_start_of_line(line, regex \\\\ ~r\/^\\s+\/) do$/;"	f
dialyze	deps/dialyxir/lib/dialyxir/dialyzer.ex	/^  def dialyze(args, runner \\\\ Runner, filterer \\\\ Project) do$/;"	f
dialyzer	deps/jason/mix.exs	/^  defp dialyzer() do$/;"	f
dialyzer_config	deps/dialyxir/lib/dialyxir/project.ex	/^  defp dialyzer_config(), do: Mix.Project.config()[:dialyzer]$/;"	f
dialyzer_files	deps/dialyxir/lib/dialyxir/project.ex	/^  def dialyzer_files do$/;"	f
dialyzer_flags	deps/dialyxir/lib/dialyxir/project.ex	/^  def dialyzer_flags do$/;"	f
dialyzer_ignore_warnings	deps/dialyxir/lib/dialyxir/project.ex	/^  def dialyzer_ignore_warnings() do$/;"	f
dialyzer_paths	deps/dialyxir/lib/dialyxir/project.ex	/^  defp dialyzer_paths do$/;"	f
dialyzer_removed_defaults	deps/dialyxir/lib/dialyxir/project.ex	/^  def dialyzer_removed_defaults do$/;"	f
dialyzer_warnings	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp dialyzer_warnings(dargs) do$/;"	f
digest	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp digest(content) do$/;"	f
digest	deps/phoenix/lib/phoenix/digester.ex	/^  defp digest(file) do$/;"	f
digest_javascript_asset_references	deps/phoenix/lib/phoenix/digester.ex	/^  defp digest_javascript_asset_references(file, manifest) do$/;"	f
digest_javascript_map_asset_references	deps/phoenix/lib/phoenix/digester.ex	/^  defp digest_javascript_map_asset_references(file, manifest) do$/;"	f
digest_stylesheet_asset_references	deps/phoenix/lib/phoenix/digester.ex	/^  defp digest_stylesheet_asset_references(file, manifest) do$/;"	f
digested_contents	deps/phoenix/lib/phoenix/digester.ex	/^  defp digested_contents(file, manifest) do$/;"	f
digested_url	deps/phoenix/lib/phoenix/digester.ex	/^  defp digested_url("\/" <> relative_path, _file, manifest, with_vsn?) do$/;"	f
digested_url	deps/phoenix/lib/phoenix/digester.ex	/^  defp digested_url(url, file, manifest, with_vsn?) do$/;"	f
digits_increment	deps/decimal/lib/decimal.ex	/^  defp digits_increment([?9 | rest], acc), do: digits_increment(rest, [?0 | acc])$/;"	f
digits_increment	deps/decimal/lib/decimal.ex	/^  defp digits_increment([], acc), do: [?1 | acc]$/;"	f
digits_increment	deps/decimal/lib/decimal.ex	/^  defp digits_increment([head | rest], acc), do: :lists.reverse(rest, [head + 1 | acc])$/;"	f
digits_increment	deps/decimal/lib/decimal.ex	/^  defp digits_increment(digits), do: digits_increment(:lists.reverse(digits), [])$/;"	f
digits_to_integer	deps/decimal/lib/decimal.ex	/^  defp digits_to_integer([]), do: 0$/;"	f
digits_to_integer	deps/decimal/lib/decimal.ex	/^  defp digits_to_integer(digits), do: :erlang.list_to_integer(digits)$/;"	f
dir!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def dir!(_kind, dir) when dir in @directions,$/;"	f
dir!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def dir!(kind, other) do$/;"	f
direct_broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def direct_broadcast(node_name, server, topic, message) when is_atom(server),$/;"	f
direct_broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  def direct_broadcast(fastlane, server_name, pool_size, node_name, from_pid, topic, msg) do$/;"	f
direct_broadcast	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp direct_broadcast(state, target_node, msg) do$/;"	f
direct_broadcast!	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def direct_broadcast!(node_name, server, topic, message) do$/;"	f
direct_broadcast_from	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def direct_broadcast_from(node_name, server, from_pid, topic, message)$/;"	f
direct_broadcast_from!	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def direct_broadcast_from!(node_name, server, from_pid, topic, message)$/;"	f
direction	deps/ecto_sql/lib/ecto/migration.ex	/^  def direction do$/;"	f
directives	deps/postgrex/lib/postgrex/type_module.ex	/^  defp directives(config) do$/;"	f
dirty_list	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def dirty_list(shard_name, topic) do$/;"	f
discard_previously_sent	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp discard_previously_sent() do$/;"	f
discard_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp discard_values(%{__struct__: mod} = struct, _params) when is_atom(mod) do$/;"	f
discard_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp discard_values(%{} = map, params) do$/;"	f
discard_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp discard_values([_ | _] = list, params) do$/;"	f
discard_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp discard_values(other, _params), do: other$/;"	f
disconnect	deps/connection/lib/connection.ex	/^        def disconnect(info, %{sock: sock} = s) do$/;"	f
disconnect	deps/connection/lib/connection.ex	/^      def disconnect(info, state) do$/;"	f
disconnect	deps/connection/lib/connection.ex	/^  defp disconnect(info, mod_state, %{mod: mod} = s) do$/;"	f
disconnect	deps/db_connection/lib/db_connection.ex	/^  defp disconnect(%DBConnection{pool_ref: pool_ref}, err) do$/;"	f
disconnect	deps/db_connection/lib/db_connection/connection.ex	/^  def disconnect({log, err}, %{mod: mod} = s) do$/;"	f
disconnect	deps/db_connection/lib/db_connection/connection.ex	/^  def disconnect({pid, ref}, err, state) do$/;"	f
disconnect	deps/db_connection/lib/db_connection/holder.ex	/^  def disconnect(pool_ref, err) do$/;"	f
disconnect	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def disconnect(err, {conn_mod, state, _in_transaction?}) do$/;"	f
disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  def disconnect(_, s) do$/;"	f
disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp disconnect(%{connection_id: connection_id} = s, %Postgrex.Error{} = err, buffer) do$/;"	f
disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp disconnect(s, %RuntimeError{} = err, buffer) do$/;"	f
disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp disconnect(s, tag, action, reason) do$/;"	f
disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp disconnect(s, tag, action, reason, buffer) do$/;"	f
disconnects on transaction timeouts	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "disconnects on transaction timeouts" do$/;"	t
dismiss_backslash	deps/earmark/src/link_text_lexer.erl	/^dismiss_backslash([$\\\\|Chars]) -> Chars.$/;"	f	module:link_text_lexer
dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def dispatch(%Message{} = msg, channels, socket) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def dispatch(%{ref: ref, topic: "phoenix", event: "heartbeat"}, _channels, socket) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def dispatch(msg, channels, socket)$/;"	f
dispatch	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def dispatch(%Plug.Conn{} = conn, endpoint, method, path_or_action, params_or_body) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def dispatch(conn, _endpoint, method, _path_or_action, _params_or_body) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def dispatch(conn, endpoint, method, path_or_action, params_or_body \\\\ nil)$/;"	f
dispatch	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp dispatch(%{halted: true} = conn, _, _, _) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp dispatch(%{method: "GET"} = conn, endpoint, handler, opts) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp dispatch(%{method: "OPTIONS"} = conn, _, _, _) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp dispatch(%{method: "POST"} = conn, endpoint, _, opts) do$/;"	f
dispatch	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp dispatch(conn, _, _, _) do$/;"	f
dispatch	deps/plug/lib/plug/router.ex	/^      def dispatch(%Plug.Conn{} = conn, opts) do$/;"	f
dispatch_endpoint	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp dispatch_endpoint(conn, endpoint, method, action, params_or_body) when is_atom(action) do$/;"	f
dispatch_endpoint	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp dispatch_endpoint(conn, endpoint, method, path, params_or_body) when is_binary(path) do$/;"	f
dist	deps/ex_doc/lib/ex_doc/formatter/epub/assets.ex	/^  def dist do$/;"	f
dist	deps/ex_doc/lib/ex_doc/formatter/html/assets.ex	/^  def dist do$/;"	f
distinct	deps/ecto/lib/ecto/query.ex	/^  defmacro distinct(query, binding \\\\ [], expr) do$/;"	a
distinct	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp distinct(%QueryExpr{expr: exprs}, _sources, query) when is_list(exprs) do$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp distinct(%QueryExpr{expr: false}, _sources, _query), do: []$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp distinct(%QueryExpr{expr: true}, _sources, _query),  do: "DISTINCT "$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp distinct(nil, _sources, _query), do: []$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp distinct(%QueryExpr{expr: []}, _, _), do: {[], []}$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp distinct(%QueryExpr{expr: exprs}, sources, query) do$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp distinct(%QueryExpr{expr: false}, _, _), do: {[], []}$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp distinct(%QueryExpr{expr: true}, _, _), do: {" DISTINCT", []}$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp distinct(nil, _, _), do: {[], []}$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp distinct(%QueryExpr{expr: exprs}, _sources, query) when is_list(exprs) do$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp distinct(%QueryExpr{expr: false}, _sources, _query), do: []$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp distinct(%QueryExpr{expr: true}, _sources, _query), do: "DISTINCT "$/;"	f
distinct	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp distinct(nil, _sources, _query), do: []$/;"	f
distinct!	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def distinct!(query, distinct, file, line) do$/;"	f
distinct!	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def distinct!(query, distinct, file, line) when is_boolean(distinct) do$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{coef: 0}, %Decimal{coef: 0}),$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{coef: :inf}, %Decimal{coef: :inf}),$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{coef: :qNaN} = num1, %Decimal{}), do: num1$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{coef: :sNaN} = num1, %Decimal{}),$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{sign: sign1, coef: :inf} = num1, %Decimal{sign: sign2}) do$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{sign: sign1, exp: exp1}, %Decimal{sign: sign2, coef: :inf, exp: exp2}) do$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{sign: sign1}, %Decimal{sign: sign2, coef: 0}) do$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{}, %Decimal{coef: :qNaN} = num2), do: num2$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(%Decimal{}, %Decimal{coef: :sNaN} = num2),$/;"	f
div	deps/decimal/lib/decimal.ex	/^  def div(num1, num2) do$/;"	f
div_adjust	deps/decimal/lib/decimal.ex	/^  defp div_adjust(coef1, coef2, adjust) when coef1 < coef2,$/;"	f
div_adjust	deps/decimal/lib/decimal.ex	/^  defp div_adjust(coef1, coef2, adjust) when coef1 >= coef2 * 10,$/;"	f
div_adjust	deps/decimal/lib/decimal.ex	/^  defp div_adjust(coef1, coef2, adjust), do: {coef1, coef2, adjust}$/;"	f
div_calc	deps/decimal/lib/decimal.ex	/^  defp div_calc(coef1, coef2, coef, adjust, prec10) do$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{coef: 0}, %Decimal{coef: 0}),$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{coef: :inf}, %Decimal{coef: :inf}),$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{coef: :qNaN} = num1, %Decimal{}), do: num1$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{coef: :sNaN} = num1, %Decimal{}),$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{sign: sign1, coef: :inf} = num1, %Decimal{sign: sign2}) do$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{sign: sign1, exp: exp1}, %Decimal{sign: sign2, coef: :inf, exp: exp2}) do$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{sign: sign1}, %Decimal{sign: sign2, coef: 0}) do$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{}, %Decimal{coef: :qNaN} = num2), do: num2$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(%Decimal{}, %Decimal{coef: :sNaN} = num2),$/;"	f
div_int	deps/decimal/lib/decimal.ex	/^  def div_int(num1, num2) do$/;"	f
div_int_calc	deps/decimal/lib/decimal.ex	/^  defp div_int_calc(coef1, coef2, coef, adjust, precision) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{coef: 0}, %Decimal{coef: 0}) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{coef: :inf}, %Decimal{coef: :inf}) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{coef: :qNaN} = num1, %Decimal{}), do: {num1, num1}$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{coef: :sNaN} = num1, %Decimal{}) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{sign: sign1, coef: :inf} = num1, %Decimal{sign: sign2}) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{sign: sign1}, %Decimal{sign: sign2, coef: 0}) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{} = num1, %Decimal{coef: :inf} = num2) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{}, %Decimal{coef: :qNaN} = num2), do: {num2, num2}$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(%Decimal{}, %Decimal{coef: :sNaN} = num2) do$/;"	f
div_rem	deps/decimal/lib/decimal.ex	/^  def div_rem(num1, num2) do$/;"	f
do not duplicates scopes	test/boruta/oauth/authorization/scope_test.exs	/^    test "do not duplicates scopes", %{$/;"	t
do_add	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp do_add(%State{delta: delta} = state, pid, topic, key, meta) do$/;"	f
do_block?	deps/credo/lib/credo/code/block.ex	/^  def do_block?(ast) do$/;"	f
do_block_complexity	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  defp do_block_complexity(block, op) do$/;"	f
do_block_complexity	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  defp do_block_complexity(nil, _), do: 0$/;"	f
do_block_complexity	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  defp do_block_complexity(block, op) do$/;"	f
do_block_complexity	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  defp do_block_complexity(nil, _), do: 0$/;"	f
do_block_for	deps/credo/lib/credo/code/block.ex	/^  def do_block_for(_) do$/;"	f
do_block_for	deps/credo/lib/credo/code/block.ex	/^  def do_block_for(arguments) when is_list(arguments) do$/;"	f
do_block_for	deps/credo/lib/credo/code/block.ex	/^  def do_block_for(do: block) do$/;"	f
do_block_for	deps/credo/lib/credo/code/block.ex	/^  def do_block_for({_atom, _meta, arguments}) when is_list(arguments) do$/;"	f
do_block_for!	deps/credo/lib/credo/code/block.ex	/^  def do_block_for!(ast) do$/;"	f
do_broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  defp do_broadcast(fastlane, pubsub_server, shard, from, topic, msg) do$/;"	f
do_broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  defp do_broadcast(nil, pubsub_server, shard, from, topic, msg) do$/;"	f
do_broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  defp do_broadcast(pids, fastlane, server_name, pool_size, from_pid, topic, msg)$/;"	f
do_broadcast	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  defp do_broadcast({:error, {:no_such_group, _}}, _fastlane, _server, _pool, _from, _topic, _msg) do$/;"	f
do_cancel_request	deps/postgrex/lib/postgrex/protocol.ex	/^  defp do_cancel_request(%{peer: {:local, _} = peer} = s), do: do_cancel_request(peer, 0, s)$/;"	f
do_cancel_request	deps/postgrex/lib/postgrex/protocol.ex	/^  defp do_cancel_request(%{peer: {ip, port}} = s), do: do_cancel_request(ip, port, s)$/;"	f
do_cancel_request	deps/postgrex/lib/postgrex/protocol.ex	/^  defp do_cancel_request(ip, port, %{timeout: timeout} = s) do$/;"	f
do_cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_cast(_meta, _owner, params, struct, allowed_actions, on_cast) do$/;"	f
do_cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_cast(meta, owner, params, nil = _struct, allowed_actions, on_cast) do$/;"	f
do_cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_cast(meta, owner, params, struct, allowed_actions, {module, fun, args})$/;"	f
do_cast	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_cast(relation, _owner, nil = _params, current, _allowed_actions, _on_cast) do$/;"	f
do_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_change(%{related: mod} = relation, changes, current, allowed_actions)$/;"	f
do_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_change(_relation, %{__struct__: _} = struct, _current, allowed_actions) do$/;"	f
do_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_change(relation, %Changeset{} = changeset, _current, allowed_actions) do$/;"	f
do_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_change(relation, %{__struct__: _} = changeset_or_struct, nil, _allowed_actions) do$/;"	f
do_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp do_change(relation, nil, current, _allowed_actions) do$/;"	f
do_compact	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp do_compact(ctx, cloud) do$/;"	f
do_create	deps/ecto_sql/lib/ecto/migration.ex	/^  defp do_create(table, command) do$/;"	f
do_decode	deps/plug/lib/plug/conn/cookies.ex	/^  defp do_decode([], acc), do: acc$/;"	f
do_decode	deps/plug/lib/plug/conn/cookies.ex	/^  defp do_decode([h | t], acc) do$/;"	f
do_delete	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_delete(repo, _name, %Changeset{valid?: false} = changeset, opts) do$/;"	f
do_delete	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_delete(repo, name, %Changeset{valid?: true} = changeset, opts) do$/;"	f
do_direction	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp do_direction(:down, repo, version, mod, opts) do$/;"	f
do_direction	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp do_direction(:up, repo, version, mod, opts) do$/;"	f
do_dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp do_dispatch(nil, %{event: "phx_join", topic: topic, ref: ref} = msg, socket) do$/;"	f
do_dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp do_dispatch(nil, msg, socket) do$/;"	f
do_dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp do_dispatch({channel_pid, _ref}, msg, _socket) do$/;"	f
do_dispatch	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp do_dispatch({pid, _ref}, %{event: "phx_join"} = msg, socket) when is_pid(pid) do$/;"	f
do_down	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp do_down(repo, version, module, opts) do$/;"	f
do_encode	deps/jason/lib/jason.ex	/^  defp do_encode(input, %{pretty: pretty} = opts) when pretty !== false do$/;"	f
do_encode	deps/jason/lib/jason.ex	/^  defp do_encode(input, %{pretty: true} = opts) do$/;"	f
do_encode	deps/jason/lib/jason.ex	/^  defp do_encode(input, opts) do$/;"	f
do_error	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^        defp do_error(_) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  defp do_escape(expr, params_acc, _kind, vars, env) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  defp do_escape(field, params_acc, _kind, _vars, _env) when is_atom(field) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  defp do_escape({:^, _, [expr]}, params_acc, kind, _vars, _env) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp do_escape(expr, params_acc, _kind, vars, env) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp do_escape(field, params_acc, _kind, _vars, _env) when is_atom(field) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp do_escape({:^, _, [expr]}, params_acc, kind, _vars, _env) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp do_escape({dir, expr}, params_acc, kind, vars, env) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp do_escape({dir, field}, params_acc, kind, _vars, _env) when is_atom(field) do$/;"	f
do_escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp do_escape({dir, {:^, _, [expr]}}, params_acc, kind, _vars, _env) do$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :combinations), do: %{query | combinations: []}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :distinct), do: %{query | distinct: nil}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :group_by), do: %{query | group_bys: []}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :having), do: %{query | havings: []}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :join) do$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :limit), do: %{query | limit: nil}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :lock), do: %{query | lock: nil}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :offset), do: %{query | offset: nil}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :order_by), do: %{query | order_bys: []}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :preload), do: %{query | preloads: [], assocs: []}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :select), do: %{query | select: nil}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :where), do: %{query | wheres: []}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, :with_ctes), do: %{query | with_ctes: nil}$/;"	f
do_exclude	deps/ecto/lib/ecto/query.ex	/^  defp do_exclude(%Ecto.Query{} = query, join_keyword) when join_keyword in @joins do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format([], [], acc, _emit, _append_reset) do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format([], [], acc, true, true) do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format([], [next | rest], acc, emit, append_reset) do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format([term | rest], rem, acc, emit, append_reset) do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format(term, rem, acc, emit, append_reset) when not is_list(term) do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format(term, rem, acc, false, append_reset) when is_atom(term) do$/;"	f
do_format	deps/bunt/lib/bunt_ansi.ex	/^  defp do_format(term, rem, acc, true, append_reset) when is_atom(term) do$/;"	f
do_forward	deps/plug/lib/plug.ex	/^  defp do_forward(mod, conn, opts), do: mod.call(conn, opts)$/;"	f
do_forward	deps/plug/lib/plug.ex	/^  defp do_forward({mod, fun}, conn, opts), do: apply(mod, fun, [conn, opts])$/;"	f
do_generate_node	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp do_generate_node(module, module_data, config) do$/;"	f
do_get_dir_paths	deps/credo/lib/credo/config_file.ex	/^  defp do_get_dir_paths([dir | tail], acc) do$/;"	f
do_get_dir_paths	deps/credo/lib/credo/config_file.ex	/^  defp do_get_dir_paths(dirs, acc) when length(dirs) < 2, do: acc$/;"	f
do_get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp do_get_fragment(nil, _, _ref), do: {:error, :invalid_reference}$/;"	f
do_get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp do_get_fragment(schema, [], _), do: {:ok, schema}$/;"	f
do_get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp do_get_fragment(schema, [idx | path], ref) when is_integer(idx) do$/;"	f
do_get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp do_get_fragment(schema, [key | path], ref) when is_binary(key),$/;"	f
do_handler	deps/phoenix/lib/phoenix/endpoint.ex	/^          defp do_handler(unquote(path), conn, _opts) do$/;"	f
do_handler	deps/phoenix/lib/phoenix/endpoint.ex	/^      defp do_handler(_path, conn, opts), do: {:plug, conn, __MODULE__, opts}$/;"	f
do_handshake	deps/postgrex/lib/postgrex/protocol.ex	/^  defp do_handshake(s, %{ssl: false} = status), do: startup(s, status)$/;"	f
do_handshake	deps/postgrex/lib/postgrex/protocol.ex	/^  defp do_handshake(s, %{ssl: true} = status), do: ssl(s, status)$/;"	f
do_insert	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_insert(repo, _name, %Changeset{valid?: false} = changeset, opts) do$/;"	f
do_insert	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_insert(repo, name, %Changeset{valid?: true} = changeset, opts) do$/;"	f
do_insert_all	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_insert_all(_name, _schema, _prefix, _source, [], opts) do$/;"	f
do_insert_all	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_insert_all(name, schema, prefix, source, rows, opts) when is_list(rows) do$/;"	f
do_listen	deps/postgrex/lib/postgrex/notifications.ex	/^  defp do_listen(channel, pid, ref, from, s) do$/;"	f
do_literal	deps/ecto/lib/ecto/query/builder.ex	/^  defp do_literal(value, :any, _current),$/;"	f
do_literal	deps/ecto/lib/ecto/query/builder.ex	/^  defp do_literal(value, _, current) when current in @always_tagged,$/;"	f
do_literal	deps/ecto/lib/ecto/query/builder.ex	/^  defp do_literal(value, expected, _current),$/;"	f
do_literal	deps/ecto/lib/ecto/query/builder.ex	/^  defp do_literal(value, expected, expected),$/;"	f
do_load	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_load(schema, data, loader) when is_atom(schema),$/;"	f
do_load	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_load(schema, data, loader) when is_list(data),$/;"	f
do_load	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_load(schema, {fields, values}, loader) when is_list(fields) and is_list(values),$/;"	f
do_load	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_load(types, data, loader) when is_map(types),$/;"	f
do_match	deps/plug/lib/plug/router.ex	/^      defp do_match(unquote(conn), unquote(method), unquote(match), unquote(host))$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:any, _right), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:binary_id, :binary), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:decimal, type) when type in [:float, :integer], do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:id, :integer), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:naive_datetime, {:param, :any_datetime}), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:naive_datetime_usec, {:param, :any_datetime}), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:utc_datetime, {:param, :any_datetime}), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(:utc_datetime_usec, {:param, :any_datetime}), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(_, _), do: false$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(_left, :any),  do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?(type, type), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?({:array, :any}, {:embed, %{cardinality: :many}}), do: true$/;"	f
do_match?	deps/ecto/lib/ecto/type.ex	/^  defp do_match?({outer, left}, {outer, right}), do: match?(left, right)$/;"	f
do_parse	deps/decimal/lib/decimal.ex	/^  defp do_parse("+" <> rest = raw) do$/;"	f
do_parse	deps/decimal/lib/decimal.ex	/^  defp do_parse("-" <> rest = raw) do$/;"	f
do_parse	deps/decimal/lib/decimal.ex	/^  defp do_parse(bin) do$/;"	f
do_parse_module	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp do_parse_module(string) do$/;"	f
do_position	deps/credo/lib/credo/code/token.ex	/^    defp do_position({_, pos, _, _, _, _}), do: pos$/;"	f
do_position	deps/credo/lib/credo/code/token.ex	/^    defp do_position({_, pos, _, _, _}), do: pos$/;"	f
do_position	deps/credo/lib/credo/code/token.ex	/^    defp do_position({_, pos, _, _}), do: pos$/;"	f
do_position	deps/credo/lib/credo/code/token.ex	/^    defp do_position({_, pos, _}), do: pos$/;"	f
do_position	deps/credo/lib/credo/code/token.ex	/^    defp do_position({atom, pos}) when is_atom(atom), do: pos$/;"	f
do_position	deps/credo/lib/credo/code/token.ex	/^    defp do_position({pos, list}) when is_list(list), do: pos$/;"	f
do_precision	deps/decimal/lib/decimal.ex	/^  defp do_precision(sign, digits, num_digits, exp, precision, rounding) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print($/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:any_function}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:any}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:assignment, {:atom, atom}, value}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:atom, ['_']}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:atom, [:_]}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:atom, atom}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:binary, [{:binary_part, {:any}, {:any}, {:size, {:int, 1}}}]}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:binary, [{:binary_part, {:any}, {:any}, {:size, {:int, 8}}}]}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:binary, binary_parts}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:binary, value, size}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:binary_part, value, _, size}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:binary_part, value, size}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:byte_list, byte_list}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:contract, {:args, args}, {:return, return}, {:whens, whens}}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:contract, {:args, args}, {:return, return}}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:contract, {:args, {:inner_any_function}}, {:return, return}}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:function, {:contract, {:args, args}, {:return, return}}}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:inner_any_function}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:int, int}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:list, :paren, items}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:list, :square, items}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:map, map_keys}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:map_entry, key, value}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:named_type, named_type, type}) when is_tuple(named_type) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:named_type, named_type, type})$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:named_type_with_appended_colon, named_type, type})$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:pattern, pattern_items}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:pipe_list, head, tail}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:range, from, to}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:rest}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:size, size}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:tuple, tuple_items}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:type, module, type, inner_type}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:type, module, type}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:type, type}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:type_list, type, types}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:when_names, when_names, item}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({:when_names, when_names, {:list, :paren, items}}) do$/;"	f
do_pretty_print	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print({nil}) do$/;"	f
do_pretty_print_contract	deps/erlex/lib/erlex.ex	/^  defp do_pretty_print_contract(contract) do$/;"	f
do_print_issue	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp do_print_issue($/;"	f
do_print_issues	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp do_print_issues($/;"	f
do_push	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  defp do_push([], _delta, [], {_prev, acc}), do: Enum.reverse(acc)$/;"	f
do_push	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  defp do_push([gen | generations], delta, [gen_max | opts], {prev, acc}) do$/;"	f
do_put_layout	deps/phoenix/lib/phoenix/controller.ex	/^  defp do_put_layout(conn, private_key, false) do$/;"	f
do_put_layout	deps/phoenix/lib/phoenix/controller.ex	/^  defp do_put_layout(conn, private_key, layout) when is_binary(layout) or is_atom(layout) do$/;"	f
do_put_layout	deps/phoenix/lib/phoenix/controller.ex	/^  defp do_put_layout(conn, private_key, {mod, layout}) when is_atom(mod) do$/;"	f
do_puts	deps/credo/lib/credo/cli/output/shell.ex	/^  defp do_puts(value) do$/;"	f
do_reduce	deps/decimal/lib/decimal.ex	/^  defp do_reduce(coef, exp) do$/;"	f
do_resolve	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp do_resolve(root, schema, scope) do$/;"	f
do_round	deps/decimal/lib/decimal.ex	/^  defp do_round(sign, digits, exp, target_exp, rounding) do$/;"	f
do_run	deps/credo/lib/credo/execution/task.ex	/^  defp do_run(_task, %Execution{} = exec, _opts) do$/;"	f
do_run	deps/credo/lib/credo/execution/task.ex	/^  defp do_run(_task, exec, _opts) do$/;"	f
do_run	deps/credo/lib/credo/execution/task.ex	/^  defp do_run(task, %Credo.Execution{halted: false} = exec, opts) do$/;"	f
do_run	deps/plug/lib/plug.ex	/^  defp do_run(conn, [], _level), do: conn$/;"	f
do_run	deps/plug/lib/plug.ex	/^  defp do_run(conn, [fun | plugs], level) when is_function(fun, 1) do$/;"	f
do_run	deps/plug/lib/plug.ex	/^  defp do_run(conn, [{mod, opts} | plugs], level) when is_atom(mod) do$/;"	f
do_run_check_on_single_source_file	deps/credo/lib/credo/check/runner.ex	/^  defp do_run_check_on_single_source_file({check, params}, source_file, exec) do$/;"	f
do_run_check_on_source_files	deps/credo/lib/credo/check/runner.ex	/^  defp do_run_check_on_source_files({check, params}, source_files, exec) do$/;"	f
do_runtime_window!	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp do_runtime_window!([], _query, acc, params), do: {acc, params}$/;"	f
do_runtime_window!	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp do_runtime_window!([{:frame, frame} | kw], query, acc, params) do$/;"	f
do_runtime_window!	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp do_runtime_window!([{:order_by, order_by} | kw], query, acc, params) do$/;"	f
do_runtime_window!	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp do_runtime_window!([{:partition_by, partition_by} | kw], query, acc, params) do$/;"	f
do_scope	deps/phoenix/lib/phoenix/router.ex	/^  defp do_scope(options, context) do$/;"	f
do_send	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp do_send(%{owner: owner, ref: ref} = state, status, headers, body) do$/;"	f
do_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp do_send(%{sock: {mod, sock}} = s, data, buffer) do$/;"	f
do_stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp do_stream(adapter_meta, {:cache, _, {_, prepared}}, params, opts) do$/;"	f
do_stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp do_stream(adapter_meta, {:cached, _, _, {_, cached}}, params, opts) do$/;"	f
do_stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp do_stream(adapter_meta, {:nocache, {_id, prepared}}, params, opts) do$/;"	f
do_typespec	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp do_typespec(string, config) do$/;"	f
do_unlisten	deps/postgrex/lib/postgrex/notifications.ex	/^  defp do_unlisten(channel, ref, from, s) do$/;"	f
do_up	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp do_up(repo, version, module, opts) do$/;"	f
do_update	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_update(repo, _name, %Changeset{valid?: false} = changeset, opts) do$/;"	f
do_update	deps/ecto/lib/ecto/repo/schema.ex	/^  defp do_update(repo, name, %Changeset{valid?: true} = changeset, opts) do$/;"	f
do_validate	deps/ex_json_schema/lib/ex_json_schema/validator/format.ex	/^  defp do_validate(_, _) do$/;"	f
do_validate	deps/ex_json_schema/lib/ex_json_schema/validator/format.ex	/^  defp do_validate(format, data)$/;"	f
do_warn	deps/credo/lib/credo/cli/output/shell.ex	/^  defp do_warn(value) do$/;"	f
doc	deps/ex_doc/lib/ex_doc/autolink.ex	/^  def doc(ast, options \\\\ []) do$/;"	f
doc!	deps/ecto/lib/ecto/query/api.ex	/^  defp doc!(_) do$/;"	f
doc!	deps/ecto/lib/ecto/query/window_api.ex	/^  defp doc!(_) do$/;"	f
doc?	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc?(_, _) do$/;"	f
doc?	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc?({_, _, _, :hidden, _}, _) do$/;"	f
doc?	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc?({{_, name, _}, _, _, :none, _}, :protocol) when name in [:impl_for, :impl_for!] do$/;"	f
doc?	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc?({{_, name, _}, _, _, :none, _}, _type) do$/;"	f
doc?	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc?({{kind, _, _}, _, _, _, _}, _) when kind not in [:function, :macro] do$/;"	f
doc_ast	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc_ast("text\/markdown", %{"en" => doc}, options), do: Markdown.to_ast(doc, options)$/;"	f
doc_ast	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc_ast(_, :hidden, _options), do: nil$/;"	f
doc_ast	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc_ast(_, :none, _options), do: nil$/;"	f
doc_ast	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp doc_ast(other, %{"en" => _}, _),$/;"	f
doc_since	deps/decimal/lib/decimal.ex	/^  defmacro doc_since(version) do$/;"	a
docs	deps/connection/mix.exs	/^  defp docs do$/;"	f
docs	deps/db_connection/mix.exs	/^  defp docs do$/;"	f
docs	deps/ecto/mix.exs	/^  defp docs do$/;"	f
docs	deps/ecto_sql/mix.exs	/^  defp docs do$/;"	f
docs	deps/erlex/mix.exs	/^  defp docs() do$/;"	f
docs	deps/ex_doc/mix.exs	/^  defp docs do$/;"	f
docs	deps/jason/mix.exs	/^  defp docs() do$/;"	f
docs	deps/mox/mix.exs	/^  defp docs do$/;"	f
docs	deps/phoenix/mix.exs	/^  defp docs do$/;"	f
docs	deps/phoenix_pubsub/mix.exs	/^  defp docs do$/;"	f
docs	deps/postgrex/mix.exs	/^  defp docs do$/;"	f
docs	mix.exs	/^  defp docs do$/;"	f
docs_chunk	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docs_chunk(:elixir_bootstrap), do: false$/;"	f
docs_chunk	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docs_chunk(Elixir), do: false$/;"	f
docs_chunk	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docs_chunk(module) do$/;"	f
docs_from_dir	deps/ex_doc/lib/ex_doc/retriever.ex	/^  def docs_from_dir(dir, config) when is_binary(dir) do$/;"	f
docs_from_dir	deps/ex_doc/lib/ex_doc/retriever.ex	/^  def docs_from_dir(dirs, config) when is_list(dirs) do$/;"	f
docs_from_files	deps/ex_doc/lib/ex_doc/retriever.ex	/^  def docs_from_files(files, config) when is_list(files) do$/;"	f
docs_from_modules	deps/ex_doc/lib/ex_doc/retriever.ex	/^  def docs_from_modules(modules, config) when is_list(modules) do$/;"	f
docstring	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docstring(%{"en" => doc}), do: doc$/;"	f
docstring	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docstring(:none, name, arity, {:ok, behaviour}) do$/;"	f
docstring	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docstring(_), do: nil$/;"	f
docstring	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp docstring(doc, _, _, _), do: docstring(doc)$/;"	f
does not commit half transactions on bad syntax	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "does not commit half transactions on bad syntax", config do$/;"	t
does not commit migration if insert into schema migration fails	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "does not commit migration if insert into schema migration fails" do$/;"	t
does not raise when connection pool is too small but there is no lock	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "does not raise when connection pool is too small but there is no lock" do$/;"	t
does not taint the sandbox on query errors	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "does not taint the sandbox on query errors" do$/;"	t
dominates?	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def dominates?(c1, c2) do$/;"	f
dominates?	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def dominates?(c1, c2) when map_size(c1) < map_size(c2), do: false$/;"	f
dominates_or_equal?	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def dominates_or_equal?(c1, _c2) when c1 == %{}, do: false$/;"	f
dominates_or_equal?	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def dominates_or_equal?(c1, c2) do$/;"	f
dominates_or_equal?	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def dominates_or_equal?(c1, c2) when c1 == %{} and c2 == %{}, do: true$/;"	f
done	deps/db_connection/lib/db_connection/holder.ex	/^  defp done(pool_ref, ops, tag, info) do$/;"	f
done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp done(%{connection_id: connection_id}, %{messages: messages}, tags) do$/;"	f
done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp done(s, status, %Query{} = query, rows, tag) do$/;"	f
done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp done(s, status, query, rows, command, nrows) do$/;"	f
done	deps/postgrex/lib/postgrex/type_server.ex	/^  def done(server, ref) do$/;"	f
down	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def down do$/;"	f
down	_build/dev/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def down do$/;"	f
down	_build/test/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def down do$/;"	f
down	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp down(reason, %{client: nil} = state) do$/;"	f
down	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp down(reason, %{client: {client, _, checkout_stack}} = state) do$/;"	f
down	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp down(reason, %{holder: nil} = state) do$/;"	f
down	deps/ecto_sql/integration_test/sql/alter.exs	/^    def down do$/;"	f
down	deps/ecto_sql/integration_test/sql/migration.exs	/^    def down do$/;"	f
down	deps/ecto_sql/integration_test/sql/migrator.exs	/^      def down do$/;"	f
down	deps/ecto_sql/integration_test/sql/migrator.exs	/^    def down do$/;"	f
down	deps/ecto_sql/lib/ecto/migration.ex	/^        def down do$/;"	f
down	deps/ecto_sql/lib/ecto/migration/schema_migration.ex	/^  def down(repo, version, prefix) do$/;"	f
down	deps/ecto_sql/lib/ecto/migrator.ex	/^        def down do$/;"	f
down	deps/ecto_sql/lib/ecto/migrator.ex	/^  def down(repo, version, module, opts \\\\ []) do$/;"	f
down	deps/mox/lib/mox/server.ex	/^  defp down(state, pid) do$/;"	f
down	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^  def down(gc_server, pid) when is_atom(gc_server) do$/;"	f
down	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  defp down(replica), do: %Replica{replica | status: :down}$/;"	f
down	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp down(state, remote_replica) do$/;"	f
down	deps/postgrex/lib/postgrex/type_server.ex	/^  defp down(%{waiting: waiting} = state, ref) do$/;"	f
down	priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def down do$/;"	f
down_log	deps/db_connection/lib/db_connection/connection.ex	/^  defp down_log(:normal), do: :nolog$/;"	f
down_log	deps/db_connection/lib/db_connection/connection.ex	/^  defp down_log(:shutdown), do: :nolog$/;"	f
down_log	deps/db_connection/lib/db_connection/connection.ex	/^  defp down_log(_), do: :log$/;"	f
down_log	deps/db_connection/lib/db_connection/connection.ex	/^  defp down_log({:shutdown, _}), do: :nolog$/;"	f
down_replicas	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp down_replicas(%State{replicas: replicas})  do$/;"	f
downcase	deps/mime/lib/mime/application.ex	/^      defp downcase(<<>>, acc), do: acc$/;"	f
downcase	deps/mime/lib/mime/application.ex	/^      defp downcase(<<h, t::binary>>, acc) when h in ?A..?Z,$/;"	f
downcase	deps/mime/lib/mime/application.ex	/^      defp downcase(<<h, t::binary>>, acc), do: downcase(t, <<acc::binary, h>>)$/;"	f
downcase_char	deps/plug/lib/plug/conn/utils.ex	/^  defp downcase_char(char) when char in @upper, do: char + 32$/;"	f
downcase_char	deps/plug/lib/plug/conn/utils.ex	/^  defp downcase_char(char), do: char$/;"	f
downcase_first	deps/erlex/lib/erlex.ex	/^  defp downcase_first(string) do$/;"	f
drop	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp drop(delay, from) do$/;"	f
drop	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp drop(delay, from) do$/;"	f
drop	deps/ecto_sql/lib/ecto/migration.ex	/^  def drop(%{} = index_or_table_or_constraint) do$/;"	f
drop_autogenerated_ids	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp drop_autogenerated_ids(map, struct) do$/;"	f
drop_constraint_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp drop_constraint_expr(%Reference{} = ref, table, name),$/;"	f
drop_constraint_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp drop_constraint_expr(_, _, _),$/;"	f
drop_constraint_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp drop_constraint_expr(%Reference{} = ref, table, name),$/;"	f
drop_constraint_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp drop_constraint_expr(_, _, _),$/;"	f
drop_constraint_from_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp drop_constraint_from_expr(%Reference{} = ref, table, name, stm_prefix) do$/;"	f
drop_constraint_from_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp drop_constraint_from_expr(_, _, _, _),$/;"	f
drop_constraint_if_exists_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp drop_constraint_if_exists_expr(%Reference{} = ref, table, name),$/;"	f
drop_constraint_if_exists_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp drop_constraint_if_exists_expr(_, _, _),$/;"	f
drop_constraint_if_exists_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp drop_constraint_if_exists_expr(%Reference{} = ref, table, name),$/;"	f
drop_constraint_if_exists_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp drop_constraint_if_exists_expr(_, _, _),$/;"	f
drop_database	deps/ecto/lib/mix/tasks/ecto.drop.ex	/^  defp drop_database(repo, opts) do$/;"	f
drop_ecto_fields	deps/ex_machina/lib/ex_machina/ecto.ex	/^  def drop_ecto_fields(embedded_record), do: embedded_record$/;"	f
drop_ecto_fields	deps/ex_machina/lib/ex_machina/ecto.ex	/^  def drop_ecto_fields(record = %{__struct__: struct}) do$/;"	f
drop_fields_with_nil_values	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp drop_fields_with_nil_values(map) do$/;"	f
drop_idle	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp drop_idle(past_in_native, status, queue, codel) do$/;"	f
drop_if_exists	deps/ecto_sql/lib/ecto/migration.ex	/^  def drop_if_exists(%{} = index_or_table) do$/;"	f
drop_locations	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp drop_locations({_, single}, :multi), do: multiple_single_locations(single)$/;"	f
drop_locations	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp drop_locations({multi, _}, :single), do: multi_locations(multi)$/;"	f
drop_meta	deps/ecto/lib/ecto.ex	/^  defp drop_meta(%{} = attrs), do: Map.drop(attrs, [:__struct__, :__meta__])$/;"	f
drop_meta	deps/ecto/lib/ecto.ex	/^  defp drop_meta([_|_] = attrs), do: Keyword.drop(attrs, [:__struct__, :__meta__])$/;"	f
drop_monitor	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  defp drop_monitor(%{monitors: monitors} = state, pid) do$/;"	f
drop_presence	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp drop_presence(state, pid) do$/;"	f
drop_presence	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp drop_presence(state, pid, topic, key) do$/;"	f
drop_session	deps/plug/lib/plug/session.ex	/^  defp drop_session(sid, conn, config) do$/;"	f
drop_slow	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp drop_slow(time, timeout, queue) do$/;"	f
drop_unique	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp drop_unique(info) do$/;"	f
drop_while_in_fun_capture	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp drop_while_in_fun_capture(tokens) do$/;"	f
drop_while_on_line	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp drop_while_on_line(tokens, line) do$/;"	f
dry run password reset	deps/ecto/lib/ecto/multi.ex	/^      test "dry run password reset" do$/;"	t
dump	deps/ecto/integration_test/support/types.exs	/^  def dump("PREFIX-" <> string), do: {:ok, string}$/;"	f
dump	deps/ecto/integration_test/support/types.exs	/^  def dump(_string), do: :error$/;"	f
dump	deps/ecto/integration_test/support/types.exs	/^  def dump(integer) when is_integer(integer), do: {:ok, integer}$/;"	f
dump	deps/ecto/integration_test/support/types.exs	/^  def dump({:int, integer}), do: {:ok, integer}$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^        def dump(%URI{} = uri), do: {:ok, Map.from_struct(uri)}$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^        def dump(_), do: :error$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump(_type, nil) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump(_type, nil, _dumper) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump(type, value) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump(type, value, _) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump({:array, type}, value, dumper) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump({:embed, embed}, value, dumper) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump({:in, type}, value, dumper) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump({:map, type}, value, dumper) when is_map(value) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump({:maybe, type}, value) do$/;"	f
dump	deps/ecto/lib/ecto/type.ex	/^  def dump({:maybe, type}, value, dumper) do$/;"	f
dump	deps/ecto/lib/ecto/uuid.ex	/^  def dump(<< a1, a2, a3, a4, a5, a6, a7, a8, ?-,$/;"	f
dump	deps/ecto/lib/ecto/uuid.ex	/^  def dump(_), do: :error$/;"	f
dump	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def dump(<<a1, a2, a3, a4, a5, a6, a7, a8, ?-,$/;"	f
dump	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def dump(_), do: :error$/;"	f
dump	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def dump(value) when is_binary(value) do$/;"	f
dump!	deps/ecto/lib/ecto/association.ex	/^  defp dump!(action, join_through, struct, field, _) when is_atom(join_through) do$/;"	f
dump!	deps/ecto/lib/ecto/association.ex	/^  defp dump!(action, join_through, struct, field, adapter) when is_binary(join_through) do$/;"	f
dump!	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def dump!(value) do$/;"	f
dump_any_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_any_datetime(%DateTime{} = term), do: {:ok, term}$/;"	f
dump_any_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_any_datetime(%NaiveDateTime{} = term), do: {:ok, term}$/;"	f
dump_any_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_any_datetime(_), do: :error$/;"	f
dump_changes!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp dump_changes!(action, changes, schema, extra, dumper, adapter) do$/;"	f
dump_embed	deps/ecto/lib/ecto/type.ex	/^  defp dump_embed(%{cardinality: :many, related: schema, field: field},$/;"	f
dump_embed	deps/ecto/lib/ecto/type.ex	/^  defp dump_embed(%{cardinality: :one, related: schema, field: field},$/;"	f
dump_embed	deps/ecto/lib/ecto/type.ex	/^  defp dump_embed(_embed, _value, _fun) do$/;"	f
dump_embed	deps/ecto/lib/ecto/type.ex	/^  defp dump_embed(_field, schema, %{__struct__: schema} = struct, types, dumper) do$/;"	f
dump_embed	deps/ecto/lib/ecto/type.ex	/^  defp dump_embed(field, _schema, value, _types, _fun) do$/;"	f
dump_field!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp dump_field!(action, schema, field, type, value, adapter) do$/;"	f
dump_fields!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp dump_fields!(action, schema, kw, dumper, adapter) do$/;"	f
dump_float	deps/ecto/lib/ecto/type.ex	/^  defp dump_float(_), do: :error$/;"	f
dump_float	deps/ecto/lib/ecto/type.ex	/^  defp dump_float(term) when is_float(term), do: {:ok, term}$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:any), do: &{:ok, &1}$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:binary), do: &same_binary\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:binary_id), do: &same_binary\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:boolean), do: &same_boolean\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:date), do: &same_date\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:decimal), do: &same_decimal\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:float), do: &dump_float\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:id), do: &same_integer\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:integer), do: &same_integer\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:map), do: &same_map\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:naive_datetime), do: &dump_naive_datetime\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:naive_datetime_usec), do: &dump_naive_datetime_usec\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:string), do: &same_binary\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:time), do: &dump_time\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:time_usec), do: &dump_time_usec\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:utc_datetime), do: &dump_utc_datetime\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(:utc_datetime_usec), do: &dump_utc_datetime_usec\/1$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun(mod) when is_atom(mod), do: &mod.dump(&1)$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun({:array, type}), do: &array(&1, dump_fun(type), [])$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun({:map, type}), do: &map(&1, dump_fun(type), %{})$/;"	f
dump_fun	deps/ecto/lib/ecto/type.ex	/^  defp dump_fun({:param, :any_datetime}), do: &dump_any_datetime\/1$/;"	f
dump_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_naive_datetime(%NaiveDateTime{} = term), do:$/;"	f
dump_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_naive_datetime(_), do: :error$/;"	f
dump_naive_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp dump_naive_datetime_usec(%NaiveDateTime{} = term),$/;"	f
dump_naive_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp dump_naive_datetime_usec(_), do: :error$/;"	f
dump_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp dump_param(adapter, type, v) do$/;"	f
dump_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp dump_param(kind, query, expr, v, type, adapter) do$/;"	f
dump_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp dump_param(kind, type, v, adapter) do$/;"	f
dump_state	deps/plug/lib/plug/csrf_protection.ex	/^  def dump_state() do$/;"	f
dump_state_from_session	deps/plug/lib/plug/csrf_protection.ex	/^  def dump_state_from_session(session_token) do$/;"	f
dump_time	deps/ecto/lib/ecto/type.ex	/^  defp dump_time(%Time{} = term), do: {:ok, check_no_usec!(term, :time)}$/;"	f
dump_time	deps/ecto/lib/ecto/type.ex	/^  defp dump_time(_), do: :error$/;"	f
dump_time_usec	deps/ecto/lib/ecto/type.ex	/^  defp dump_time_usec(%Time{} = term), do: {:ok, check_usec!(term, :time_usec)}$/;"	f
dump_time_usec	deps/ecto/lib/ecto/type.ex	/^  defp dump_time_usec(_), do: :error$/;"	f
dump_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_utc_datetime(%DateTime{} = datetime) do$/;"	f
dump_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp dump_utc_datetime(_), do: :error$/;"	f
dump_utc_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp dump_utc_datetime_usec(%DateTime{} = datetime) do$/;"	f
dump_utc_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp dump_utc_datetime_usec(_), do: :error$/;"	f
dumpers	deps/ecto/lib/ecto/adapter.ex	/^      def dumpers(:binary_id, type), do: [type, Ecto.UUID]$/;"	f
dumpers	deps/ecto/lib/ecto/adapter.ex	/^      def dumpers(:boolean, type), do: [type, &bool_encode\/1]$/;"	f
dumpers	deps/ecto/lib/ecto/adapter.ex	/^      def dumpers(_primitive, type), do: [type]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  def dumpers(_, _), do: error!()$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def dumpers(:binary_id, type),       do: [type, Ecto.UUID]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def dumpers(_, type),                do: [type]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def dumpers({:embed, _}, type),      do: [&Ecto.Type.embedded_dump(type, &1, :json)]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def dumpers({:in, sub}, {:in, sub}), do: [{:array, sub}]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def dumpers({:map, _}, type),        do: [&Ecto.Type.embedded_dump(type, &1, :json)]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def dumpers(:binary_id, type),  do: [type, Ecto.UUID]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def dumpers(_, type),           do: [type]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def dumpers({:embed, _}, type), do: [&Ecto.Type.embedded_dump(type, &1, :json)]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def dumpers({:map, _}, type),   do: [&Ecto.Type.embedded_dump(type, &1, :json)]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def dumpers(:binary_id, type), do: [type, Tds.Ecto.UUID]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def dumpers(_, type), do: [type]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def dumpers({:embed, _}, type), do: [&Ecto.Type.embedded_dump(type, &1, :json)]$/;"	f
dumpers	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def dumpers({:map, _}, type), do: [&Ecto.Type.embedded_dump(type, &1, :json)]$/;"	f
duplicate	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def duplicate(combinator \\\\ empty(), to_duplicate, n)$/;"	f
duplicate	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def duplicate(combinator, to_duplicate, 0)$/;"	f
duplicate	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def duplicate(combinator, to_duplicate, n)$/;"	f
duplicate_nodes	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp duplicate_nodes(source_files, mass_threshold) do$/;"	f
duration	deps/phoenix/lib/phoenix/logger.ex	/^  def duration(duration) do$/;"	f
dynamic	deps/ecto/lib/ecto/query.ex	/^  defmacro dynamic(binding \\\\ [], expr) do$/;"	a
dynamic_or_field!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp dynamic_or_field!(_kind, %Ecto.Query.DynamicExpr{} = dynamic, query, {params, count}) do$/;"	f
dynamic_or_field!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp dynamic_or_field!(_kind, field, _query, params_count) when is_atom(field) do$/;"	f
dynamic_or_field!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp dynamic_or_field!(kind, other, _query, _params_count) do$/;"	f
dynamic_supervisor	deps/db_connection/lib/db_connection/app.ex	/^  defp dynamic_supervisor(name) do$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(0),  do: ?0$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(1),  do: ?1$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(10), do: ?a$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(11), do: ?b$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(12), do: ?c$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(13), do: ?d$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(14), do: ?e$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(15), do: ?f$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(2),  do: ?2$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(3),  do: ?3$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(4),  do: ?4$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(5),  do: ?5$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(6),  do: ?6$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(7),  do: ?7$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(8),  do: ?8$/;"	f
e	deps/ecto/lib/ecto/uuid.ex	/^  defp e(9),  do: ?9$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(0),  do: ?0$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(1),  do: ?1$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(10), do: ?a$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(11), do: ?b$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(12), do: ?c$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(13), do: ?d$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(14), do: ?e$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(15), do: ?f$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(2),  do: ?2$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(3),  do: ?3$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(4),  do: ?4$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(5),  do: ?5$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(6),  do: ?6$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(7),  do: ?7$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(8),  do: ?8$/;"	f
e	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp e(9),  do: ?9$/;"	f
each_frame	deps/plug/lib/plug/debugger.ex	/^  defp each_frame(entry, index, root, editor) do$/;"	f
each_shard	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  defp each_shard(config, func) do$/;"	f
ebpc	deps/puid/lib/entropy.ex	/^  defp ebpc(chars) do$/;"	f
ecto_cast_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_cast_to_db(:id, _query), do: "unsigned"$/;"	f
ecto_cast_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_cast_to_db(:integer, _query), do: "unsigned"$/;"	f
ecto_cast_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_cast_to_db(:naive_datetime_usec, _query), do: "datetime(6)"$/;"	f
ecto_cast_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_cast_to_db(:string, _query), do: "char"$/;"	f
ecto_cast_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_cast_to_db(:utc_datetime_usec, _query), do: "datetime(6)"$/;"	f
ecto_cast_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_cast_to_db(type, query), do: ecto_to_db(type, query)$/;"	f
ecto_dep	deps/ecto_sql/mix.exs	/^  defp ecto_dep do$/;"	f
ecto_size_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_size_to_db(:binary), do: "varbinary"$/;"	f
ecto_size_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_size_to_db(type), do: ecto_to_db(type)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:bigserial, _query),           do: "bigint unsigned not null auto_increment"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:binary, _query),              do: "blob"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:binary_id, _query),           do: "binary(16)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:float, _query),               do: "double"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:id, _query),                  do: "integer"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:map, _query),                 do: "json"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:naive_datetime, _query),      do: "datetime"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:naive_datetime_usec, _query), do: "datetime"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:serial, _query),              do: "bigint unsigned not null auto_increment"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:string, _query),              do: "varchar"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:time_usec, _query),           do: "time"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:utc_datetime, _query),        do: "datetime"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:utc_datetime_usec, _query),   do: "datetime"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(:uuid, _query),                do: "binary(16)" # MySQL does not support uuid$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(other, _query),                do: Atom.to_string(other)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db(type, query \\\\ nil)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db({:array, _}, query),           do: error!(query, "Array type is not supported by MySQL")$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp ecto_to_db({:map, _}, _query),            do: "json"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:bigserial),           do: "bigserial"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:binary),              do: "bytea"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:binary_id),           do: "uuid"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:id),                  do: "integer"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:map),                 do: Application.fetch_env!(:ecto_sql, :postgres_map_type)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:naive_datetime),      do: "timestamp"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:naive_datetime_usec), do: "timestamp"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:serial),              do: "serial"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:string),              do: "varchar"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:time_usec),           do: "time"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:utc_datetime),        do: "timestamp"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(:utc_datetime_usec),   do: "timestamp"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db(other),                do: Atom.to_string(other)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db({:array, t}),          do: [ecto_to_db(t), ?[, ?]]$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp ecto_to_db({:map, _}),            do: Application.fetch_env!(:ecto_sql, :postgres_map_type)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:bigserial, _, _, _, _), do: "bigint IDENTITY(1,1)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:binary, nil, _, _, _), do: "varbinary(max)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:binary, s, _, _, _) when s in 1..8_000, do: "varbinary(#{s})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:binary_id, _, _, _, _), do: "uniqueidentifier"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:boolean, _, _, _, _), do: "bit"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:float, nil, _, _, _), do: "float"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:float, s, _, _, _) when s in 1..53, do: "float(#{s})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:id, _, _, _, _), do: "bigint"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:map, nil, _, _, _), do: "nvarchar(max)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:map, s, _, _, _) when s in 0..4_000, do: "nvarchar(#{s})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:naive_datetime, _, _, _, _), do: "datetime"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:naive_datetime_usec, _, _, _, _), do: "datetime2(6)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:naive_datetime_usec, _, p, _, _) when p in 0..7, do: "datetime2(#{p})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:serial, _, _, _, _), do: "int IDENTITY(1,1)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:string, :max, _, _, _), do: "nvarchar(max)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:string, nil, _, _, _), do: "nvarchar(255)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:string, s, _, _, _) when s in 1..4_000, do: "nvarchar(#{s})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:time, _, _, _, _), do: "time(0)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:time_usec, _, _, _, _), do: "time(6)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:time_usec, _, p, _, _) when p in 0..7, do: "time(#{p})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:utc_datetime, _, _, _, _), do: "datetime"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:utc_datetime_usec, _, _, _, _), do: "datetime2(6)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:utc_datetime_usec, _, p, _, _) when p in 0..7, do: "datetime2(#{p})"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(:uuid, _, _, _, _), do: "uniqueidentifier"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(other, _, precision, scale, _) when is_integer(precision) do$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(other, nil, nil, nil, _) do$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(other, size, _, _, _) when is_integer(size) do$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db(type, size, precision, scale, query \\\\ nil)$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db({:array, _}, _, _, _, query),$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db({:map, _}, nil, _, _, _), do: "nvarchar(max)"$/;"	f
ecto_to_db	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp ecto_to_db({:map, _}, s, _, _, _) when s in 1..4_000, do: "nvarchar(#{s})"$/;"	f
edge	deps/credo/lib/credo/cli/output/ui.ex	/^  def edge(color, indent \\\\ 2) when is_integer(indent) do$/;"	f
edge	deps/credo/lib/credo/cli/output/ui.ex	/^  def edge, do: @edge$/;"	f
edit	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def edit(conn, %{"id" => id}) do$/;"	f
edit	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def edit(conn, %{"id" => id}) do$/;"	f
elixir_plt	deps/dialyxir/lib/dialyxir/project.ex	/^  def elixir_plt() do$/;"	f
elixir_version	deps/credo/lib/credo/check.ex	/^      def elixir_version do$/;"	f
elixirc_paths	deps/dialyxir/mix.exs	/^  defp elixirc_paths(:examples), do: ["lib", "test\/examples"]$/;"	f
elixirc_paths	deps/dialyxir/mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirc_paths	deps/earmark/mix.exs	/^  defp elixirc_paths(:dev), do: ["lib", "bench", "dev"]$/;"	f
elixirc_paths	deps/earmark/mix.exs	/^  defp elixirc_paths(:test), do: ["lib", "test\/support", "dev"]$/;"	f
elixirc_paths	deps/earmark/mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirc_paths	deps/ex_doc/mix.exs	/^  defp elixirc_paths(:test), do: ["lib", "test\/support"]$/;"	f
elixirc_paths	deps/ex_doc/mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirc_paths	deps/ex_machina/mix.exs	/^  defp elixirc_paths(), do: ["lib"]$/;"	f
elixirc_paths	deps/ex_machina/mix.exs	/^  defp elixirc_paths(:test), do: elixirc_paths() ++ ["test\/support"]$/;"	f
elixirc_paths	deps/ex_machina/mix.exs	/^  defp elixirc_paths(_), do: elixirc_paths()$/;"	f
elixirc_paths	deps/mox/lib/mox.ex	/^      defp elixirc_paths(:test), do: ["test\/support", "lib"]$/;"	f
elixirc_paths	deps/mox/lib/mox.ex	/^      defp elixirc_paths(_),     do: ["lib"]$/;"	f
elixirc_paths	deps/mox/mix.exs	/^  defp elixirc_paths(:test), do: ["test\/support", "lib"]$/;"	f
elixirc_paths	deps/mox/mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirc_paths	deps/phoenix/mix.exs	/^  defp elixirc_paths(:docs), do: ["lib", "installer\/lib"]$/;"	f
elixirc_paths	deps/phoenix/mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirc_paths	deps/phoenix_pubsub/mix.exs	/^  defp elixirc_paths(:test), do: ["lib", "test\/support"]$/;"	f
elixirc_paths	deps/phoenix_pubsub/mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirc_paths	mix.exs	/^  defp elixirc_paths(:test), do: ["lib", "test\/support"]$/;"	f
elixirc_paths	mix.exs	/^  defp elixirc_paths(_), do: ["lib"]$/;"	f
elixirize_tokens	deps/earmark/lib/earmark/helpers/leex_helpers.ex	/^  defp elixirize_tokens([], result), do: result$/;"	f
elixirize_tokens	deps/earmark/lib/earmark/helpers/leex_helpers.ex	/^  defp elixirize_tokens([{token, _, text}|rest], result), do: elixirize_tokens(rest, [{token,to_string(text)}|result])$/;"	f
elixirize_tokens	deps/earmark/lib/earmark/helpers/leex_helpers.ex	/^  defp elixirize_tokens(tokens, rest)$/;"	f
else_block?	deps/credo/lib/credo/code/block.ex	/^  def else_block?(ast) do$/;"	f
else_block_for	deps/credo/lib/credo/code/block.ex	/^  def else_block_for(_) do$/;"	f
else_block_for	deps/credo/lib/credo/code/block.ex	/^  def else_block_for(arguments) when is_list(arguments) do$/;"	f
else_block_for	deps/credo/lib/credo/code/block.ex	/^  def else_block_for(do: _do_block, else: else_block) do$/;"	f
else_block_for	deps/credo/lib/credo/code/block.ex	/^  def else_block_for({_atom, _meta, arguments}) when is_list(arguments) do$/;"	f
else_block_for!	deps/credo/lib/credo/code/block.ex	/^  def else_block_for!(ast) do$/;"	f
emacs_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def emacs_style, do: HTML.EmacsStyle.style()$/;"	f
embed	deps/ecto/lib/ecto/schema.ex	/^  defp embed(mod, cardinality, name, schema, opts) do$/;"	f
embed_as	deps/ecto/integration_test/support/types.exs	/^  def embed_as(_), do: :dump$/;"	f
embed_as	deps/ecto/lib/ecto/type.ex	/^      def embed_as(_), do: :self$/;"	f
embed_as	deps/ecto/lib/ecto/type.ex	/^  def embed_as(base, _format) when base in @base, do: :self$/;"	f
embed_as	deps/ecto/lib/ecto/type.ex	/^  def embed_as(mod, format) do$/;"	f
embed_as	deps/ecto/lib/ecto/type.ex	/^  def embed_as({composite, _}, _format) when composite in @composite, do: :self$/;"	f
embed_pattern	deps/ex_doc/lib/ex_doc/formatter/epub/assets.ex	/^  defmacrop embed_pattern(pattern) do$/;"	a
embed_pattern	deps/ex_doc/lib/ex_doc/formatter/html/assets.ex	/^  defmacrop embed_pattern(pattern) do$/;"	a
embedded_dump	deps/ecto/lib/ecto.ex	/^  def embedded_dump(%schema{} = data, format) do$/;"	f
embedded_dump	deps/ecto/lib/ecto/type.ex	/^  def embedded_dump(type, value, format) do$/;"	f
embedded_dump	deps/ecto/lib/ecto/type.ex	/^  def embedded_dump({:embed, _} = type, value, format) do$/;"	f
embedded_load	deps/ecto/lib/ecto.ex	/^  def embedded_load(schema_or_types, data, format) do$/;"	f
embedded_load	deps/ecto/lib/ecto/type.ex	/^  def embedded_load(type, value, format) do$/;"	f
embedded_load	deps/ecto/lib/ecto/type.ex	/^  def embedded_load({:embed, _} = type, value, format) do$/;"	f
embedded_schema	deps/ecto/lib/ecto/schema.ex	/^  defmacro embedded_schema([do: block]) do$/;"	a
embeds many	deps/ecto/integration_test/cases/type.exs	/^  test "embeds many" do$/;"	t
embeds one	deps/ecto/integration_test/cases/type.exs	/^  test "embeds one" do$/;"	t
embeds one with custom type	deps/ecto/integration_test/cases/type.exs	/^  test "embeds one with custom type" do$/;"	t
embeds_many	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_many(name, schema, do: block) do$/;"	a
embeds_many	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_many(name, schema, opts \\\\ [])$/;"	a
embeds_many	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_many(name, schema, opts) do$/;"	a
embeds_many	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_many(name, schema, opts, do: block) do$/;"	a
embeds_one	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_one(name, schema, do: block) do$/;"	a
embeds_one	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_one(name, schema, opts \\\\ [])$/;"	a
embeds_one	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_one(name, schema, opts) do$/;"	a
embeds_one	deps/ecto/lib/ecto/schema.ex	/^  defmacro embeds_one(name, schema, opts, do: block) do$/;"	a
emit_if	deps/plug/lib/plug/conn/cookies.ex	/^  defp emit_if(value, fun_or_string) do$/;"	f
emit_message	deps/earmark/lib/earmark/message.ex	/^  defp emit_message(filename, msg), do:$/;"	f
emit_messages	deps/earmark/lib/earmark/message.ex	/^  def emit_messages(messages, %Options{file: file}) do$/;"	f
empty	deps/ecto/lib/ecto/changeset/relation.ex	/^  def empty(%{cardinality: cardinality}), do: cardinality_to_empty(cardinality)$/;"	f
empty	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def empty() do$/;"	f
empty embeds many	deps/ecto/integration_test/cases/type.exs	/^  test "empty embeds many" do$/;"	t
empty embeds one	deps/ecto/integration_test/cases/type.exs	/^  test "empty embeds one" do$/;"	t
empty?	deps/ecto/lib/ecto/changeset/relation.ex	/^  def empty?(%{cardinality: :many}, []), do: true$/;"	f
empty?	deps/ecto/lib/ecto/changeset/relation.ex	/^  def empty?(%{cardinality: :many}, changes), do: filter_empty(changes) == []$/;"	f
empty?	deps/ecto/lib/ecto/changeset/relation.ex	/^  def empty?(%{cardinality: :one}, nil), do: true$/;"	f
empty?	deps/ecto/lib/ecto/changeset/relation.ex	/^  def empty?(%{cardinality: _}, %NotLoaded{}), do: true$/;"	f
empty?	deps/ecto/lib/ecto/changeset/relation.ex	/^  def empty?(%{}, _), do: false$/;"	f
empty?	deps/makeup/lib/makeup/styles/html.ex	/^    def empty?(style) do$/;"	f
empty_array	deps/jason/lib/decoder.ex	/^  defp empty_array(<<rest::bits>>, original, skip, stack, key_decode, string_decode) do$/;"	f
empty_error	deps/jason/lib/decoder.ex	/^  defp empty_error(_original, skip) do$/;"	f
empty_issues	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp empty_issues(), do: %{}$/;"	f
empty_string_if_root	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp empty_string_if_root("\/"), do: ""$/;"	f
empty_string_if_root	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp empty_string_if_root(other), do: other$/;"	f
enabled?	deps/bunt/lib/bunt_ansi.ex	/^  def enabled? do$/;"	f
enc	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def enc(binary), do: URI.encode(binary)$/;"	f
encode	deps/db_connection/lib/db_connection.ex	/^  defp encode(conn, query, params, meter, opts) do$/;"	f
encode	deps/db_connection/lib/db_connection/query.ex	/^  def encode(query, params, opts)$/;"	f
encode	deps/ecto/lib/ecto/json.ex	/^    def encode(%{__owner__: owner, __field__: field}, _) do$/;"	f
encode	deps/ecto/lib/ecto/json.ex	/^    def encode(%{schema: schema}, _) do$/;"	f
encode	deps/ecto/lib/ecto/uuid.ex	/^  defp encode(<< a1::4, a2::4, a3::4, a4::4,$/;"	f
encode	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    defp encode(<<a1::4, a2::4, a3::4, a4::4,$/;"	f
encode	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  defp encode(ref, title, type, doc) do$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(atom) when is_atom(atom) do$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(binary) when is_binary(binary) do$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(false), do: "false"$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(integer) when is_integer(integer) do$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(list) when is_list(list) do$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(map) when is_map(map) do$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(nil), do: "null"$/;"	f
encode	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  def encode(true), do: "true"$/;"	f
encode	deps/jason/lib/encode.ex	/^  def encode(value, opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^        def encode(%{unquote_splicing(kv)}, {unquote(escape), unquote(encode_map)}) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^        def encode(value, opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(%_{} = struct, _opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(%{encode: encode}, opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(atom, opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(binary, opts) when is_binary(binary) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(bitstring, _opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(float, _opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(integer, _opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(list, opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(map, opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(value, _opts) do$/;"	f
encode	deps/jason/lib/encoder.ex	/^  def encode(value, opts)$/;"	f
encode	deps/jason/lib/jason.ex	/^  def encode(input, opts \\\\ []) do$/;"	f
encode	deps/phoenix/lib/phoenix/token.ex	/^  defp encode(data, opts) do$/;"	f
encode	deps/phoenix/lib/phoenix/view.ex	/^  defp encode(content, template) do$/;"	f
encode	deps/plug/lib/plug/conn/cookies.ex	/^  def encode(key, opts \\\\ %{}) when is_map(opts) do$/;"	f
encode	deps/plug/lib/plug/conn/query.ex	/^  def encode(kv, encoder \\\\ &to_string\/1) do$/;"	f
encode	deps/plug/lib/plug/session/cookie.ex	/^  defp encode(term, :external_term_format) do$/;"	f
encode	deps/plug/lib/plug/session/cookie.ex	/^  defp encode(term, serializer) do$/;"	f
encode	deps/plug_crypto/lib/plug/crypto.ex	/^  defp encode(data, opts) do$/;"	f
encode	deps/postgrex/lib/postgrex/extension.ex	/^        def encode(_state) do$/;"	f
encode	deps/postgrex/lib/postgrex/extension.ex	/^      def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def encode([], elem_oid, _encoder) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def encode(list, elem_oid, encoder) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp encode([], ndims, lengths, _encoder) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp encode([head | tail] = list, ndims, lengths, encoder) when is_list(head) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp encode(list, ndims, lengths, encoder) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/bit_string.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/bool.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/box.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/circle.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/date.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/float4.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/float8.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/inet.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/int2.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/int4.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/int8.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/interval.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def encode({library, _}) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def encode({library, _}) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/line.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/line_segment.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/macaddr.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/name.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/oid.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/path.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/point.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/polygon.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def encode(%{lower_inclusive: lower_inc, upper_inclusive: upper_inc}, _oid, lower, upper) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def encode(_range, _oid, :empty, :empty) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/raw.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/tid.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/time.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/uuid.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/void_binary.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/extensions/void_text.ex	/^  def encode(_) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode($/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_cancel_request(pid: pid, key: key)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_close(type: type, name: name)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_copy_data(data: data)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_copy_done()) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_copy_fail(message: msg)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_describe(type: type, name: name)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_execute(name_port: port, max_rows: rows)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_flush()) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_parse(name: name, statement: statement, type_oids: oids)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_password(pass: pass)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_query(statement: statement)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_ssl_request()) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_startup(params: params)) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_sync()) do$/;"	f
encode	deps/postgrex/lib/postgrex/messages.ex	/^  defp encode(msg_terminate()) do$/;"	f
encode	deps/postgrex/lib/postgrex/parameters.ex	/^  def encode(_, nil, _), do: nil$/;"	f
encode	deps/postgrex/lib/postgrex/query.ex	/^  def encode(%{types: nil} = query, _params, _) do$/;"	f
encode	deps/postgrex/lib/postgrex/query.ex	/^  def encode(query, params, _) do$/;"	f
encode	deps/postgrex/lib/postgrex/stream.ex	/^  def encode(%Copy{ref: ref}, {:copy_data, ref, data}, _) do$/;"	f
encode	deps/postgrex/lib/postgrex/stream.ex	/^  def encode(%Copy{ref: ref}, {:copy_done, ref}, _) do$/;"	f
encode	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode(config, define_opts) do$/;"	f
encode	deps/secure_random/lib/secure_random.ex	/^  defp encode(<<u0::32, u1::16, u2::16, u3::16, u4::48>>) do$/;"	f
encode!	deps/jason/lib/jason.ex	/^  def encode!(input, opts \\\\ []) do$/;"	f
encode!	deps/phoenix/lib/phoenix/socket/serializers/v1_json_serializer.ex	/^  def encode!(%Message{} = map) do$/;"	f
encode!	deps/phoenix/lib/phoenix/socket/serializers/v1_json_serializer.ex	/^  def encode!(%Reply{} = reply) do$/;"	f
encode!	deps/phoenix/lib/phoenix/socket/serializers/v2_json_serializer.ex	/^  def encode!(%Message{} = msg) do$/;"	f
encode!	deps/phoenix/lib/phoenix/socket/serializers/v2_json_serializer.ex	/^  def encode!(%Reply{} = reply) do$/;"	f
encode!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^    def encode!(%Message{} = msg), do: msg$/;"	f
encode!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^    def encode!(%Reply{} = reply), do: reply$/;"	f
encode_atom	deps/jason/lib/encode.ex	/^  defp encode_atom(atom, escape),$/;"	f
encode_atom	deps/jason/lib/encode.ex	/^  defp encode_atom(false, _escape), do: "false"$/;"	f
encode_atom	deps/jason/lib/encode.ex	/^  defp encode_atom(nil, _escape), do: "null"$/;"	f
encode_atom	deps/jason/lib/encode.ex	/^  defp encode_atom(true, _escape), do: "true"$/;"	f
encode_basic_auth	deps/plug/lib/plug/basic_auth.ex	/^  def encode_basic_auth(user, pass) when is_binary(user) and is_binary(pass) do$/;"	f
encode_digits	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp encode_digits(coef, digits) do$/;"	f
encode_digits	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp encode_digits(coef, digits) when coef < 10_000 do$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/date.ex	/^  def encode_elixir(%Date{year: year, month: month, day: day}) when year <= @max_year do$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/date.ex	/^  def encode_elixir(%Date{} = date) do$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/time.ex	/^  def encode_elixir(%Time{hour: hour, minute: min, second: sec, microsecond: {usec, _}})$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def encode_elixir(%_{$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def encode_elixir(%DateTime{utc_offset: 0, std_offset: 0} = datetime) do$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def encode_elixir(%DateTime{} = datetime) do$/;"	f
encode_elixir	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^  def encode_elixir(%Time{hour: hour, minute: min, second: sec, microsecond: {usec, _}})$/;"	f
encode_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_extension(extension, clause) do$/;"	f
encode_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_extension(extension, pattern, body) do$/;"	f
encode_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_extension(extension, pattern, guard, body) do$/;"	f
encode_filename	deps/phoenix/lib/phoenix/controller.ex	/^  defp encode_filename(filename, false), do: filename$/;"	f
encode_filename	deps/phoenix/lib/phoenix/controller.ex	/^  defp encode_filename(filename, true), do: URI.encode_www_form(filename)$/;"	f
encode_float	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp encode_float(float, scale) do$/;"	f
encode_hstore	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  def encode_hstore(hstore_map) do$/;"	f
encode_hstore_key	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp encode_hstore_key(key) when is_binary(key) do$/;"	f
encode_hstore_key	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp encode_hstore_key(key) when is_nil(key) do$/;"	f
encode_hstore_value	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp encode_hstore_value(nil) do$/;"	f
encode_hstore_value	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  defp encode_hstore_value(value) when is_binary(value) do$/;"	f
encode_ignore	deps/phoenix/lib/phoenix/socket.ex	/^  defp encode_ignore(%{handler: handler} = socket, %{ref: ref, topic: topic}) do$/;"	f
encode_inline	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_inline(extension, :super_binary) do$/;"	f
encode_inline	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_inline(extension, _) do$/;"	f
encode_key	deps/plug/lib/plug/conn/query.ex	/^  defp encode_key(item) do$/;"	f
encode_kv	deps/plug/lib/plug/conn/query.ex	/^  defp encode_kv(kv, parent_field, encoder) do$/;"	f
encode_lexemes	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp encode_lexemes(values) do$/;"	f
encode_list	deps/postgrex/lib/postgrex/type_module.ex	/^      def encode_list(list, type) do$/;"	f
encode_list	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_list([], _, acc) do$/;"	f
encode_list	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_list([value | rest], type, acc) do$/;"	f
encode_map_function	deps/jason/lib/encode.ex	/^  defp encode_map_function(%{maps: maps}) do$/;"	f
encode_max_age	deps/plug/lib/plug/conn/cookies.ex	/^  defp encode_max_age(max_age, opts) do$/;"	f
encode_msg	deps/postgrex/lib/postgrex/messages.ex	/^  def encode_msg(msg) do$/;"	f
encode_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def encode_msg(%DateTime{calendar: calendar} = observed, _expected)$/;"	f
encode_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def encode_msg(%Date{calendar: calendar} = observed, _expected) when calendar != Calendar.ISO do$/;"	f
encode_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def encode_msg(%NaiveDateTime{calendar: calendar} = observed, _expected)$/;"	f
encode_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def encode_msg(%Postgrex.TypeInfo{type: type}, observed, expected) do$/;"	f
encode_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def encode_msg(%Time{calendar: calendar} = observed, _expected) when calendar != Calendar.ISO do$/;"	f
encode_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def encode_msg(observed, expected) do$/;"	f
encode_null	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_null(extension, :super_binary) do$/;"	f
encode_null	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_null(extension, _) do$/;"	f
encode_numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  def encode_numeric(%Decimal{coef: :inf} = decimal) do$/;"	f
encode_numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  def encode_numeric(%Decimal{coef: coef}) when coef in [:qNaN, :sNaN] do$/;"	f
encode_numeric	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  def encode_numeric(%Decimal{sign: sign, coef: coef, exp: exp}) do$/;"	f
encode_on_exit	deps/phoenix/lib/phoenix/socket.ex	/^  defp encode_on_exit(socket, topic, ref, _reason) do$/;"	f
encode_pair	deps/jason/lib/codegen.ex	/^  defp encode_pair({key, value}, encode_args) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(field, %{__struct__: struct} = map, encoder) when is_atom(struct) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(field, nil, _encoder) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(field, value, encoder) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(parent_field, %{} = map, encoder) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(parent_field, list, encoder) when is_list(list) and is_tuple(hd(list)) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(parent_field, list, encoder) when is_list(list) do$/;"	f
encode_param	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def encode_param(str), do: URI.encode(str, &URI.char_unreserved?\/1)$/;"	f
encode_params	deps/postgrex/lib/postgrex/type_module.ex	/^      def encode_params(params, types) do$/;"	f
encode_params	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_params([], [], encoded), do: Enum.reverse(encoded)$/;"	f
encode_params	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_params([param | params], [type | types], encoded) do$/;"	f
encode_params	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_params(params, _, _) when is_list(params), do: :error$/;"	f
encode_params	deps/postgrex/lib/postgrex/types.ex	/^  def encode_params(params, types, {mod, _}) do$/;"	f
encode_point	deps/postgrex/lib/postgrex/extensions/point.ex	/^  def encode_point(%Postgrex.Point{x: x, y: y}, _) do$/;"	f
encode_point	deps/postgrex/lib/postgrex/extensions/point.ex	/^  def encode_point(other, wanted) do$/;"	f
encode_positions	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp encode_positions(%Postgrex.Lexeme{word: word, positions: positions}) do$/;"	f
encode_reply	deps/phoenix/lib/phoenix/socket.ex	/^  defp encode_reply(%{serializer: serializer}, message) do$/;"	f
encode_same_site	deps/plug/lib/plug/conn/cookies.ex	/^  defp encode_same_site(value) when is_binary(value), do: "; SameSite=#{value}"$/;"	f
encode_sign	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp encode_sign(-1), do: 0x4000$/;"	f
encode_sign	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp encode_sign(1), do: 0x0000$/;"	f
encode_string	deps/jason/lib/encode.ex	/^  defp encode_string(string, escape) do$/;"	f
encode_super	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_super(extension, clause) do$/;"	f
encode_super	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_super(extension, pattern, sub_oids, sub_types, body) do$/;"	f
encode_super	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_super(extension, pattern, sub_oids, sub_types, guard, body) do$/;"	f
encode_to_iodata	deps/jason/lib/jason.ex	/^  def encode_to_iodata(input, opts \\\\ []) do$/;"	f
encode_to_iodata!	deps/jason/lib/jason.ex	/^  def encode_to_iodata!(input, opts \\\\ []) do$/;"	f
encode_to_iodata!	deps/phoenix/lib/phoenix/template/html.ex	/^  def encode_to_iodata!(body) when is_binary(body), do: Plug.HTML.html_escape(body)$/;"	f
encode_to_iodata!	deps/phoenix/lib/phoenix/template/html.ex	/^  def encode_to_iodata!(other), do: Phoenix.HTML.Safe.to_iodata(other)$/;"	f
encode_to_iodata!	deps/phoenix/lib/phoenix/template/html.ex	/^  def encode_to_iodata!({:safe, body}), do: body$/;"	f
encode_token	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp encode_token(protected, encrypted_key, iv, cipher_text, cipher_tag) do$/;"	f
encode_token	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp encode_token(plain_text, signature)$/;"	f
encode_tsvector	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  def encode_tsvector(values) do$/;"	f
encode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      def encode_tuple(tuple, nil, _types) do$/;"	f
encode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      def encode_tuple(tuple, oids, types) do$/;"	f
encode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_tuple(tuple, n, [], [], _) when is_tuple(tuple) do$/;"	f
encode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_tuple(tuple, n, [], [], acc) when tuple_size(tuple) < n do$/;"	f
encode_tuple	deps/postgrex/lib/postgrex/type_module.ex	/^      defp encode_tuple(tuple, n, [oid | oids], [type | types], acc) do$/;"	f
encode_type	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_type(extension, :super_binary, clause) do$/;"	f
encode_type	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_type(extension, _, clause) do$/;"	f
encode_v1_fields_only	deps/phoenix/lib/phoenix/socket/serializers/v1_json_serializer.ex	/^  defp encode_v1_fields_only(%Message{} = msg) do$/;"	f
encode_value	deps/plug/lib/plug/conn/query.ex	/^  defp encode_value(item, encoder) do$/;"	f
encode_value	deps/postgrex/lib/postgrex/type_module.ex	/^      def encode_value(value, unquote(extension)) do$/;"	f
encode_value	deps/postgrex/lib/postgrex/type_module.ex	/^      def encode_value(value, {unquote(extension), sub_oids, sub_types}) do$/;"	f
encode_value	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_value(extension, :super_binary) do$/;"	f
encode_value	deps/postgrex/lib/postgrex/type_module.ex	/^  defp encode_value(extension, _) do$/;"	f
encode_weight_binary	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp encode_weight_binary(:A) do$/;"	f
encode_weight_binary	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp encode_weight_binary(:B) do$/;"	f
encode_weight_binary	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp encode_weight_binary(:C) do$/;"	f
encode_weight_binary	deps/postgrex/lib/postgrex/extensions/tsvector.ex	/^  defp encode_weight_binary(nil) do$/;"	f
encoded_actions_for_exception	deps/plug/lib/plug/debugger.ex	/^  def encoded_actions_for_exception(exception, conn) do$/;"	f
encrypt	deps/phoenix/lib/phoenix/token.ex	/^  def encrypt(context, secret, data, opts \\\\ [])$/;"	f
encrypt	deps/phoenix/lib/phoenix/token.ex	/^  def encrypt(context, secret, data, opts) when is_binary(secret) and is_list(opts) do$/;"	f
encrypt	deps/phoenix/lib/phoenix/token.ex	/^  def encrypt(context, secret, salt, data) when is_binary(secret) and is_binary(salt) do$/;"	f
encrypt	deps/phoenix/lib/phoenix/token.ex	/^  def encrypt(context, secret, salt, data, opts) do$/;"	f
encrypt	deps/plug_crypto/lib/plug/crypto.ex	/^  def encrypt(key_base, secret, salt, data, opts) do$/;"	f
encrypt	deps/plug_crypto/lib/plug/crypto.ex	/^  def encrypt(key_base, secret, token, opts \\\\ [])$/;"	f
encrypt	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  def encrypt(message, secret, sign_secret)$/;"	f
end	deps/plug/src/plug_multipart.erl	/^end).$/;"	f	module:plug_multipart
end_command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def end_command do$/;"	f
ended_at	deps/credo/lib/credo/execution/execution_timing.ex	/^  def ended_at(exec) do$/;"	f
endpoint	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp endpoint(module, _base) do$/;"	f
endpoint	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp endpoint(nil, base) do$/;"	f
endpoint_module	deps/phoenix/lib/phoenix/controller.ex	/^  def endpoint_module(conn), do: conn.private.phoenix_endpoint$/;"	f
engine_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp engine_expr(storage_engine),$/;"	f
engine_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp engine_expr(_storage_engine), do: [""]$/;"	f
engine_opts	deps/phoenix/lib/phoenix/template/eex_engine.ex	/^  defp engine_opts(name) do$/;"	f
engines	deps/phoenix/lib/phoenix/template.ex	/^  def engines do$/;"	f
ensure	deps/credo/lib/credo/cli/sorter.ex	/^  def ensure(list, list_start, list_end \\\\ []) do$/;"	f
ensure_all_started	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  def ensure_all_started(_, _), do: error!()$/;"	f
ensure_all_started	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def ensure_all_started(config, type) do$/;"	f
ensure_all_started	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def ensure_all_started(driver, _config, type) do$/;"	f
ensure_compiled	deps/ecto/lib/ecto/association.ex	/^  def ensure_compiled(queryable, env) do$/;"	f
ensure_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp ensure_csrf_token(conn, session_key, csrf_token) do$/;"	f
ensure_deps_started!	deps/postgrex/lib/postgrex.ex	/^  defp ensure_deps_started!(opts) do$/;"	f
ensure_field!	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp ensure_field!(_), do: true$/;"	f
ensure_field!	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp ensure_field!({var, _, _}) when var != :^ do$/;"	f
ensure_field_exists!	deps/ecto/lib/ecto/changeset.ex	/^  defp ensure_field_exists!(%Changeset{types: types, data: data}, field) do$/;"	f
ensure_implements	deps/ecto/lib/mix/ecto.ex	/^  def ensure_implements(module, behaviour, message) do$/;"	f
ensure_migrations_paths	deps/ecto_sql/lib/mix/ecto_sql.ex	/^  def ensure_migrations_paths(repo, opts) do$/;"	f
ensure_no_duplication!	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp ensure_no_duplication!([]), do: :ok$/;"	f
ensure_no_duplication!	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp ensure_no_duplication!([{version, name, _} | t]) do$/;"	f
ensure_recycled	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def ensure_recycled(conn) do$/;"	f
ensure_repo	deps/ecto/lib/mix/ecto.ex	/^  def ensure_repo(repo, args) do$/;"	f
ensure_resp_content_type	deps/phoenix/lib/phoenix/controller.ex	/^  defp ensure_resp_content_type(%Plug.Conn{resp_headers: resp_headers} = conn, content_type) do$/;"	f
ensure_same_origin_and_csrf_token!	deps/plug/lib/plug/csrf_protection.ex	/^  defp ensure_same_origin_and_csrf_token!(conn, session_key, csrf_token) do$/;"	f
ensure_schema_migrations_table!	deps/ecto_sql/lib/ecto/migration/schema_migration.ex	/^  def ensure_schema_migrations_table!(repo, opts) do$/;"	f
ensure_select	deps/ecto/lib/ecto/query/planner.ex	/^  def ensure_select(%{select: nil, from: %{source: {_, nil}}} = query, true) do$/;"	f
ensure_select	deps/ecto/lib/ecto/query/planner.ex	/^  def ensure_select(%{select: nil} = query, false) do$/;"	f
ensure_select	deps/ecto/lib/ecto/query/planner.ex	/^  def ensure_select(%{select: nil} = query, fields) when is_list(fields) do$/;"	f
ensure_select	deps/ecto/lib/ecto/query/planner.ex	/^  def ensure_select(%{select: nil} = query, true) do$/;"	f
ensure_select	deps/ecto/lib/ecto/query/planner.ex	/^  def ensure_select(%{select: nil}, []) do$/;"	f
ensure_select	deps/ecto/lib/ecto/query/planner.ex	/^  def ensure_select(%{select: select} = query, _fields) when select != nil do$/;"	f
ensure_tmp	deps/plug/lib/plug/upload.ex	/^  defp ensure_tmp() do$/;"	f
ensure_valid_event_prefix!	deps/plug/lib/plug/telemetry.ex	/^  defp ensure_valid_event_prefix!(event_prefix) do$/;"	f
enter_connect	deps/connection/lib/connection.ex	/^  defp enter_connect(mod, info, mod_state, name, opts) do$/;"	f
enter_loop	deps/connection/lib/connection.ex	/^  def enter_loop(mod, backoff, mod_state, name, opts, :hibernate) do$/;"	f
enter_loop	deps/connection/lib/connection.ex	/^  def enter_loop(mod, backoff, mod_state, name, opts, timeout) do$/;"	f
enter_loop	deps/connection/lib/connection.ex	/^  def enter_loop(mod, backoff, mod_state, name, opts, timeout)$/;"	f
enter_stop	deps/connection/lib/connection.ex	/^  defp enter_stop(_, _, _, :normal, {:stop, :normal}), do: exit(:normal)$/;"	f
enter_stop	deps/connection/lib/connection.ex	/^  defp enter_stop(_, _, _, :shutdown, {:stop, :shutdown}), do: exit(:shutdown)$/;"	f
enter_stop	deps/connection/lib/connection.ex	/^  defp enter_stop(_, _, _, {:shutdown, reason} = shutdown,$/;"	f
enter_stop	deps/connection/lib/connection.ex	/^  defp enter_stop(mod, mod_state, name, reason, {_, reason2}) do$/;"	f
enter_terminate	deps/connection/lib/connection.ex	/^  defp enter_terminate(mod, mod_state, name, reason, report_reason) do$/;"	f
entry_point	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  def entry_point(name) do$/;"	f
entry_result	deps/db_connection/lib/db_connection.ex	/^  defp entry_result(other), do: other$/;"	f
entry_result	deps/db_connection/lib/db_connection.ex	/^  defp entry_result({kind, reason, stack})$/;"	f
entry_result	deps/db_connection/lib/db_connection.ex	/^  defp entry_result({ok, res}) when ok in [:cont, :halt],$/;"	f
env_dep	deps/dialyxir/lib/dialyxir/project.ex	/^  defp env_dep(dep) do$/;"	f
env_run	deps/db_connection/mix.exs	/^  defp env_run(env, args) do$/;"	f
env_run	deps/ecto_sql/mix.exs	/^  defp env_run(adapter, args) do$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?(_), do: false$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?(list) when is_list(list) do$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?(token)$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?({:eol, {_, _, _}}), do: true$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?({_, {_, _, _}, _, list, _, _}) when is_list(list) do$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?({_, {_, _, _}, list}) when is_list(list) do$/;"	f
eol?	deps/credo/lib/credo/code/token.ex	/^  def eol?({{_, _, _}, list}) when is_list(list) do$/;"	f
eos	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def eos(combinator \\\\ empty()) do$/;"	f
eq?	deps/decimal/lib/decimal.ex	/^  def eq?(%Decimal{coef: :qNaN}, _num2), do: false$/;"	f
eq?	deps/decimal/lib/decimal.ex	/^  def eq?(_num1, %Decimal{coef: :qNaN}), do: false$/;"	f
eq?	deps/decimal/lib/decimal.ex	/^  def eq?(num1, num2), do: cmp(num1, num2) == :eq$/;"	f
equal?	deps/decimal/lib/decimal.ex	/^  def equal?(num1, num2) do$/;"	f
equal?	deps/ecto/lib/ecto/type.ex	/^      def equal?(term1, term2), do: term1 == term2$/;"	f
equal?	deps/ecto/lib/ecto/type.ex	/^  def equal?(_, nil, nil), do: true$/;"	f
equal?	deps/ecto/lib/ecto/type.ex	/^  def equal?(type, term1, term2) do$/;"	f
equal_decimal?	deps/ecto/lib/ecto/type.ex	/^  defp equal_decimal?(%Decimal{} = a, %Decimal{} = b), do: Decimal.equal?(a, b)$/;"	f
equal_decimal?	deps/ecto/lib/ecto/type.ex	/^  defp equal_decimal?(_, _), do: false$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(:decimal), do: &equal_decimal?\/2$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(mod) when is_atom(mod) do$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(nil), do: nil$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(t) when t in @base, do: nil$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(t) when t in [:naive_datetime, :naive_datetime_usec], do: &equal_naive_datetime?\/2$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(t) when t in [:time, :time_usec], do: &equal_time?\/2$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun(t) when t in [:utc_datetime, :utc_datetime_usec], do: &equal_utc_datetime?\/2$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun({:array, type}) do$/;"	f
equal_fun	deps/ecto/lib/ecto/type.ex	/^  defp equal_fun({:map, type}) do$/;"	f
equal_list?	deps/ecto/lib/ecto/type.ex	/^  defp equal_list?(_fun, [], []), do: true$/;"	f
equal_list?	deps/ecto/lib/ecto/type.ex	/^  defp equal_list?(_fun, _, _), do: false$/;"	f
equal_list?	deps/ecto/lib/ecto/type.ex	/^  defp equal_list?(fun, [nil | xs], [nil | ys]), do: equal_list?(fun, xs, ys)$/;"	f
equal_list?	deps/ecto/lib/ecto/type.ex	/^  defp equal_list?(fun, [x | xs], [y | ys]), do: fun.(x, y) and equal_list?(fun, xs, ys)$/;"	f
equal_map?	deps/ecto/lib/ecto/type.ex	/^  defp equal_map?(_fun, [], _) do$/;"	f
equal_map?	deps/ecto/lib/ecto/type.ex	/^  defp equal_map?(_fun, _, _) do$/;"	f
equal_map?	deps/ecto/lib/ecto/type.ex	/^  defp equal_map?(_fun, map1, map2) when map_size(map1) != map_size(map2) do$/;"	f
equal_map?	deps/ecto/lib/ecto/type.ex	/^  defp equal_map?(fun, %{} = map1, %{} = map2) do$/;"	f
equal_map?	deps/ecto/lib/ecto/type.ex	/^  defp equal_map?(fun, [{key, nil} | tail], other_map) do$/;"	f
equal_map?	deps/ecto/lib/ecto/type.ex	/^  defp equal_map?(fun, [{key, val} | tail], other_map) do$/;"	f
equal_naive_datetime?	deps/ecto/lib/ecto/type.ex	/^  defp equal_naive_datetime?(%NaiveDateTime{} = a, %NaiveDateTime{} = b),$/;"	f
equal_naive_datetime?	deps/ecto/lib/ecto/type.ex	/^  defp equal_naive_datetime?(_, _),$/;"	f
equal_time?	deps/ecto/lib/ecto/type.ex	/^  defp equal_time?(%Time{} = a, %Time{} = b), do: Time.compare(a, b) == :eq$/;"	f
equal_time?	deps/ecto/lib/ecto/type.ex	/^  defp equal_time?(_, _), do: false$/;"	f
equal_utc_datetime?	deps/ecto/lib/ecto/type.ex	/^  defp equal_utc_datetime?(%DateTime{} = a, %DateTime{} = b), do: DateTime.compare(a, b) == :eq$/;"	f
equal_utc_datetime?	deps/ecto/lib/ecto/type.ex	/^  defp equal_utc_datetime?(_, _), do: false$/;"	f
erl_files	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp erl_files(files) do$/;"	f
erl_path	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp erl_path(path) do$/;"	f
erlang_plt	deps/dialyxir/lib/dialyxir/project.ex	/^  def erlang_plt(), do: global_plt("erlang-" <> otp_vsn())$/;"	f
error	deps/credo/lib/credo/execution/process_definition.ex	/^        def error(exec, _opts), do: exec$/;"	f
error	deps/credo/lib/credo/execution/task.ex	/^      def error(exec, _opts) do$/;"	f
error	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^  def error(exec, _opts) do$/;"	f
error	deps/credo/lib/credo/execution/task/validate_options.ex	/^  def error(exec, _opts) do$/;"	f
error	deps/decimal/lib/decimal.ex	/^  defmacrop error(flags, reason, result, context \\\\ nil) do$/;"	a
error	deps/dialyxir/lib/dialyxir/output.ex	/^  def error(""), do: :ok$/;"	f
error	deps/dialyxir/lib/dialyxir/output.ex	/^  def error(text), do: Mix.shell().error(text)$/;"	f
error	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^        def error() do$/;"	f
error	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^        def error(struct = %OpaqueStruct{}) do$/;"	f
error	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^        def error() do$/;"	f
error	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^        def error() do$/;"	f
error	deps/ecto/lib/ecto/multi.ex	/^  def error(multi, name, value) do$/;"	f
error	deps/jason/lib/decoder.ex	/^  defp error(<<_rest::bits>>, _original, skip, _stack, _key_decode, _string_decode) do$/;"	f
error	deps/jason/lib/decoder.ex	/^  defp error(_original, skip) do$/;"	f
error	deps/jason/lib/encode.ex	/^  defp error(error) do$/;"	f
error	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  defp error(field) do$/;"	f
error!	deps/ecto/lib/ecto/query/builder.ex	/^  def error!(message) when is_binary(message) do$/;"	f
error!	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp error!(other) do$/;"	f
error!	deps/ecto/lib/ecto/query/planner.ex	/^  defp error!(query, expr, message) do$/;"	f
error!	deps/ecto/lib/ecto/query/planner.ex	/^  defp error!(query, message) do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  defp error!() do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp error!(nil, message) do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp error!(query, message) do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp error!(nil, message) do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp error!(query, message) do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp error!(nil, message) do$/;"	f
error!	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp error!(query, message) do$/;"	f
error_banner	deps/phoenix/lib/phoenix/logger.ex	/^  defp error_banner(:error, %type{}), do: inspect(type)$/;"	f
error_banner	deps/phoenix/lib/phoenix/logger.ex	/^  defp error_banner(_kind, reason), do: inspect(reason)$/;"	f
error_conn	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp error_conn(_conn, :error, %NoRouteError{conn: conn}), do: conn$/;"	f
error_conn	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp error_conn(conn, _kind, _reason), do: conn$/;"	f
error_data	deps/ecto/lib/ecto/schema/loader.ex	/^  defp error_data(%{__struct__: atom}) do$/;"	f
error_data	deps/ecto/lib/ecto/schema/loader.ex	/^  defp error_data(other) when is_map(other) do$/;"	f
error_flushed	deps/postgrex/lib/postgrex/protocol.ex	/^  defp error_flushed(s, %{mode: :transaction} = status, err, buffer) do$/;"	f
error_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp error_ready(s, status, %Postgrex.Error{} = err, buffer) do$/;"	f
error_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp error_ready(s, status, err, buffer) do$/;"	f
error_reason	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp error_reason(_combinators, [head | tail]) do$/;"	f
error_reason	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp error_reason(_combinators, [head]) do$/;"	f
error_reason	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp error_reason(combinators, []) do$/;"	f
errors_on	test/support/data_case.ex	/^  def errors_on(changeset) do$/;"	f
escape	deps/earmark/lib/earmark/helpers.ex	/^  def escape(html, _), do: _escape(String.replace(html, "&", "&amp;"))$/;"	f
escape	deps/earmark/lib/earmark/helpers.ex	/^  def escape(html, encode \\\\ false)$/;"	f
escape	deps/earmark/lib/earmark/helpers.ex	/^  def escape(html, false), do: _escape(Regex.replace(~r{&(?!#?\\w+;)}, html, "&amp;"))$/;"	f
escape	deps/earmark/lib/earmark/transform.ex	/^  defp escape("", _opions, _level) do$/;"	f
escape	deps/earmark/lib/earmark/transform.ex	/^  defp escape(element, options, level) do$/;"	f
escape	deps/earmark/lib/earmark/transform.ex	/^  defp escape(element, options, level)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(binary, type, params_acc, vars, _env) when is_binary(binary),$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(boolean, type, params_acc, vars, _env) when is_boolean(boolean),$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(expr, type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(list, type, params_acc, vars, env) when is_list(list) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(nil, _type, params_acc, _vars, _env),$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(number, type, params_acc, vars, _env) when is_number(number),$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape(other, _type, _params_acc, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:-, _, [number]}, type, params_acc, vars, _env) when is_number(number),$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:<<>>, _, args} = expr, type, params_acc, vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:=, _, _} = expr, _type, _params_acc, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:^, _, [arg]}, type, {params, acc}, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:ago, meta, [count, interval]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:coalesce, _, [left, right]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:count, _, [arg, :distinct]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:date_add, _, [date, count, interval]} = expr, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:datetime_add, _, [datetime, count, interval]} = expr, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:field, _, [callee, field]}, _type, params_acc, vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:filter, _, [aggregate, filter_expr]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:filter, _, [aggregate]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:fragment, _, [query | frags]}, _type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:fragment, _, [query]}, _type, params_acc, vars, env) when is_list(query) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:fragment, _, [{:^, _, [var]} = _expr]}, _type, params_acc, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:from_now, meta, [count, interval]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:in, _, [left, right]} = expr, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:in, _, [left, right]} = expr, type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:json_extract_path, _, [field, path]} = expr, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:over, _, [{agg_name, _, agg_args} | over_args]}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:type, _, [{:^, _, [arg]}, type]}, _type, {params, acc}, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:type, _, [{:field, _, [_ | _]} = expr, type]}, _type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:type, _, [{fun, _, [_ | _]} = expr, type]}, _type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:type, _, [{math_op, _, [_, _]} = op_expr, type]}, _type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:type, _, [{{:., _, [{var, _, context}, field]}, _, []} = expr, type]}, _type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:type, meta, [expr, type]}, given_type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:{}, _, _}, _, _, _, _) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({:{}, _, list}, {:tuple, types}, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({comp_op, _, [left, right]} = expr, type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({fun, _, args} = other, _type, _params_acc, _vars, _env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({left, right}, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({math_op, _, [left, right]}, type, params_acc, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({name, _, [_, []]} = sigil, type, params_acc, vars, _env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({name, _, args} = expr, type, params_acc, vars, env) when is_atom(name) and is_list(args) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({op, _, _}, _type, _params_acc, _vars, _env) when op in ~w(|| && !)a do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({var, _, context}, _type, params_acc, vars, _env) when is_atom(var) and is_atom(context) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({{:., _, [callee, field]}, _, []}, _type, params_acc, vars, _env) when is_atom(field) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({{:., _, [mod, fun]}, _, args} = other, _type, _params_acc, _vars, _env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder.ex	/^  def escape({{:., meta, [Access, :get]}, _, [left, _]} = expr, type, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def escape(name) when is_bitstring(name), do: name$/;"	f
escape	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def escape(other) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/cte.ex	/^  def escape({:^, _, [expr]}), do: expr$/;"	f
escape	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def escape(expr, params_acc, _vars, _env) when is_boolean(expr) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/distinct.ex	/^  def escape(expr, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def escape(_kind, [], _binding, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def escape(_kind, expr, _binding, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def escape(kind, expr, binding, vars, env) when is_list(expr) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/from.ex	/^  def escape(query, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/from.ex	/^  def escape({:in, _, [var, query]}, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def escape(kind, expr, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape(join, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape(schema, _vars, _env) when is_atom(schema) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape(string, _vars, _env) when is_binary(string) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({:^, _, [expr]}, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({:assoc, _, [{var, _, context}, field]}, vars, _env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({:fragment, _, [_ | _]} = expr, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({:in, _, [{var, _, context}, expr]}, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({:subquery, _, [expr, opts]}, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({:subquery, _, [expr]}, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/join.ex	/^  def escape({string, schema} = join, _vars, env) when is_binary(string) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/lock.ex	/^  def escape(lock, _vars, _env) when is_binary(lock), do: lock$/;"	f
escape	deps/ecto/lib/ecto/query/builder/lock.ex	/^  def escape(other, _, _) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/lock.ex	/^  def escape({:fragment, _, [_ | _]} = expr, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def escape(kind, expr, params_acc, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/preload.ex	/^  def escape(preloads, vars) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape(atom, _mode, preloads, assocs, _vars) when is_atom(atom) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape(list, mode, preloads, assocs, vars) when is_list(list) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape(other, _mode, _preloads, _assocs, _vars) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape({:^, _, [inner]}, _mode, preloads, assocs, _vars) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  def escape(atom, _vars, _env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  def escape(other, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape(expr, params_take, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape(list, params_take, vars, env) when is_list(list) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({:%, _, [name, map]}, params_take, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({:%{}, _, [{:|, _, [data, pairs]}]}, params_take, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({:%{}, _, pairs}, params_take, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({:merge, _, [_left, right]}, _params_take, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({:merge, _, [left, {kind, _, _} = right]}, params_take, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({:{}, _, list}, params_take, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({left, right}, params_take, vars, env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape({tag, _, [{var, _, context}, fields]}, {params, take}, vars, env)$/;"	f
escape	deps/ecto/lib/ecto/query/builder/update.ex	/^  def escape(expr, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/update.ex	/^  def escape(expr, vars, env) when is_list(expr) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/update.ex	/^  def escape({:^, _, [v]}, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def escape(kw, _params_acc, _vars, _env) do$/;"	f
escape	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def escape(kw, params_acc, vars, env) when is_list(kw) do$/;"	f
escape	deps/jason/lib/decoder.ex	/^  defp escape(data, original, skip, stack, key_decode, string_decode, acc) do$/;"	f
escape	deps/jason/lib/encode.ex	/^      defp escape(unquote(byte)), do: throw(:error)$/;"	f
escape	deps/jason/lib/encode.ex	/^      defp escape(unquote(byte)), do: unquote(<<?\\\\, char>>)$/;"	f
escape	deps/jason/lib/encode.ex	/^      defp escape(unquote(byte)), do: unquote(sequence)$/;"	f
escape	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape(c) when is_integer(c) do$/;"	f
escape	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape(iodata) when is_list(iodata) do$/;"	f
escape	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape(other) do$/;"	f
escape	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape(other) when is_binary(other) do$/;"	f
escape	deps/plug/lib/plug/builder.ex	/^  defp escape(opts) do$/;"	f
escape_bind	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_bind({bind, _ix}),$/;"	f
escape_bind	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_bind({{name, {var, _, context}}, _ix}) when is_atom(name) and is_atom(var) and is_atom(context),$/;"	f
escape_bind	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_bind({{var, _, context}, ix}) when is_atom(var) and is_atom(context),$/;"	f
escape_bind	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_bind({{{:^, _, [expr]}, {var, _, context}}, _ix}) when is_atom(var) and is_atom(context),$/;"	f
escape_bind	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_bind({{{var, _, context}, ix}, _}) when is_atom(var) and is_atom(context),$/;"	f
escape_binding	deps/ecto/lib/ecto/query/builder.ex	/^  def escape_binding(_query, bind, _env) do$/;"	f
escape_binding	deps/ecto/lib/ecto/query/builder.ex	/^  def escape_binding(query, binding, _env) when is_list(binding) do$/;"	f
escape_call	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_call({name, _, args}, type, params_acc, vars, env) do$/;"	f
escape_compile	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp escape_compile({:frame, frame_clause}, params_acc, vars, env) do$/;"	f
escape_compile	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp escape_compile({:order_by, fields}, params_acc, vars, env) do$/;"	f
escape_compile	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp escape_compile({:partition_by, fields}, params_acc, vars, env) do$/;"	f
escape_delim	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^  def escape_delim(rdelim) do$/;"	f
escape_each	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_each(other, mode, {preloads, assocs}, vars) do$/;"	f
escape_each	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_each({key, list}, _mode, {preloads, assocs}, vars) do$/;"	f
escape_each	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_each({key, {:^, _, [inner]}}, _mode, {preloads, assocs}, _vars) do$/;"	f
escape_each	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_each({key, {var, _, context}}, mode, {preloads, assocs}, vars) when is_atom(context) do$/;"	f
escape_each	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_each({key, {{var, _, context}, list}}, mode, {preloads, assocs}, vars) when is_atom(context) do$/;"	f
escape_expansion	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape_expansion(expr, _type, params_take, vars, env) do$/;"	f
escape_field!	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_field!(expr, field, _vars) do$/;"	f
escape_field!	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_field!({kind, _, [atom]}, field, _vars)$/;"	f
escape_field!	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_field!({var, _, context}, field, vars)$/;"	f
escape_field!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_field!(k) do$/;"	f
escape_field!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_field!(k) when is_atom(k), do: k$/;"	f
escape_field!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_field!({:^, _, [k]}), do: quote(do: Ecto.Query.Builder.Update.field!(unquote(k)))$/;"	f
escape_fields	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape_fields(expr, tag, env) do$/;"	f
escape_fields	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape_fields({:^, _, [interpolated]}, tag, _env) do$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(?"), do: "&quot;"$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(?&), do: "&amp;"$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(?'), do: "&#39;"$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(?<), do: "&lt;"$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(?>), do: "&gt;"$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(c) when is_integer(c) and c <= 127, do: c$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(c) when is_integer(c) and c > 128, do: << c :: utf8 >>$/;"	f
escape_for	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp escape_for(string) when is_binary(string) do$/;"	f
escape_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_fragment({key, [{_, _}|_] = exprs}, type, params_acc, vars, env) when is_atom(key) do$/;"	f
escape_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_fragment({key, _expr}, _type, _params_acc, _vars, _env) do$/;"	f
escape_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_fragment({key, expr}, type, params_acc, vars, env) when is_atom(key) do$/;"	f
escape_frame	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp escape_frame(other, _, _, _) do$/;"	f
escape_frame	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp escape_frame({:fragment, _, _} = fragment, params_acc, vars, env) do$/;"	f
escape_function	deps/jason/lib/encode.ex	/^  defp escape_function(%{escape: escape}) do$/;"	f
escape_guards	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp escape_guards([_ | _] = list),$/;"	f
escape_guards	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp escape_guards(node),$/;"	f
escape_guards	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp escape_guards({left, meta, right}),$/;"	f
escape_guards	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp escape_guards({left, right}),$/;"	f
escape_guards	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp escape_guards({pre_expanded, _, [_ | _]} = node)$/;"	f
escape_html	deps/jason/lib/encode.ex	/^      defp escape_html(<<byte, rest::bits>>, acc, original, skip)$/;"	f
escape_html	deps/jason/lib/encode.ex	/^    defp escape_html(<<unquote(byte)::utf8, rest::bits>>, acc, original, skip) do$/;"	f
escape_html	deps/jason/lib/encode.ex	/^  defp escape_html(<<>>, acc, _original, _skip) do$/;"	f
escape_html	deps/jason/lib/encode.ex	/^  defp escape_html(<<_char::utf8, rest::bits>>, acc, original, skip) do$/;"	f
escape_html	deps/jason/lib/encode.ex	/^  defp escape_html(<<byte, _rest::bits>>, _acc, original, _skip) do$/;"	f
escape_html	deps/jason/lib/encode.ex	/^  defp escape_html(<<char::utf8, rest::bits>>, acc, original, skip)$/;"	f
escape_html	deps/jason/lib/encode.ex	/^  defp escape_html(data, original, skip) do$/;"	f
escape_html_chunk	deps/jason/lib/encode.ex	/^      defp escape_html_chunk(<<byte, rest::bits>>, acc, original, skip, len)$/;"	f
escape_html_chunk	deps/jason/lib/encode.ex	/^    defp escape_html_chunk(<<unquote(byte)::utf8, rest::bits>>, acc, original, skip, len) do$/;"	f
escape_html_chunk	deps/jason/lib/encode.ex	/^  defp escape_html_chunk(<<>>, acc, original, skip, len) do$/;"	f
escape_html_chunk	deps/jason/lib/encode.ex	/^  defp escape_html_chunk(<<_char::utf8, rest::bits>>, acc, original, skip, len) do$/;"	f
escape_html_chunk	deps/jason/lib/encode.ex	/^  defp escape_html_chunk(<<byte, _rest::bits>>, _acc, original, _skip, _len) do$/;"	f
escape_html_chunk	deps/jason/lib/encode.ex	/^  defp escape_html_chunk(<<char::utf8, rest::bits>>, acc, original, skip, len)$/;"	f
escape_interval	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_interval(count, interval, params_acc, vars, env) do$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^      defp escape_javascript(<<byte, rest::bits>>, acc, original, skip)$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^    defp escape_javascript(<<unquote(byte)::utf8, rest::bits>>, acc, original, skip) do$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^  defp escape_javascript(<<>>, acc, _original, _skip) do$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^  defp escape_javascript(<<_char::utf8, rest::bits>>, acc, original, skip) do$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^  defp escape_javascript(<<byte, _rest::bits>>, _acc, original, _skip) do$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^  defp escape_javascript(<<char::utf8, rest::bits>>, acc, original, skip)$/;"	f
escape_javascript	deps/jason/lib/encode.ex	/^  defp escape_javascript(data, original, skip) do$/;"	f
escape_javascript_chunk	deps/jason/lib/encode.ex	/^      defp escape_javascript_chunk(<<byte, rest::bits>>, acc, original, skip, len)$/;"	f
escape_javascript_chunk	deps/jason/lib/encode.ex	/^    defp escape_javascript_chunk(<<unquote(byte)::utf8, rest::bits>>, acc, original, skip, len) do$/;"	f
escape_javascript_chunk	deps/jason/lib/encode.ex	/^  defp escape_javascript_chunk(<<>>, acc, original, skip, len) do$/;"	f
escape_javascript_chunk	deps/jason/lib/encode.ex	/^  defp escape_javascript_chunk(<<_char::utf8, rest::bits>>, acc, original, skip, len) do$/;"	f
escape_javascript_chunk	deps/jason/lib/encode.ex	/^  defp escape_javascript_chunk(<<byte, _rest::bits>>, _acc, original, _skip, _len) do$/;"	f
escape_javascript_chunk	deps/jason/lib/encode.ex	/^  defp escape_javascript_chunk(<<char::utf8, rest::bits>>, acc, original, skip, len)$/;"	f
escape_json	deps/jason/lib/encode.ex	/^      defp escape_json(<<byte, rest::bits>>, acc, original, skip)$/;"	f
escape_json	deps/jason/lib/encode.ex	/^  defp escape_json(<<>>, acc, _original, _skip) do$/;"	f
escape_json	deps/jason/lib/encode.ex	/^  defp escape_json(<<_char::utf8, rest::bits>>, acc, original, skip) do$/;"	f
escape_json	deps/jason/lib/encode.ex	/^  defp escape_json(<<byte, _rest::bits>>, _acc, original, _skip) do$/;"	f
escape_json	deps/jason/lib/encode.ex	/^  defp escape_json(<<char::utf8, rest::bits>>, acc, original, skip)$/;"	f
escape_json	deps/jason/lib/encode.ex	/^  defp escape_json(data, original, skip) do$/;"	f
escape_json_chunk	deps/jason/lib/encode.ex	/^      defp escape_json_chunk(<<byte, rest::bits>>, acc, original, skip, len)$/;"	f
escape_json_chunk	deps/jason/lib/encode.ex	/^  defp escape_json_chunk(<<>>, acc, original, skip, len) do$/;"	f
escape_json_chunk	deps/jason/lib/encode.ex	/^  defp escape_json_chunk(<<_char::utf8, rest::bits>>, acc, original, skip, len) do$/;"	f
escape_json_chunk	deps/jason/lib/encode.ex	/^  defp escape_json_chunk(<<byte, _rest::bits>>, _acc, original, _skip, _len) do$/;"	f
escape_json_chunk	deps/jason/lib/encode.ex	/^  defp escape_json_chunk(<<char::utf8, rest::bits>>, acc, original, skip, len)$/;"	f
escape_json_key	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp escape_json_key(value) when is_binary(value) do$/;"	f
escape_json_key	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp escape_json_key(value) when is_binary(value) do$/;"	f
escape_json_path	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_json_path(other) do$/;"	f
escape_json_path	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_json_path(path) when is_list(path) do$/;"	f
escape_key	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_key(atom) when is_atom(atom) do$/;"	f
escape_key	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_key(other) do$/;"	f
escape_key	deps/ecto/lib/ecto/query/builder/preload.ex	/^  defp escape_key({:^, _, [expr]}) do$/;"	f
escape_key	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape_key(k, params_take, _vars, _env) when is_atom(k) do$/;"	f
escape_key	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape_key(k, params_take, vars, env) do$/;"	f
escape_key	deps/jason/lib/codegen.ex	/^  defp escape_key(binary, _original, _skip) do$/;"	f
escape_kw	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_kw(op, kw, params, vars, env) do$/;"	f
escape_op	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_op([], compile, runtime, params, _vars, _env) do$/;"	f
escape_op	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_op([{k, v}|t], compile, runtime, params, vars, env) when is_atom(k) and is_list(v) do$/;"	f
escape_op	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_op([{k, {:^, _, [v]}}|t], compile, runtime, params, vars, env) when is_atom(k) do$/;"	f
escape_op	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp escape_op(expr, _compile, _runtime, _params, _vars, _env) do$/;"	f
escape_pairs	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp escape_pairs(pairs, params_take, vars, env) do$/;"	f
escape_params	deps/ecto/lib/ecto/query/builder.ex	/^  def escape_params(list), do: Enum.reverse(list)$/;"	f
escape_query	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_query(%Query{} = query),$/;"	f
escape_query	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_query(other),$/;"	f
escape_string	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp escape_string(value) when is_binary(value) do$/;"	f
escape_string	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp escape_string(value) when is_binary(value) do$/;"	f
escape_string	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp escape_string(value) when is_binary(value) do$/;"	f
escape_subquery	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_subquery(expr, type, params, vars, env) do$/;"	f
escape_subquery	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_subquery({:subquery, _, [expr]}, _, {params, subqueries}, _vars, _env) do$/;"	f
escape_surrogate	deps/jason/lib/decoder.ex	/^  defp escape_surrogate(<<?\\\\, ?u, int1::16, int2::16, rest::bits>>, original,$/;"	f
escape_surrogate	deps/jason/lib/decoder.ex	/^  defp escape_surrogate(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, _acc, _hi) do$/;"	f
escape_unicode	deps/jason/lib/encode.ex	/^      defp escape_unicode(<<byte, rest::bits>>, acc, original, skip)$/;"	f
escape_unicode	deps/jason/lib/encode.ex	/^  defp escape_unicode(<<>>, acc, _original, _skip) do$/;"	f
escape_unicode	deps/jason/lib/encode.ex	/^  defp escape_unicode(<<byte, _rest::bits>>, _acc, original, _skip) do$/;"	f
escape_unicode	deps/jason/lib/encode.ex	/^  defp escape_unicode(<<char::utf8, rest::bits>>, acc, original, skip) do$/;"	f
escape_unicode	deps/jason/lib/encode.ex	/^  defp escape_unicode(<<char::utf8, rest::bits>>, acc, original, skip)$/;"	f
escape_unicode	deps/jason/lib/encode.ex	/^  defp escape_unicode(data, original, skip) do$/;"	f
escape_unicode_chunk	deps/jason/lib/encode.ex	/^      defp escape_unicode_chunk(<<byte, rest::bits>>, acc, original, skip, len)$/;"	f
escape_unicode_chunk	deps/jason/lib/encode.ex	/^  defp escape_unicode_chunk(<<>>, acc, original, skip, len) do$/;"	f
escape_unicode_chunk	deps/jason/lib/encode.ex	/^  defp escape_unicode_chunk(<<byte, _rest::bits>>, _acc, original, _skip, _len) do$/;"	f
escape_unicode_chunk	deps/jason/lib/encode.ex	/^  defp escape_unicode_chunk(<<char::utf8, rest::bits>>, acc, original, skip, len) do$/;"	f
escape_unicode_chunk	deps/jason/lib/encode.ex	/^  defp escape_unicode_chunk(<<char::utf8, rest::bits>>, acc, original, skip, len)$/;"	f
escape_var!	deps/ecto/lib/ecto/query/builder.ex	/^  def escape_var!(var, vars) do$/;"	f
escape_window	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp escape_window(vars, {name, expr}, env) do$/;"	f
escape_window_description	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_window_description([], params_acc, _vars, _env),$/;"	f
escape_window_description	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_window_description([kw], params_acc, vars, env) do$/;"	f
escape_window_description	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_window_description([window_name], params_acc, _vars, _env) when is_atom(window_name),$/;"	f
escape_window_function	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_window_function(expr, type, params_acc, vars, env) do$/;"	f
escape_with_type	deps/ecto/lib/ecto/query/builder.ex	/^  defp escape_with_type(expr, type, params_acc, vars, env) do$/;"	f
escaped	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^  def escaped(literal) when is_binary(literal) do$/;"	f
escaped_token	deps/earmark/src/link_text_parser.erl	/^escaped_token({_Token, _Line, Value}) -> {string:concat("\\\\", Value), string:concat("\\\\", Value)}.$/;"	f	module:link_text_parser
escapeu	deps/jason/lib/decoder.ex	/^  defp escapeu(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, _acc) do$/;"	f
escapeu	deps/jason/lib/decoder.ex	/^  defp escapeu(<<int1::16, int2::16, rest::bits>>, original, skip, stack, key_decode, string_decode, acc) do$/;"	f
escapeu_first	deps/jason/lib/decoder.ex	/^    defmacro escapeu_first(int, last, rest, original, skip, stack, key_decode, string_decode, acc) do$/;"	a
escapeu_first_clause	deps/jason/lib/decoder.ex	/^    defp escapeu_first_clause(int, first, last, rest, original, skip, stack, key_decode, string_decode, acc)$/;"	f
escapeu_first_clauses	deps/jason/lib/decoder.ex	/^    defp escapeu_first_clauses(last, rest, original, skip, stack, key_decode, string_decode, acc) do$/;"	f
escapeu_last	deps/jason/lib/decoder.ex	/^    defmacro escapeu_last(int, original, skip) do$/;"	a
escapeu_last	deps/jason/lib/decoder.ex	/^  defp escapeu_last(int, original, skip) do$/;"	f
escapeu_last_clauses	deps/jason/lib/decoder.ex	/^    defp escapeu_last_clauses() do$/;"	f
escapeu_surrogate	deps/jason/lib/decoder.ex	/^    defmacro escapeu_surrogate(int, last, rest, original, skip, stack, key_decode, string_decode, acc,$/;"	a
escapeu_surrogate_clause	deps/jason/lib/decoder.ex	/^    defp escapeu_surrogate_clause(int, first, last, rest, original, skip, stack, key_decode, string_decode, acc, hi) do$/;"	f
escapeu_surrogate_clauses	deps/jason/lib/decoder.ex	/^    defp escapeu_surrogate_clauses(last, rest, original, skip, stack, key_decode, string_decode, acc, hi) do$/;"	f
escript	deps/ex_doc/mix.exs	/^  defp escript do$/;"	f
escript_config	deps/earmark/mix.exs	/^  defp escript_config do$/;"	f
etag_for_path	deps/plug/lib/plug/static.ex	/^  defp etag_for_path(file_info, et_generation, path) do$/;"	f
eval_from	deps/phoenix/lib/mix/phoenix.ex	/^  def eval_from(apps, source_file_path, binding) do$/;"	f
even better with our little helper	deps/makeup/lib/makeup/lexer/postprocess.ex	/^    test "even better with our little helper" do$/;"	t
event	deps/db_connection/lib/db_connection.ex	/^  defp event(nil, _),$/;"	f
event	deps/db_connection/lib/db_connection.ex	/^  defp event({log, events}, event),$/;"	f
events_to_instrumenters	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp events_to_instrumenters(instrumenters) do$/;"	f
eventually	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def eventually(combinator \\\\ empty(), eventually)$/;"	f
ex_doc_app_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp ex_doc_app_url(module, config) do$/;"	f
except	deps/ecto/lib/ecto/query.ex	/^  defmacro except(query, other_query) do$/;"	a
except_all	deps/ecto/lib/ecto/query.ex	/^  defmacro except_all(query, other_query) do$/;"	a
exception	deps/db_connection/lib/db_connection.ex	/^    def exception(:error),$/;"	f
exception	deps/db_connection/lib/db_connection.ex	/^    def exception(:idle),$/;"	f
exception	deps/db_connection/lib/db_connection.ex	/^    def exception(:transaction),$/;"	f
exception	deps/db_connection/lib/db_connection/ownership.ex	/^  def exception(message), do: %DBConnection.OwnershipError{message: message}$/;"	f
exception	deps/decimal/lib/decimal.ex	/^    def exception(opts) do$/;"	f
exception	deps/earmark/lib/earmark/error.ex	/^  def exception(msg), do: %__MODULE__{message: msg}$/;"	f
exception	deps/ecto/lib/ecto/exceptions.ex	/^  def exception(opts) do$/;"	f
exception	deps/ex_machina/lib/ex_machina.ex	/^    def exception(factory_name) do$/;"	f
exception	deps/phoenix/lib/phoenix/exceptions.ex	/^  def exception([key: value]) do$/;"	f
exception	deps/phoenix/lib/phoenix/router.ex	/^    def exception(opts) do$/;"	f
exception	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^    def exception(msg) do$/;"	f
exception	deps/postgrex/lib/postgrex/error.ex	/^  def exception(opts) do$/;"	f
exception?	deps/credo/lib/credo/code/module.ex	/^  def exception?(_), do: nil$/;"	f
exception?	deps/credo/lib/credo/code/module.ex	/^  def exception?({:defmodule, _, [{:__aliases__, _, _name_list}, arguments]}) do$/;"	f
exception?	deps/ex_doc/lib/ex_doc.ex	/^  defp exception?(%{type: type}), do: type == :exception$/;"	f
exclude	deps/credo/lib/credo/sources.ex	/^  defp exclude(files, []), do: files$/;"	f
exclude	deps/credo/lib/credo/sources.ex	/^  defp exclude(files, [pattern | remaining_patterns]) do$/;"	f
exclude	deps/credo/lib/credo/sources.ex	/^  defp exclude(files, [pattern | remaining_patterns]) when is_binary(pattern) do$/;"	f
exclude	deps/credo/lib/credo/sources.ex	/^  defp exclude(files, [pattern | remaining_patterns]) when is_list(files) do$/;"	f
exclude	deps/ecto/lib/ecto/query.ex	/^  def exclude(%Ecto.Query{} = query, field), do: do_exclude(query, field)$/;"	f
exclude	deps/ecto/lib/ecto/query.ex	/^  def exclude(query, field), do: do_exclude(Ecto.Queryable.to_query(query), field)$/;"	f
exclude_checks_based_on_elixir_version	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^  defp exclude_checks_based_on_elixir_version(exec) do$/;"	f
exclude_low_priority_checks	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^  defp exclude_low_priority_checks(exec, below_priority) do$/;"	f
excluded?	deps/plug/lib/plug/ssl.ex	/^  defp excluded?(host, list) when is_list(list), do: :lists.member(host, list)$/;"	f
excluded?	deps/plug/lib/plug/ssl.ex	/^  defp excluded?(host, {mod, fun, args}), do: apply(mod, fun, [host | args])$/;"	f
excluded_host?	deps/plug/lib/plug/ssl.ex	/^      def excluded_host?(host) do$/;"	f
excluded_lastname_or_namespace?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp excluded_lastname_or_namespace?($/;"	f
exclusion_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def exclusion_constraint(changeset, field, opts \\\\ []) do$/;"	f
execute	deps/db_connection/lib/db_connection.ex	/^  def execute(conn, query, params, opts \\\\ []) do$/;"	f
execute	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp execute(operation, name, query, opts) when is_list(opts) do$/;"	f
execute	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute(conn, query, params, opts) do$/;"	f
execute	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute(conn, %{ref: ref} = query, params, opts) do$/;"	f
execute	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def execute(adapter_meta, query_meta, query, params, opts) do$/;"	f
execute	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def execute(adapter_meta, query_meta, prepared, params, opts) do$/;"	f
execute	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute(pid, %{} = query, params, opts) do$/;"	f
execute	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute(pid, statement, params, opts) when is_binary(statement) or is_list(statement) do$/;"	f
execute	deps/ecto_sql/lib/ecto/migration.ex	/^  def execute(command) when is_binary(command) or is_function(command, 0) or is_list(command) do$/;"	f
execute	deps/ecto_sql/lib/ecto/migration.ex	/^  def execute(up, down) when (is_binary(up) or is_function(up, 0) or is_list(up)) and$/;"	f
execute	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def execute(command) do$/;"	f
execute	deps/postgrex/lib/postgrex.ex	/^  def execute(conn, query, params, opts \\\\ []) do$/;"	f
execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp execute($/;"	f
execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp execute(s, %{mode: :transaction} = status, query, cursor, max_rows) do$/;"	f
execute	deps/telemetry/src/telemetry.erl	/^execute(EventName, Measurements) ->$/;"	f	module:telemetry
execute	deps/telemetry/src/telemetry.erl	/^execute(EventName, Measurements, Metadata) when is_map(Measurements) and is_map(Metadata) ->$/;"	f	module:telemetry
execute	deps/telemetry/src/telemetry.erl	/^execute(EventName, Value, Metadata) when is_number(Value) ->$/;"	f	module:telemetry
execute!	deps/db_connection/lib/db_connection.ex	/^  def execute!(conn, query, params, opts \\\\ []) do$/;"	f
execute!	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp execute!(adapter_meta, {:cache, update, {id, prepared}}, params, opts) do$/;"	f
execute!	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp execute!(adapter_meta, {:cached, update, reset, {id, cached}}, params, opts) do$/;"	f
execute!	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp execute!(adapter_meta, {:nocache, {_id, prepared}}, params, opts) do$/;"	f
execute!	deps/postgrex/lib/postgrex.ex	/^  def execute!(conn, query, params, opts \\\\ []) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl(keyword) when is_list(keyword),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl(string) when is_binary(string), do: [string]$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:alter, %Table{} = table, changes}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:create, %Constraint{check: check}}) when is_binary(check),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:create, %Constraint{exclude: exclude}}) when is_binary(exclude),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:create, %Index{} = index}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:create_if_not_exists, %Index{}}),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:drop, %Constraint{}}),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:drop, %Index{} = index}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:drop_if_exists, %Constraint{}}),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:drop_if_exists, %Index{}}),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:rename, %Table{} = current_table, %Table{} = new_table}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({:rename, %Table{} = table, current_column, new_column}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({command, %Table{} = table, columns}) when command in [:create, :create_if_not_exists] do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def execute_ddl({command, %Table{} = table}) when command in [:drop, :drop_if_exists] do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl(keyword) when is_list(keyword),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl(string) when is_binary(string), do: [string]$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:alter, %Table{} = table, changes}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:create, %Constraint{} = constraint}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:create, %Index{} = index}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:create_if_not_exists, %Index{} = index}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:drop, %Constraint{} = constraint}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:drop_if_exists, %Constraint{} = constraint}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:rename, %Table{} = current_table, %Table{} = new_table}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({:rename, %Table{} = table, current_column, new_column}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({command, %Index{} = index}) when command in @drops do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({command, %Table{} = table, columns}) when command in @creates do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def execute_ddl({command, %Table{} = table}) when command in @drops do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def execute_ddl(meta, definition, opts) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def execute_ddl(meta, conn, definition, opts) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl(keyword) when is_list(keyword),$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl(string) when is_binary(string), do: [string]$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({:alter, %Table{} = table, changes}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({:create, %Constraint{exclude: exclude}}) when exclude != nil do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({:create, %Constraint{} = constraint}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({:rename, %Table{} = current_table, %Table{} = new_table}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({:rename, table, current_column, new_column}) do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({command, %Constraint{} = constraint})$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({command, %Index{} = index}) when command in [:drop, :drop_if_exists] do$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({command, %Index{} = index})$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({command, %Table{} = table, columns})$/;"	f
execute_ddl	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def execute_ddl({command, %Table{} = table}) when command in [:drop, :drop_if_exists] do$/;"	f
execute_down	deps/ecto_sql/lib/ecto/migration.ex	/^        defp execute_down, do: repo().query!("select 'Down query …';", [], [log: :info])$/;"	f
execute_in_direction	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp execute_in_direction(repo, migration, :backward, log, %Command{down: down}) do$/;"	f
execute_in_direction	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp execute_in_direction(repo, migration, :backward, log, command) do$/;"	f
execute_in_direction	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp execute_in_direction(repo, migration, :forward, log, %Command{up: up}) do$/;"	f
execute_in_direction	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp execute_in_direction(repo, migration, :forward, log, command) do$/;"	f
execute_up	deps/ecto_sql/lib/ecto/migration.ex	/^        defp execute_up, do: repo().query!("select 'Up query …';", [], [log: :info])$/;"	f
exists?	deps/ecto/integration_test/cases/repo.exs	/^  test "exists?" do$/;"	t
exists?	deps/ecto/lib/ecto/repo.ex	/^        def exists?(queryable, opts \\\\ []) do$/;"	f
exists?	deps/ecto/lib/ecto/repo/queryable.ex	/^  def exists?(name, queryable, opts) do$/;"	f
exit	deps/postgrex/lib/postgrex/type_server.ex	/^  defp exit(%{connections: connections} = state, pid) do$/;"	f
exit_on_error	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp exit_on_error($/;"	f
exit_on_error	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp exit_on_error(:error, value, stack, call) do$/;"	f
exit_on_error	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp exit_on_error(:exit, value, _stack, call) do$/;"	f
exit_on_error	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp exit_on_error(:throw, value, stack, call) do$/;"	f
exit_to_exception	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp exit_to_exception(reason), do: RuntimeError.exception(Exception.format_exit(reason))$/;"	f
exit_to_exception	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp exit_to_exception({%{__struct__: struct} = error, _})$/;"	f
expand	deps/ecto/lib/ecto/query/builder/dynamic.ex	/^  defp expand(query, %{fun: fun}, {binding, params, count}) do$/;"	f
expand	deps/ecto/lib/ecto/repo/preloader.ex	/^  def expand(schema, preloads, acc) do$/;"	f
expand_alias	deps/ecto/lib/ecto/schema.ex	/^  defp expand_alias(ast, _env),$/;"	f
expand_alias	deps/ecto/lib/ecto/schema.ex	/^  defp expand_alias({:__aliases__, _, _} = ast, env),$/;"	f
expand_alias	deps/phoenix/lib/phoenix/router/scope.ex	/^  def expand_alias(module, alias) do$/;"	f
expand_alias_in_key	deps/ecto/lib/ecto/schema.ex	/^  defp expand_alias_in_key(opts, key, env) do$/;"	f
expand_and_split_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp expand_and_split_fragment(query, env) do$/;"	f
expand_create	deps/ecto_sql/lib/ecto/migration.ex	/^  defp expand_create(object, command, block) do$/;"	f
expand_from	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp expand_from(other, env) do$/;"	f
expand_from	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp expand_from({left, right}, env) do$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments([]), do: "\/"$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments([], acc),$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments([h|t], acc) when is_binary(h),$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments([h|t], acc),$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments([{:|, _, [h, t]}], acc),$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments(segments) do$/;"	f
expand_segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp expand_segments(segments) when is_list(segments) do$/;"	f
expand_tabs	deps/earmark/lib/earmark/helpers.ex	/^  def expand_tabs(line) do$/;"	f
expand_where	deps/ecto/lib/ecto/association.ex	/^  defp expand_where(conditions, expr, params, counter, binding) do$/;"	f
expander	deps/earmark/lib/earmark/helpers.ex	/^  defp expander(_, leader) do$/;"	f
expect	deps/mox/lib/mox.ex	/^  def expect(mock, name, n \\\\ 1, code)$/;"	f
expected_type	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp expected_type(%{cardinality: :many}), do: {:array, :map}$/;"	f
expected_type	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp expected_type(%{cardinality: :one}), do: :map$/;"	f
expired?	deps/phoenix/lib/phoenix/token.ex	/^  defp expired?(_signed, :infinity), do: false$/;"	f
expired?	deps/phoenix/lib/phoenix/token.ex	/^  defp expired?(_signed, max_age_secs) when max_age_secs <= 0, do: true$/;"	f
expired?	deps/phoenix/lib/phoenix/token.ex	/^  defp expired?(_signed, nil) do$/;"	f
expired?	deps/phoenix/lib/phoenix/token.ex	/^  defp expired?(signed, max_age_secs), do: signed + trunc(max_age_secs * 1000) < now_ms()$/;"	f
expired?	deps/plug_crypto/lib/plug/crypto.ex	/^  defp expired?(_signed, :infinity), do: false$/;"	f
expired?	deps/plug_crypto/lib/plug/crypto.ex	/^  defp expired?(_signed, max_age_secs) when max_age_secs <= 0, do: true$/;"	f
expired?	deps/plug_crypto/lib/plug/crypto.ex	/^  defp expired?(signed, max_age_secs), do: signed + trunc(max_age_secs * 1000) < now_ms()$/;"	f
expired?	lib/boruta/oauth/schemas/token.ex	/^  def expired?(%Token{expires_at: expires_at}) do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/app_call.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/binary_construction.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/contract_diff.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/contract_range.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/improper_list_construction.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/missing_range.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/opaque_equality.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/opaque_guard.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/opaque_nonequality.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/opaque_type_test.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/race_condition.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/record_matching.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/unknown_behaviour.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/unknown_function.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^  def explain() do$/;"	f
explain	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^  def explain() do$/;"	f
explanation	deps/credo/lib/credo/check.ex	/^      def explanation do$/;"	f
explanation_for	deps/credo/lib/credo/check.ex	/^  def explanation_for(keywords, key), do: keywords[key]$/;"	f
explanation_for	deps/credo/lib/credo/check.ex	/^  def explanation_for(nil, _), do: nil$/;"	f
explanation_for_params	deps/credo/lib/credo/check.ex	/^      def explanation_for_params do$/;"	f
explanation_text	deps/dialyxir/lib/mix/tasks/dialyzer/explain.ex	/^  defp explanation_text(warning_name) do$/;"	f
exports	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp exports(module) do$/;"	f
expr	deps/ecto/lib/ecto/query/inspect.ex	/^  def expr(expr, names, part) do$/;"	f
expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr(%{expr: expr} = part, names) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(%Decimal{} = decimal, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(%Ecto.Query.Tagged{value: binary, type: :binary}, _sources, _query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(%Ecto.Query.Tagged{value: other, type: type}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(%Ecto.Query.Tagged{value: other, type: type}, sources, query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(%Ecto.SubQuery{query: query}, sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(false, _sources, _query), do: "FALSE"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(list, _sources, query) when is_list(list) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(literal, _sources, _query) when is_binary(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(literal, _sources, _query) when is_float(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(literal, _sources, _query) when is_integer(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(nil, _sources, _query),   do: "NULL"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr(true, _sources, _query),  do: "TRUE"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:&, _, [idx]}, sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:^, [], [_ix]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:count, _, []}, _sources, _query), do: "count(*)"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:date_add, _, [date, count, interval]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:datetime_add, _, [datetime, count, interval]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:filter, _, _}, _sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:fragment, _, [kw]}, _sources, query) when is_list(kw) or tuple_size(kw) == 3 do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:fragment, _, parts}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:ilike, _, [_, _]}, _sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:in, _, [_, {:^, _, [_, 0]}]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:in, _, [_left, []]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:in, _, [left, %Ecto.SubQuery{} = subquery]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:in, _, [left, right]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:in, _, [left, right]}, sources, query) when is_list(right) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:in, _, [left, {:^, _, [_, length]}]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:is_nil, _, [arg]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:json_extract_path, _, [expr, path]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:not, _, [expr]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:over, _, [agg, kw]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:over, _, [agg, name]}, sources, query) when is_atom(name) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({:{}, _, elems}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({fun, _, args}, sources, query) when is_atom(fun) and is_list(args) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({{:., _, [{:&, _, [idx]}, field]}, _, []}, sources, _query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp expr({{:., _, [{:parent_as, _, [{:&, _, [idx]}]}, field]}, _, []}, _sources, query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(%Decimal{} = decimal, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(%Ecto.Query.Tagged{value: binary, type: :binary}, _sources, _query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(%Ecto.Query.Tagged{value: other, type: type}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(%Ecto.SubQuery{query: query}, sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(false, _sources, _query), do: "FALSE"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(list, sources, query) when is_list(list) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(literal, _sources, _query) when is_binary(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(literal, _sources, _query) when is_float(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(literal, _sources, _query) when is_integer(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(nil, _sources, _query),   do: "NULL"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr(true, _sources, _query),  do: "TRUE"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:&, _, [idx]}, sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:^, [], [ix]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:count, _, []}, _sources, _query), do: "count(*)"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:date_add, _, [date, count, interval]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:datetime_add, _, [datetime, count, interval]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:filter, _, [agg, filter]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:fragment, _, [kw]}, _sources, query) when is_list(kw) or tuple_size(kw) == 3 do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:fragment, _, parts}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:in, _, [_left, []]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:in, _, [left, %Ecto.SubQuery{} = subquery]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:in, _, [left, right]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:in, _, [left, right]}, sources, query) when is_list(right) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:in, _, [left, {:^, _, [ix, _]}]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:is_nil, _, [arg]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:json_extract_path, _, [expr, path]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:not, _, [expr]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:over, _, [agg, kw]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:over, _, [agg, name]}, sources, query) when is_atom(name) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({:{}, _, elems}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({fun, _, args}, sources, query) when is_atom(fun) and is_list(args) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({{:., _, [{:&, _, [idx]}, field]}, _, []}, sources, _query) when is_atom(field) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp expr({{:., _, [{:parent_as, _, [{:&, _, [idx]}]}, field]}, _, []}, _sources, query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Decimal{exp: exp} = decimal, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Ecto.SubQuery{query: query}, sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Tagged{value: binary, type: :binary}, _sources, _query) when is_binary(binary) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Tagged{value: binary, type: :uuid}, _sources, _query) when is_binary(binary) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Tagged{value: other, type: :integer}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Tagged{value: other, type: type}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(%Tagged{value: other, type: type}, sources, query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(false, _sources, _query), do: "0"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(field, _sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(list, sources, query) when is_list(list) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(literal, _sources, _query) when is_binary(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(literal, _sources, _query) when is_float(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(literal, _sources, _query) when is_integer(literal) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(nil, _sources, _query), do: "NULL"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(string, _sources, _query) when is_binary(string) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr(true, _sources, _query), do: "1"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:&, _, [idx, fields, _counter]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:&, _, [idx]}, sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:^, [], [idx]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:count, _, []}, _sources, _query), do: "count(*)"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:date_add, _, [date, count, interval]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:datetime_add, _, [datetime, count, interval]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:filter, _, _}, _sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:fragment, _, [kw]}, _sources, query) when is_list(kw) or tuple_size(kw) == 3 do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:fragment, _, parts}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:in, _, [_, {:^, _, [_, 0]}]}, _sources, _query), do: "0=1"$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:in, _, [_left, []]}, _sources, _query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:in, _, [left, %Ecto.SubQuery{} = subquery]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:in, _, [left, right]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:in, _, [left, right]}, sources, query) when is_list(right) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:in, _, [left, {:^, _, [idx, length]}]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:is_nil, _, [arg]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:json_extract_path, _, _}, _sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({:not, _, [expr]}, sources, query) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({fun, _, args}, sources, query) when is_atom(fun) and is_list(args) do$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({string, :varchar}, _sources, _query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({{:., _, [{:&, _, [idx]}, field]}, _, []}, sources, _query)$/;"	f
expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp expr({{:., _, [{:parent_as, _, [{:&, _, [idx]}]}, field]}, _, []}, _sources, query)$/;"	f
expr_to_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp expr_to_cache(%BooleanExpr{op: op, expr: expr, subqueries: []}), do: {op, expr}$/;"	f
expr_to_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp expr_to_cache(%BooleanExpr{op: op, expr: expr, subqueries: subqueries}) do$/;"	f
expr_to_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp expr_to_cache(%QueryExpr{expr: expr}), do: expr$/;"	f
expr_to_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp expr_to_cache(%SelectExpr{expr: expr}), do: expr$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string(%Ecto.Query.Tagged{value: value, tag: nil}, _, _names, _) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string(%Ecto.Query.Tagged{value: value, tag: tag}, _, names, part) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string(_expr, string, _, _) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:&, _, [ix]}, _, names, %{take: take}) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:&, _, [ix]}, _, names, _) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:^, _, [_ix, _len]}, _, _, _part) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:^, _, [ix]}, _, _, %{params: params}) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:fragment, _, [{_, _} | _] = parts}, _, names, part) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:json_extract_path, _, [expr, path]}, _, names, part) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:type, [], [expr, type]}, _string, names, part) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({:{}, [], [:subquery, i]}, _string, _names, %BooleanExpr{subqueries: subqueries}) do$/;"	f
expr_to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  defp expr_to_string({{:., _, [_, _]}, _, []}, string, _, _) do$/;"	f
expressions	deps/ecto/integration_test/cases/repo.exs	/^    test "expressions" do$/;"	t
exprs	deps/phoenix/lib/phoenix/router/route.ex	/^  def exprs(route) do$/;"	f
ext_to_mime	deps/mime/lib/mime/application.ex	/^        defp ext_to_mime(unquote(ext)), do: unquote(type)$/;"	f
ext_to_mime	deps/mime/lib/mime/application.ex	/^      defp ext_to_mime(_ext), do: nil$/;"	f
ext_to_mime	deps/mime/lib/mime/application.ex	/^      defp ext_to_mime(type)$/;"	f
extensions	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def extensions do$/;"	f
extensions	deps/mime/lib/mime/application.ex	/^      def extensions(type) do$/;"	f
extensions	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp extensions(public_key, hostnames) do$/;"	f
extensions	deps/plug/lib/plug/mime.ex	/^  def extensions(type) do$/;"	f
extra	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  defp extra(%{id: id, title: title, content: content}) do$/;"	f
extra_link	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp extra_link(attrs, config) do$/;"	f
extra_paths	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp extra_paths(config) do$/;"	f
extra_section	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  defp extra_section(title, header, body, id) do$/;"	f
extract	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp extract([[h|_]|t2]), do: [h|extract(t2)]$/;"	f
extract	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp extract([[nil|_]|t2]), do: extract(t2)$/;"	f
extract	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp extract([]), do: []$/;"	f
extract	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  def extract(%State{mode: :normal} = state, generations, remote_ref, remote_context) do$/;"	f
extract	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def extract(%State{mode: :delta, values: values, clouds: clouds} = state, remote_ref, remote_context) do$/;"	f
extract	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def extract(%State{mode: :normal, values: values, clouds: clouds} = state, remote_ref, remote_context) do$/;"	f
extract_actions	deps/phoenix/lib/phoenix/router/resource.ex	/^  defp extract_actions(opts, singleton) do$/;"	f
extract_alias_groups	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp extract_alias_groups({:defmodule, _, _} = ast) do$/;"	f
extract_changes	deps/ecto/lib/ecto/exceptions.ex	/^  defp extract_changes(%Ecto.Changeset{changes: changes}) do$/;"	f
extract_changes	deps/ecto/lib/ecto/exceptions.ex	/^  defp extract_changes([%Ecto.Changeset{action: :delete} | tail]),$/;"	f
extract_changes	deps/ecto/lib/ecto/exceptions.ex	/^  defp extract_changes([%Ecto.Changeset{} = changeset | tail]),$/;"	f
extract_changes	deps/ecto/lib/ecto/exceptions.ex	/^  defp extract_changes(other),$/;"	f
extract_choices_from_lookahead	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp extract_choices_from_lookahead([{:choice, choices}]), do: choices$/;"	f
extract_choices_from_lookahead	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp extract_choices_from_lookahead(other), do: [other]$/;"	f
extract_endpoint	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  def extract_endpoint(endpoint_or_conn_or_socket) do$/;"	f
extract_footnote_links	deps/earmark/lib/earmark/parser.ex	/^  defp extract_footnote_links({line, lnb}) do$/;"	f
extract_header_and_fields	deps/ecto/lib/ecto/repo/schema.ex	/^  defp extract_header_and_fields(rows, schema, dumper, autogen_id, adapter) do$/;"	f
extract_headers	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp extract_headers(content) do$/;"	f
extract_merger	deps/plug/lib/plug/router.ex	/^  defp extract_merger(options, key) when is_list(options) do$/;"	f
extract_migration_info	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp extract_migration_info(file) do$/;"	f
extract_path	deps/credo/lib/credo/cli/options.ex	/^  defp extract_path([], base_dir) do$/;"	f
extract_path	deps/credo/lib/credo/cli/options.ex	/^  defp extract_path([path | tail] = args, base_dir) do$/;"	f
extract_path	deps/plug/lib/plug/router.ex	/^  defp extract_path(path), do: path$/;"	f
extract_path	deps/plug/lib/plug/router.ex	/^  defp extract_path({:_, _, var}) when is_atom(var), do: "\/*_path"$/;"	f
extract_path_and_guards	deps/plug/lib/plug/router.ex	/^  defp extract_path_and_guards(path), do: {extract_path(path), true}$/;"	f
extract_path_and_guards	deps/plug/lib/plug/router.ex	/^  defp extract_path_and_guards({:when, _, [path, guards]}), do: {extract_path(path), guards}$/;"	f
extract_public_key	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp extract_public_key(rsa_private_key(modulus: m, publicExponent: e)) do$/;"	f
extract_start	deps/earmark/lib/earmark/parser.ex	/^  defp extract_start(%{bullet: bullet}) do$/;"	f
extract_title	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp extract_title(content) do$/;"	f
extract_token	deps/earmark/src/link_text_parser.erl	/^extract_token({_Token, _Line, Value}) -> {Value, Value}.$/;"	f	module:link_text_parser
extract_username_and_salute	deps/credo/lib/credo/check/warning/unused_regex_operation.ex	/^      def extract_username_and_salute(regex, string) do$/;"	f
extras	deps/ecto/mix.exs	/^  def extras() do$/;"	f
extras	deps/phoenix/mix.exs	/^  defp extras do$/;"	f
factory	deps/ex_machina/lib/ex_machina.ex	/^      def factory(factory_name), do: raise(UndefinedFactoryError, factory_name)$/;"	f
factory_accepting_attributes_defined?	deps/ex_machina/lib/ex_machina.ex	/^  defp factory_accepting_attributes_defined?(module, function_name) do$/;"	f
factory_without_attributes_defined?	deps/ex_machina/lib/ex_machina.ex	/^  defp factory_without_attributes_defined?(module, function_name) do$/;"	f
fail	deps/db_connection/lib/db_connection.ex	/^  defp fail(%DBConnection{pool_ref: pool_ref}) do$/;"	f
fail	deps/plug/lib/plug/ssl.ex	/^  defp fail(message) when is_binary(message) do$/;"	f
failing_function	deps/credo/lib/credo/check/readability/prefer_implicit_try.ex	/^      def failing_function(first) do$/;"	f
fastlane	deps/phoenix/lib/phoenix/channel/server.ex	/^  def fastlane(subscribers, from, %Broadcast{event: event} = msg) do$/;"	f
fastlane	deps/phoenix/lib/phoenix/channel/server.ex	/^  def fastlane(subscribers, from, msg) do$/;"	f
fastlane!	deps/phoenix/lib/phoenix/socket/serializers/v1_json_serializer.ex	/^  def fastlane!(%Broadcast{} = msg) do$/;"	f
fastlane!	deps/phoenix/lib/phoenix/socket/serializers/v2_json_serializer.ex	/^  def fastlane!(%Broadcast{} = msg) do$/;"	f
fastlane!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^    def fastlane!(%Broadcast{} = msg) do$/;"	f
fetch	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.presence/presence.ex	/^      def fetch(_topic, entries) do$/;"	f
fetch	deps/phoenix/lib/phoenix/presence.ex	/^      def fetch(_topic, presences) do$/;"	f
fetch	deps/phoenix/lib/phoenix/presence.ex	/^      def fetch(_topic, presences), do: presences$/;"	f
fetch	deps/phoenix/priv/templates/phx.gen.presence/presence.ex	/^      def fetch(_topic, entries) do$/;"	f
fetch	deps/plug/lib/plug/conn/unfetched.ex	/^  def fetch(%{aspect: aspect}, key) do$/;"	f
fetch	deps/postgrex/lib/postgrex/parameters.ex	/^  def fetch(ref) do$/;"	f
fetch	deps/postgrex/lib/postgrex/type_server.ex	/^  def fetch(server) do$/;"	f
fetch	deps/postgrex/lib/postgrex/types.ex	/^  def fetch(oid, {mod, table}) do$/;"	f
fetch_and_resolve_remote_schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp fetch_and_resolve_remote_schema(root, url) do$/;"	f
fetch_and_resolve_remote_schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp fetch_and_resolve_remote_schema(root, url)$/;"	f
fetch_assoc	deps/ecto/lib/ecto/query/planner.ex	/^  defp fetch_assoc(tag, take, assoc) do$/;"	f
fetch_body_params	deps/plug/lib/plug/debugger.ex	/^  defp fetch_body_params(conn), do: Plug.Parsers.call(conn, @parsers_opts)$/;"	f
fetch_by_ref	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  def fetch_by_ref(replicas, {name, vsn}) do$/;"	f
fetch_change	deps/ecto/lib/ecto/changeset.ex	/^  def fetch_change(%Changeset{changes: changes} = _changeset, key) when is_atom(key) do$/;"	f
fetch_change!	deps/ecto/lib/ecto/changeset.ex	/^  def fetch_change!(changeset, key) do$/;"	f
fetch_config	deps/phoenix/lib/phoenix/config.ex	/^  defp fetch_config(otp_app, module) do$/;"	f
fetch_context_app	deps/phoenix/lib/mix/phoenix.ex	/^  defp fetch_context_app(this_otp_app) do$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(%Conn{req_cookies: %Unfetched{}} = conn, opts) do$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(%Conn{} = conn, []) do$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(%Conn{} = conn, opts) do$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(conn, opts \\\\ [])$/;"	f
fetch_copy_out	deps/postgrex/lib/postgrex/protocol.ex	/^  defp fetch_copy_out(%{buffer: buffer} = s, %{mode: :savepoint} = status, query, max_rows) do$/;"	f
fetch_copy_out	deps/postgrex/lib/postgrex/protocol.ex	/^  defp fetch_copy_out(%{buffer: buffer} = s, %{mode: :transaction} = status, query, max_rows) do$/;"	f
fetch_docs	deps/ex_doc/lib/ex_doc/utils/code.ex	/^  def fetch_docs(module) when is_atom(module) do$/;"	f
fetch_docs	deps/ex_doc/lib/ex_doc/utils/code.ex	/^  def fetch_docs(path) when is_binary(path) do$/;"	f
fetch_docs_from_beam	deps/ex_doc/lib/ex_doc/utils/code.ex	/^  defp fetch_docs_from_beam(bin_or_path) do$/;"	f
fetch_docs_from_chunk	deps/ex_doc/lib/ex_doc/utils/code.ex	/^  defp fetch_docs_from_chunk(path) do$/;"	f
fetch_field	deps/ecto/lib/ecto/changeset.ex	/^  def fetch_field(%Changeset{changes: changes, data: data, types: types}, key) when is_atom(key) do$/;"	f
fetch_field!	deps/ecto/lib/ecto/changeset.ex	/^  def fetch_field!(changeset, key) do$/;"	f
fetch_flash	deps/phoenix/lib/phoenix/controller.ex	/^  def fetch_flash(conn, _opts \\\\ []) do$/;"	f
fetch_flash	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate fetch_flash(conn), to: Phoenix.Controller$/;"	d
fetch_fun_to_dispatch	deps/mox/lib/mox/server.ex	/^  def fetch_fun_to_dispatch(caller_pids, key) do$/;"	f
fetch_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetch_ids(structs, module, assoc, opts) do$/;"	f
fetch_lexer	deps/makeup/lib/makeup.ex	/^  defp fetch_lexer(options) do$/;"	f
fetch_lexer_by_extension	deps/makeup/lib/makeup/registry.ex	/^  def fetch_lexer_by_extension(name) do$/;"	f
fetch_lexer_by_extension!	deps/makeup/lib/makeup/registry.ex	/^  def fetch_lexer_by_extension!(name) do$/;"	f
fetch_lexer_by_name	deps/makeup/lib/makeup/registry.ex	/^  def fetch_lexer_by_name(name) do$/;"	f
fetch_lexer_by_name!	deps/makeup/lib/makeup/registry.ex	/^  def fetch_lexer_by_name!(name) do$/;"	f
fetch_query	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetch_query(ids, %{cardinality: card} = assoc, repo_name, query, prefix, related_key, take, opts) do$/;"	f
fetch_query	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetch_query(ids, assoc, _repo_name, query, _prefix, related_key, _take, _opts) when is_function(query, 1) do$/;"	f
fetch_query_params	deps/plug/lib/plug/conn.ex	/^  def fetch_query_params(%Conn{query_params: %Unfetched{}} = conn, opts) do$/;"	f
fetch_query_params	deps/plug/lib/plug/conn.ex	/^  def fetch_query_params(%Conn{} = conn, _opts) do$/;"	f
fetch_query_params	deps/plug/lib/plug/conn.ex	/^  def fetch_query_params(conn, opts \\\\ [])$/;"	f
fetch_remote_schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp fetch_remote_schema(url) do$/;"	f
fetch_session	deps/plug/lib/plug/conn.ex	/^  def fetch_session(%Conn{private: private} = conn, _opts) do$/;"	f
fetch_session	deps/plug/lib/plug/conn.ex	/^  def fetch_session(conn, opts \\\\ [])$/;"	f
fetch_session	deps/plug/lib/plug/session.ex	/^  defp fetch_session(config) do$/;"	f
fetch_string_or_atom_field	deps/ecto/lib/ecto/schema/loader.ex	/^  defp fetch_string_or_atom_field(map, field) when is_atom(field) do$/;"	f
fetch_type_info	deps/postgrex/lib/postgrex/protocol.ex	/^  defp fetch_type_info([], _, infos, reloads) do$/;"	f
fetch_type_info	deps/postgrex/lib/postgrex/protocol.ex	/^  defp fetch_type_info([oid | oids], types, infos, reloads) do$/;"	f
fetch_type_info	deps/postgrex/lib/postgrex/protocol.ex	/^  defp fetch_type_info(oids, types, infos \\\\ [], reloads \\\\ MapSet.new())$/;"	f
fetch_type_info	deps/postgrex/lib/postgrex/types.ex	/^  defp fetch_type_info(oid, mod, table) do$/;"	f
fetch_uri	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp fetch_uri(%{host: host, scheme: scheme, query_string: query_string, port: port, request_path: request_path}) do$/;"	f
fetch_x_headers	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp fetch_x_headers(conn) do$/;"	f
fetched_records_to_tuple_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetched_records_to_tuple_ids([%{} | _] = entries, _assoc, {0, key}),$/;"	f
fetched_records_to_tuple_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetched_records_to_tuple_ids([], _assoc, _related_key),$/;"	f
fetched_records_to_tuple_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetched_records_to_tuple_ids([entry | _], assoc, _),$/;"	f
fetched_records_to_tuple_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp fetched_records_to_tuple_ids([{_, %{}} | _] = entries, _assoc, _related_key),$/;"	f
field	deps/ecto/lib/ecto/query.ex	/^  defp field(ix, field) when is_integer(ix) and is_atom(field) do$/;"	f
field	deps/ecto/lib/ecto/query/api.ex	/^  def field(source, field), do: doc! [source, field]$/;"	f
field	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp field(ix, field) when is_integer(ix) and is_atom(field) do$/;"	f
field	deps/ecto/lib/ecto/schema.ex	/^  defmacro field(name, type \\\\ :string, opts \\\\ []) do$/;"	a
field source	deps/ecto/integration_test/cases/repo.exs	/^    test "field source" do$/;"	t
field!	deps/ecto/lib/ecto/association.ex	/^  defp field!(op, struct, field) do$/;"	f
field!	deps/ecto/lib/ecto/query/builder.ex	/^  def field!(atom) when is_atom(atom),$/;"	f
field!	deps/ecto/lib/ecto/query/builder.ex	/^  def field!(other),$/;"	f
field!	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def field!(_kind, field) when is_atom(field),$/;"	f
field!	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def field!(kind, other) do$/;"	f
field!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def field!(_kind, field) when is_atom(field) do$/;"	f
field!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def field!(kind, other) do$/;"	f
field!	deps/ecto/lib/ecto/query/builder/update.ex	/^  def field!(field) when is_atom(field), do: field$/;"	f
field!	deps/ecto/lib/ecto/query/builder/update.ex	/^  def field!(other) do$/;"	f
field_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp field_source(_, field) do$/;"	f
field_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp field_source({source, schema, _}, field) when is_binary(source) and schema != nil do$/;"	f
field_source!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp field_source!(nil, field) do$/;"	f
field_source!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp field_source!(schema, field) do$/;"	f
field_source_and_type	deps/ecto/lib/ecto/schema/loader.ex	/^  defp field_source_and_type({field, type}) do$/;"	f
field_source_and_type	deps/ecto/lib/ecto/schema/loader.ex	/^  defp field_source_and_type({field, {:source, source, type}}) do$/;"	f
field_type!	deps/ecto/lib/ecto/query/planner.ex	/^  defp field_type!(_kind, _query, _expr, type) do$/;"	f
field_type!	deps/ecto/lib/ecto/query/planner.ex	/^  defp field_type!(kind, query, expr, {composite, {ix, field}}) when is_integer(ix) do$/;"	f
field_type!	deps/ecto/lib/ecto/query/planner.ex	/^  defp field_type!(kind, query, expr, {ix, field}) when is_integer(ix) do$/;"	f
fields!	deps/ecto/lib/ecto/query/builder/select.ex	/^  def fields!(tag, fields) do$/;"	f
fields_to_encode	deps/jason/lib/encoder.ex	/^  defp fields_to_encode(struct, opts) do$/;"	f
fields_to_sources	deps/ecto/lib/ecto/repo/schema.ex	/^  defp fields_to_sources(fields, dumper) do$/;"	f
fields_to_sources	deps/ecto/lib/ecto/repo/schema.ex	/^  defp fields_to_sources(fields, nil) do$/;"	f
file_count	deps/phoenix/lib/mix/phoenix/context.ex	/^  def file_count(%Context{dir: dir}) do$/;"	f
file_encoding	deps/plug/lib/plug/static.ex	/^  defp file_encoding(conn, path, [_range], _gzip?, _brotli?) do$/;"	f
file_encoding	deps/plug/lib/plug/static.ex	/^  defp file_encoding(conn, path, _range, gzip?, brotli?) do$/;"	f
filename_to_module	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp filename_to_module(name) do$/;"	f
filename_to_title	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def filename_to_title(input) do$/;"	f
files	deps/credo/lib/credo/cli/command/info/info_command.ex	/^  defp files(exec) do$/;"	f
files_from_data	deps/credo/lib/credo/config_file.ex	/^  defp files_from_data(data, dir) do$/;"	f
files_to_add	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp files_to_add(path) do$/;"	f
files_to_be_generated	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def files_to_be_generated(%Context{schema: schema}) do$/;"	f
files_to_be_generated	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def files_to_be_generated(%Schema{} = schema) do$/;"	f
files_to_be_generated	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  def files_to_be_generated(%Context{schema: schema, context_app: context_app}) do$/;"	f
files_to_be_generated	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  def files_to_be_generated(%Context{schema: schema, context_app: context_app}) do$/;"	f
files_to_be_generated	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def files_to_be_generated(%Schema{} = schema) do$/;"	f
files_to_clean	deps/phoenix/lib/phoenix/digester.ex	/^  defp files_to_clean(manifest, max_age, keep) do$/;"	f
filter	deps/ecto/lib/ecto/query/api.ex	/^  def filter(value, filter), do: doc! [value, filter]$/;"	f
filter	deps/ecto/lib/ecto/query/window_api.ex	/^  def filter(value, filter), do: doc! [value, filter]$/;"	f
filter!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def filter!(_kind, _query, bool, _binding, file, line) when is_boolean(bool) do$/;"	f
filter!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def filter!(_kind, query, %Ecto.Query.DynamicExpr{} = dynamic, _binding, _file, _line) do$/;"	f
filter!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def filter!(kind, _query, kw, binding, file, line) when is_list(kw) do$/;"	f
filter!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def filter!(kind, _query, other, _binding, _file, _line) do$/;"	f
filter!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def filter!(kind, op, query, expr, binding, file, line) do$/;"	f
filter_and_reraise	deps/ecto/lib/ecto/query/planner.ex	/^  defp filter_and_reraise(exception, stacktrace) do$/;"	f
filter_and_reraise	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp filter_and_reraise(exception, stacktrace) do$/;"	f
filter_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_checks(checks, patterns) do$/;"	f
filter_clocks	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  defp filter_clocks(clockset, {node, clock}) do$/;"	f
filter_digested_files	deps/phoenix/lib/phoenix/digester.ex	/^  defp filter_digested_files(output_path) do$/;"	f
filter_empty	deps/ecto/lib/ecto/changeset/relation.ex	/^  def filter_empty(changes) do$/;"	f
filter_files	deps/phoenix/lib/phoenix/digester.ex	/^  defp filter_files(input_path) do$/;"	f
filter_ignore_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_ignore_checks(_checks, []), do: []$/;"	f
filter_ignore_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_ignore_checks(_checks, nil), do: []$/;"	f
filter_ignore_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_ignore_checks(checks, patterns), do: filter_checks(checks, patterns)$/;"	f
filter_issue	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp filter_issue(%Issue{line_no: a, column: b}, a, b), do: true$/;"	f
filter_issue	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp filter_issue(%Issue{line_no: a}, a, _), do: true$/;"	f
filter_issue	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp filter_issue(_, _, _), do: false$/;"	f
filter_issues	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp filter_issues(issues, line_no, column) do$/;"	f
filter_issues	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp filter_issues(issues, line_no, nil) do$/;"	f
filter_issues_if_called_more_often_than	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp filter_issues_if_called_more_often_than(issues, count) do$/;"	f
filter_issues_if_nested_deeper_than	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp filter_issues_if_nested_deeper_than(issues, count) do$/;"	f
filter_legacy_warnings	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp filter_legacy_warnings(warnings, filterer) do$/;"	f
filter_legacy_warnings	deps/dialyxir/lib/dialyxir/project.ex	/^  def filter_legacy_warnings(output) do$/;"	f
filter_legacy_warnings	deps/dialyxir/lib/dialyxir/project.ex	/^  def filter_legacy_warnings(output, ""), do: output$/;"	f
filter_legacy_warnings	deps/dialyxir/lib/dialyxir/project.ex	/^  def filter_legacy_warnings(output, nil), do: output$/;"	f
filter_legacy_warnings	deps/dialyxir/lib/dialyxir/project.ex	/^  def filter_legacy_warnings(output, pattern) do$/;"	f
filter_list	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def filter_list(:module, nodes) do$/;"	f
filter_list	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def filter_list(type, nodes) do$/;"	f
filter_map	deps/dialyxir/lib/dialyxir/project.ex	/^  def filter_map(args) do$/;"	f
filter_namespaces	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp filter_namespaces(dependencies, namespaces) do$/;"	f
filter_only_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_only_checks(checks, []), do: checks$/;"	f
filter_only_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_only_checks(checks, nil), do: checks$/;"	f
filter_only_checks	deps/credo/lib/credo/execution.ex	/^  defp filter_only_checks(checks, patterns), do: filter_checks(checks, patterns)$/;"	f
filter_replicas	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def filter_replicas(c, replicas), do: Map.take(c, replicas)$/;"	f
filter_unused_calls	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp filter_unused_calls(ast, candidates) do$/;"	f
filter_values	deps/phoenix/lib/phoenix/logger.ex	/^  def filter_values(values, params \\\\ Application.get_env(:phoenix, :filter_parameters, []))$/;"	f
filter_values	deps/phoenix/lib/phoenix/logger.ex	/^  def filter_values(values, params), do: discard_values(values, params)$/;"	f
filter_values	deps/phoenix/lib/phoenix/logger.ex	/^  def filter_values(values, {:discard, params}), do: discard_values(values, params)$/;"	f
filter_values	deps/phoenix/lib/phoenix/logger.ex	/^  def filter_values(values, {:keep, params}), do: keep_values(values, params)$/;"	f
filter_warning	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp filter_warning(filterer, warning = {_, {file, line}, {warning_type, _}}, filter_map) do$/;"	f
filter_warning?	deps/dialyxir/lib/dialyxir/project.ex	/^  def filter_warning?({file, warning, line, short_description}, filter_map = %FilterMap{}) do$/;"	f
filter_warnings	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp filter_warnings(warnings, filterer, filter_map) do$/;"	f
filters	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def filters(filter_map) do$/;"	f
finalize_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp finalize_cache(_query, _operation, :nocache) do$/;"	f
finalize_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp finalize_cache(query, operation, cache) do$/;"	f
find	deps/credo/lib/credo/sources.ex	/^  def find(%Credo.Execution{files: files}) do$/;"	f
find	deps/credo/lib/credo/sources.ex	/^  def find(%Credo.Execution{read_from_stdin: true, files: %{included: [filename]}}) do$/;"	f
find	deps/credo/lib/credo/sources.ex	/^  def find(%Credo.Execution{read_from_stdin: true}) do$/;"	f
find	deps/credo/lib/credo/sources.ex	/^  def find(exec)$/;"	f
find	deps/credo/lib/credo/sources.ex	/^  def find(path) when is_binary(path) do$/;"	f
find	deps/credo/lib/credo/sources.ex	/^  def find(paths) when is_list(paths) do$/;"	f
find	deps/postgrex/lib/postgrex/type_module.ex	/^      def find(type_info, formats) do$/;"	f
find	deps/postgrex/lib/postgrex/type_module.ex	/^  defp find(config) do$/;"	f
find	deps/postgrex/lib/postgrex/types.ex	/^  defp find(type_info, formats, module, table) do$/;"	f
find_a_good_time	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^      def find_a_good_time do$/;"	f
find_alias_groups	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp find_alias_groups($/;"	f
find_alias_groups	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp find_alias_groups(ast, aliases), do: {ast, aliases}$/;"	f
find_aliases	deps/credo/lib/credo/code/module.ex	/^  defp find_aliases($/;"	f
find_aliases	deps/credo/lib/credo/code/module.ex	/^  defp find_aliases(ast, aliases) do$/;"	f
find_aliases	deps/credo/lib/credo/code/module.ex	/^  defp find_aliases({:alias, _, [{:__aliases__, _, mod_list}]} = ast, aliases) do$/;"	f
find_all	deps/phoenix/lib/phoenix/template.ex	/^  def find_all(root, pattern \\\\ @default_pattern) do$/;"	f
find_and_append_issues	deps/credo/lib/credo/check/consistency/collector.ex	/^      def find_and_append_issues(source_files, exec, params, issue_formatter)$/;"	f
find_and_set_in_source_file	deps/credo/lib/credo/check/config_comment_finder.ex	/^  def find_and_set_in_source_file(source_file) do$/;"	f
find_assignments	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_assignments(_), do: nil$/;"	f
find_assignments	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_assignments({:=, _, [lhs, _rhs]}) do$/;"	f
find_attribute	deps/credo/lib/credo/code/module.ex	/^  defp find_attribute(ast, tuple, _name) do$/;"	f
find_attribute	deps/credo/lib/credo/code/module.ex	/^  defp find_attribute({:@, _meta, arguments} = ast, tuple, attribute_name) do$/;"	f
find_caller	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp find_caller([caller | _], _checkouts, _mode) do$/;"	f
find_caller	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp find_caller(callers, checkouts, :manual) do$/;"	f
find_candidates	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp find_candidates($/;"	f
find_candidates	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp find_candidates(ast, acc, _, _) do$/;"	f
find_child	deps/credo/lib/credo/code.ex	/^  defp find_child(parent, acc, child), do: {parent, acc || parent == child}$/;"	f
find_clause	deps/postgrex/lib/postgrex/type_module.ex	/^  defp find_clause(extension, _opts, key, value, format) do$/;"	f
find_clause	deps/postgrex/lib/postgrex/type_module.ex	/^  defp find_clause(extension, opts, key, value, :super_binary) do$/;"	f
find_clauses	deps/postgrex/lib/postgrex/type_module.ex	/^  defp find_clauses({extension, {opts, matching, format}}) do$/;"	f
find_config_comment	deps/credo/lib/credo/check/config_comment_finder.ex	/^  defp find_config_comment({line_no, string}, memo) do$/;"	f
find_config_comments	deps/credo/lib/credo/check/config_comment_finder.ex	/^  defp find_config_comments(source_file) do$/;"	f
find_definitions	deps/credo/lib/credo/check/readability/max_line_length.ex	/^    defp find_definitions({unquote(op), meta, arguments} = ast, definitions)$/;"	f
find_definitions	deps/credo/lib/credo/check/readability/max_line_length.ex	/^  defp find_definitions(ast, definitions) do$/;"	f
find_dependent_modules	deps/credo/lib/credo/code/module.ex	/^  defp find_dependent_modules($/;"	f
find_dependent_modules	deps/credo/lib/credo/code/module.ex	/^  defp find_dependent_modules(ast, modules) do$/;"	f
find_dependent_modules	deps/credo/lib/credo/code/module.ex	/^  defp find_dependent_modules({:__aliases__, _, mod_list} = ast, modules) do$/;"	f
find_depth	deps/credo/lib/credo/check/refactor/nesting.ex	/^    defp find_depth($/;"	f
find_depth	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp find_depth(_, nest_list, line_no, trigger) do$/;"	f
find_depth	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp find_depth(arguments, nest_list, line_no, trigger)$/;"	f
find_depth	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp find_depth({atom, _meta, arguments}, nest_list, line_no, trigger)$/;"	f
find_footnote_links	deps/earmark/lib/earmark/parser.ex	/^  defp find_footnote_links(%Block.Para{lines: lines, lnb: lnb}) do$/;"	f
find_footnote_links	deps/earmark/lib/earmark/parser.ex	/^  defp find_footnote_links(%{blocks: blocks}) do$/;"	f
find_footnote_links	deps/earmark/lib/earmark/parser.ex	/^  defp find_footnote_links(_), do: []$/;"	f
find_format	deps/phoenix/lib/phoenix/controller.ex	/^  defp find_format("*\/*", accepted),                   do: Enum.fetch!(accepted, 0)$/;"	f
find_format	deps/phoenix/lib/phoenix/controller.ex	/^  defp find_format(_type_range, []),                   do: nil$/;"	f
find_format	deps/phoenix/lib/phoenix/controller.ex	/^  defp find_format(exts, accepted) when is_list(exts), do: Enum.find(exts, &(&1 in accepted))$/;"	f
find_format	deps/phoenix/lib/phoenix/controller.ex	/^  defp find_format(type_range, [h|t]) do$/;"	f
find_formatter	deps/ex_doc/lib/ex_doc.ex	/^  defp find_formatter("ExDoc.Formatter." <> _ = name) do$/;"	f
find_formatter	deps/ex_doc/lib/ex_doc.ex	/^  defp find_formatter(modname) when is_atom(modname), do: modname$/;"	f
find_formatter	deps/ex_doc/lib/ex_doc.ex	/^  defp find_formatter(name) do$/;"	f
find_function_line	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp find_function_line(%{abst_code: abst_code}, {name, arity}) do$/;"	f
find_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp find_interpolations($/;"	f
find_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp find_interpolations(_value, _source) do$/;"	f
find_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp find_interpolations(list, source) when is_list(list) do$/;"	f
find_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp find_interpolations({{_line_no, _col_start2, _}, _list} = token, source) do$/;"	f
find_issue	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp find_issue(line_no, column1, location, number, issue_meta) do$/;"	f
find_issue	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp find_issue(fun_name, arguments, meta, issue_meta) do$/;"	f
find_issues	deps/credo/lib/credo/check/consistency/collector.ex	/^  def find_issues(source_files, collector, params, issue_formatter) do$/;"	f
find_issues	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp find_issues($/;"	f
find_issues	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp find_issues(ast, issues, _, _, _, _, _) do$/;"	f
find_issues	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp find_issues({:@, _, _}, issues, _, _, _, _, _) do$/;"	f
find_issues	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp find_issues($/;"	f
find_issues	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp find_issues([], acc, _issue_meta) do$/;"	f
find_issues	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp find_issues([], acc, _issue_meta) do$/;"	f
find_issues	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp find_issues([{_, {line_no, _, _}, trigger} | t], acc, issue_meta) do$/;"	f
find_issues	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^    defp find_issues($/;"	f
find_issues	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp find_issues(_token, issues, _issue_meta) do$/;"	f
find_issues	deps/credo/lib/credo/check/readability/space_after_commas.ex	/^  defp find_issues(issue_meta, {line_no, line}) do$/;"	f
find_issues	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  defp find_issues(ast, issues, _), do: {ast, issues}$/;"	f
find_issues	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  defp find_issues({:raise, meta, _arguments} = ast, issues, issue_meta) do$/;"	f
find_keyword	deps/credo/lib/credo/code/block.ex	/^  defp find_keyword(_, _), do: nil$/;"	f
find_keyword	deps/credo/lib/credo/code/block.ex	/^  defp find_keyword(list, keyword) when is_list(list) do$/;"	f
find_line_at	deps/credo/lib/credo/source_file.ex	/^  defp find_line_at(_, _), do: nil$/;"	f
find_line_at	deps/credo/lib/credo/source_file.ex	/^  defp find_line_at({line_no, text}, line_no), do: text$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/collector.ex	/^        def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/collector.ex	/^      def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/space_in_parentheses/collector.ex	/^  def find_locations_not_matching(expected, source_file, allow_empty_enums) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/tabs_or_spaces/collector.ex	/^  def find_locations_not_matching(expected, source_file) do$/;"	f
find_locations_not_matching	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  def find_locations_not_matching(expected, source_file) do$/;"	f
find_markdown_processor	deps/ex_doc/lib/ex_doc/markdown.ex	/^  defp find_markdown_processor do$/;"	f
find_max_line_no	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^  defp find_max_line_no(ast, max_line_no) do$/;"	f
find_max_line_no	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^  defp find_max_line_no({_, meta, _} = ast, max_line_no) do$/;"	f
find_module_line	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp find_module_line(%{abst_code: abst_code, name: name}) do$/;"	f
find_pipe_issues	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp find_pipe_issues(pipe, issue_meta) do$/;"	f
find_plts	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp find_plts([], acc, fun) do$/;"	f
find_plts	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp find_plts([{plt, apps} | plts], acc, fun) do$/;"	f
find_prev_current_next_token	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp find_prev_current_next_token(tokens, location_tuple) do$/;"	f
find_related_code	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp find_related_code(source_file, line_no) do$/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^    defp find_scope($/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope($/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope(_value, _line, _name_list, _last_op) do$/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope(list, line, name_list, last_op) when is_list(list) do$/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope({:__block__, _meta, arguments}, line, name_list, last_op) do$/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope({:do, arguments}, line, name_list, last_op) do$/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope({:else, arguments}, line, name_list, last_op) do$/;"	f
find_scope	deps/credo/lib/credo/code/scope.ex	/^  defp find_scope({_atom, meta, arguments}, line, name_list, last_op) do$/;"	f
find_source_expr	deps/ecto/lib/ecto/query/planner.ex	/^  defp find_source_expr(query, 0) do$/;"	f
find_source_expr	deps/ecto/lib/ecto/query/planner.ex	/^  defp find_source_expr(query, ix) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/max_line_length.ex	/^  defp find_specs(ast, specs) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/max_line_length.ex	/^  defp find_specs({:spec, meta, arguments} = ast, specs) when is_list(arguments) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs($/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs(ast, issues) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs({:def, _, [{name, _, args}, _]} = ast, [:impl | specs]) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs({:def, _, [{name, _, nil}, _]} = ast, [:impl | specs]) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs({:def, meta, [{:when, _, def_ast} | _]}, [:impl | specs]) do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs({:impl, _, [impl]} = ast, specs) when impl != false do$/;"	f
find_specs	deps/credo/lib/credo/check/readability/specs.ex	/^  defp find_specs({:spec, _, [{_, _, [{name, _, args} | _]}]} = ast, specs)$/;"	f
find_tag_in_line	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp find_tag_in_line({line, index}, regex) do$/;"	f
find_tokens_in_ast	deps/credo/lib/credo/code/token_ast_correlation.ex	/^    def find_tokens_in_ast(_wanted_token, _ast) do$/;"	f
find_tokens_in_ast	deps/credo/lib/credo/code/token_ast_correlation.ex	/^    def find_tokens_in_ast(wanted_token, ast) do$/;"	f
find_unused_calls	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  def find_unused_calls(%SourceFile{} = source_file, _params, required_mod_list, fun_names) do$/;"	f
find_var!	deps/ecto/lib/ecto/query/builder.ex	/^  def find_var!(var, vars) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables(_), do: nil$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables(list) when is_list(list) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables(map) when is_map(map) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables(tuple) when is_tuple(tuple) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables({:"::", _, [lhs | _rhs]}) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables({:"::", _, [{:^, _, _} | _]}) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables({:=, _, args}) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables({:^, _, _}) do$/;"	f
find_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp find_variables({variable_name, meta, nil}) when is_list(meta) do$/;"	f
first	deps/credo/lib/credo/code/name.ex	/^  def first(mod_list) when is_list(mod_list) do$/;"	f
first	deps/credo/lib/credo/code/name.ex	/^  def first(name) when is_atom(name) do$/;"	f
first	deps/credo/lib/credo/code/name.ex	/^  def first(name) when is_binary(name) do$/;"	f
first	deps/ecto/integration_test/cases/repo.exs	/^  test "first, last and one(!)" do$/;"	t
first	deps/ecto/lib/ecto/query.ex	/^  def first(%Ecto.Query{} = query, nil) do$/;"	f
first	deps/ecto/lib/ecto/query.ex	/^  def first(queryable, key), do: first(order_by(queryable, ^key), nil)$/;"	f
first	deps/ecto/lib/ecto/query.ex	/^  def first(queryable, nil), do: first(Ecto.Queryable.to_query(queryable), nil)$/;"	f
first	deps/ecto/lib/ecto/query.ex	/^  def first(queryable, order_by \\\\ nil)$/;"	f
first_part	deps/plug/src/plug_multipart.erl	/^first_part(Boundary, Headers) ->$/;"	f	module:plug_multipart
first_socket!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defp first_socket!(endpoint) do$/;"	f
first_value	deps/ecto/lib/ecto/query/window_api.ex	/^  def first_value(value), do: doc! [value]$/;"	f
first_x_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp first_x_csrf_token(conn) do$/;"	f
fix_float_exp	deps/decimal/lib/decimal.ex	/^  defp fix_float_exp([?e | rest], [?0 | [?. | result]]) do$/;"	f
fix_float_exp	deps/decimal/lib/decimal.ex	/^  defp fix_float_exp([], result), do: :lists.reverse(result)$/;"	f
fix_float_exp	deps/decimal/lib/decimal.ex	/^  defp fix_float_exp([digit | rest], result) do$/;"	f
fix_float_exp	deps/decimal/lib/decimal.ex	/^  defp fix_float_exp(digits) do$/;"	f
fixture	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^  def fixture(:<%= schema.singular %>) do$/;"	f
fixture	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^  def fixture(:<%= schema.singular %>) do$/;"	f
fixture	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^  def fixture(:<%= schema.singular %>) do$/;"	f
fixture	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^  def fixture(:<%= schema.singular %>) do$/;"	f
fixup	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup(binary) when is_binary(binary) do$/;"	f
fixup	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup(list) when is_list(list) do$/;"	f
fixup	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup({_, _, _, _}) do$/;"	f
fixup	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup({_, _, _}) do$/;"	f
fixup	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup({tag, attrs, ast, _meta}) when is_binary(tag) do$/;"	f
fixup	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup({tag, attrs, ast}) when is_binary(tag) do$/;"	f
fixup_attr	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup_attr({name, value}) do$/;"	f
fixup_list	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup_list([], acc) do$/;"	f
fixup_list	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup_list([head | tail], acc) do$/;"	f
fixup_tag	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp fixup_tag(tag) do$/;"	f
flash_key	deps/phoenix/lib/phoenix/controller.ex	/^  defp flash_key(atom) when is_atom(atom), do: Atom.to_string(atom)$/;"	f
flash_key	deps/phoenix/lib/phoenix/controller.ex	/^  defp flash_key(binary) when is_binary(binary), do: binary$/;"	f
float	deps/jason/lib/encode.ex	/^  def float(float) do$/;"	f
float_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp float_decode(%Decimal{} = decimal), do: {:ok, Decimal.to_float(decimal)}$/;"	f
float_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp float_decode(x), do: {:ok, x}$/;"	f
flush	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def flush do$/;"	f
flush_backoff	deps/connection/lib/connection.ex	/^  defp flush_backoff(backoff) do$/;"	f
flush_timer	deps/db_connection/lib/db_connection/connection.ex	/^  defp flush_timer(timer) do$/;"	f
flushed_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp flushed_close(s, %{mode: :savepoint} = status, query) do$/;"	f
flushed_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp flushed_close(s, %{mode: :transaction} = status, query) do$/;"	f
fn_parameters	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp fn_parameters([[{:when, _, params}], _]) when is_list(params) do$/;"	f
fn_parameters	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp fn_parameters([params, tuple]) when is_list(params) and is_tuple(tuple) do$/;"	f
fn_parameters	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp fn_parameters(params) when is_list(params) do$/;"	f
foldl	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp foldl(:"$end_of_table", acc, _func), do: acc$/;"	f
foldl	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp foldl(table, initial, ms, func) do$/;"	f
foldl	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp foldl({objects, cont}, acc, func) do$/;"	f
fonts	deps/ex_doc/lib/ex_doc/formatter/html/assets.ex	/^  def fonts do$/;"	f
foo	deps/credo/lib/credo/check/readability/specs.ex	/^      def foo(a), do: a > 0$/;"	f
foo	deps/credo/lib/credo/check/readability/specs.ex	/^      def foo(a, b), do: a > b$/;"	f
footnote_def?	deps/earmark/lib/earmark/parser.ex	/^  defp footnote_def?(%Block.FnDef{}), do: true$/;"	f
footnote_def?	deps/earmark/lib/earmark/parser.ex	/^  defp footnote_def?(_block), do: false$/;"	f
footnote_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp footnote_link(context, _match, id) do$/;"	f
for	deps/credo/lib/credo/issue_meta.ex	/^  def for(source_file, check_params) do$/;"	f
force_change	deps/ecto/lib/ecto/changeset.ex	/^  def force_change(%Changeset{types: nil}, _key, _value) do$/;"	f
force_change	deps/ecto/lib/ecto/changeset.ex	/^  def force_change(%Changeset{types: types} = changeset, key, value) do$/;"	f
force_ssl	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def force_ssl(%{halted: true} = conn, _socket, _endpoint, _opts) do$/;"	f
force_ssl	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def force_ssl(conn, socket, endpoint, opts) do$/;"	f
force_ssl_config	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp force_ssl_config(socket, endpoint, opts) do$/;"	f
force_update	deps/ecto/lib/ecto/changeset.ex	/^  defp force_update(changeset, opts) do$/;"	f
foreground_color	deps/credo/lib/credo/cli/output.ex	/^  def foreground_color(:cyan), do: :black$/;"	f
foreground_color	deps/credo/lib/credo/cli/output.ex	/^  def foreground_color(:yellow), do: :black$/;"	f
foreground_color	deps/credo/lib/credo/cli/output.ex	/^  def foreground_color(_), do: :white$/;"	f
foreground_color	deps/credo/lib/credo/cli/output.ex	/^  def foreground_color(background_color)$/;"	f
foreign key constraint	deps/ecto/integration_test/cases/repo.exs	/^  test "foreign key constraint" do$/;"	t
foreign_key_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def foreign_key_constraint(changeset, field, opts \\\\ []) do$/;"	f
form_data	deps/plug/src/plug_multipart.erl	/^form_data(Headers) ->$/;"	f	module:plug_multipart
form_expected	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  defp form_expected([type]) do$/;"	f
form_expected	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  defp form_expected(_expected_args) do$/;"	f
form_expected_without_opaque	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^  defp form_expected_without_opaque([{position, type, type_string}]) do$/;"	f
form_expected_without_opaque	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^  defp form_expected_without_opaque(expected_triples) do$/;"	f
form_fa	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp form_fa(nil), do: nil$/;"	f
form_fa	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp form_fa({name, arity}), do: Atom.to_string(name) <> "\/" <> Integer.to_string(arity)$/;"	f
form_position_string	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^  def form_position_string(arg_positions) do$/;"	f
form_positions	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  defp form_positions(arg_positions = [_]) do$/;"	f
form_positions	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  defp form_positions(arg_positions) do$/;"	f
form_positions	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  defp form_positions(arg_positions = [_]) do$/;"	f
form_positions	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  defp form_positions(arg_positions) do$/;"	f
format	deps/bunt/lib/bunt.ex	/^  def format(list) when is_list(list) do$/;"	f
format	deps/bunt/lib/bunt.ex	/^  def format(nil), do: format("")$/;"	f
format	deps/bunt/lib/bunt.ex	/^  def format(text) when is_binary(text), do: text$/;"	f
format	deps/bunt/lib/bunt.ex	/^  def format, do: format("")$/;"	f
format	deps/bunt/lib/bunt_ansi.ex	/^  def format(chardata, emit \\\\ enabled?()) when is_boolean(emit) do$/;"	f
format	deps/ecto_sql/lib/mix/tasks/ecto.migrations.ex	/^  defp format(content, pad) do$/;"	f
format	deps/erlex/lib/erlex.ex	/^  defp format(code) do$/;"	f
format	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^  def format(errors) do$/;"	f
format	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  def format(router, endpoint \\\\ nil) do$/;"	f
format	deps/postgrex/lib/postgrex/binary_extension.ex	/^      def format(_), do: :binary$/;"	f
format	deps/postgrex/lib/postgrex/extension.ex	/^        def format(_state), do: :text$/;"	f
format	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def format(_),$/;"	f
format	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def format(_),$/;"	f
format	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def format(_),$/;"	f
format	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def format(_), do: :super_binary$/;"	f
format	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def format(_),$/;"	f
format	deps/postgrex/lib/postgrex/extensions/void_text.ex	/^  def format(_), do: :text$/;"	f
format	deps/postgrex/lib/postgrex/messages.ex	/^  defp format(:binary), do: 1$/;"	f
format	deps/postgrex/lib/postgrex/messages.ex	/^  defp format(:text), do: 0$/;"	f
format	lib/ex_json_schema/validator/error/boruta_formatter.ex	/^  def format(%Error.Pattern{expected: expected}, path) do$/;"	f
format	lib/ex_json_schema/validator/error/boruta_formatter.ex	/^  def format(%Error.Required{missing: [missing]}, path) do$/;"	f
format	lib/ex_json_schema/validator/error/boruta_formatter.ex	/^  def format(%Error.Required{missing: missing}, path) do$/;"	f
format	lib/ex_json_schema/validator/error/boruta_formatter.ex	/^  def format(%Error.Type{actual: actual, expected: expected}, path) do$/;"	f
format	lib/ex_json_schema/validator/error/boruta_formatter.ex	/^  def format(errors) do$/;"	f
format_and_filter	deps/dialyxir/lib/dialyxir/formatter.ex	/^  def format_and_filter(warnings, filterer, filter_map_args, formatter) do$/;"	f
format_as_binary	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def format_as_binary(tokens, opts \\\\ []) do$/;"	f
format_as_iolist	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def format_as_iolist(tokens, opts \\\\ []) do$/;"	f
format_datetime	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp format_datetime do$/;"	f
format_decode_opts	deps/jason/lib/jason.ex	/^  defp format_decode_opts(opts) do$/;"	f
format_def	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp format_def(kind, {name, args, guards, body}) do$/;"	f
format_defs	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp format_defs(defs, inline, inline?) do$/;"	f
format_encode_opts	deps/jason/lib/jason.ex	/^  defp format_encode_opts(opts) do$/;"	f
format_encoder	deps/phoenix/lib/phoenix/template.ex	/^  def format_encoder(template_name) when is_binary(template_name) do$/;"	f
format_endpoint	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_endpoint(endpoint, widths) do$/;"	f
format_endpoint	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_endpoint(nil, _), do: ""$/;"	f
format_entry_point	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp format_entry_point(:def, name) do$/;"	f
format_entry_point	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp format_entry_point(:defp, name) do$/;"	f
format_entry_point	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp format_entry_point(nil, _name) do$/;"	f
format_error	deps/earmark/src/link_text_lexer.erl	/^format_error({illegal,S}) -> ["illegal characters ",io_lib:write_string(S)];$/;"	f	module:link_text_lexer
format_error	deps/earmark/src/link_text_lexer.erl	/^format_error({user,S}) -> S.$/;"	f	module:link_text_lexer
format_error	deps/earmark/src/link_text_parser.erl	/^format_error(Message) ->$/;"	f	module:link_text_parser
format_error	deps/earmark/src/string_lexer.erl	/^format_error({illegal,S}) -> ["illegal characters ",io_lib:write_string(S)];$/;"	f	module:string_lexer
format_error	deps/earmark/src/string_lexer.erl	/^format_error({user,S}) -> S.$/;"	f	module:string_lexer
format_error	deps/erlex/src/lexer.erl	/^format_error({illegal,S}) -> ["illegal characters ",io_lib:write_string(S)];$/;"	f	module:lexer
format_error	deps/erlex/src/lexer.erl	/^format_error({user,S}) -> S.$/;"	f	module:lexer
format_error	deps/erlex/src/parser.erl	/^format_error(Message) ->$/;"	f	module:parser
format_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp format_errors(:ok, _error_formatter), do: :ok$/;"	f
format_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp format_errors({:error, _} = error, _error_formatter), do: error$/;"	f
format_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp format_errors({:error, errors}, error_formatter) when is_list(errors) do$/;"	f
format_explanation	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def format_explanation(line, outer_color) do$/;"	f
format_explanation_text	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def format_explanation_text("    " <> line) do$/;"	f
format_explanation_text	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def format_explanation_text(line) do$/;"	f
format_fragment	deps/bunt/lib/bunt_ansi.ex	/^  def format_fragment(chardata, emit \\\\ enabled?()) when is_boolean(emit) do$/;"	f
format_in_seconds	deps/credo/lib/credo/cli/output/summary.ex	/^  defp format_in_seconds(t) do$/;"	f
format_inner_as_binary	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def format_inner_as_binary(tokens, opts) do$/;"	f
format_inner_as_iolist	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def format_inner_as_iolist(tokens, opts) do$/;"	f
format_issue	deps/credo/lib/credo/check.ex	/^      def format_issue(issue_meta, opts) do$/;"	f
format_issue	deps/credo/lib/credo/check.ex	/^  def format_issue(issue_meta, opts, issue_category, issue_base_priority, check) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/app_call.ex	/^  def format_long([module, function, arity, culprit, expected_type, actual_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^  def format_long([args, arg_positions, fail_reason, signature_args, signature_return, contract]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/binary_construction.ex	/^  def format_long([culprit, size, segment, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^  def format_long([$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^  def format_long([module, function, arity]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  def format_long([module, function, args, arg_positions, expected_args]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^  def format_long([module, function, args, expected_triples]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^  def format_long([behaviour, function, arity, position, success_type, callback_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^  def format_long([behaviour]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^  def format_long([behaviour, function, arity]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^  def format_long([behaviour, function, arity, position, success_type, callback_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^  def format_long([behaviour, function, arity, success_type, callback_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^  def format_long([behaviour, function, arity, fail_type, success_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/contract_diff.ex	/^  def format_long([module, function, arity, contract, signature]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/contract_range.ex	/^  def format_long([contract, module, function, arg_strings, line, contract_return]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^  def format_long([module, function, arity, contract, signature]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^  def format_long([module, function, arity, contract, signature]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^  def format_long([module, function, arity, type, signature_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^  def format_long([type1, op, type2]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^  def format_long([module, function, arity, extra_ranges, signature_range]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  def format_long([arg_positions, args, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  def format_long([args, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^  def format_long([op, type, arity]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^  def format_long([]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^  def format_long([arg, infix, guard]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^  def format_long([guard, args]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^  def format_long([pattern, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/improper_list_construction.ex	/^  def format_long([tl_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^  def format_long([module, function, arity, signature]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^  def format_long([map, key]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/missing_range.ex	/^  def format_long([module, function, arity, extra_ranges, contract_range]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^  def format_long([arg1, infix, arg2]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^  def format_long([guard, args]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^  def format_long([type | name]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/opaque_equality.ex	/^  def format_long([type, _op, opaque_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/opaque_guard.ex	/^  def format_long([guard, args]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^  def format_long([pattern, opaque_type, opaque_term]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/opaque_nonequality.ex	/^  def format_long([type, _op, opaque_type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/opaque_type_test.ex	/^  def format_long([function, opaque]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^  def format_long([module, function, arity]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^  def format_long([pattern, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^  def format_long([pattern, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/race_condition.ex	/^  def format_long([module, function, args, reason]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^  def format_long([name, field, type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^  def format_long([types, name]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/record_matching.ex	/^  def format_long([string, name]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/unknown_behaviour.ex	/^  def format_long(behaviour) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/unknown_function.ex	/^  def format_long({module, function, arity}) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^  def format_long({module, function, arity}) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^  def format_long([type]) do$/;"	f
format_long	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^  def format_long([function, arity]) do$/;"	f
format_longpoll	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_longpoll({_path, Phoenix.LiveReloader.Socket, _opts}, _), do: ""$/;"	f
format_longpoll	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_longpoll({path, module, opts}, widths) do$/;"	f
format_message	deps/earmark/lib/earmark/message.ex	/^  defp format_message filename, {type, line, text} do$/;"	f
format_mod	deps/credo/lib/credo/cli/output/format_delegator.ex	/^              defp format_mod(%Execution{format: unquote(to_string(format))}) do$/;"	f
format_mod	deps/credo/lib/credo/cli/output/format_delegator.ex	/^              defp format_mod(_) do$/;"	f
format_name	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    defp format_name("date-time"), do: "ISO 8601 date-time"$/;"	f
format_name	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    defp format_name("ipv4"), do: "IPv4 address"$/;"	f
format_name	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    defp format_name("ipv6"), do: "IPv6 address"$/;"	f
format_name	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    defp format_name(expected), do: expected$/;"	f
format_operation	deps/ecto/lib/ecto/multi.ex	/^  defp format_operation(other),$/;"	f
format_operation	deps/ecto/lib/ecto/multi.ex	/^  defp format_operation({name, {:changeset, changeset, opts}}),$/;"	f
format_output	deps/phoenix/lib/phoenix/code_reloader.ex	/^  defp format_output(output) do$/;"	f
format_process	deps/mox/lib/mox.ex	/^  defp format_process do$/;"	f
format_reason	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp format_reason(:error, reason, stack), do: {reason, stack}$/;"	f
format_reason	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp format_reason(:exit, reason, _), do: reason$/;"	f
format_reason	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp format_reason(:throw, reason, stack), do: {{:nocatch, reason}, stack}$/;"	f
format_recorded	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp format_recorded({entry_point, name, defs, inline, inline?}) do$/;"	f
format_route	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_route(route, column_widths) do$/;"	f
format_sequence	deps/bunt/lib/bunt_ansi.ex	/^      defp format_sequence(unquote(alias_name)) do$/;"	f
format_sequence	deps/bunt/lib/bunt_ansi.ex	/^      defp format_sequence(unquote(name)) do$/;"	f
format_sequence	deps/bunt/lib/bunt_ansi.ex	/^  defp format_sequence(other) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/app_call.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^  def format_short([args | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/binary_construction.ex	/^  def format_short([culprit | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^  def format_short([_behaviour, function, arity | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^  def format_short([_behaviour, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^  def format_short([_behaviour, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^  def format_short([_behaviour, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/contract_diff.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/contract_range.ex	/^  def format_short([_, _, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  def format_short([_arg_positions, args, type]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  def format_short([args, _type]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^  def format_short([_, _, arity]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^  def format_short(_) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^  def format_short([pattern, _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/improper_list_construction.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^  def format_short([_map, key]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/missing_range.ex	/^  def format_short([module, function, arity | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^  def format_short(_) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/opaque_equality.ex	/^  def format_short([_type, _op, opaque_type]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/opaque_guard.ex	/^  def format_short([guard | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^  def format_short([_pattern, type | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/opaque_nonequality.ex	/^  def format_short([type, _op, opaque_type]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/opaque_type_test.ex	/^  def format_short([function, _opaque]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^  def format_short([_module, function, arity]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^  def format_short([_pattern, type]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^  def format_short([pattern, _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/race_condition.ex	/^  def format_short([_module, function | _]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^  def format_short([_types, name]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^  def format_short([name, _field, _type]) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/record_matching.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/unknown_behaviour.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/unknown_function.ex	/^  def format_short({module, function, arity}) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^  def format_short({module, function, arity}) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^  def format_short(_) do$/;"	f
format_short	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^  def format_short(args), do: format_long(args)$/;"	f
format_status	deps/connection/lib/connection.ex	/^  def format_status(:normal, [pdict, %{mod: mod, mod_state: mod_state}]) do$/;"	f
format_status	deps/connection/lib/connection.ex	/^  def format_status(:terminate, [pdict, %{mod: mod, mod_state: mod_state}]) do$/;"	f
format_status	deps/db_connection/lib/db_connection/connection.ex	/^  def format_status(info, [_, %{client: :closed, mod: mod}]) do$/;"	f
format_status	deps/db_connection/lib/db_connection/connection.ex	/^  def format_status(info, [pdict, %{mod: mod, state: state}]) do$/;"	f
format_time	deps/credo/lib/credo/execution/execution_timing.ex	/^  defp format_time(time) do$/;"	f
format_time	deps/credo/lib/credo/execution/task.ex	/^  defp format_time(time) do$/;"	f
format_time_spent	deps/credo/lib/credo/cli/output/summary.ex	/^  defp format_time_spent(check_count, time_load, time_run) do$/;"	f
format_token	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def format_token({tag, meta, value}, highlight_tag) do$/;"	f
format_unnecessary_skips	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp format_unnecessary_skips(_) do$/;"	f
format_unnecessary_skips	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp format_unnecessary_skips(filter_map = %FilterMap{list_unused_filters?: true}) do$/;"	f
format_warning	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp format_warning(dialyzer_warning = {_tag, {file, line}, message}, :dialyxir) do$/;"	f
format_warning	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp format_warning(warning, :dialyzer) do$/;"	f
format_warning	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp format_warning(warning, :raw) do$/;"	f
format_warning	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp format_warning({_tag, {file, line}, message}, :short) do$/;"	f
format_websocket	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_websocket({_path, Phoenix.LiveReloader.Socket, _opts}, _), do: ""$/;"	f
format_websocket	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp format_websocket({path, module, opts}, widths) do$/;"	f
format_when_names	deps/erlex/lib/erlex.ex	/^  defp format_when_names(item, when_names) do$/;"	f
formatted_diff	deps/plug/lib/plug/logger.ex	/^  defp formatted_diff(diff) when diff > 1000, do: [diff |> div(1000) |> Integer.to_string(), "ms"]$/;"	f
formatted_diff	deps/plug/lib/plug/logger.ex	/^  defp formatted_diff(diff), do: [Integer.to_string(diff), "µs"]$/;"	f
formatted_time	deps/dialyxir/lib/dialyxir/formatter.ex	/^  def formatted_time(duration_us) do$/;"	f
forward	deps/phoenix/lib/phoenix/router.ex	/^  defmacro forward(path, plug, plug_opts \\\\ [], router_opts \\\\ []) do$/;"	a
forward	deps/plug/lib/plug.ex	/^  def forward(%Plug.Conn{path_info: path, script_name: script} = conn, new_path, target, opts) do$/;"	f
forward	deps/plug/lib/plug/router.ex	/^  defmacro forward(path, options) when is_binary(path) do$/;"	a
forward	deps/plug/lib/plug/router/utils.ex	/^  defdelegate forward(conn, new_path, target, opts), to: Plug$/;"	d
forward_path_segments	deps/phoenix/lib/phoenix/router/route.ex	/^  def forward_path_segments(path, plug, phoenix_forwards) do$/;"	f
fragment	deps/ecto/lib/ecto/query/api.ex	/^  def fragment(fragments), do: doc! [fragments]$/;"	f
fragment	deps/ecto_sql/lib/ecto/migration.ex	/^  def fragment(expr) when is_binary(expr) do$/;"	f
fragment	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp fragment(:ex_doc, kind, name, arity) do$/;"	f
fragment	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp fragment(:otp, kind, name, arity) do$/;"	f
fragment array types	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "fragment array types" do$/;"	t
fragment!	deps/ecto/lib/ecto/query/builder.ex	/^  def fragment!(kw) do$/;"	f
fragment_pieces	deps/ecto/lib/ecto/query/builder.ex	/^  def fragment_pieces(frag, args) do$/;"	f
fragmented schemaless types	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "fragmented schemaless types" do$/;"	t
fragmented types	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "fragmented types" do$/;"	t
frame	deps/ecto/integration_test/cases/windows.exs	/^  test "frame" do$/;"	t
frames	deps/plug/lib/plug/debugger.ex	/^  defp frames(stacktrace, opts) do$/;"	f
friendly_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def friendly_style, do: HTML.FriendlyStyle.style()$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defmacro from(expr, kw \\\\ []) do$/;"	a
from	deps/ecto/lib/ecto/query.ex	/^  defp from([], _env, _count_bind, quoted, _binds) do$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defp from([{:on, _value}|_], _env, _count_bind, _quoted, _binds) do$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defp from([{join, expr}|t], env, count_bind, quoted, binds) when join in @joins do$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defp from([{key, _value}|_], _env, _count_bind, _quoted, _binds) do$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defp from([{key, _value}|_], _env, _count_bind, _quoted, _binds) when key in @from_join_opts do$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defp from([{type, expr}|t], env, count_bind, quoted, binds) when type in @binds do$/;"	f
from	deps/ecto/lib/ecto/query.ex	/^  defp from([{type, expr}|t], env, count_bind, quoted, binds) when type in @no_binds do$/;"	f
from	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "from: subqueries with aggregates" do$/;"	t
from	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "from: subqueries with map and select expression" do$/;"	t
from	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "from: subqueries with map update and select expression" do$/;"	t
from	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "from: subqueries with map update on virtual field and select expression" do$/;"	t
from	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "from: subqueries with parameters" do$/;"	t
from	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "from: subqueries with select source" do$/;"	t
from	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp from(%{from: %{source: source, hints: hints}} = query, sources) do$/;"	f
from	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp from(%{from: %{hints: [_ | _]}} = query, _sources) do$/;"	f
from	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp from(%{from: %{source: source}} = query, sources) do$/;"	f
from	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp from(%{from: %{source: source, hints: hints}} = query, sources) do$/;"	f
from_chunk	deps/ex_doc/lib/ex_doc/refs.ex	/^  def from_chunk(module, result) do$/;"	f
from_data	deps/credo/lib/credo/config_file.ex	/^  defp from_data(data, dir, config_name) do$/;"	f
from_env	deps/phoenix/lib/phoenix/config.ex	/^  def from_env(otp_app, module, defaults) do$/;"	f
from_error	lib/boruta/oauth/responses/introspect.ex	/^  def from_error(_), do: %IntrospectResponse{active: false}$/;"	f
from_exs	deps/credo/lib/credo/config_file.ex	/^  defp from_exs(dir, config_name, {_origin, filename, exs_string}, safe) do$/;"	f
from_file	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def from_file(ignore_file, list_unused_filters?, ignore_exit_status?) do$/;"	f
from_float	deps/decimal/lib/decimal.ex	/^  def from_float(float) when is_float(float) do$/;"	f
from_map!	deps/phoenix/lib/phoenix/socket/message.ex	/^  def from_map!(map) when is_map(map) do$/;"	f
from_now	deps/ecto/integration_test/cases/interval.exs	/^  test "from_now" do$/;"	t
from_now	deps/ecto/lib/ecto/query/api.ex	/^  def from_now(count, interval), do: doc! [count, interval]$/;"	f
from_path	deps/mime/lib/mime/application.ex	/^      def from_path(path) do$/;"	f
from_set_to_sent	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp from_set_to_sent(%Conn{state: :set} = conn), do: Conn.send_resp(conn)$/;"	f
from_set_to_sent	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp from_set_to_sent(conn), do: conn$/;"	f
from_sources	deps/ecto/lib/ecto/query/inspect.ex	/^  defp from_sources(%Ecto.SubQuery{query: query}), do: from_sources(query.from.source)$/;"	f
from_sources	deps/ecto/lib/ecto/query/inspect.ex	/^  defp from_sources(nil), do: "query"$/;"	f
from_sources	deps/ecto/lib/ecto/query/inspect.ex	/^  defp from_sources({source, schema}), do: schema || source$/;"	f
from_string	deps/makeup/lib/makeup/styles/html.ex	/^    def from_string(str) do$/;"	f
from_token	lib/boruta/oauth/responses/authorize.ex	/^  def from_token(%Token{$/;"	f
from_token	lib/boruta/oauth/responses/introspect.ex	/^  def from_token(%Token{$/;"	f
from_token	lib/boruta/oauth/responses/token.ex	/^  def from_token(%Token{$/;"	f
fruity_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def fruity_style, do: HTML.FruityStyle.style()$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full(mod_list) when is_list(mod_list) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full(name) when is_atom(name) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full(name) when is_binary(name) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full({:@, _, [{name, _, nil}]}) when is_atom(name) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full({:__aliases__, _, mod_list}) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full({name, _, arguments}) when is_atom(name) and is_list(arguments) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full({name, _, nil}) when is_atom(name) do$/;"	f
full	deps/credo/lib/credo/code/name.ex	/^  def full({{:., _, [{:__aliases__, _, mod_list}, name]}, _, _}) do$/;"	f
full_name	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp full_name(dep, aliases) do$/;"	f
fully_expand	deps/ecto/lib/ecto/query/builder/dynamic.ex	/^  def fully_expand(query, %{file: file, line: line, binding: binding} = dynamic) do$/;"	f
fun	deps/credo/lib/credo/check/design/tag_fixme.ex	/^      defp fun do$/;"	f
fun	deps/credo/lib/credo/check/design/tag_todo.ex	/^      defp fun do$/;"	f
function_count	deps/phoenix/lib/mix/phoenix/context.ex	/^  def function_count(%Context{file: file}) do$/;"	f
function_groups	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp function_groups(groups, docs) do$/;"	f
function_name	deps/ex_machina/lib/ex_machina/strategy.ex	/^      def function_name, do: unquote(function_name)$/;"	f
gc_name	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def gc_name(pubsub_server, shard) do$/;"	f
general	deps/ecto/lib/mix/tasks/ecto.ex	/^  defp general() do$/;"	f
general	deps/phoenix/lib/mix/tasks/phx.ex	/^  defp general() do$/;"	f
generate	deps/ecto/lib/ecto/uuid.ex	/^  def generate() do$/;"	f
generate	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def generate do$/;"	f
generate	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp generate(args, opts, generator) do$/;"	f
generate	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  def generate(secret, salt, iterations, length, digest, cache) do$/;"	f
generate	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  def generate(secret, salt, opts \\\\ []) do$/;"	f
generate	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp generate(_fun, _salt, _iterations, max_length, _block_index, acc, length)$/;"	f
generate	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp generate(fun, salt, iterations, max_length, block_index, acc, length) do$/;"	f
generate	deps/puid/lib/puid.ex	/^            def generate do$/;"	f
generate	deps/puid/lib/puid.ex	/^            def generate,$/;"	f
generate	deps/puid/lib/puid.ex	/^          def generate,$/;"	f
generate	lib/boruta/utils/token_generator.ex	/^  def generate(_, _) do$/;"	f
generate_assets	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def generate_assets(config, assets_dir, defaults) do$/;"	f
generate_build	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_build(files, build) do$/;"	f
generate_compile_time_dependency	deps/mox/lib/mox.ex	/^  defp generate_compile_time_dependency(behaviours) do$/;"	f
generate_content	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_content(config, nodes, uuid, datetime, static_files) do$/;"	f
generate_cover	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def generate_cover(_dir, %{cover: nil}) do$/;"	f
generate_cover	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def generate_cover(dir, %{output: output, cover: cover}) do$/;"	f
generate_doc_header	deps/mox/lib/mox.ex	/^  defp generate_doc_header(moduledoc) do$/;"	f
generate_docs	deps/ex_doc/lib/ex_doc.ex	/^  def generate_docs(project, vsn, options)$/;"	f
generate_epub	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_epub(output) do$/;"	f
generate_extras	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_extras(config) do$/;"	f
generate_extras	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_extras(nodes_map, extras, config) do$/;"	f
generate_image	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_image(output, dir, image, name) do$/;"	f
generate_index	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_index(config) do$/;"	f
generate_js_docs	deps/phoenix/mix.exs	/^  def generate_js_docs(_) do$/;"	f
generate_letters	deps/ecto/lib/ecto/query/inspect.ex	/^  defp generate_letters(sources) do$/;"	f
generate_list	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_list(config, nodes) do$/;"	f
generate_list	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_list(nodes, nodes_map, config) do$/;"	f
generate_logo	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def generate_logo(_dir, %{logo: nil}) do$/;"	f
generate_logo	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def generate_logo(dir, %{output: output, logo: logo}) do$/;"	f
generate_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp generate_manifest(files) do$/;"	f
generate_mock_funs	deps/mox/lib/mox.ex	/^  defp generate_mock_funs(behaviours, callbacks_to_skip) do$/;"	f
generate_module_page	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_module_page(module_node, config) do$/;"	f
generate_module_page	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_module_page(module_node, nodes_map, config) do$/;"	f
generate_names	deps/ecto/lib/ecto/query/inspect.ex	/^  defp generate_names(letters) do$/;"	f
generate_nav	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_nav(config, nodes) do$/;"	f
generate_new_digests	deps/phoenix/lib/phoenix/digester.ex	/^  defp generate_new_digests(files) do$/;"	f
generate_node	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp generate_node(module, docs_chunk, config) do$/;"	f
generate_not_found	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_not_found(nodes_map, config) do$/;"	f
generate_plug_builder_ref	deps/plug/lib/plug/builder.ex	/^  defp generate_plug_builder_ref(module) do$/;"	f
generate_redirect	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_redirect(filename, config, redirect_to) do$/;"	f
generate_request_id	deps/plug/lib/plug/request_id.ex	/^  defp generate_request_id do$/;"	f
generate_rsa_key	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp generate_rsa_key(keysize, e) do$/;"	f
generate_search	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_search(nodes_map, config) do$/;"	f
generate_search_items	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_search_items(linked, extras, config) do$/;"	f
generate_sidebar_items	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp generate_sidebar_items(nodes_map, extras, config) do$/;"	f
generate_title	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp generate_title(config) do$/;"	f
generate_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp generate_token do$/;"	f
generated_var	deps/jason/lib/encoder.ex	/^  defp generated_var(name, context) do$/;"	f
generated_var	deps/jason/lib/helpers.ex	/^  defp generated_var(name, context) do$/;"	f
generator_paths	deps/phoenix/lib/mix/phoenix.ex	/^  def generator_paths do$/;"	f
get	deps/credo/lib/credo/check/params.ex	/^  def get(params, field, default_params \\\\ []) when is_list(params) do$/;"	f
get	deps/credo/lib/credo/execution/execution_config_files.ex	/^  def get(%Execution{config_files_pid: pid}) do$/;"	f
get	deps/credo/lib/credo/execution/execution_issues.ex	/^  def get(%Execution{issues_pid: pid}, %SourceFile{filename: filename}) do$/;"	f
get	deps/credo/lib/credo/execution/execution_source_files.ex	/^  def get(%Execution{source_files_pid: pid}) do$/;"	f
get	deps/credo/lib/credo/service/ets_table_helper.ex	/^      def get(filename) do$/;"	f
get	deps/ecto/integration_test/cases/repo.exs	/^  test "get(!) with binary_id" do$/;"	t
get	deps/ecto/integration_test/cases/repo.exs	/^  test "get(!) with custom source" do$/;"	t
get	deps/ecto/integration_test/cases/repo.exs	/^  test "get(!)" do$/;"	t
get	deps/ecto/lib/ecto/repo.ex	/^        def get(queryable, id, opts \\\\ []) do$/;"	f
get	deps/ecto/lib/ecto/repo/queryable.ex	/^  def get(name, queryable, id, opts) do$/;"	f
get	deps/plug/lib/plug/conn/unfetched.ex	/^  def get(%{aspect: aspect}, key, _value) do$/;"	f
get	deps/plug/lib/plug/router.ex	/^  defmacro get(path, options, contents \\\\ []) do$/;"	a
get	deps/plug/lib/plug/session/cookie.ex	/^  def get(conn, cookie, opts) do$/;"	f
get	deps/plug/lib/plug/session/ets.ex	/^  def get(_conn, sid, table) do$/;"	f
get	deps/plug/lib/plug/session/store.ex	/^  def get(store) do$/;"	f
get!	deps/ecto/lib/ecto/repo.ex	/^        def get!(queryable, id, opts \\\\ []) do$/;"	f
get!	deps/ecto/lib/ecto/repo/queryable.ex	/^  def get!(name, queryable, id, opts) do$/;"	f
get_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def get_<%= schema.singular %>!(id), do: raise "TODO"$/;"	f
get_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def get_<%= schema.singular %>!(id), do: Repo.get!(<%= inspect schema.alias %>, id)$/;"	f
get_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "get_<%= schema.singular %>!\/1 returns the <%= schema.singular %> with given id" do$/;"	t
get_	deps/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def get_<%= schema.singular %>!(id), do: raise "TODO"$/;"	f
get_	deps/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def get_<%= schema.singular %>!(id), do: Repo.get!(<%= inspect schema.alias %>, id)$/;"	f
get_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "get_<%= schema.singular %>!\/1 returns the <%= schema.singular %> with given id" do$/;"	t
get_abstract_code	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_abstract_code(module) do$/;"	f
get_and_update	deps/plug/lib/plug/conn/unfetched.ex	/^  def get_and_update(%{aspect: aspect}, key, _fun) do$/;"	f
get_app	deps/plug/lib/plug/debugger.ex	/^  defp get_app(module) do$/;"	f
get_assign	deps/credo/lib/credo/execution.ex	/^  def get_assign(exec, name, default \\\\ nil) do$/;"	f
get_assoc	deps/ecto/lib/ecto/changeset.ex	/^  defp get_assoc(%{types: types}, assoc) do$/;"	f
get_attribute	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp get_attribute(module, attr) do$/;"	f
get_by	deps/ecto/integration_test/cases/repo.exs	/^  test "get_by(!)" do$/;"	t
get_by	deps/ecto/lib/ecto/repo.ex	/^        def get_by(queryable, clauses, opts \\\\ []) do$/;"	f
get_by	deps/ecto/lib/ecto/repo/queryable.ex	/^  def get_by(name, queryable, clauses, opts) do$/;"	f
get_by	lib/boruta.ex	/^    def get_by(id: id) do$/;"	f
get_by	lib/boruta.ex	/^    def get_by(username: username, password: password) do$/;"	f
get_by	lib/boruta/adapters/ecto/access_tokens.ex	/^  def get_by(refresh_token: refresh_token) do$/;"	f
get_by	lib/boruta/adapters/ecto/access_tokens.ex	/^  def get_by(value: value) do$/;"	f
get_by	lib/boruta/adapters/ecto/clients.ex	/^  def get_by(id: id, redirect_uri: redirect_uri) do$/;"	f
get_by	lib/boruta/adapters/ecto/clients.ex	/^  def get_by(id: id, secret: secret) do$/;"	f
get_by	lib/boruta/adapters/ecto/codes.ex	/^  def get_by(value: value, redirect_uri: redirect_uri) do$/;"	f
get_by!	deps/ecto/lib/ecto/repo.ex	/^        def get_by!(queryable, clauses, opts \\\\ []) do$/;"	f
get_by!	deps/ecto/lib/ecto/repo/queryable.ex	/^  def get_by!(name, queryable, clauses, opts) do$/;"	f
get_by_key	deps/phoenix/lib/phoenix/presence.ex	/^      def get_by_key(%Phoenix.Socket{topic: topic}, key), do: get_by_key(topic, key)$/;"	f
get_by_key	deps/phoenix/lib/phoenix/presence.ex	/^      def get_by_key(topic, key) do$/;"	f
get_by_key	deps/phoenix/lib/phoenix/presence.ex	/^  def get_by_key(module, topic, key) do$/;"	f
get_by_key	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def get_by_key(tracker_name, topic, key) do$/;"	f
get_by_key	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def get_by_key(server_pid, topic, key) do$/;"	f
get_by_key	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def get_by_key(%State{values: values} = state, topic, key) do$/;"	f
get_by_pid	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def get_by_pid(%State{pids: pids, values: values}, pid) do$/;"	f
get_by_pid	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def get_by_pid(%State{values: values}, pid, topic, key) do$/;"	f
get_by_topic	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def get_by_topic(%State{values: values} = state, topic) do$/;"	f
get_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  defp get_bytes(size, bits, rand_bytes) do$/;"	f
get_callback	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_callback(callback, source, optional_callbacks, module_data) do$/;"	f
get_callbacks	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_callbacks(%{type: :behaviour} = module_data, source) do$/;"	f
get_callbacks	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_callbacks(_, _), do: []$/;"	f
get_change	deps/ecto/lib/ecto/changeset.ex	/^  def get_change(%Changeset{changes: changes} = _changeset, key, default \\\\ nil) when is_atom(key) do$/;"	f
get_changed	deps/ecto/lib/ecto/changeset.ex	/^  defp get_changed(data, types, old_changes, new_changes, errors, valid?) do$/;"	f
get_clauses	deps/plug/lib/plug/debugger.ex	/^  defp get_clauses(module, fun, args) do$/;"	f
get_client!	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate get_client!(id), to: Boruta.Ecto.Admin.Clients$/;"	d
get_client!	lib/boruta/adapters/ecto/admin/clients.ex	/^  def get_client!(id) do$/;"	f
get_command	deps/credo/lib/credo/execution.ex	/^  def get_command(exec, name) do$/;"	f
get_command_name	deps/credo/lib/credo/execution.ex	/^  def get_command_name(exec) do$/;"	f
get_config_file	deps/credo/lib/credo/config_builder.ex	/^  defp get_config_file(exec, %Options{} = options) do$/;"	f
get_config_files	deps/credo/lib/credo/execution.ex	/^  def get_config_files(exec) do$/;"	f
get_conn	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp get_conn(pool) do$/;"	f
get_conn_or_pool	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp get_conn_or_pool(pool) do$/;"	f
get_context	deps/decimal/lib/decimal.ex	/^  def get_context do$/;"	f
get_context	deps/plug/lib/plug/debugger.ex	/^  defp get_context(_app1, _app2), do: :all$/;"	f
get_context	deps/plug/lib/plug/debugger.ex	/^  defp get_context(app, app) when app != nil, do: :app$/;"	f
get_csrf_token	deps/phoenix/lib/phoenix/controller.ex	/^  defdelegate get_csrf_token(), to: Plug.CSRFProtection$/;"	d
get_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  def get_csrf_token do$/;"	f
get_csrf_token_for	deps/plug/lib/plug/csrf_protection.ex	/^  def get_csrf_token_for(%URI{host: host}) do$/;"	f
get_csrf_token_for	deps/plug/lib/plug/csrf_protection.ex	/^  def get_csrf_token_for(%URI{host: nil}) do$/;"	f
get_csrf_token_for	deps/plug/lib/plug/csrf_protection.ex	/^  def get_csrf_token_for(url) when is_binary(url) do$/;"	f
get_defaults	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def get_defaults(%{defaults: defaults}) do$/;"	f
get_defaults	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def get_defaults(_) do$/;"	f
get_defaults	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_defaults(_name, _arity, 0), do: []$/;"	f
get_defaults	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_defaults(name, arity, defaults) do$/;"	f
get_dependencies	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp get_dependencies(ast, dependency_namespaces) do$/;"	f
get_deps	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp get_deps do$/;"	f
get_dir_paths	deps/credo/lib/credo/config_file.ex	/^  defp get_dir_paths(dirs), do: do_get_dir_paths(dirs, [])$/;"	f
get_disposition_type	deps/phoenix/lib/phoenix/controller.ex	/^  defp get_disposition_type(:attachment), do: "attachment"$/;"	f
get_disposition_type	deps/phoenix/lib/phoenix/controller.ex	/^  defp get_disposition_type(:inline), do: "inline"$/;"	f
get_disposition_type	deps/phoenix/lib/phoenix/controller.ex	/^  defp get_disposition_type(other), do: raise ArgumentError, "expected :disposition to be :attachment or :inline, got: #{inspect(other)}"$/;"	f
get_doc	deps/plug/lib/plug/debugger.ex	/^  defp get_doc(module, fun, arity, app) do$/;"	f
get_docs	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_docs(%{type: type, docs: docs} = module_data, source, config) do$/;"	f
get_docs_opts	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp get_docs_opts(config) do$/;"	f
get_dynamic_repo	deps/ecto/lib/ecto/repo.ex	/^      def get_dynamic_repo() do$/;"	f
get_editor	deps/plug/lib/plug/debugger.ex	/^  defp get_editor(file, line, editor) do$/;"	f
get_endpoint_key_base	deps/phoenix/lib/phoenix/token.ex	/^  defp get_endpoint_key_base(endpoint) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({_module, :__FILE__, 1, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({_module, :__MODULE__, 1, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({fun, arity, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({module, :__MODULE__, 0, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({module, fun, args, location}) when is_list(args) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({module, fun, arity, location}) do$/;"	f
get_env	deps/ecto/lib/ecto/query/builder.ex	/^  defp get_env(env), do: env$/;"	f
get_env	deps/ecto/lib/ecto/query/builder.ex	/^  defp get_env({env, _}), do: env$/;"	f
get_error_details	deps/phoenix/lib/phoenix/code_reloader.ex	/^  defp get_error_details(output) do$/;"	f
get_extension_registry	deps/makeup/lib/makeup/registry.ex	/^  defp get_extension_registry() do$/;"	f
get_field	deps/ecto/lib/ecto/changeset.ex	/^  def get_field(%Changeset{changes: changes, data: data, types: types}, key, default \\\\ nil) do$/;"	f
get_field_source	deps/ecto/lib/ecto/changeset.ex	/^  defp get_field_source(%{data: %{__struct__: schema}}, field) when is_atom(schema),$/;"	f
get_field_source	deps/ecto/lib/ecto/changeset.ex	/^  defp get_field_source(%{}, field),$/;"	f
get_filename_from_args	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp get_filename_from_args(exec) do$/;"	f
get_first_config_line	deps/ecto/lib/mix/tasks/ecto.gen.repo.ex	/^  defp get_first_config_line(false), do: "use Mix.Config"$/;"	f
get_first_config_line	deps/ecto/lib/mix/tasks/ecto.gen.repo.ex	/^  defp get_first_config_line(true), do: "import Config"$/;"	f
get_flash	deps/phoenix/lib/phoenix/controller.ex	/^  def get_flash(conn) do$/;"	f
get_flash	deps/phoenix/lib/phoenix/controller.ex	/^  def get_flash(conn, key) do$/;"	f
get_flash	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate get_flash(conn), to: Phoenix.Controller$/;"	d
get_flash	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate get_flash(conn, key), to: Phoenix.Controller$/;"	d
get_footnote_numbers	deps/earmark/lib/earmark/parser.ex	/^  def get_footnote_numbers(refs, footnotes, options) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call([:erlang, :binary_to_atom], [_, _]) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call([:erlang, :list_to_atom], [_]) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call([{:__aliases__, _, [:List]}, :to_atom], [_]) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call([{:__aliases__, _, [:Module]}, :concat], [_, _]) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call([{:__aliases__, _, [:Module]}, :concat], [_]) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call([{:__aliases__, _, [:String]}, :to_atom], [_]) do$/;"	f
get_forbidden_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp get_forbidden_call(_, _) do$/;"	f
get_format	deps/phoenix/lib/phoenix/controller.ex	/^  def get_format(conn) do$/;"	f
get_formatters	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp get_formatters(options) do$/;"	f
get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def get_fragment(root = %Root{}, [:root | path] = ref) do$/;"	f
get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def get_fragment(root = %Root{}, [url | path] = ref) when is_binary(url) do$/;"	f
get_fragment	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def get_fragment(root = %Root{}, path) when is_binary(path) do$/;"	f
get_fragment!	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def get_fragment!(schema, ref) do$/;"	f
get_from_adapter	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp get_from_adapter(conn, op, default) do$/;"	f
get_function	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_function(function, source, module_data, groups_for_functions) do$/;"	f
get_given_cli_switch	deps/credo/lib/credo/execution.ex	/^  def get_given_cli_switch(exec, switch_name) do$/;"	f
get_header	deps/plug/lib/plug/parsers/multipart.ex	/^  defp get_header(headers, key) do$/;"	f
get_http_protocol	deps/plug/lib/plug/adapters/test/conn.ex	/^  def get_http_protocol(payload) do$/;"	f
get_http_protocol	deps/plug/lib/plug/conn.ex	/^  def get_http_protocol(%Conn{adapter: {adapter, payload}}) do$/;"	f
get_impls	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_impls(module) do$/;"	f
get_issues	deps/credo/lib/credo/execution.ex	/^  def get_issues(exec) do$/;"	f
get_issues	deps/credo/lib/credo/execution.ex	/^  def get_issues(exec, filename) do$/;"	f
get_ix!	deps/ecto/lib/ecto/query/planner.ex	/^  defp get_ix!({:&, _, [ix]} = expr, query) do$/;"	f
get_ix!	deps/ecto/lib/ecto/query/planner.ex	/^  defp get_ix!({:as, meta, [as]}, query) do$/;"	f
get_ix!	deps/ecto/lib/ecto/query/planner.ex	/^  defp get_ix!({:parent_as, meta, [as]}, query) do$/;"	f
get_key_base	deps/phoenix/lib/phoenix/token.ex	/^  defp get_key_base(%Phoenix.Socket{} = socket),$/;"	f
get_key_base	deps/phoenix/lib/phoenix/token.ex	/^  defp get_key_base(%Plug.Conn{} = conn),$/;"	f
get_key_base	deps/phoenix/lib/phoenix/token.ex	/^  defp get_key_base(endpoint) when is_atom(endpoint),$/;"	f
get_key_base	deps/phoenix/lib/phoenix/token.ex	/^  defp get_key_base(string) when is_binary(string) and byte_size(string) >= 20,$/;"	f
get_lexer_by_extension	deps/makeup/lib/makeup/registry.ex	/^  def get_lexer_by_extension(name, default \\\\ nil) do$/;"	f
get_lexer_by_name	deps/makeup/lib/makeup/registry.ex	/^  def get_lexer_by_name(name, default \\\\ nil) do$/;"	f
get_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp get_line(source, line_no) do$/;"	f
get_mapper	deps/earmark/lib/earmark/options.ex	/^  def get_mapper(options) do$/;"	f
get_markdown_processor	deps/ex_doc/lib/ex_doc/markdown.ex	/^  def get_markdown_processor do$/;"	f
get_members	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  defp get_members(server_name) do$/;"	f
get_members	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  defp get_members(server_name, node_name) do$/;"	f
get_messages	deps/earmark/lib/earmark/message.ex	/^  def get_messages(%Context{options: %{messages: messages}}), do: messages$/;"	f
get_messages	deps/earmark/lib/earmark/message.ex	/^  def get_messages(%Options{messages: messages}),             do: messages$/;"	f
get_messages	deps/earmark/lib/earmark/message.ex	/^  def get_messages(container)$/;"	f
get_meta	deps/ecto/lib/ecto.ex	/^  def get_meta(struct, :context),$/;"	f
get_meta	deps/ecto/lib/ecto.ex	/^  def get_meta(struct, :prefix),$/;"	f
get_meta	deps/ecto/lib/ecto.ex	/^  def get_meta(struct, :source),$/;"	f
get_meta	deps/ecto/lib/ecto.ex	/^  def get_meta(struct, :state),$/;"	f
get_module	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_module(module, config) do$/;"	f
get_module_data	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_module_data(module, docs_chunk) do$/;"	f
get_module_docs	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_module_docs(module_data, source_path) do$/;"	f
get_name_registry	deps/makeup/lib/makeup/registry.ex	/^  defp get_name_registry() do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name(_) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name(list) when is_list(list) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({:"::", _, [var, _type]}) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({:%, _, [{:__aliases__, _meta, _mod_list}, {:%{}, _meta2, arguments}]}) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({:%{}, _, arguments}) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({:<<>>, _, arguments}) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({:=, _, arguments}) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({:\\\\, _, arguments}) do$/;"	f
get_param_name	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_name({name, _, nil}) when is_atom(name), do: name$/;"	f
get_param_names	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_names(arguments) when is_tuple(arguments) do$/;"	f
get_param_names	deps/credo/lib/credo/code/parameters.ex	/^  defp get_param_names({:when, _meta, arguments}) do$/;"	f
get_parameters	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp get_parameters(arguments) do$/;"	f
get_params_indent	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp get_params_indent(keywords, min_indent) do$/;"	f
get_path	deps/credo/lib/credo/execution.ex	/^  def get_path(exec) do$/;"	f
get_peer_data	deps/plug/lib/plug/adapters/test/conn.ex	/^  def get_peer_data(payload) do$/;"	f
get_peer_data	deps/plug/lib/plug/conn.ex	/^  def get_peer_data(%Conn{adapter: {adapter, payload}}) do$/;"	f
get_plug_builder_ref	deps/plug/lib/plug/builder.ex	/^  defp get_plug_builder_ref(module) do$/;"	f
get_plugin_param	deps/credo/lib/credo/execution.ex	/^  def get_plugin_param(exec, plugin_mod, param_name) do$/;"	f
get_preload_source!	deps/ecto/lib/ecto/query/planner.ex	/^  defp get_preload_source!(query, ix) do$/;"	f
get_ref	deps/ecto/lib/ecto/association.ex	/^  defp get_ref(_primary_key, references, _name), do: references$/;"	f
get_ref	deps/ecto/lib/ecto/association.ex	/^  defp get_ref(primary_key, nil, _name), do: elem(primary_key, 0)$/;"	f
get_ref	deps/ecto/lib/ecto/association.ex	/^  defp get_ref(primary_key, nil, name) when primary_key in [nil, false] do$/;"	f
get_req_header	deps/plug/lib/plug/conn.ex	/^  def get_req_header(%Conn{req_headers: headers}, key) when is_binary(key) do$/;"	f
get_request_id	deps/plug/lib/plug/request_id.ex	/^  defp get_request_id(conn, header) do$/;"	f
get_resource_name	deps/phoenix/lib/phoenix/view.ex	/^  defp get_resource_name(assigns, view) do$/;"	f
get_resp_header	deps/plug/lib/plug/conn.ex	/^  def get_resp_header(%Conn{resp_headers: headers}, key) when is_binary(key) do$/;"	f
get_rest_of_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp get_rest_of_line(line, col_end) do$/;"	f
get_result	deps/credo/lib/credo/execution.ex	/^  def get_result(exec, name, default \\\\ nil) do$/;"	f
get_runtime_deps	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp get_runtime_deps(info) do$/;"	f
get_scope!	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate get_scope!(id), to: Boruta.Ecto.Admin.Scopes$/;"	d
get_scope!	lib/boruta/adapters/ecto/admin/scopes.ex	/^  def get_scope!(id), do: repo().get!(Scope, id)$/;"	f
get_scopes_by_ids	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate get_scopes_by_ids(ids), to: Boruta.Ecto.Admin.Scopes$/;"	d
get_scopes_by_ids	lib/boruta/adapters/ecto/admin/scopes.ex	/^  def get_scopes_by_ids(ids), do: repo().all(from s in Scope, where: s.id in ^ids)$/;"	f
get_secret	deps/phoenix/lib/phoenix/token.ex	/^  defp get_secret(_secret_key_base, nil, _opts) do$/;"	f
get_secret	deps/phoenix/lib/phoenix/token.ex	/^  defp get_secret(secret_key_base, salt, opts) do$/;"	f
get_secret	deps/plug_crypto/lib/plug/crypto.ex	/^  defp get_secret(_secret_key_base, nil, _opts) do$/;"	f
get_secret	deps/plug_crypto/lib/plug/crypto.ex	/^  defp get_secret(secret_key_base, salt, opts) do$/;"	f
get_session	deps/plug/lib/plug/conn.ex	/^  def get_session(%Conn{private: private}) do$/;"	f
get_session	deps/plug/lib/plug/conn.ex	/^  def get_session(conn, key) when is_atom(key) or is_binary(key) do$/;"	f
get_snippet	deps/plug/lib/plug/debugger.ex	/^  defp get_snippet(file, line) do$/;"	f
get_source	deps/ecto/lib/ecto/changeset.ex	/^  defp get_source(%{data: %{__meta__: %{source: source}}}) when is_binary(source),$/;"	f
get_source	deps/ecto/lib/ecto/changeset.ex	/^  defp get_source(%{data: data}), do:$/;"	f
get_source	deps/ecto/lib/ecto/changeset.ex	/^  defp get_source(item), do:$/;"	f
get_source	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp get_source(query, sources, ix, source) do$/;"	f
get_source	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp get_source(query, sources, ix, source) do$/;"	f
get_source	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp get_source(query, sources, ix, source) do$/;"	f
get_source	deps/ecto_sql/lib/ecto/migration/schema_migration.ex	/^  def get_source(repo) do$/;"	f
get_source	deps/plug/lib/plug/debugger.ex	/^  defp get_source(app, module, file) do$/;"	f
get_source!	deps/ecto/lib/ecto/query/planner.ex	/^  defp get_source!(where, %{sources: sources} = query, ix) do$/;"	f
get_source_files	deps/credo/lib/credo/execution.ex	/^  def get_source_files(exec) do$/;"	f
get_source_line	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp get_source_line(_, line_no) when line_no < 1 do$/;"	f
get_source_line	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp get_source_line(source_file, line_no) do$/;"	f
get_specs	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def get_specs(%ExDoc.FunctionNode{specs: specs}) when is_list(specs) do$/;"	f
get_specs	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def get_specs(%ExDoc.TypeNode{spec: spec}) do$/;"	f
get_specs	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def get_specs(_node) do$/;"	f
get_specs	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_specs(module) do$/;"	f
get_state	deps/ecto/lib/ecto/repo/schema.ex	/^  defp get_state(%Changeset{data: %{__meta__: %{state: state}}}), do: state$/;"	f
get_state	deps/ecto/lib/ecto/repo/schema.ex	/^  defp get_state(%{__struct__: _}) do$/;"	f
get_top	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp get_top(module) do$/;"	f
get_type	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_type(module) do$/;"	f
get_type	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_type(type, source, module_data) do$/;"	f
get_types	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_types(module_data, source) do$/;"	f
get_typespec_signature	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_typespec_signature({:"::", _, [{name, meta, args}, _]}, arity) do$/;"	f
get_typespec_signature	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_typespec_signature({:when, _, [{:"::", _, [{name, meta, args}, _]}, _]}, arity) do$/;"	f
get_typespec_signature	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp get_typespec_signature({name, meta, args}, arity) do$/;"	f
get_valid_command_names	deps/credo/lib/credo/execution.ex	/^  def get_valid_command_names(exec) do$/;"	f
get_variable_name	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp get_variable_name(nil), do: nil$/;"	f
get_variable_name	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp get_variable_name({name, _line}), do: name$/;"	f
gets results from GenServer	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^      test "gets results from GenServer" do$/;"	t
global_plt	deps/dialyxir/lib/dialyxir/project.ex	/^  defp global_plt(name) do$/;"	f
go	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp go(delay, from, time, holder, queue, %{delay: min} = codel) do$/;"	f
graceful_permdown	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def graceful_permdown(tracker_name) do$/;"	f
graceful_permdown	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def graceful_permdown(server_pid) do$/;"	f
grant_privilege	deps/ex_doc/lib/mix/tasks/docs.ex	/^        def grant_privilege(resource, privilege)$/;"	f
grant_type	lib/boruta/oauth/json/schema.ex	/^  def grant_type do$/;"	f
group	deps/phoenix/lib/phoenix/presence.ex	/^  defp group(presences) do$/;"	f
group_by	deps/ecto/lib/ecto/query.ex	/^  defmacro group_by(query, binding \\\\ [], expr) do$/;"	a
group_by	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp group_by(%{group_bys: []}, _sources), do: []$/;"	f
group_by	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp group_by(%{group_bys: group_bys} = query, sources) do$/;"	f
group_by	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp group_by(%{group_bys: []}, _sources), do: []$/;"	f
group_by	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp group_by(%{group_bys: group_bys} = query, sources) do$/;"	f
group_by	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp group_by(%{group_bys: []}, _sources), do: []$/;"	f
group_by	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp group_by(%{group_bys: group_bys} = query, sources) do$/;"	f
group_by!	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def group_by!(query, group_by, file, line) do$/;"	f
group_by_logical_path	deps/phoenix/lib/phoenix/digester.ex	/^  defp group_by_logical_path(digests) do$/;"	f
group_extras	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp group_extras(extras) do$/;"	f
group_highlighter_javascript	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def group_highlighter_javascript() do$/;"	f
group_index	deps/ex_doc/lib/ex_doc/group_matcher.ex	/^  def group_index(groups, group) do$/;"	f
group_or_partition_by!	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  def group_or_partition_by!(kind, query, exprs, params) do$/;"	f
group_usages	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp group_usages(usages) do$/;"	f
grouped_by_tag	deps/credo/lib/credo/execution/execution_timing.ex	/^  def grouped_by_tag(exec, tag_name) do$/;"	f
groups_for_extras	deps/ecto/mix.exs	/^  defp groups_for_extras do$/;"	f
groups_for_extras	deps/phoenix/mix.exs	/^  defp groups_for_extras do$/;"	f
groups_for_extras	deps/plug/mix.exs	/^  defp groups_for_extras do$/;"	f
groups_for_modules	deps/phoenix/mix.exs	/^  defp groups_for_modules do$/;"	f
groups_for_modules	deps/plug/mix.exs	/^  defp groups_for_modules do$/;"	f
gruber_line_breaks	deps/earmark/lib/earmark/ast/inline.ex	/^  defp gruber_line_breaks(text) do$/;"	f
gt?	deps/decimal/lib/decimal.ex	/^  def gt?(%Decimal{coef: :qNaN}, _num2), do: false$/;"	f
gt?	deps/decimal/lib/decimal.ex	/^  def gt?(_num1, %Decimal{coef: :qNaN}), do: false$/;"	f
gt?	deps/decimal/lib/decimal.ex	/^  def gt?(num1, num2), do: cmp(num1, num2) == :gt$/;"	f
guards_list_to_quoted	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp guards_list_to_quoted([]), do: true$/;"	f
guards_list_to_quoted	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp guards_list_to_quoted(guards), do: Enum.reduce(guards, &{:and, [], [&2, &1]})$/;"	f
guess_url	deps/ex_doc/lib/ex_doc.ex	/^  defp guess_url(url, ref) do$/;"	f
h	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def h(binary) do$/;"	f
h	deps/plug/lib/plug/debugger.ex	/^  defp h(string) do$/;"	f
halt	deps/credo/lib/credo/execution.ex	/^  def halt(exec) do$/;"	f
halt	deps/plug/lib/plug/conn.ex	/^  def halt(%Conn{} = conn) do$/;"	f
halt	deps/postgrex/lib/postgrex/protocol.ex	/^  defp halt(s, status, query, rows, tag) do$/;"	f
halt_if_exit_status_assigned	deps/credo/lib/credo/cli.ex	/^  defp halt_if_exit_status_assigned(%Execution{mute_exit_status: true}) do$/;"	f
halt_if_exit_status_assigned	deps/credo/lib/credo/cli.ex	/^  defp halt_if_exit_status_assigned(exec) do$/;"	f
halt_if_failed	deps/credo/lib/credo/cli.ex	/^  defp halt_if_failed(0), do: nil$/;"	f
halt_if_failed	deps/credo/lib/credo/cli.ex	/^  defp halt_if_failed(x), do: System.halt(x)$/;"	f
halt_on_error	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^  def halt_on_error(exec, _) do$/;"	f
halt_on_error	deps/credo/lib/credo/execution/task/convert_cli_options_to_config.ex	/^  def halt_on_error({:error, error}, exec) do$/;"	f
halted?	deps/ecto/lib/ecto/association.ex	/^  defp halted?(_, %{valid?: true}, %{valid?: false}), do: true$/;"	f
halted?	deps/ecto/lib/ecto/association.ex	/^  defp halted?(_, _, _), do: false$/;"	f
halted?	deps/ecto/lib/ecto/association.ex	/^  defp halted?(true, _, _), do: true$/;"	f
handle	deps/db_connection/lib/db_connection/holder.ex	/^  def handle(pool_ref, fun, args, opts) do$/;"	f
handleIncomingMessage	deps/credo/lib/credo/check/readability/function_names.ex	/^      def handleIncomingMessage(message) do$/;"	f
handle_assoc	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp handle_assoc(original_assoc, record, association_name) do$/;"	f
handle_assocs	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp handle_assocs(record = %{__struct__: struct}) do$/;"	f
handle_async	deps/connection/lib/connection.ex	/^  defp handle_async(fun, msg, %{mod: mod, mod_state: mod_state} = s) do$/;"	f
handle_atom_string_or_sigil	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp handle_atom_string_or_sigil(_token, list, source) do$/;"	f
handle_begin	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_begin(opts, {conn_mod, state, false}) do$/;"	f
handle_begin	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_begin(_, %{postgres: {_, _}} = s) do$/;"	f
handle_begin	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_begin(opts, %{postgres: postgres} = s) do$/;"	f
handle_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_bind(%Query{ref: ref} = query, params, res, opts, %{postgres: {_, ref}} = s) do$/;"	f
handle_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_bind(%Query{types: types} = query, params, res, opts, %{types: types} = s) do$/;"	f
handle_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_bind(%Query{} = query, _, _, _, s) do$/;"	f
handle_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_bind(query, _, _, _, %{postgres: {_, _}} = s) do$/;"	f
handle_call	deps/connection/lib/connection.ex	/^        def handle_call(:close, from, s) do$/;"	f
handle_call	deps/connection/lib/connection.ex	/^        def handle_call(_, _, %{sock: nil} = s) do$/;"	f
handle_call	deps/connection/lib/connection.ex	/^        def handle_call({:recv, bytes, timeout}, _, %{sock: sock} = s) do$/;"	f
handle_call	deps/connection/lib/connection.ex	/^        def handle_call({:send, data}, _, %{sock: sock} = s) do$/;"	f
handle_call	deps/connection/lib/connection.ex	/^      def handle_call(msg, _from, state) do$/;"	f
handle_call	deps/connection/lib/connection.ex	/^  def handle_call(request, from, %{mod: mod, mod_state: mod_state} = s) do$/;"	f
handle_call	deps/credo/lib/credo/cli/output/shell.ex	/^  def handle_call({:puts, value}, _from, %{use_colors: false} = current_state) do$/;"	f
handle_call	deps/credo/lib/credo/cli/output/shell.ex	/^  def handle_call({:puts, value}, _from, %{use_colors: true} = current_state) do$/;"	f
handle_call	deps/credo/lib/credo/cli/output/shell.ex	/^  def handle_call({:use_colors, use_colors}, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/cli/output/shell.ex	/^  def handle_call({:warn, value}, _from, %{use_colors: false} = current_state) do$/;"	f
handle_call	deps/credo/lib/credo/cli/output/shell.ex	/^  def handle_call({:warn, value}, _from, %{use_colors: true} = current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_config_files.ex	/^  def handle_call(:get, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_config_files.ex	/^  def handle_call({:put, new_state}, _from, _current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_issues.ex	/^  def handle_call(:to_map, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_issues.ex	/^  def handle_call({:append, filename, issue}, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_issues.ex	/^  def handle_call({:get, filename}, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_issues.ex	/^  def handle_call({:set, issues}, _from, _current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_source_files.ex	/^  def handle_call(:get, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_source_files.ex	/^  def handle_call({:put, new_state}, _from, _current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_timing.ex	/^  def handle_call(:all, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/execution/execution_timing.ex	/^  def handle_call({:append, tags, started_at, time}, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/service/ets_table_helper.ex	/^      def handle_call(msg, from, current_state),$/;"	f
handle_call	deps/credo/lib/credo/service/ets_table_helper.ex	/^  def handle_call(table_name, {:get, filename}, _from, current_state) do$/;"	f
handle_call	deps/credo/lib/credo/service/ets_table_helper.ex	/^  def handle_call(table_name, {:put, filename, value}, _from, current_state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call(:checkin, {caller, _}, state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call({:allow, caller, allow}, _from, %{checkouts: checkouts} = state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call({:checkout, opts}, {caller, _}, %{checkouts: checkouts} = state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call({:mode, mode}, _from, %{mode: mode} = state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call({:mode, mode}, {caller, _}, state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call({:mode, {:shared, shared}}, {caller, _}, %{mode: {:shared, current}} = state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_call({:mode, {:shared, shared}}, {caller, _}, state) do$/;"	f
handle_call	deps/db_connection/lib/db_connection/watcher.ex	/^  def handle_call({:watch, supervisor, args}, {caller_pid, _ref}, {caller_refs, started_refs}) do$/;"	f
handle_call	deps/ecto/lib/ecto/repo/registry.ex	/^  def handle_call({:associate, pid, value}, _from, table) do$/;"	f
handle_call	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^      defp handle_call(unquote(op), 2), do: {:binary_op, unquote(str)}$/;"	f
handle_call	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp handle_call(fun, _arity), do: {:fun, Atom.to_string(fun)}$/;"	f
handle_call	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^      defp handle_call(unquote(op), 2), do: {:binary_op, unquote(str)}$/;"	f
handle_call	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp handle_call(fun, _arity), do: {:fun, Atom.to_string(fun)}$/;"	f
handle_call	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^      defp handle_call(unquote(op), 2), do: {:binary_op, unquote(str)}$/;"	f
handle_call	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp handle_call(fun, _arity), do: {:fun, Atom.to_string(fun)}$/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call($/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call({:allow, _, _, _}, _from, %{mode: :global} = state) do$/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call({:allow, mock, owner_pid, pid}, _from, %{mode: :private} = state) do$/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call({:set_mode, _owner_pid, :private}, _from, state) do$/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call({:set_mode, owner_pid, :global}, _from, state) do$/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call({:verify, owner_pid, mock, test_or_on_exit}, _from, state) do$/;"	f
handle_call	deps/mox/lib/mox/server.ex	/^  def handle_call({:verify_on_exit, pid}, _from, state) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_call(:socket, _from, socket) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_call(msg, from, socket) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^  def handle_call(:stop, _from, output) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def handle_call(:check_symlinks, _from, checked?) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def handle_call({:reload!, endpoint}, from, state) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/config.ex	/^  def handle_call({:config_change, changed, removed}, _from, {module, permanent}) do$/;"	f
handle_call	deps/phoenix/lib/phoenix/config.ex	/^  def handle_call({:permanent, key, value}, _from, {module, permanent}) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^  def handle_call({:subscription, pid}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def handle_call({:demonitor, pid}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def handle_call({:monitor, pid, opts}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def handle_call({:subscription, pid}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call(:graceful_permdown, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call(:replicas, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call(:resubscribe, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call(:unsubscribe, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call(:values, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call({:list, _topic}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call({:track, pid, topic, key, meta}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call({:untrack, pid, topic, key}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call({:untrack, pid}, _from, state) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call({:update, pid, topic, key, meta_updater}, _from, state) when is_function(meta_updater) do$/;"	f
handle_call	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_call({:update, pid, topic, key, new_meta}, _from, state) do$/;"	f
handle_call	deps/plug/lib/plug/upload.ex	/^  def handle_call(:upload, {pid, _ref}, dirs) do$/;"	f
handle_call	deps/postgrex/lib/postgrex/notifications.ex	/^  def handle_call({:listen, channel}, {pid, _} = from, s) do$/;"	f
handle_call	deps/postgrex/lib/postgrex/notifications.ex	/^  def handle_call({:unlisten, ref}, from, s) do$/;"	f
handle_call	deps/postgrex/lib/postgrex/parameters.ex	/^  def handle_call({:insert, parameters}, {pid, _}, state) do$/;"	f
handle_call	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_call(:fetch, from, %{lock: nil} = state) do$/;"	f
handle_call	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_call(:fetch, from, %{lock: ref} = state) when is_reference(ref) do$/;"	f
handle_call	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_call({:update, ref, type_infos}, from, %{lock: ref} = state)$/;"	f
handle_call	deps/telemetry/src/telemetry_handler_table.erl	/^handle_call({delete, HandlerId}, _From, State) ->$/;"	f	module:telemetry_handler_table
handle_call	deps/telemetry/src/telemetry_handler_table.erl	/^handle_call({insert, HandlerId, EventNames, Function, Config}, _From, State) ->$/;"	f	module:telemetry_handler_table
handle_cast	deps/connection/lib/connection.ex	/^      def handle_cast(msg, state) do$/;"	f
handle_cast	deps/connection/lib/connection.ex	/^  def handle_cast(request, s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:after_connect, _}, s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:after_connect, ref}, %{client: {ref, :connect}} = s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:connected, _}, s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:connected, ref}, %{client: {ref, :connect}} = s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:disconnect, ref, err, state}, %{client: {ref, _}} = s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:ping, ref, state}, %{client: {ref, :pool}, mod: mod} = s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({:stop, ref, err, state}, %{client: {ref, _}} = s) do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_cast({tag, _, _, _}, s) when tag in [:disconnect, :stop] do$/;"	f
handle_cast	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_cast({:stop, caller}, %{owner: {owner, _}} = state) do$/;"	f
handle_cast	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_cast(:close, socket) do$/;"	f
handle_cast	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_cast(msg, socket) do$/;"	f
handle_cast	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def handle_cast({:sync, pid, ref}, state) do$/;"	f
handle_cast	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^  def handle_cast({:down, pid}, state) do$/;"	f
handle_cast	deps/postgrex/lib/postgrex/parameters.ex	/^  def handle_cast({:delete, ref}, state) do$/;"	f
handle_cast	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_cast({:done, ref}, %{lock: ref} = state) when is_reference(ref) do$/;"	f
handle_cast	deps/telemetry/src/telemetry_handler_table.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:telemetry_handler_table
handle_checkin	deps/db_connection/lib/db_connection/connection.ex	/^  defp handle_checkin(state, s) do$/;"	f
handle_checkin	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp handle_checkin(holder, now_in_native, {:busy, queue, codel}) do$/;"	f
handle_checkin	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp handle_checkin(holder, now_in_native, {:ready, queue, _} = data) do$/;"	f
handle_checkout	deps/db_connection/lib/db_connection/holder.ex	/^  def handle_checkout(holder, {pid, mref}, ref, checkin_time) do$/;"	f
handle_close	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_close(query, opts, state),$/;"	f
handle_close	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_close(%Query{ref: ref} = query, opts, %{postgres: {_, ref}} = s) do$/;"	f
handle_close	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_close(%Query{} = query, _, %{postgres: {_, _}} = s) do$/;"	f
handle_close	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_close(%Query{} = query, opts, s) do$/;"	f
handle_commit	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_commit(opts, {conn_mod, state, true}) do$/;"	f
handle_commit	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_commit(_, %{postgres: {_, _}} = s) do$/;"	f
handle_commit	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_commit(opts, %{postgres: postgres} = s) do$/;"	f
handle_common_result	deps/db_connection/lib/db_connection.ex	/^  defp handle_common_result(return, conn, meter) do$/;"	f
handle_data	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_data(s, opts, buffer) do$/;"	f
handle_deadline	deps/db_connection/lib/db_connection/holder.ex	/^  def handle_deadline(holder, deadline) do$/;"	f
handle_deallocate	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_deallocate(query, cursor, opts, state),$/;"	f
handle_deallocate	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_deallocate(_, %Cursor{} = cursor, _, %{postgres: {_, _}} = s) do$/;"	f
handle_deallocate	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_deallocate(_, %Cursor{} = cursor, opts, s) do$/;"	f
handle_deallocate	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_deallocate(query, %Cursor{ref: ref}, opts, %{postgres: {_, ref}} = s) do$/;"	f
handle_declare	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_declare(query, params, opts, state),$/;"	f
handle_declare	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_declare(query, params, opts, s) do$/;"	f
handle_depth	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp handle_depth($/;"	f
handle_depth	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp handle_depth(nil, ast, _issue_meta, issues, _max_nesting) do$/;"	f
handle_diff	deps/phoenix/lib/phoenix/presence.ex	/^      def handle_diff(diff, state) do$/;"	f
handle_diff	deps/phoenix/lib/phoenix/presence.ex	/^  def handle_diff(module, diff, node_name, pubsub_server, sup_name) do$/;"	f
handle_diff	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^        def handle_diff(diff, state) do$/;"	f
handle_disconnect	deps/db_connection/lib/db_connection/holder.ex	/^  def handle_disconnect(holder, err) do$/;"	f
handle_disposition	deps/plug/lib/plug/parsers/multipart.ex	/^  defp handle_disposition(params, name, headers) do$/;"	f
handle_done	deps/db_connection/lib/db_connection/holder.ex	/^  defp handle_done(holder, stop, err) do$/;"	f
handle_embed	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp handle_embed(original_embed, record, embed_name) do$/;"	f
handle_embeds	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp handle_embeds(record = %{__struct__: struct}) do$/;"	f
handle_error	deps/decimal/lib/decimal.ex	/^  defp handle_error(signals, reason, result, context) do$/;"	f
handle_errors	deps/plug/lib/plug/error_handler.ex	/^        def handle_errors(conn, %{kind: _kind, reason: _reason, stack: _stack}) do$/;"	f
handle_errors	deps/plug/lib/plug/error_handler.ex	/^      def handle_errors(conn, assigns) do$/;"	f
handle_errors	deps/plug/lib/plug/router.ex	/^        defp handle_errors(conn, %{kind: _kind, reason: _reason, stack: _stack}) do$/;"	f
handle_event	deps/ecto/lib/ecto/repo.ex	/^        def handle_event([:my_app, :repo, :query], measurements, metadata, config) do$/;"	f
handle_event	deps/ecto_sql/integration_test/support/repo.exs	/^  def handle_event(event, latency, metadata, _config) do$/;"	f
handle_execute	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_execute(query, params, opts, state),$/;"	f
handle_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_execute(%Copy{ref: ref, query: query} = copy, :copy_done, opts, s) do$/;"	f
handle_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_execute(%Copy{ref: ref} = copy, {:copy_data, iodata}, opts, s) do$/;"	f
handle_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_execute(%Postgrex.Parameters{} = p, nil, _, s) do$/;"	f
handle_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_execute(%Query{} = query, params, opts, s) do$/;"	f
handle_execute_copy	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_execute_copy(query, params, opts, s) do$/;"	f
handle_execute_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_execute_result(%{ref: ref} = query, params, opts, %{postgres: {_, ref}} = s) do$/;"	f
handle_execute_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_execute_result(%{types: types} = query, params, opts, %{types: types} = s) do$/;"	f
handle_execute_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_execute_result(%{} = query, _, _, %{postgres: {_, _ref}} = s) do$/;"	f
handle_execute_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_execute_result(query, _, _, s) do$/;"	f
handle_fetch	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_fetch(query, cursor, opts, state),$/;"	f
handle_fetch	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_fetch(query, cursor, opts, %{postgres: {_, ref}} = s) do$/;"	f
handle_fetch	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_fetch(query, cursor, opts, s) do$/;"	f
handle_footnotes	deps/earmark/lib/earmark/parser.ex	/^  defp handle_footnotes(blocks, options) do$/;"	f
handle_header_accept	deps/phoenix/lib/phoenix/controller.ex	/^  defp handle_header_accept(conn, [header|_], accepted) do$/;"	f
handle_header_accept	deps/phoenix/lib/phoenix/controller.ex	/^  defp handle_header_accept(conn, header, [first|_]) when header == [] or header == ["*\/*"] do$/;"	f
handle_heartbeat	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp handle_heartbeat(state, {name, vsn}) do$/;"	f
handle_heredoc	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp handle_heredoc({_atom, {line_no, _, _}, list}, source) do$/;"	f
handle_in	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  def handle_in("ping", payload, socket) do$/;"	f
handle_in	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  def handle_in("shout", payload, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^        def handle_in("unwatch", %{"product_id" => id}, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^        def handle_in("watch", %{"product_id" => id}, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_in("create:post", attrs, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_in("current_rank", _, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_in("new_msg", %{"uid" => uid, "body" => body}, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_in("ping", payload, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_in("work", payload, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_in(other) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_in({:reply, reply, %Socket{} = socket}) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_in({:stop, reason, reply, socket}) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^      def handle_in(message, state), do: Phoenix.Socket.__in__(message, state)$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^  defp handle_in(_, %{ref: ref, topic: "phoenix", event: "heartbeat"}, state, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^  defp handle_in(nil, %{event: "phx_join", topic: topic, ref: ref} = message, state, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^  defp handle_in(nil, %{event: "phx_leave", ref: ref, topic: topic}, state, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^  defp handle_in(nil, message, state, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^  defp handle_in({pid, _ref}, message, state, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket.ex	/^  defp handle_in({pid, ref}, %{event: "phx_join", topic: topic} = message, state, socket) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/socket/transport.ex	/^        def handle_in({"ping", _opts}, state) do$/;"	f
handle_in	deps/phoenix/lib/phoenix/test/channel_test.ex	/^      def handle_in("publish", %{"id" => id}, socket) do$/;"	f
handle_in	deps/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  def handle_in("ping", payload, socket) do$/;"	f
handle_in	deps/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  def handle_in("shout", payload, socket) do$/;"	f
handle_incoming_message	deps/credo/lib/credo/check/readability/function_names.ex	/^      def handle_incoming_message(message) do$/;"	f
handle_info	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.presence/presence.ex	/^        def handle_info(:after_join, socket) do$/;"	f
handle_info	deps/connection/lib/connection.ex	/^      def handle_info(_msg, state) do$/;"	f
handle_info	deps/connection/lib/connection.ex	/^  def handle_info(msg, s) do$/;"	f
handle_info	deps/connection/lib/connection.ex	/^  def handle_info({:timeout, backoff, __MODULE__},$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_info($/;"	f
handle_info	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_info(:timeout, %{client: nil} = s) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_info(msg, %{mod: mod} = s) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_info({:DOWN, mon, _, pid, reason}, %{client: {ref, mon}} = s) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_info({:DOWN, ref, _, pid, reason}, %{client: {ref, :after_connect}} = s) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection.ex	/^  def handle_info({:timeout, timer, {__MODULE__, pid, timeout}}, %{timer: timer} = s)$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:"ETS-TRANSFER", holder, _, {msg, queue, extra}}, {_, queue, _} = data) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:"ETS-TRANSFER", holder, pid, queue}, {_, queue, _} = data) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:db_connection, from, {:checkout, _caller, _now, _queue?}} = checkout, {:ready, queue, _codel} = ready) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:db_connection, from, {:checkout, _caller, now, queue?}}, {:busy, queue, _} = busy) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:timeout, deadline, {queue, holder, pid, len}}, {_, queue, _} = data) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:timeout, idle, past_in_native}, {_, _, %{idle: idle}} = data) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def handle_info({:timeout, poll, {time, last_sent}}, {_, _, %{poll: poll}} = data) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_info(_msg, state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_info({:DOWN, ref, _, _, _}, state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def handle_info({:db_connection, from, {:checkout, callers, _now, queue?}}, state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:"ETS-TRANSFER", holder, _, {msg, ref, extra}}, %{holder: holder, client: {_, ref, _}} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:"ETS-TRANSFER", holder, pid, ref}, %{holder: holder, owner: {_, ref}} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:DOWN, ref, _, pid, _reason}, %{owner: {_, ref}} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:db_connection, from, {:checkout, _caller, _now, _queue?}}, %{client: nil} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:db_connection, from, {:checkout, _caller, _now, _queue?}}, %{holder: nil} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:db_connection, from, {:checkout, _caller, now, queue?}}, state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:timeout, deadline, {_ref, holder, pid, len}}, %{holder: holder} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:timeout, poll, time}, %{poll: poll} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def handle_info({:timeout, timer, {__MODULE__, pid, timeout}}, %{ownership_timer: timer} = state) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/watcher.ex	/^  def handle_info({:DOWN, ref, _, _, _}, {caller_refs, started_refs}) do$/;"	f
handle_info	deps/db_connection/lib/db_connection/watcher.ex	/^  def handle_info({:EXIT, _, _}, state) do$/;"	f
handle_info	deps/ecto/lib/ecto/repo/registry.ex	/^  def handle_info({:DOWN, ref, _type, pid, _reason}, table) do$/;"	f
handle_info	deps/mox/lib/mox/server.ex	/^  def handle_info({:DOWN, _, _, pid, _}, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel.ex	/^        def handle_info(:after_join, socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_info(%Broadcast{topic: _, event: event, payload: payload}, socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_info({:work_complete, result, ref}, socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_info($/;"	f
handle_info	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_info(%Message{topic: topic, event: "phx_leave", ref: ref}, %{topic: topic} = socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_info(msg, %{channel: channel} = socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_info({:DOWN, _, _, transport_pid, reason}, %{transport_pid: transport_pid} = socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/channel/server.ex	/^  def handle_info({:join, __MODULE__}, {auth_payload, {pid, _} = from, socket}) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^  def handle_info(msg, output) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def handle_info(_, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/presence.ex	/^        def handle_info(:after_join, socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/presence.ex	/^      def handle_info(:after_join, socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/socket.ex	/^      def handle_info($/;"	f
handle_info	deps/phoenix/lib/phoenix/socket.ex	/^      def handle_info(message, state), do: Phoenix.Socket.__info__(message, state)$/;"	f
handle_info	deps/phoenix/lib/phoenix/socket.ex	/^      def handle_info({:DOWN, _, _, transport_pid, reason}, %{transport_pid: transport_pid} = socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/socket/transport.ex	/^        def handle_info(_, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/test/channel_test.ex	/^      def handle_info(:some_message, socket) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def handle_info(:shutdown_if_inactive, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def handle_info(message, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def handle_info({:dispatch, client_ref, body, ref}, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def handle_info({:flush, client_ref, ref}, state) do$/;"	f
handle_info	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def handle_info({:subscribe, client_ref, ref}, state) do$/;"	f
handle_info	deps/phoenix/priv/templates/phx.gen.presence/presence.ex	/^        def handle_info(:after_join, socket) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def handle_info(_, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def handle_info({:DOWN, _ref, _type, pid, _info}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  def handle_info({:forward_to_local, fastlane, from_pid, topic, msg}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info(:heartbeat, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info({:EXIT, pid, _reason}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info({:pub, :graceful_permdown, {_name, _vsn} = ref}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info({:pub, :heartbeat, {name, vsn}, :empty, clocks}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info({:pub, :heartbeat, {name, vsn}, delta, clocks}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info({:pub, :transfer_ack, _ref, {name, _vsn}, remote_presences}, state) do$/;"	f
handle_info	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def handle_info({:pub, :transfer_req, ref, {name, _vsn}, {_, clocks}}, state) do$/;"	f
handle_info	deps/plug/lib/plug/upload.ex	/^  def handle_info(_msg, state) do$/;"	f
handle_info	deps/plug/lib/plug/upload.ex	/^  def handle_info({:DOWN, _ref, :process, pid, _reason}, state) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/notifications.ex	/^  def handle_info(:timeout, %{protocol: protocol} = state) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/notifications.ex	/^  def handle_info(msg, s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/notifications.ex	/^  def handle_info({:DOWN, ref, :process, _, _}, s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/parameters.ex	/^  def handle_info({:DOWN, ref, :process, _, _}, state) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info(msg, _, s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info(msg, opts \\\\ [], s)$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info({:ssl, sock, data}, opts, %{sock: {:ssl, sock}} = s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info({:ssl_closed, sock}, _, %{sock: {:ssl, sock}} = s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info({:ssl_error, sock, reason}, _, %{sock: {:ssl, sock}} = s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info({:tcp, sock, data}, opts, %{sock: {:gen_tcp, sock}} = s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info({:tcp_closed, sock}, _, %{sock: {:gen_tcp, sock}} = s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_info({:tcp_error, sock, reason}, _, %{sock: {:gen_tcp, sock}} = s) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_info(:timeout, state) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_info({:DOWN, ref, _, _, _}, %{lock: ref} = state)$/;"	f
handle_info	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_info({:DOWN, ref, _, _, _}, state) do$/;"	f
handle_info	deps/postgrex/lib/postgrex/type_server.ex	/^  def handle_info({:EXIT, pid, _}, state) do$/;"	f
handle_info	deps/telemetry/src/telemetry_handler_table.erl	/^handle_info(_Msg, State) ->$/;"	f	module:telemetry_handler_table
handle_inheritance	deps/makeup/lib/makeup/styles/html.ex	/^    defp handle_inheritance(style_map) do$/;"	f
handle_insert	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  def handle_insert(%{__meta__: %{__struct__: Ecto.Schema.Metadata}} = record, %{repo: repo}) do$/;"	f
handle_insert	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  def handle_insert(%{__meta__: %{state: :loaded}} = record, _) do$/;"	f
handle_insert	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  def handle_insert(_, %{repo: nil}) do$/;"	f
handle_insert	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  def handle_insert(_record, _opts) do$/;"	f
handle_insert	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  def handle_insert(record, %{repo: _repo}) do$/;"	f
handle_json_encode	deps/ex_machina/lib/ex_machina/strategy.ex	/^        def handle_json_encode(record, %{factory_module: factory_module}) do$/;"	f
handle_json_encode	deps/ex_machina/lib/ex_machina/strategy.ex	/^        def handle_json_encode(record, _opts) do$/;"	f
handle_listener	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_listener(statement, opts, s) do$/;"	f
handle_msg	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_msg(s, status, msg_notice(fields: fields)) do$/;"	f
handle_msg	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_msg(s, status, msg_notify(channel: channel, payload: payload)) do$/;"	f
handle_msg	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_msg(s, status, msg_parameter(name: name, value: value)) do$/;"	f
handle_or_cleanup	deps/db_connection/lib/db_connection/holder.ex	/^  defp handle_or_cleanup(type, pool_ref, fun, args, opts) do$/;"	f
handle_out	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_out("new_msg", msg, socket) do$/;"	f
handle_out	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_out("new_msg", payload, socket) do$/;"	f
handle_out	deps/phoenix/lib/phoenix/channel.ex	/^      def handle_out("user_joined", msg, socket) do$/;"	f
handle_params_accept	deps/phoenix/lib/phoenix/controller.ex	/^  defp handle_params_accept(conn, format, accepted) do$/;"	f
handle_ping	deps/db_connection/lib/db_connection/holder.ex	/^  def handle_ping(holder) do$/;"	f
handle_prepare	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_prepare(query, opts, state),$/;"	f
handle_prepare	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_prepare(%Query{name: ""} = query, opts, s) do$/;"	f
handle_prepare	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_prepare(%Query{ref: ref} = query, opts, s) when is_reference(ref) do$/;"	f
handle_prepare	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_prepare(%Query{} = query, _, %{postgres: {_, _}} = s) do$/;"	f
handle_prepare	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_prepare(%Query{} = query, opts, %{queries: nil} = s) do$/;"	f
handle_prepare	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_prepare(%Query{} = query, opts, s) do$/;"	f
handle_prepare_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_prepare_bind(%Query{name: ""} = query, params, res, opts, s) do$/;"	f
handle_prepare_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_prepare_bind(%Query{} = query, params, res, opts, s) do$/;"	f
handle_prepare_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_prepare_execute(%Query{name: ""} = query, params, opts, s) do$/;"	f
handle_prepare_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_prepare_execute(%Query{} = query, params, opts, s) do$/;"	f
handle_reply	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_reply(_socket, reply) do$/;"	f
handle_reply	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_reply(socket, status) when is_atom(status) do$/;"	f
handle_reply	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_reply(socket, {status, payload}) when is_atom(status) and is_map(payload) do$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp handle_reply(handler, {:ok, state}), do: {:ok, [handler | state]}$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp handle_reply(handler, {:push, data, state}), do: {:reply, data, [handler | state]}$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp handle_reply(handler, {:reply, _status, data, state}),$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp handle_reply(handler, {:stop, _reason, state}), do: {:stop, [handler | state]}$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp handle_reply(req, handler, {:ok, state}),$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp handle_reply(req, handler, {:push, data, state}),$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp handle_reply(req, handler, {:reply, _status, data, state}),$/;"	f
handle_reply	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  defp handle_reply(req, handler, {:stop, _reason, state}),$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result(result, :handle_in) do$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result(result, callback) do$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result({:noreply, socket, timeout_or_hibernate}, _callback) do$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result({:noreply, socket}, _callback) do$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result({:noreply, socket}, callback)$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result({:reply, resp, socket}, :handle_call) do$/;"	f
handle_result	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp handle_result({:stop, reason, socket}, _callback) do$/;"	f
handle_rollback	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_rollback(opts, {conn_mod, state, _}) do$/;"	f
handle_rollback	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_rollback(_, %{postgres: {_, _}} = s) do$/;"	f
handle_rollback	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_rollback(opts, %{postgres: postgres} = s) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:glob, _identifier, _expr}, t, _context, _vars, _acc) when t != [] do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:glob, identifier, expr}, _t, context, vars, [hs | ts]) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:glob, identifier, expr}, _t, context, vars, _) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:identifier, identifier, expr}, t, context, vars, acc) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:literal, literal}, t, context, vars, acc) do$/;"	f
handle_status	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def handle_status(opts, state),$/;"	f
handle_status	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_status(_, %{postgres: postgres} = s), do: {postgres, s}$/;"	f
handle_status	deps/postgrex/lib/postgrex/protocol.ex	/^  def handle_status(_, %{postgres: {postgres, _}} = s), do: {postgres, s}$/;"	f
handle_stop	deps/db_connection/lib/db_connection/holder.ex	/^  def handle_stop(holder, err) do$/;"	f
handle_timeout	deps/db_connection/lib/db_connection/connection.ex	/^  defp handle_timeout(s), do: {:noreply, s}$/;"	f
handle_tracker_result	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp handle_tracker_result(other, state) do$/;"	f
handle_tracker_result	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp handle_tracker_result({:ok, tracker_state}, state) do$/;"	f
handle_transaction	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handle_transaction(statement, opts, %{buffer: buffer} = s) do$/;"	f
handle_update	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp handle_update({pid, topic, key, meta_updater}, state) do$/;"	f
handler	deps/telemetry/src/telemetry.hrl	/^-record(handler, {id :: telemetry:handler_id() | '_',$/;"	r
handshake	deps/postgrex/lib/postgrex/protocol.ex	/^  defp handshake(%{sock: {:gen_tcp, sock}, timeout: timeout} = s, status) do$/;"	f
handshake_shutdown	deps/postgrex/lib/postgrex/protocol.ex	/^  def handshake_shutdown(timeout, pid, sock) do$/;"	f
hard_line_breaks	deps/earmark/lib/earmark/ast/inline.ex	/^  defp hard_line_breaks(text, _) do$/;"	f
hard_line_breaks	deps/earmark/lib/earmark/ast/inline.ex	/^  defp hard_line_breaks(text, false), do: text$/;"	f
hard_line_breaks	deps/earmark/lib/earmark/ast/inline.ex	/^  defp hard_line_breaks(text, gfm)$/;"	f
hard_line_breaks	deps/earmark/lib/earmark/ast/inline.ex	/^  defp hard_line_breaks(text, nil), do: text$/;"	f
has_attachment?	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^      defp has_attachment?(mail) do$/;"	f
has_delta?	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def has_delta?(%State{delta: %State{clouds: clouds}}) do$/;"	f
has_doc_matcher?	deps/plug/lib/plug/debugger.ex	/^    defp has_doc_matcher?(name, arity) do$/;"	f
has_docs?	deps/plug/lib/plug/debugger.ex	/^    def has_docs?(module, fun, arity) do$/;"	f
has_docs?	deps/plug/lib/plug/debugger.ex	/^    def has_docs?(module, name, arity) do$/;"	f
has_many	deps/ecto/lib/ecto/schema.ex	/^  defmacro has_many(name, queryable, opts \\\\ []) do$/;"	a
has_many assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many assoc" do$/;"	t
has_many assoc on delete deletes all	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many assoc on delete deletes all" do$/;"	t
has_many assoc on delete does nothing	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many assoc on delete does nothing" do$/;"	t
has_many assoc on delete nilifies all	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many assoc on delete nilifies all" do$/;"	t
has_many assoc selector	deps/ecto/integration_test/cases/joins.exs	/^  test "has_many assoc selector" do$/;"	t
has_many association join	deps/ecto/integration_test/cases/joins.exs	/^  test "has_many association join" do$/;"	t
has_many changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many changeset assoc (on_replace: :delete)" do$/;"	t
has_many changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many changeset assoc (on_replace: :nilify)" do$/;"	t
has_many changeset assoc with constraints	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many changeset assoc with constraints" do$/;"	t
has_many through	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many through-through assoc leading" do$/;"	t
has_many through	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many through-through assoc trailing" do$/;"	t
has_many through	deps/ecto/integration_test/cases/joins.exs	/^  test "has_many through-through assoc selector" do$/;"	t
has_many through assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_many through assoc" do$/;"	t
has_many through assoc selector	deps/ecto/integration_test/cases/joins.exs	/^  test "has_many through assoc selector" do$/;"	t
has_many through association join	deps/ecto/integration_test/cases/joins.exs	/^  test "has_many through association join" do$/;"	t
has_many through nested association joins	deps/ecto/integration_test/cases/joins.exs	/^  test "has_many through nested association joins" do$/;"	t
has_named_binding?	deps/ecto/lib/ecto/query.ex	/^  def has_named_binding?(%Ecto.Query{aliases: aliases}, key) do$/;"	f
has_named_binding?	deps/ecto/lib/ecto/query.ex	/^  def has_named_binding?(queryable, _key)$/;"	f
has_named_binding?	deps/ecto/lib/ecto/query.ex	/^  def has_named_binding?(queryable, key) do$/;"	f
has_namespace?	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp has_namespace?(module_name, namespaces) do$/;"	f
has_one	deps/ecto/lib/ecto/schema.ex	/^  defmacro has_one(name, queryable, opts \\\\ []) do$/;"	a
has_one assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_one assoc" do$/;"	t
has_one assoc selector	deps/ecto/integration_test/cases/joins.exs	/^  test "has_one assoc selector" do$/;"	t
has_one association join	deps/ecto/integration_test/cases/joins.exs	/^  test "has_one association join" do$/;"	t
has_one changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_one changeset assoc (on_replace: :delete)" do$/;"	t
has_one changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_one changeset assoc (on_replace: :nilify)" do$/;"	t
has_one changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "has_one changeset assoc (on_replace: :update)" do$/;"	t
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([], :force_outside), do: nil$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([], open), do: open$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([_ | rest], :force_outside),$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([_ | rest], open = {_, _}),$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([{:backtix, btx} | rest], nil),$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([{:backtix, btx} | rest], open = {_, openedbtx}) do$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([{:escape, _} | rest], nil),$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix([{:other, _} | rest], nil),$/;"	f
has_still_opening_backtix	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  defp has_still_opening_backtix(tokens, opened_so_far)$/;"	f
has_type?	deps/mime/lib/mime/application.ex	/^      def has_type?(file_extension) do$/;"	f
hash	deps/phoenix/lib/phoenix/template.ex	/^  def hash(root, pattern \\\\ @default_pattern) do$/;"	f
hash_password	deps/postgrex/lib/postgrex/scram.ex	/^  defp hash_password(_secret, _salt, _iterations, _block_index, acc, length)$/;"	f
hash_password	deps/postgrex/lib/postgrex/scram.ex	/^  defp hash_password(secret, salt, iterations) do$/;"	f
hash_password	deps/postgrex/lib/postgrex/scram.ex	/^  defp hash_password(secret, salt, iterations, block_index, acc, length) do$/;"	f
having	deps/ecto/lib/ecto/query.ex	/^  defmacro having(query, binding \\\\ [], expr) do$/;"	a
having	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp having(%{havings: havings} = query, sources) do$/;"	f
having	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp having(%{havings: havings} = query, sources) do$/;"	f
having	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp having(%Query{havings: havings} = query, sources) do$/;"	f
headers_to_iolist	deps/plug/src/plug_multipart.erl	/^headers_to_iolist([], Acc) ->$/;"	f	module:plug_multipart
headers_to_iolist	deps/plug/src/plug_multipart.erl	/^headers_to_iolist([{N, V}|Tail], Acc) ->$/;"	f	module:plug_multipart
hello	deps/plug/lib/plug/builder.ex	/^        def hello(conn, opts) do$/;"	f
hex	deps/secure_random/lib/secure_random.ex	/^  def hex(n \\\\ @default_length) do$/;"	f
hex_pad	deps/secure_random/lib/secure_random.ex	/^  defp hex_pad(hex, count) do$/;"	f
hierarchy_to_precedence	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  def hierarchy_to_precedence(hierarchy) do$/;"	f
highlight	deps/makeup/lib/makeup.ex	/^  def highlight(source, options \\\\ []) do$/;"	f
highlight_code_block	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  defp highlight_code_block(full_block, lang, code, outer_opts) do$/;"	f
highlight_code_blocks	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  def highlight_code_blocks(html, opts \\\\ []) do$/;"	f
highlight_inner_html	deps/makeup/lib/makeup.ex	/^  def highlight_inner_html(source, options \\\\ []) do$/;"	f
hints	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp hints([]), do: []$/;"	f
hints	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp hints([_ | _] = hints), do: [" WITH (", Enum.intersperse(hints, ", "), ?)]$/;"	f
hmac_sha2_sign	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_sign(payload, key, digest_type) do$/;"	f
hmac_sha2_to_digest_type	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_to_digest_type("HS256"), do: :sha256$/;"	f
hmac_sha2_to_digest_type	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_to_digest_type("HS384"), do: :sha384$/;"	f
hmac_sha2_to_digest_type	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_to_digest_type("HS512"), do: :sha512$/;"	f
hmac_sha2_to_protected	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_to_protected(:sha256), do: "HS256"$/;"	f
hmac_sha2_to_protected	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_to_protected(:sha384), do: "HS384"$/;"	f
hmac_sha2_to_protected	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_to_protected(:sha512), do: "HS512"$/;"	f
hmac_sha2_verify	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp hmac_sha2_verify(signed, key) when is_binary(signed) and is_binary(key) do$/;"	f
holder_apply	deps/db_connection/lib/db_connection/holder.ex	/^  defp holder_apply(holder, module, fun, args) do$/;"	f
host	deps/phoenix/lib/phoenix/endpoint.ex	/^      def host do$/;"	f
host	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def host(endpoint) do$/;"	f
host	deps/plug/lib/plug/ssl.ex	/^  defp host(host, _) when is_binary(host), do: host$/;"	f
host	deps/plug/lib/plug/ssl.ex	/^  defp host(nil, host), do: host$/;"	f
host	deps/plug/lib/plug/ssl.ex	/^  defp host({:system, env}, host), do: host(System.get_env(env), host)$/;"	f
host	deps/plug/lib/plug/ssl.ex	/^  defp host({mod, fun, args}, host), do: host(apply(mod, fun, args), host)$/;"	f
host_and_port	deps/postgrex/lib/postgrex/protocol.ex	/^  defp host_and_port(opts) do$/;"	f
host_to_binary	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp host_to_binary(host), do: host$/;"	f
host_to_binary	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp host_to_binary({:system, env_var}), do: host_to_binary(System.get_env(env_var))$/;"	f
host_to_binary	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp host_to_binary(host), do: host$/;"	f
host_to_binary	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp host_to_binary({:system, env_var}), do: host_to_binary(System.get_env(env_var))$/;"	f
hsts_header	deps/plug/lib/plug/ssl.ex	/^  defp hsts_header(opts) do$/;"	f
html	deps/phoenix/lib/phoenix/controller.ex	/^  def html(conn, data) do$/;"	f
html_escape	deps/plug/lib/plug/html.ex	/^  def html_escape(data) when is_binary(data) do$/;"	f
html_escape_to_iodata	deps/plug/lib/plug/html.ex	/^  def html_escape_to_iodata(data) when is_binary(data) do$/;"	f
html_response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def html_response(conn, status) do$/;"	f
http	deps/plug/lib/plug/adapters/cowboy.ex	/^  def http(plug, opts, cowboy_options \\\\ []) do$/;"	f
http	deps/plug/lib/plug/adapters/cowboy2.ex	/^  def http(plug, opts, cowboy_options \\\\ []) do$/;"	f
http_or_https	deps/ex_doc/lib/ex_doc.ex	/^  defp http_or_https("http:\/\/" <> rest),$/;"	f
http_or_https	deps/ex_doc/lib/ex_doc.ex	/^  defp http_or_https("https:\/\/" <> rest),$/;"	f
http_or_https	deps/ex_doc/lib/ex_doc.ex	/^  defp http_or_https(_),$/;"	f
https	deps/plug/lib/plug/adapters/cowboy.ex	/^  def https(plug, opts, cowboy_options \\\\ []) do$/;"	f
https	deps/plug/lib/plug/adapters/cowboy2.ex	/^  def https(plug, opts, cowboy_options \\\\ []) do$/;"	f
humanize	deps/phoenix/lib/phoenix/naming.ex	/^  def humanize(atom) when is_atom(atom),$/;"	f
humanize	deps/phoenix/lib/phoenix/naming.ex	/^  def humanize(bin) when is_binary(bin) do$/;"	f
i	deps/plug/lib/plug/upload.ex	/^  defp i(integer), do: Integer.to_string(integer)$/;"	f
id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp id(%{id: id}, nil), do: id$/;"	f
id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp id(%{id: mod_id}, %ExDoc.FunctionNode{id: id, type: :callback}), do: "c:#{mod_id}.#{id}"$/;"	f
id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp id(%{id: mod_id}, %ExDoc.FunctionNode{id: id}), do: "#{mod_id}.#{id}"$/;"	f
id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp id(%{id: mod_id}, %ExDoc.TypeNode{id: id}), do: "t:#{mod_id}.#{id}"$/;"	f
id	deps/phoenix/lib/phoenix/socket.ex	/^        def id(socket), do: "users_socket:#{socket.assigns.user_id}"$/;"	f
id	deps/phoenix/lib/phoenix/socket.ex	/^      def id(socket), do: "users_socket:#{socket.assigns.user_id}"$/;"	f
iex_running?	deps/phoenix/lib/mix/tasks/phx.server.ex	/^  defp iex_running? do$/;"	f
if_check_constraint_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_check_constraint_exists(condition, name, prefix) do$/;"	f
if_column_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_column_exists(prefix, table, column_name) do$/;"	f
if_column_not_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_column_not_exists(prefix, table, column_name) do$/;"	f
if_do	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp if_do(condition, value) do$/;"	f
if_do	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp if_do(condition, value) do$/;"	f
if_do	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_do(condition, value) do$/;"	f
if_exists_drop_constraint	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_exists_drop_constraint(name, statement_prefix) do$/;"	f
if_index_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_index_exists(condition, index_name, table_name) do$/;"	f
if_index_not_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_index_not_exists(condition, index_name, table_name) do$/;"	f
if_object_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_object_exists(name, type, statement) do$/;"	f
if_table_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_table_exists(condition, name, prefix) do$/;"	f
if_table_not_exists	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp if_table_not_exists(condition, name, prefix) do$/;"	f
ignore	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def ignore(combinator \\\\ empty(), to_ignore)$/;"	f
ignore_exit_status?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp ignore_exit_status?(args) do$/;"	f
ignore_path?	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp ignore_path?(filename, excluded_paths) do$/;"	f
ignored?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp ignored?(location, params) do$/;"	f
ignored_by_config_comment?	deps/credo/lib/credo/cli/filter.ex	/^  def ignored_by_config_comment?(%Issue{} = issue, exec) do$/;"	f
ignores_issue?	deps/credo/lib/credo/check/config_comment.ex	/^  def ignores_issue?($/;"	f
ignores_issue?	deps/credo/lib/credo/check/config_comment.ex	/^  def ignores_issue?(_, _) do$/;"	f
ignores_issue?	deps/credo/lib/credo/check/config_comment.ex	/^  def ignores_issue?(config_comment, issue)$/;"	f
igor_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def igor_style, do: HTML.IgorStyle.style()$/;"	f
ilike	deps/ecto/lib/ecto/query/api.ex	/^  def ilike(string, search), do: doc! [string, search]$/;"	f
important	deps/credo/lib/credo/cli/filter.ex	/^  def important(list, exec) when is_list(list) do$/;"	f
important?	deps/credo/lib/credo/cli/filter.ex	/^  def important?(%Issue{} = issue, exec) do$/;"	f
important?	deps/credo/lib/credo/cli/filter.ex	/^  def important?(%SourceFile{filename: filename}, exec) do$/;"	f
in?	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp in?(context, clouds, {replica, clock} = tag) do$/;"	f
in_child?	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp in_child? do$/;"	f
in_clouds?	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp in_clouds?(clouds, replica, tag) do$/;"	f
in_ctx?	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp in_ctx?(ctx, replica, clock) do$/;"	f
in_tmp	deps/ecto_sql/integration_test/support/file_helpers.exs	/^  defmacro in_tmp(fun) do$/;"	a
in_transaction?	deps/ecto/lib/ecto/repo.ex	/^        def in_transaction? do$/;"	f
in_transaction?	deps/ecto/lib/ecto/repo/transaction.ex	/^  def in_transaction?(name) do$/;"	f
in_transaction?	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def in_transaction?(meta) do$/;"	f
in_transaction?	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def in_transaction?(%{pid: pool}) do$/;"	f
in_umbrella?	deps/phoenix/lib/mix/phoenix.ex	/^  def in_umbrella?(app_path) do$/;"	f
inc	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def inc(filter_map, filter) do$/;"	f
include	deps/credo/lib/credo/sources.ex	/^  defp include(files, []), do: files$/;"	f
include	deps/credo/lib/credo/sources.ex	/^  defp include(files, [path | remaining_paths]) do$/;"	f
include_deps	deps/dialyxir/lib/dialyxir/project.ex	/^  defp include_deps do$/;"	f
includes link to SQL sandbox on ownership errors	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "includes link to SQL sandbox on ownership errors" do$/;"	t
increment	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp increment(map, key, matches) do$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:ceiling, sign, _, remain), do: sign == 1 and any_nonzero(remain)$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:down, _, _, _), do: false$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:floor, sign, _, remain), do: sign == -1 and any_nonzero(remain)$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:half_down, _, _, [digit | rest]),$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:half_even, _, [], [?5 | rest]), do: any_nonzero(rest)$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:half_even, _, _, [digit | _]), do: digit > ?5$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:half_even, _, signif, [?5 | rest]),$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:half_up, _, _, [digit | _]), do: digit >= ?5$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(:up, _, _, _), do: true$/;"	f
increment?	deps/decimal/lib/decimal.ex	/^  defp increment?(_, _, _, []), do: false$/;"	f
increment_with_rollover	deps/ecto/lib/ecto/changeset.ex	/^  defp increment_with_rollover(val) when is_integer(val) do$/;"	f
increment_with_rollover	deps/ecto/lib/ecto/changeset.ex	/^  defp increment_with_rollover(val) when val >= 2_147_483_647 do$/;"	f
indent_or_blank?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def indent_or_blank?(%Line.Indent{}), do: true$/;"	f
indent_or_blank?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def indent_or_blank?(line),           do: blank?(line)$/;"	f
indentation	deps/credo/lib/credo/check/consistency/tabs_or_spaces/collector.ex	/^  defp indentation({_, _}), do: nil$/;"	f
indentation	deps/credo/lib/credo/check/consistency/tabs_or_spaces/collector.ex	/^  defp indentation({_line_no, "  " <> _line}), do: :spaces$/;"	f
indentation	deps/credo/lib/credo/check/consistency/tabs_or_spaces/collector.ex	/^  defp indentation({_line_no, "\\t" <> _line}), do: :tabs$/;"	f
index	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def index(conn, _params) do$/;"	f
index	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def index(conn, _params) do$/;"	f
index	deps/ecto_sql/lib/ecto/migration.ex	/^  def index(table, column, opts) when is_binary(table) and is_atom(column) do$/;"	f
index	deps/ecto_sql/lib/ecto/migration.ex	/^  def index(table, columns, opts \\\\ [])$/;"	f
index	deps/ecto_sql/lib/ecto/migration.ex	/^  def index(table, columns, opts) when is_atom(table) do$/;"	f
index	deps/ecto_sql/lib/ecto/migration.ex	/^  def index(table, columns, opts) when is_binary(table) and is_list(columns) and is_list(opts) do$/;"	f
index	deps/phoenix/lib/phoenix/controller.ex	/^      def index(conn, _params, user) do$/;"	f
index	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def index(conn, _params) do$/;"	f
index	deps/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def index(conn, _params) do$/;"	f
index_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp index_expr(literal) when is_binary(literal),$/;"	f
index_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp index_expr(literal), do: quote_name(literal)$/;"	f
index_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp index_expr(literal) when is_binary(literal),$/;"	f
index_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp index_expr(literal),$/;"	f
index_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp index_expr(literal) when is_binary(literal), do: literal$/;"	f
index_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp index_expr(literal), do: quote_name(literal)$/;"	f
indexes	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp indexes(table, assocs, uniques) do$/;"	f
inf?	deps/decimal/lib/decimal.ex	/^  def inf?(%Decimal{coef: :inf}), do: true$/;"	f
inf?	deps/decimal/lib/decimal.ex	/^  def inf?(%Decimal{}), do: false$/;"	f
inflect	deps/phoenix/lib/mix/phoenix.ex	/^  def inflect(singular) do$/;"	f
info	deps/credo/lib/credo/cli/command/info/info_command.ex	/^  defp info(exec) do$/;"	f
info	deps/dialyxir/lib/dialyxir/output.ex	/^  def info(""), do: :ok$/;"	f
info	deps/dialyxir/lib/dialyxir/output.ex	/^  def info(text), do: Mix.shell().info(text)$/;"	f
info	deps/phoenix/lib/phoenix/endpoint/cowboy2_adapter.ex	/^  def info(scheme, endpoint, ref) do$/;"	f
info	deps/plug/lib/plug/debugger.ex	/^  defp info(:error, error), do: {inspect(error.__struct__), Exception.message(error)}$/;"	f
info	deps/plug/lib/plug/debugger.ex	/^  defp info(:exit, reason), do: {"unhandled exit", Exception.format_exit(reason)}$/;"	f
info	deps/plug/lib/plug/debugger.ex	/^  defp info(:throw, thrown), do: {"unhandled throw", inspect(thrown)}$/;"	f
info	deps/puid/lib/puid.ex	/^      def info,$/;"	f
inform	deps/plug/lib/plug/adapters/test/conn.ex	/^  def inform(%{owner: owner, ref: ref}, status, headers) do$/;"	f
inform	deps/plug/lib/plug/conn.ex	/^  def inform(%Conn{} = conn, status, headers \\\\ []) do$/;"	f
inform!	deps/plug/lib/plug/conn.ex	/^  def inform!(%Conn{adapter: {adapter, _}} = conn, status, headers \\\\ []) do$/;"	f
init	deps/connection/lib/connection.ex	/^        def init({host, port, opts, timeout}) do$/;"	f
init	deps/connection/lib/connection.ex	/^      def init(args) do$/;"	f
init	deps/connection/lib/connection.ex	/^  def init(_) do$/;"	f
init	deps/credo/lib/credo/cli/output/shell.ex	/^  def init(_) do$/;"	f
init	deps/credo/lib/credo/execution/execution_config_files.ex	/^  def init(_) do$/;"	f
init	deps/credo/lib/credo/execution/execution_issues.ex	/^  def init(_) do$/;"	f
init	deps/credo/lib/credo/execution/execution_source_files.ex	/^  def init(_) do$/;"	f
init	deps/credo/lib/credo/execution/execution_timing.ex	/^  def init(_) do$/;"	f
init	deps/credo/lib/credo/service/ets_table_helper.ex	/^      def init(opts), do: ETSTableHelper.init(@table_name, opts)$/;"	f
init	deps/credo/lib/credo/service/ets_table_helper.ex	/^  def init(table_name, _) do$/;"	f
init	deps/db_connection/lib/db_connection/connection.ex	/^  def init({mod, opts, pool, tag}) do$/;"	f
init	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def init({mod, opts}) do$/;"	f
init	deps/db_connection/lib/db_connection/connection_pool/pool.ex	/^  def init({owner, tag, mod, opts}) do$/;"	f
init	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def init({module, owner_opts, pool_opts}) do$/;"	f
init	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def init({caller, pool, pool_opts}) do$/;"	f
init	deps/db_connection/lib/db_connection/task.ex	/^  def init(fun, parent, opts) do$/;"	f
init	deps/db_connection/lib/db_connection/watcher.ex	/^  def init(:ok) do$/;"	f
init	deps/ecto/lib/ecto/repo.ex	/^      def init(_type, config) do$/;"	f
init	deps/ecto/lib/ecto/repo/registry.ex	/^  def init(:ok) do$/;"	f
init	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def init({name, repo, otp_app, adapter, opts}) do$/;"	f
init	deps/ecto_sql/integration_test/support/repo.exs	/^      def init(_, opts) do$/;"	f
init	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  def init(_), do: error!()$/;"	f
init	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def init(config) do$/;"	f
init	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def init(connection, driver, config) do$/;"	f
init	deps/ex_doc/lib/ex_doc/refs.ex	/^  def init(_) do$/;"	f
init	deps/mox/lib/mox/server.ex	/^  def init(:ok) do$/;"	f
init	deps/phoenix/lib/phoenix/channel/server.ex	/^  def init({auth_payload, from, socket}) do$/;"	f
init	deps/phoenix/lib/phoenix/code_reloader.ex	/^  def init(opts), do: Keyword.put_new(opts, :reloader, &Phoenix.CodeReloader.reload!\/1)$/;"	f
init	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^  def init(:ok) do$/;"	f
init	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def init(false) do$/;"	f
init	deps/phoenix/lib/phoenix/config.ex	/^  def init({module, config, permanent}) do$/;"	f
init	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^      def init(opts), do: opts$/;"	f
init	deps/phoenix/lib/phoenix/endpoint.ex	/^      def init(_key, config) do$/;"	f
init	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def init(req, {endpoint, opts}) do$/;"	f
init	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp init(conn, endpoint, opts, retry?) do$/;"	f
init	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def init({transport, :http}, req, {module, args}) when transport in [:tcp, :ssl] do$/;"	f
init	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def init({otp_app, mod}) do$/;"	f
init	deps/phoenix/lib/phoenix/presence.ex	/^      def init(opts) do$/;"	f
init	deps/phoenix/lib/phoenix/router.ex	/^      def init(opts) do$/;"	f
init	deps/phoenix/lib/phoenix/router/route.ex	/^  def init(opts), do: opts$/;"	f
init	deps/phoenix/lib/phoenix/router/scope.ex	/^  def init(module) do$/;"	f
init	deps/phoenix/lib/phoenix/socket.ex	/^      def init(state), do: Phoenix.Socket.__init__(state)$/;"	f
init	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^    def init(worker) do$/;"	f
init	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^  def init({endpoint, name, partitions, worker}) do$/;"	f
init	deps/phoenix/lib/phoenix/socket/transport.ex	/^        def init(state) do$/;"	f
init	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  def init(opts), do: opts$/;"	f
init	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def init([]) do$/;"	f
init	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def init({endpoint, handler, options, params, priv_topic, connect_info}) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^        def init({name, options}) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^  def init({server_name, local_name}) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def init({local, gc}) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/pubsub/local_supervisor.ex	/^  def init([server, pool_size, dispatch_rules]) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  def init([server, opts]) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  def init({server_name, pool_size}) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^        def init(opts) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def init([tracker, tracker_opts, opts, name]) do$/;"	f
init	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def init([tracker, tracker_opts, shard_opts]) do$/;"	f
init	deps/plug/lib/plug.ex	/^        def init(opts) do$/;"	f
init	deps/plug/lib/plug.ex	/^        def init(opts), do: opts$/;"	f
init	deps/plug/lib/plug/builder.ex	/^        def init(opts) do$/;"	f
init	deps/plug/lib/plug/builder.ex	/^      def init(opts) do$/;"	f
init	deps/plug/lib/plug/csrf_protection.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/head.ex	/^  def init([]), do: []$/;"	f
init	deps/plug/lib/plug/logger.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/method_override.ex	/^  def init([]), do: []$/;"	f
init	deps/plug/lib/plug/parsers.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/parsers/json.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/parsers/multipart.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/parsers/urlencoded.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/request_id.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session/cookie.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session/ets.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/ssl.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/static.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/telemetry.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/upload.ex	/^  def init(:ok) do$/;"	f
init	deps/postgrex/lib/postgrex/binary_extension.ex	/^      def init(_), do: nil$/;"	f
init	deps/postgrex/lib/postgrex/extension.ex	/^        def init(opts) do$/;"	f
init	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def init(_), do: nil$/;"	f
init	deps/postgrex/lib/postgrex/extensions/bit_string.ex	/^  def init(opts), do: Keyword.fetch!(opts, :decode_binary)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/hstore.ex	/^  def init(opts), do: Keyword.fetch!(opts, :decode_binary)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def init(opts) do$/;"	f
init	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def init(opts) do$/;"	f
init	deps/postgrex/lib/postgrex/extensions/name.ex	/^  def init(opts), do: Keyword.fetch!(opts, :decode_binary)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def init(_), do: nil$/;"	f
init	deps/postgrex/lib/postgrex/extensions/raw.ex	/^  def init(opts), do: Keyword.fetch!(opts, :decode_binary)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def init(_), do: nil$/;"	f
init	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def init(opts), do: Keyword.get(opts, :allow_infinite_timestamps, false)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def init(opts), do: Keyword.get(opts, :allow_infinite_timestamps, false)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/uuid.ex	/^  def init(opts), do: Keyword.fetch!(opts, :decode_binary)$/;"	f
init	deps/postgrex/lib/postgrex/extensions/void_text.ex	/^  def init(_), do: nil$/;"	f
init	deps/postgrex/lib/postgrex/notifications.ex	/^  def init(opts) do$/;"	f
init	deps/postgrex/lib/postgrex/parameters.ex	/^  def init(nil) do$/;"	f
init	deps/postgrex/lib/postgrex/type_server.ex	/^  def init({module, starter}) do$/;"	f
init	deps/postgrex/lib/postgrex/type_supervisor.ex	/^  def init(:ok) do$/;"	f
init	deps/telemetry/src/telemetry_handler_table.erl	/^init([]) ->$/;"	f	module:telemetry_handler_table
init	deps/telemetry/src/telemetry_sup.erl	/^init([]) ->$/;"	f	module:telemetry_sup
init_fun_plug	deps/plug/lib/plug/builder.ex	/^  defp init_fun_plug(plug, opts, guards) do$/;"	f
init_it	deps/connection/lib/connection.ex	/^  def init_it(starter, _, name, mod, args, opts) do$/;"	f
init_join	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp init_join(socket, channel, topic) do$/;"	f
init_mapper	deps/ecto/lib/ecto/repo/schema.ex	/^  defp init_mapper(nil, _dumper, _adapter) do$/;"	f
init_mapper	deps/ecto/lib/ecto/repo/schema.ex	/^  defp init_mapper(schema, dumper, adapter) do$/;"	f
init_module_plug	deps/plug/lib/plug/builder.ex	/^  defp init_module_plug(plug, opts, guards, :compile) do$/;"	f
init_module_plug	deps/plug/lib/plug/builder.ex	/^  defp init_module_plug(plug, opts, guards, :runtime) do$/;"	f
init_multipart	deps/plug/lib/plug/conn.ex	/^  defp init_multipart(%{private: %{plug_multipart: plug_multipart}}) do$/;"	f
init_multipart	deps/plug/lib/plug/conn.ex	/^  defp init_multipart(%{req_headers: req_headers}) do$/;"	f
init_plug	deps/plug/lib/plug/builder.ex	/^  defp init_plug({plug, opts, guards}, init_mode) do$/;"	f
init_plugin	deps/credo/lib/credo/execution/task/initialize_plugins.ex	/^  defp init_plugin(exec, {_mod, false}), do: exec$/;"	f
init_plugin	deps/credo/lib/credo/execution/task/initialize_plugins.ex	/^  defp init_plugin(exec, {mod, _params}) do$/;"	f
init_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp init_recv(s, status, buffer) do$/;"	f
init_session	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp init_session(session) do$/;"	f
init_stop	deps/connection/lib/connection.ex	/^  defp init_stop(starter, name, reason) do$/;"	f
init_test_session	deps/plug/lib/plug/test.ex	/^  def init_test_session(conn, session) do$/;"	f
inject_eex_before_final_end	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp inject_eex_before_final_end(content_to_inject, file_path, binding) do$/;"	f
inject_recorded	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp inject_recorded(contents, id, recorded) do$/;"	f
inject_schema_access	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp inject_schema_access(%Context{file: file} = context, paths, binding) do$/;"	f
inject_tests	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp inject_tests(%Context{test_file: test_file} = context, paths, binding) do$/;"	f
inner_group_order_issue	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp inner_group_order_issue({_base, []}), do: nil$/;"	f
inner_group_order_issue	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp inner_group_order_issue({_base, mod_list}) do$/;"	f
inputs	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  defp inputs(%Schema{} = schema) do$/;"	f
insert	deps/ecto/integration_test/cases/repo.exs	/^  test "insert, update and delete with associated composite pk" do$/;"	t
insert	deps/ecto/integration_test/cases/repo.exs	/^  test "insert, update and delete with composite pk" do$/;"	t
insert	deps/ecto/integration_test/cases/repo.exs	/^  test "insert, update and delete with field source" do$/;"	t
insert	deps/ecto/integration_test/cases/repo.exs	/^  test "insert, update and delete with invalid prefix" do$/;"	t
insert	deps/ecto/integration_test/cases/repo.exs	/^  test "insert, update and delete" do$/;"	t
insert	deps/ecto/lib/ecto/multi.ex	/^  def insert(multi, name, %Changeset{} = changeset, opts) do$/;"	f
insert	deps/ecto/lib/ecto/multi.ex	/^  def insert(multi, name, %_{} = struct, opts) do$/;"	f
insert	deps/ecto/lib/ecto/multi.ex	/^  def insert(multi, name, changeset_or_struct_or_fun, opts \\\\ [])$/;"	f
insert	deps/ecto/lib/ecto/multi.ex	/^  def insert(multi, name, fun, opts) when is_function(fun, 1) do$/;"	f
insert	deps/ecto/lib/ecto/repo.ex	/^        def insert(struct, opts \\\\ []) do$/;"	f
insert	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert(repo, name, %Changeset{} = changeset, opts) when is_list(opts) do$/;"	f
insert	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert(repo, name, %{__struct__: _} = struct, opts) when is_list(opts) do$/;"	f
insert	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def insert(adapter_meta, schema_meta, params, on_conflict, returning, opts) do$/;"	f
insert	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def insert(_prefix, _table, _header, _rows, _on_conflict, _returning) do$/;"	f
insert	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def insert(prefix, table, header, rows, on_conflict, []) do$/;"	f
insert	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def insert(prefix, table, header, rows, on_conflict, returning) do$/;"	f
insert	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def insert(adapter_meta, %{source: source, prefix: prefix}, params,$/;"	f
insert	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def insert(prefix, table, header, rows, on_conflict, returning) do$/;"	f
insert	deps/ex_doc/lib/ex_doc/refs.ex	/^  def insert(entries) do$/;"	f
insert	deps/postgrex/lib/postgrex/parameters.ex	/^  def insert(parameters) do$/;"	f
insert	deps/telemetry/src/telemetry_handler_table.erl	/^insert(HandlerId, EventNames, Function, Config) ->$/;"	f	module:telemetry_handler_table
insert all	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all" do$/;"	t
insert all autogenerates for binary_id type	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all autogenerates for binary_id type" do$/;"	t
insert all with dumping	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all with dumping" do$/;"	t
insert all with invalid prefix	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all with invalid prefix" do$/;"	t
insert all with query	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all with query" do$/;"	t
insert all with returning with schema	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all with returning with schema" do$/;"	t
insert all with returning with schema with field source	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all with returning with schema with field source" do$/;"	t
insert all with returning without schema	deps/ecto/integration_test/cases/repo.exs	/^  test "insert all with returning without schema" do$/;"	t
insert and fetch a schema with utc timestamps	deps/ecto/integration_test/cases/repo.exs	/^  test "insert and fetch a schema with utc timestamps" do$/;"	t
insert and update with changeset	deps/ecto/integration_test/cases/repo.exs	/^  test "insert and update with changeset" do$/;"	t
insert and update with changeset read after writes	deps/ecto/integration_test/cases/repo.exs	/^  test "insert and update with changeset read after writes" do$/;"	t
insert and update with embeds during failing child foreign key	deps/ecto/integration_test/cases/repo.exs	/^  test "insert and update with embeds during failing child foreign key" do$/;"	t
insert and update with empty changeset	deps/ecto/integration_test/cases/repo.exs	/^  test "insert and update with empty changeset" do$/;"	t
insert and update with user	deps/ecto/integration_test/cases/repo.exs	/^  test "insert and update with user-assigned primary key in changeset" do$/;"	t
insert autogenerates for custom id type	deps/ecto/integration_test/cases/repo.exs	/^  test "insert autogenerates for custom id type" do$/;"	t
insert autogenerates for custom type	deps/ecto/integration_test/cases/repo.exs	/^  test "insert autogenerates for custom type" do$/;"	t
insert with no primary key	deps/ecto/integration_test/cases/repo.exs	/^  test "insert with no primary key" do$/;"	t
insert with user	deps/ecto/integration_test/cases/repo.exs	/^  test "insert with user-assigned primary key" do$/;"	t
insert!	deps/ecto/lib/ecto/repo.ex	/^        def insert!(struct, opts \\\\ []) do$/;"	f
insert!	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert!(repo, name, struct_or_changeset, opts) do$/;"	f
insert_all	deps/ecto/lib/ecto/multi.ex	/^  def insert_all(multi, name, schema_or_source, entries, opts \\\\ []) when is_list(opts) do$/;"	f
insert_all	deps/ecto/lib/ecto/repo.ex	/^        def insert_all(schema_or_source, entries, opts \\\\ []) do$/;"	f
insert_all	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert_all(_repo, name, schema, rows, opts) when is_atom(schema) do$/;"	f
insert_all	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert_all(_repo, name, table, rows, opts) when is_binary(table) do$/;"	f
insert_all	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert_all(_repo, name, {source, schema}, rows, opts) when is_atom(schema) do$/;"	f
insert_all	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp insert_all(rows) do$/;"	f
insert_all	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp insert_all(rows, counter) do$/;"	f
insert_all	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def insert_all(adapter_meta, schema_meta, header, rows, on_conflict, returning, opts) do$/;"	f
insert_all	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def insert_all(adapter_meta, schema_meta, conn, header, rows, on_conflict, returning, opts) do$/;"	f
insert_all	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp insert_all(rows, counter) do$/;"	f
insert_all_value	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp insert_all_value(_),   do: '?'$/;"	f
insert_all_value	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp insert_all_value(nil), do: "DEFAULT"$/;"	f
insert_all_value	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp insert_all_value({%Ecto.Query{} = query, _params_counter}), do: [?(, all(query), ?)]$/;"	f
insert_as	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp insert_as({%{sources: sources}, _, _}) do$/;"	f
insert_as	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp insert_as({_, _, _}) do$/;"	f
insert_belongs_to_assocs	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp insert_belongs_to_assocs(record = %{__struct__: struct}, module) do$/;"	f
insert_built_belongs_to_assoc	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp insert_built_belongs_to_assoc(module, association, record) do$/;"	f
insert_each	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp insert_each(values, counter) do$/;"	f
insert_each	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp insert_each(values, counter) do$/;"	f
insert_join	deps/ecto/lib/ecto/association.ex	/^  defp insert_join(join_through, _refl, %{repo: repo}, data, opts) when is_binary(join_through) do$/;"	f
insert_join	deps/ecto/lib/ecto/association.ex	/^  defp insert_join(join_through, refl, parent_changeset, data, opts) when is_atom(join_through) do$/;"	f
insert_join?	deps/ecto/lib/ecto/association.ex	/^  defp insert_join?(%{action: :insert}, _, _field, _related_key), do: true$/;"	f
insert_join?	deps/ecto/lib/ecto/association.ex	/^  defp insert_join?(%{data: owner}, %{data: related}, field, related_key) do$/;"	f
insert_join?	deps/ecto/lib/ecto/association.ex	/^  defp insert_join?(_, %{action: :insert}, _field, _related_key), do: true$/;"	f
insert_or_update	deps/ecto/lib/ecto/multi.ex	/^  def insert_or_update(multi, name, %Changeset{data: %{__meta__: %{state: :loaded}}} = changeset, opts) do$/;"	f
insert_or_update	deps/ecto/lib/ecto/multi.ex	/^  def insert_or_update(multi, name, %Changeset{} = changeset, opts) do$/;"	f
insert_or_update	deps/ecto/lib/ecto/multi.ex	/^  def insert_or_update(multi, name, changeset, opts \\\\ [])$/;"	f
insert_or_update	deps/ecto/lib/ecto/multi.ex	/^  def insert_or_update(multi, name, fun, opts) when is_function(fun, 1) do$/;"	f
insert_or_update	deps/ecto/lib/ecto/repo.ex	/^        def insert_or_update(changeset, opts \\\\ []) do$/;"	f
insert_or_update	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert_or_update(repo, name, changeset, opts) do$/;"	f
insert_or_update!	deps/ecto/lib/ecto/repo.ex	/^        def insert_or_update!(changeset, opts \\\\ []) do$/;"	f
insert_or_update!	deps/ecto/lib/ecto/repo/schema.ex	/^  def insert_or_update!(repo, name, changeset, opts) do$/;"	f
insert_user	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^      def insert_user do$/;"	f
inserting changeset with empty cast associations	deps/ecto/integration_test/cases/assoc.exs	/^  test "inserting changeset with empty cast associations" do$/;"	t
inserting changeset with empty put associations	deps/ecto/integration_test/cases/assoc.exs	/^  test "inserting changeset with empty put associations" do$/;"	t
inserting struct with associations	deps/ecto/integration_test/cases/assoc.exs	/^  test "inserting struct with associations" do$/;"	t
inserting struct with empty associations	deps/ecto/integration_test/cases/assoc.exs	/^  test "inserting struct with empty associations" do$/;"	t
inspect	deps/credo/lib/credo/execution/execution_timing.ex	/^  def inspect(label, fun) do$/;"	f
inspect	deps/credo/lib/credo/source_file.ex	/^    def inspect(source_file, _opts) do$/;"	f
inspect	deps/decimal/lib/decimal.ex	/^  def inspect(dec, _opts) do$/;"	f
inspect	deps/ecto/lib/ecto/association.ex	/^    def inspect(not_loaded, _opts) do$/;"	f
inspect	deps/ecto/lib/ecto/changeset.ex	/^  def inspect(changeset, opts) do$/;"	f
inspect	deps/ecto/lib/ecto/query/inspect.ex	/^  def inspect(%DynamicExpr{binding: binding} = dynamic, opts) do$/;"	f
inspect	deps/ecto/lib/ecto/query/inspect.ex	/^  def inspect(query, opts) do$/;"	f
inspect	deps/ecto/lib/ecto/schema/metadata.ex	/^    def inspect(metadata, opts) do$/;"	f
inspect	deps/plug/lib/plug/conn.ex	/^  def inspect(conn, opts) do$/;"	f
inspect_atoms	deps/ex_doc/lib/ex_doc.ex	/^  defp inspect_atoms(atom) when is_atom(atom), do: inspect(atom)$/;"	f
inspect_atoms	deps/ex_doc/lib/ex_doc.ex	/^  defp inspect_atoms(binary) when is_binary(binary), do: binary$/;"	f
inspect_bin_range	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp inspect_bin_range(min, printable?) do$/;"	f
inspect_bin_range	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp inspect_bin_range(min..max, printable?) do$/;"	f
inspect_char	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp inspect_char(codepoint), do: inspect([codepoint], charlists: :as_charlists)$/;"	f
inspect_config_if_debug	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp inspect_config_if_debug(%Execution{debug: true} = exec) do$/;"	f
inspect_config_if_debug	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp inspect_config_if_debug(exec), do: exec$/;"	f
inspect_opts	deps/plug/lib/plug/builder.ex	/^        defp inspect_opts(conn, opts) do$/;"	f
inspect_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp inspect_source(%Ecto.Query{} = query), do: "^" <> inspect(query)$/;"	f
inspect_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp inspect_source(%Ecto.SubQuery{query: query}), do: "subquery(#{to_string(query)})"$/;"	f
inspect_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp inspect_source({nil, schema}), do: inspect(schema)$/;"	f
inspect_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp inspect_source({source, nil}), do: inspect(source)$/;"	f
inspect_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp inspect_source({source, schema} = from) do$/;"	f
inspect_value	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp inspect_value(:decimal, value), do: "Decimal.new(\\"#{value}\\")"$/;"	f
inspect_value	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp inspect_value(:utc_datetime, value), do: "DateTime.from_naive!(~N[#{value}], \\"Etc\/UTC\\")"$/;"	f
inspect_value	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp inspect_value(:utc_datetime_usec, value), do: "DateTime.from_naive!(~N[#{value}], \\"Etc\/UTC\\")"$/;"	f
inspect_value	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp inspect_value(_type, value), do: inspect(value)$/;"	f
install	deps/phoenix/lib/phoenix/logger.ex	/^  def install do$/;"	f
instructions_for	deps/credo/lib/credo/code/block.ex	/^  defp instructions_for(v) when is_list(v), do: [v]$/;"	f
instructions_for	deps/credo/lib/credo/code/block.ex	/^  defp instructions_for(v)$/;"	f
instructions_for	deps/credo/lib/credo/code/block.ex	/^  defp instructions_for({:__block__, _meta, calls}), do: calls$/;"	f
instrument	deps/phoenix/lib/phoenix/endpoint.ex	/^  defmacro instrument(endpoint_or_conn_or_socket, event, runtime \\\\ Macro.escape(%{}), fun) do$/;"	a
instrument	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^        def instrument(unquote(event), var!(compile), var!(runtime), fun)$/;"	f
instrument	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^      def instrument(event, compile, runtime, fun)$/;"	f
instrument	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^      defmacro instrument(event, runtime \\\\ Macro.escape(%{}), fun) do$/;"	a
instrument_render_and_send	deps/phoenix/lib/phoenix/controller.ex	/^  defp instrument_render_and_send(conn, format, template, assigns) do$/;"	f
instrument_render_and_send	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp instrument_render_and_send(conn, kind, reason, stack, opts) do$/;"	f
instrumenters_and_events	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp instrumenters_and_events(instrumenters) do$/;"	f
integer	deps/jason/lib/encode.ex	/^  def integer(integer) do$/;"	f
integer	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def integer(combinator \\\\ empty(), count_or_opts)$/;"	f
integer4	deps/jason/lib/decoder.ex	/^    defp integer4(char) when char in ?0..?9, do: char - ?0$/;"	f
integer4	deps/jason/lib/decoder.ex	/^    defp integer4(char) when char in ?A..?F, do: char - ?A + 10$/;"	f
integer4	deps/jason/lib/decoder.ex	/^    defp integer4(char) when char in ?a..?f, do: char - ?a + 10$/;"	f
integer8	deps/jason/lib/decoder.ex	/^    defp integer8(char1, char2) do$/;"	f
integer_division	deps/decimal/lib/decimal.ex	/^  defp integer_division(div_sign, coef1, exp1, coef2, exp2) do$/;"	f
integer_to_charlist	deps/decimal/lib/decimal.ex	/^    defp integer_to_charlist(string), do: Integer.to_char_list(string)$/;"	f
integer_to_charlist	deps/decimal/lib/decimal.ex	/^    defp integer_to_charlist(string), do: Integer.to_charlist(string)$/;"	f
intercept	deps/phoenix/lib/phoenix/channel.ex	/^  defmacro intercept(events) do$/;"	a
interpolation_positions	deps/credo/lib/credo/code/interpolation_helper.ex	/^  def interpolation_positions(source, filename \\\\ "nofilename") do$/;"	f
intersect	deps/ecto/lib/ecto/query.ex	/^  defmacro intersect(query, other_query) do$/;"	a
intersect_all	deps/ecto/lib/ecto/query.ex	/^  defmacro intersect_all(query, other_query) do$/;"	a
intersperse_map	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp intersperse_map([], _separator, _mapper, acc),$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp intersperse_map([elem | rest], separator, mapper, acc),$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp intersperse_map([elem], _separator, mapper, acc),$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp intersperse_map(list, separator, mapper, acc \\\\ [])$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_map([], _separator, _mapper, acc),$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_map([elem | rest], separator, mapper, acc),$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_map([elem], _separator, mapper, acc),$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_map(list, separator, mapper, acc \\\\ [])$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_map([], _separator, _mapper), do: []$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_map([elem | rest], separator, mapper) do$/;"	f
intersperse_map	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_map([elem], _separator, mapper), do: mapper.(elem)$/;"	f
intersperse_map	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  defp intersperse_map([], _separator, _mapper, acc),$/;"	f
intersperse_map	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  defp intersperse_map([elem | rest], separator, mapper, acc),$/;"	f
intersperse_map	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  defp intersperse_map([elem], _separator, mapper, acc),$/;"	f
intersperse_map	deps/ex_doc/lib/ex_doc/utils/simple_json.ex	/^  defp intersperse_map(list, separator, mapper, acc \\\\ [])$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_reduce([], _separator, user_acc, _reducer, acc),$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_reduce([elem | rest], separator, user_acc, reducer, acc) do$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_reduce([elem], _separator, user_acc, reducer, acc) do$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp intersperse_reduce(list, separator, user_acc, reducer, acc \\\\ [])$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_reduce([], _separator, user_acc, _reducer, acc),$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_reduce([elem | rest], separator, user_acc, reducer, acc) do$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_reduce([elem], _separator, user_acc, reducer, acc) do$/;"	f
intersperse_reduce	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp intersperse_reduce(list, separator, user_acc, reducer, acc \\\\ [])$/;"	f
interval	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp interval(count, "millisecond", sources, query) do$/;"	f
interval	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp interval(count, interval, sources, query) do$/;"	f
interval	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp interval(count, interval, _sources, _query) when is_float(count) do$/;"	f
interval	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp interval(count, interval, _sources, _query) when is_integer(count) do$/;"	f
interval	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp interval(count, interval, sources, query) do$/;"	f
interval!	deps/ecto/lib/ecto/query/builder.ex	/^  def interval!(interval) when interval in @interval,$/;"	f
interval!	deps/ecto/lib/ecto/query/builder.ex	/^  def interval!(not_string),$/;"	f
interval!	deps/ecto/lib/ecto/query/builder.ex	/^  def interval!(other_string) when is_binary(other_string),$/;"	f
interval_count	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp interval_count(count, _sources, _query) when is_float(count) do$/;"	f
interval_count	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp interval_count(count, _sources, _query) when is_integer(count) do$/;"	f
interval_count	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp interval_count(count, sources, query) do$/;"	f
into	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def into(adapter_meta, statement, params, opts) do$/;"	f
into	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  def into(stream) do$/;"	f
into	deps/plug/lib/plug/conn.ex	/^  def into(conn) do$/;"	f
into	deps/postgrex/lib/postgrex/stream.ex	/^  def into(%Stream{conn: %DBConnection{}} = stream) do$/;"	f
into	deps/postgrex/lib/postgrex/stream.ex	/^  def into(_) do$/;"	f
introspect	lib/boruta/oauth.ex	/^  def introspect(conn, module) do$/;"	f
introspect	lib/boruta/oauth/json/schema.ex	/^  def introspect do$/;"	f
introspect_error	test/support/boruta/oauth/application_mock.ex	/^  def introspect_error(_conn, error), do: {:introspect_error, error}$/;"	f
introspect_request	lib/boruta/oauth/request.ex	/^  defdelegate introspect_request(conn), to: Request.Introspect, as: :request$/;"	d
introspect_success	test/support/boruta/oauth/application_mock.ex	/^  def introspect_success(_conn, introspect), do: {:introspect_success, introspect}$/;"	f
invalid_args!	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  defp invalid_args! do$/;"	f
invalid_operation	deps/ecto/lib/ecto/multi.ex	/^  defp invalid_operation(_operation),$/;"	f
invalid_operation	deps/ecto/lib/ecto/multi.ex	/^  defp invalid_operation({name, {:changeset, %{valid?: false} = changeset, _}}),$/;"	f
invalid_operation	deps/ecto/lib/ecto/multi.ex	/^  defp invalid_operation({name, {:error, value}}),$/;"	f
invalid_param_error	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp invalid_param_error(mod, fun, arity, action, routes) do$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?([], _match), do: false$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?([h | _], _match) when h in [".", "..", ""], do: true$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?([h | t], match), do: String.contains?(h, match) or invalid_path?(t)$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?(list) do$/;"	f
invalid_route_error	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp invalid_route_error(prelude, fun, routes) do$/;"	f
invert_word_map	deps/makeup/lib/makeup/lexer/postprocess.ex	/^  def invert_word_map(pairs) do$/;"	f
invokes add and mult	deps/mox/lib/mox.ex	/^      test "invokes add and mult" do$/;"	t
invokes add and mult from a task	deps/mox/lib/mox.ex	/^      test "invokes add and mult from a task" do$/;"	t
io_device	deps/earmark/lib/earmark/cli.ex	/^  defp io_device({:error, reason}, filename) do$/;"	f
io_device	deps/earmark/lib/earmark/cli.ex	/^  defp io_device({:ok, io_device}, _), do: io_device$/;"	f
iodata_empty?	deps/plug/lib/plug/conn.ex	/^  defp iodata_empty?(""), do: true$/;"	f
iodata_empty?	deps/plug/lib/plug/conn.ex	/^  defp iodata_empty?([]), do: true$/;"	f
iodata_empty?	deps/plug/lib/plug/conn.ex	/^  defp iodata_empty?([head | tail]), do: iodata_empty?(head) and iodata_empty?(tail)$/;"	f
iodata_empty?	deps/plug/lib/plug/conn.ex	/^  defp iodata_empty?(_), do: false$/;"	f
is_combinator	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defmacrop is_combinator(combinator) do$/;"	a
is_do	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp is_do(_), do: false$/;"	f
is_do	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp is_do({_, _, :do}), do: true$/;"	f
is_nil	deps/ecto/lib/ecto/query/api.ex	/^  def is_nil(value), do: doc! [value]$/;"	f
is_parameter_in_function_call	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp is_parameter_in_function_call($/;"	f
is_parameter_in_function_call	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp is_parameter_in_function_call(_) do$/;"	f
is_parameter_in_function_call	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp is_parameter_in_function_call({atom, _, arguments})$/;"	f
is_sigil	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp is_sigil(_), do: false$/;"	f
is_sigil	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp is_sigil(maybe_sigil) when is_atom(maybe_sigil) do$/;"	f
is_sigil_in_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^    defp is_sigil_in_line(source, line_no) do$/;"	f
is_user	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^      defp is_user(cookie) do$/;"	f
is_user?	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^      defp is_user?(cookie) do$/;"	f
issue	deps/credo/lib/credo/check/readability/alias_as.ex	/^  defp issue(_ast, _issue_meta), do: nil$/;"	f
issue	deps/credo/lib/credo/check/readability/alias_as.ex	/^  defp issue({:alias, _, [{_, _, original}, [as: {_, meta, _}]]}, issue_meta),$/;"	f
issue?	deps/credo/lib/credo/check/refactor/function_arity.ex	/^  defp issue?(:defp, true, _, _), do: false$/;"	f
issue?	deps/credo/lib/credo/check/refactor/function_arity.ex	/^  defp issue?(_, _, _, _), do: false$/;"	f
issue?	deps/credo/lib/credo/check/refactor/function_arity.ex	/^  defp issue?(_, _, arity, max_arity) when arity > max_arity, do: true$/;"	f
issue_color	deps/credo/lib/credo/cli/output.ex	/^  def issue_color(issue) do$/;"	f
issue_for	deps/credo/.template.check.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp issue_for(issue_meta, this_node, other_nodes, nodes_threshold, params) do$/;"	f
issue_for	deps/credo/lib/credo/check/design/tag_fixme.ex	/^  defp issue_for(issue_meta, {line_no, _line, trigger}) do$/;"	f
issue_for	deps/credo/lib/credo/check/design/tag_todo.ex	/^  defp issue_for(issue_meta, {line_no, _line, trigger}) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/alias_as.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp issue_for(issue_meta, %{line_no: line_no, trigger: trigger, module: module}) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp issue_for(issue_meta, line_no, column, trigger, expected) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/max_line_length.ex	/^  defp issue_for(line_no, max_length, line, issue_meta) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/module_doc.ex	/^  defp issue_for(message, issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/module_names.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/multi_alias.ex	/^  defp issue_for(issue_meta, line_no, base_alias, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  defp issue_for(issue_meta, line_no, kind) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^  defp issue_for(issue_meta, line_no, trigger, _) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/prefer_implicit_try.ex	/^  defp issue_for(issue_meta, line_no) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp issue_for(issue_meta, atom, line_no, column) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^  defp issue_for(issue_meta, line, max_blank_lines) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/semicolons.ex	/^  defp issue_for(issue_meta, line_no, column) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/single_pipe.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/space_after_commas.ex	/^  defp issue_for(issue_meta, trigger, line_no, column) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/specs.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp issue_for(issue_meta, line_no, trigger, maximum_allowed_quotes) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/trailing_blank_line.ex	/^  defp issue_for(issue_meta, line_no) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^  defp issue_for(issue_meta, line_no, column, line_length) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/unnecessary_alias_expansion.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp issue_for(issue_meta, line_no, trigger, max_value, actual_value) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/append_single_item.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/cond_statements.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  defp issue_for(issue_meta, line_no, trigger, max_value, actual_value) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/function_arity.ex	/^  defp issue_for(issue_meta, line_no, trigger, max_value, actual_value) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^  defp issue_for(issue_meta, line_no) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/map_into.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^  defp issue_for(op, line_no, trigger, issue_meta) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp issue_for(issue_meta, line_no, trigger, max_value, actual_value) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  defp issue_for(issue_meta, line_no, trigger, max_value, actual_value) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp issue_for(issue_meta, trigger, line) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/bool_operation_on_same_values.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/expensive_empty_enum_check.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/iex_pry.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/io_inspect.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp issue_for(issue_meta, line_no) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp issue_for(issue_meta, line_no, trigger) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  defp issue_for(issue_meta, line_no, trigger, operation, constant_result) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/operation_with_constant_result.ex	/^  defp issue_for(issue_meta, line_no, trigger, constant_result) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  defp issue_for(issue_meta, line_no) do$/;"	f
issue_for	deps/credo/lib/credo/check/warning/unused_operation.ex	/^  defp issue_for(format_issue_fun, issue_meta, line_no, trigger, checked_module) do$/;"	f
issue_for	deps/credo/lib/credo/code.ex	/^  defp issue_for({line_no, error_message, _}, filename) do$/;"	f
issue_for_call	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp issue_for_call([{:<<>>, _, [_ | _]} | _] = _args, meta, issue_meta) do$/;"	f
issue_for_call	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp issue_for_call(_args, _meta, _issue_meta) do$/;"	f
issue_for_else_block	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  defp issue_for_else_block(_else_block, meta, issue_meta) do$/;"	f
issue_for_else_block	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  defp issue_for_else_block(nil, _meta, _issue_meta), do: nil$/;"	f
issue_for_first_condition	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  defp issue_for_first_condition(_, _), do: nil$/;"	f
issue_for_first_condition	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  defp issue_for_first_condition({:!, meta, _arguments}, issue_meta) do$/;"	f
issue_for_name	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  defp issue_for_name(_, _, _), do: nil$/;"	f
issue_for_name	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  defp issue_for_name(issue_meta, name, meta)$/;"	f
issue_for_name	deps/credo/lib/credo/check/readability/variable_names.ex	/^    defp issue_for_name({unquote(name), _, nil}, _), do: nil$/;"	f
issue_for_name	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp issue_for_name({name, meta, nil}, issue_meta) do$/;"	f
issue_if_not_ending_with_pattern_clause	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp issue_if_not_ending_with_pattern_clause(clauses, line, issue_meta) do$/;"	f
issue_if_not_starting_with_pattern_clause	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp issue_if_not_starting_with_pattern_clause($/;"	f
issue_if_not_starting_with_pattern_clause	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp issue_if_not_starting_with_pattern_clause(_clauses, line, issue_meta) do$/;"	f
issue_if_one_pattern_clause_with_else	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp issue_if_one_pattern_clause_with_else(clauses, body, line, issue_meta) do$/;"	f
issue_opts	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp issue_opts(line_no, mod_list) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/collector.ex	/^        defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/exception_names.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/line_endings.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/tabs_or_spaces.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for	deps/credo/lib/credo/check/consistency/unused_variable_names.ex	/^  defp issues_for(expected, source_file, params) do$/;"	f
issues_for_call	deps/credo/lib/credo/check/warning/expensive_empty_enum_check.ex	/^  defp issues_for_call(meta, issues, issue_meta, ast) do$/;"	f
issues_for_call	deps/credo/lib/credo/check/warning/iex_pry.ex	/^  defp issues_for_call(meta, issues, issue_meta) do$/;"	f
issues_for_call	deps/credo/lib/credo/check/warning/io_inspect.ex	/^  defp issues_for_call(meta, issues, issue_meta) do$/;"	f
issues_for_call	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp issues_for_call(call, suggestion, meta, issue_meta, issues) do$/;"	f
issues_for_def	deps/credo/lib/credo/check/readability/module_names.ex	/^  defp issues_for_def(body, issues, issue_meta) do$/;"	f
issues_for_definition	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp issues_for_definition(body, issues, issue_meta) do$/;"	f
issues_for_definition	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  defp issues_for_definition({_, _, args}, issues, _, _parens?) when length(args) > 0 do$/;"	f
issues_for_definition	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  defp issues_for_definition({name, meta, _}, issues, issue_meta, enforce_parens?) do$/;"	f
issues_for_definition	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  defp issues_for_definition({{:unquote, _, _}, _, _}, issues, _, _parens?) do$/;"	f
issues_for_definition	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^  defp issues_for_definition(op, body, issues, issue_meta) do$/;"	f
issues_for_lhs	deps/credo/lib/credo/check/readability/variable_names.ex	/^    defp issues_for_lhs({unquote(op), _meta, parameters}, issues, issue_meta) do$/;"	f
issues_for_lhs	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp issues_for_lhs(_, issues, _issue_meta) do$/;"	f
issues_for_lhs	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp issues_for_lhs(list, issues, issue_meta) when is_list(list) do$/;"	f
issues_for_lhs	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp issues_for_lhs(tuple, issues, issue_meta) when is_tuple(tuple) do$/;"	f
issues_for_lhs	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp issues_for_lhs({_name, _meta, nil} = value, issues, issue_meta) do$/;"	f
issues_for_module	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp issues_for_module(_, _, _, _), do: []$/;"	f
issues_for_module	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp issues_for_module(deps, max_deps, issue_meta, meta) when length(deps) > max_deps do$/;"	f
issues_for_name	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp issues_for_name(name, args, meta, issues, issue_meta) do$/;"	f
issues_for_name	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp issues_for_name({:unquote, _, _}, _args, _meta, issues, _issue_meta) do$/;"	f
issues_for_name	deps/credo/lib/credo/check/readability/module_names.ex	/^  defp issues_for_name(name, meta, issues, issue_meta) do$/;"	f
issues_for_name	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^  defp issues_for_name(_op, name, meta, issues, issue_meta) do$/;"	f
issues_for_string_literal	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp issues_for_string_literal($/;"	f
issues_for_with	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp issues_for_with(clauses, body, line, issue_meta) do$/;"	f
issues_list	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp issues_list(issues) do$/;"	f
item_changeset	deps/ecto/integration_test/cases/repo.exs	/^  def item_changeset(item, params) do$/;"	f
iterate	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp iterate(_fun, 0, _prev, acc), do: acc$/;"	f
iterate	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp iterate(fun, iteration, prev, acc) do$/;"	f
iterate	deps/postgrex/lib/postgrex/scram.ex	/^  defp iterate(_secret, 0, _prev, acc), do: acc$/;"	f
iterate	deps/postgrex/lib/postgrex/scram.ex	/^  defp iterate(secret, iteration, prev, acc) do$/;"	f
join	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  def join("<%= singular %>:lobby", payload, socket) do$/;"	f
join	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.presence/presence.ex	/^        def join("some:topic", _params, socket) do$/;"	f
join	deps/ecto/lib/ecto/query.ex	/^  defmacro join(_query, _qual, binding, _expr, opts) when is_list(opts) do$/;"	a
join	deps/ecto/lib/ecto/query.ex	/^  defmacro join(query, qual, binding \\\\ [], expr, opts \\\\ [])$/;"	a
join	deps/ecto/lib/ecto/query.ex	/^  defmacro join(query, qual, binding, expr, opts)$/;"	a
join	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join($/;"	f
join	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join(%JoinExpr{qual: qual, assoc: {ix, right}, on: on} = join, name, names) do$/;"	f
join	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join(%JoinExpr{qual: qual, source: source, on: on} = join, name, names) do$/;"	f
join	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "join: subqueries with parameters" do$/;"	t
join	deps/ecto_sql/integration_test/sql/subquery.exs	/^  test "join: subqueries with select source" do$/;"	t
join	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join(%{joins: []}, _sources), do: []$/;"	f
join	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join(%{joins: joins} = query, sources) do$/;"	f
join	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join(%{joins: []}, _sources), do: []$/;"	f
join	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join(%{joins: joins} = query, sources) do$/;"	f
join	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join(%{joins: []}, _sources), do: []$/;"	f
join	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join(%{joins: joins} = query, sources) do$/;"	f
join	deps/phoenix/lib/phoenix/channel.ex	/^        def join("notification:" <> user_id, %{"ids" => ids}, socket) do$/;"	f
join	deps/phoenix/lib/phoenix/channel.ex	/^        def join(topic, auth_msg, socket) do$/;"	f
join	deps/phoenix/lib/phoenix/channel.ex	/^      def join("room:" <> room_id, _payload, socket) do$/;"	f
join	deps/phoenix/lib/phoenix/channel.ex	/^      def join("room:lobby", _payload, socket) do$/;"	f
join	deps/phoenix/lib/phoenix/channel.ex	/^      def join("room:lobby", payload, socket) do$/;"	f
join	deps/phoenix/lib/phoenix/channel/server.ex	/^  def join(socket, channel, message, opts) do$/;"	f
join	deps/phoenix/lib/phoenix/presence.ex	/^        def join("some:topic", _params, socket) do$/;"	f
join	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp join(module, path, alias, alias?, as, private, assigns) do$/;"	f
join	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def join(%Socket{} = socket, channel, topic, payload \\\\ %{})$/;"	f
join	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def join(%Socket{} = socket, topic) when is_binary(topic) do$/;"	f
join	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def join(%Socket{} = socket, topic, payload) when is_binary(topic) and is_map(payload) do$/;"	f
join	deps/phoenix/priv/templates/phx.gen.channel/channel.ex	/^  def join("<%= singular %>:lobby", payload, socket) do$/;"	f
join	deps/phoenix/priv/templates/phx.gen.presence/presence.ex	/^        def join("some:topic", _params, socket) do$/;"	f
join	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def join(%State{} = state, pid, topic, key, meta \\\\ %{}) do$/;"	f
join!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def join!(expr) when is_atom(expr),$/;"	f
join!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def join!(expr) when is_binary(expr),$/;"	f
join!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def join!(expr),$/;"	f
join!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def join!(query, join, expr, as, count_bind, file, line) do$/;"	f
join!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def join!({source, module}) when is_binary(source) and is_atom(module),$/;"	f
join_alias	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp join_alias(top, alias) when is_atom(alias) do$/;"	f
join_and_wrap	deps/nimble_parsec/lib/nimble_parsec.ex	/^        defp join_and_wrap(_rest, args, context, _line, _offset, joiner) do$/;"	f
join_as	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp join_as(_top, nil), do: nil$/;"	f
join_as	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp join_as(top, as) when is_atom(as) or is_binary(as), do: Enum.join(top.as ++ [as], "_")$/;"	f
join_default_files_if_directory	deps/credo/lib/credo/config_file.ex	/^  defp join_default_files_if_directory(dir) do$/;"	f
join_guards	deps/plug/lib/plug/router.ex	/^  defp join_guards(fst, snd), do: quote(do: unquote(fst) and unquote(snd))$/;"	f
join_guards	deps/plug/lib/plug/router.ex	/^  defp join_guards(fst, true), do: fst$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_on(:cross, true, _sources, _query), do: []$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_on(_qual, expr, sources, query), do: [" ON " | expr(expr, sources, query)]$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_on(:cross, true, _sources, _query), do: []$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_on(_qual, expr, sources, query), do: [" ON " | expr(expr, sources, query)]$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_on(:cross, true, _sources, _query), do: []$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_on(_qual, expr, sources, query), do: [" ON " | expr(expr, sources, query)]$/;"	f
join_on	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_on(_qual, true, _sources, _query), do: [" ON 1 = 1"]$/;"	f
join_path	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp join_path(top, path) do$/;"	f
join_paths	deps/phoenix/lib/phoenix/template.ex	/^  defp join_paths([]),    do: ""$/;"	f
join_paths	deps/phoenix/lib/phoenix/template.ex	/^  defp join_paths(paths), do: Path.join(paths)$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:cross_join), do: :cross$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:full_join), do: :full$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:inner_join), do: :inner$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:inner_lateral_join), do: :inner_lateral$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:join), do: :inner$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:left_join), do: :left$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:left_lateral_join), do: :left_lateral$/;"	f
join_qual	deps/ecto/lib/ecto/query.ex	/^  defp join_qual(:right_join), do: :right$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:cross), do: :cross_join$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:full), do: :full_join$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:inner), do: :join$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:inner_lateral), do: :join_lateral$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:left), do: :left_join$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:left_lateral), do: :left_join_lateral$/;"	f
join_qual	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_qual(:right), do: :right_join$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_qual(:cross, _), do: " CROSS JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_qual(:full, _),  do: " FULL OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_qual(:inner, _), do: " INNER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_qual(:left, _),  do: " LEFT OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_qual(:right, _), do: " RIGHT OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp join_qual(mode, q),   do: error!(q, "join `#{inspect mode}` not supported by MySQL")$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:cross), do: "CROSS JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:full),  do: "FULL OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:inner), do: "INNER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:inner_lateral), do: "INNER JOIN LATERAL "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:left),  do: "LEFT OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:left_lateral),  do: "LEFT OUTER JOIN LATERAL "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp join_qual(:right), do: "RIGHT OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:cross), do: "CROSS JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:full), do: "FULL OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:inner), do: "INNER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:inner_hash), do: "INNER HASH JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:inner_loop), do: "INNER LOOP JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:inner_merge), do: "INNER MERGE JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:inner_remote), do: "INNER REMOTE JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:left), do: "LEFT OUTER JOIN "$/;"	f
join_qual	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp join_qual(:right), do: "RIGHT OUTER JOIN "$/;"	f
join_result	deps/phoenix/lib/phoenix/logger.ex	/^  defp join_result(:error), do: "REFUSED JOIN "$/;"	f
join_result	deps/phoenix/lib/phoenix/logger.ex	/^  defp join_result(:ok), do: "JOINED "$/;"	f
join_sources	deps/ecto/lib/ecto/query/inspect.ex	/^  defp join_sources(joins) do$/;"	f
joins	deps/ecto/integration_test/cases/joins.exs	/^  test "joins" do$/;"	t
joins	deps/ecto/lib/ecto/query/inspect.ex	/^  defp joins(joins, names) do$/;"	f
joins with dynamic in	deps/ecto/integration_test/cases/joins.exs	/^  test "joins with dynamic in :on" do$/;"	t
joins with queries	deps/ecto/integration_test/cases/joins.exs	/^  test "joins with queries" do$/;"	t
joins_query	deps/ecto/lib/ecto/association.ex	/^  def joins_query(%{owner: owner, queryable: queryable,$/;"	f
joins_query	deps/ecto/lib/ecto/association.ex	/^  def joins_query(%{owner: owner, through: through}) do$/;"	f
joins_query	deps/ecto/lib/ecto/association.ex	/^  def joins_query(%{related_key: related_key, owner: owner, owner_key: owner_key, queryable: queryable} = assoc) do$/;"	f
joins_query	deps/ecto/lib/ecto/association.ex	/^  def joins_query(query, through, counter) do$/;"	f
js_content_type?	deps/plug/lib/plug/csrf_protection.ex	/^  defp js_content_type?(conn) do$/;"	f
json	deps/phoenix/lib/phoenix/controller.ex	/^  def json(conn, data) do$/;"	f
json_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp json_decode(x) when is_binary(x), do: {:ok, MyXQL.json_library().decode!(x)}$/;"	f
json_decode	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp json_decode(x), do: {:ok, x}$/;"	f
json_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp json_decode(x) when is_binary(x), do: {:ok, Tds.json_library().decode!(x)}$/;"	f
json_decode	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp json_decode(x), do: {:ok, x}$/;"	f
json_expr_path_to_expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp json_expr_path_to_expr(expr, path) do$/;"	f
json_extract_path	deps/ecto/lib/ecto/query/api.ex	/^  def json_extract_path(json_field, path), do: doc! [json_field, path]$/;"	f
json_extract_path with arrays and objects	deps/ecto/integration_test/cases/type.exs	/^  test "json_extract_path with arrays and objects" do$/;"	t
json_extract_path with embeds	deps/ecto/integration_test/cases/type.exs	/^  test "json_extract_path with embeds" do$/;"	t
json_extract_path with primitive values	deps/ecto/integration_test/cases/type.exs	/^  test "json_extract_path with primitive values" do$/;"	t
json_header_plug	deps/plug/lib/plug.ex	/^      def json_header_plug(conn, opts) do$/;"	f
json_library	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp json_library(), do: Application.get_env(:tds, :json_library, Jason)$/;"	f
json_library	deps/phoenix/lib/phoenix.ex	/^  def json_library do$/;"	f
json_map	deps/jason/lib/helpers.ex	/^  defmacro json_map(kv) do$/;"	a
json_map_take	deps/jason/lib/helpers.ex	/^  defmacro json_map_take(map, take) do$/;"	a
json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  def json_path_element!(binary) when is_binary(binary),$/;"	f
json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  def json_path_element!(integer) when is_integer(integer),$/;"	f
json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  def json_path_element!(other),$/;"	f
json_response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def json_response(conn, status) do$/;"	f
json_response?	deps/phoenix/lib/phoenix/controller.ex	/^  defp json_response?(conn) do$/;"	f
jsonp_body	deps/phoenix/lib/phoenix/controller.ex	/^  defp jsonp_body(data, callback) do$/;"	f
jump_table	deps/jason/lib/codegen.ex	/^  def jump_table(ranges, default) do$/;"	f
jump_table	deps/jason/lib/codegen.ex	/^  def jump_table(ranges, default, max) do$/;"	f
jump_table_to_clauses	deps/jason/lib/codegen.ex	/^  defp jump_table_to_clauses([], literals) do$/;"	f
jump_table_to_clauses	deps/jason/lib/codegen.ex	/^  defp jump_table_to_clauses([{val, {byte, rest, action}} | tail], empty) do$/;"	f
jump_table_to_clauses	deps/jason/lib/codegen.ex	/^  defp jump_table_to_clauses([{val, {{:_, _, _}, rest, action}} | tail], empty) do$/;"	f
keep?	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp keep?(_module_name, []), do: true$/;"	f
keep?	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp keep?(module_name, namespaces), do: has_namespace?(module_name, namespaces)$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(_scopes, _), do: []$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(_scopes, nil), do: []$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(scopes, %Client{authorize_scope: false}) do$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(scopes, %Client{authorize_scope: true} = client) do$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(scopes, %Token{scope: authorized_scope}) do$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(scopes, %_{} = resource_owner) do$/;"	f
keep_if_authorized	lib/boruta/oauth/authorization/scope.ex	/^  defp keep_if_authorized(scopes, :public) do$/;"	f
keep_literals?	deps/ecto/lib/ecto/query/planner.ex	/^  defp keep_literals?(%{combinations: combinations}), do: combinations != []$/;"	f
keep_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp keep_values(%{__struct__: mod}, _params) when is_atom(mod), do: "[FILTERED]"$/;"	f
keep_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp keep_values(%{} = map, params) do$/;"	f
keep_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp keep_values([_ | _] = list, params) do$/;"	f
keep_values	deps/phoenix/lib/phoenix/logger.ex	/^  defp keep_values(_other, _params), do: "[FILTERED]"$/;"	f
key	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp key(pool), do: {__MODULE__, pool}$/;"	f
key	deps/jason/lib/decoder.ex	/^  defp key(data, original, skip, stack, key_decode, string_decode) do$/;"	f
key	deps/jason/lib/decoder.ex	/^  defp key(data, original, skip, stack, key_decode, string_decode, value) do$/;"	f
key	deps/jason/lib/encode.ex	/^  def key(atom, escape) when is_atom(atom) do$/;"	f
key	deps/jason/lib/encode.ex	/^  def key(other, escape) do$/;"	f
key	deps/jason/lib/encode.ex	/^  def key(string, escape) when is_binary(string) do$/;"	f
key!	deps/ecto/lib/ecto/query/builder/preload.ex	/^  def key!(key) do$/;"	f
key!	deps/ecto/lib/ecto/query/builder/preload.ex	/^  def key!(key) when is_atom(key),$/;"	f
key_as_int	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp key_as_int(key_val), do: key_val$/;"	f
key_as_int	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp key_as_int({key, val}) when is_binary(key) do$/;"	f
key_decode_function	deps/jason/lib/decoder.ex	/^  defp key_decode_function(%{keys: :atoms!}), do: &String.to_existing_atom\/1$/;"	f
key_decode_function	deps/jason/lib/decoder.ex	/^  defp key_decode_function(%{keys: :atoms}), do: &String.to_atom\/1$/;"	f
key_decode_function	deps/jason/lib/decoder.ex	/^  defp key_decode_function(%{keys: :strings}), do: &(&1)$/;"	f
key_decode_function	deps/jason/lib/decoder.ex	/^  defp key_decode_function(%{keys: fun}) when is_function(fun, 1), do: fun$/;"	f
key_identifier	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp key_identifier(public_key) do$/;"	f
keys_as_set	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp keys_as_set(properties) do$/;"	f
keyword	deps/jason/lib/encode.ex	/^  def keyword(list, _) when list == [], do: "{}"$/;"	f
keyword	deps/jason/lib/encode.ex	/^  def keyword(list, {escape, encode_map}) when is_list(list) do$/;"	f
keyword_matcher	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^  def keyword_matcher(kind, fun_name, words) do$/;"	f
kill_and_wait	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  defp kill_and_wait(pid) do$/;"	f
kind	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp kind("c:" <> rest), do: {:callback, rest}$/;"	f
kind	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp kind("t:" <> rest), do: {:type, rest}$/;"	f
kind	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp kind(rest), do: {:function, rest}$/;"	f
kind	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp kind(:macro), do: :function$/;"	f
kind	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp kind(:macrocallback), do: :callback$/;"	f
kind	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp kind(other), do: other$/;"	f
known_pattern	deps/ex_doc/lib/ex_doc.ex	/^  defp known_pattern("bitbucket.org\/" <> _, ref),$/;"	f
known_pattern	deps/ex_doc/lib/ex_doc.ex	/^  defp known_pattern("github.com\/" <> _, ref),$/;"	f
known_pattern	deps/ex_doc/lib/ex_doc.ex	/^  defp known_pattern("gitlab.com\/" <> _, ref),$/;"	f
known_pattern	deps/ex_doc/lib/ex_doc.ex	/^  defp known_pattern(_host_with_path, _ref),$/;"	f
kw!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp kw!([], _binding, _counter, exprs, params, _kind, _original) do$/;"	f
kw!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp kw!([{field, nil}|_], _binding, _counter, _exprs, _params, _kind, _original) when is_atom(field) do$/;"	f
kw!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp kw!([{field, value}|t], binding, counter, exprs, params, kind, original) when is_atom(field) do$/;"	f
kw!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp kw!(_, _binding, _counter, _exprs, _params, kind, original) do$/;"	f
kw!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp kw!(kind, kw, binding) do$/;"	f
kw_as_and_prefix	deps/ecto/lib/ecto/query/inspect.ex	/^  defp kw_as_and_prefix(%{as: as, prefix: prefix}) do$/;"	f
kw_expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp kw_expr(_key, nil, _names), do: []$/;"	f
kw_expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp kw_expr(key, expr, names), do: [{key, expr(expr, names)}]$/;"	f
kw_exprs	deps/ecto/lib/ecto/query/inspect.ex	/^  defp kw_exprs(key, exprs, names) do$/;"	f
kw_inspect	deps/ecto/lib/ecto/query/inspect.ex	/^  defp kw_inspect(_key, nil), do: []$/;"	f
kw_inspect	deps/ecto/lib/ecto/query/inspect.ex	/^  defp kw_inspect(key, val), do: [{key, inspect(val)}]$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def label(combinator \\\\ empty(), to_label, label)$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label(:eos) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:bin_segment, inclusive, exclusive, modifiers}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:choice, choices}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:eventually, combinators}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:label, _combinator, label}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:lookahead, combinators, _}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:parsec, name}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:repeat, combinators, _}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:string, binary}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:times, combinators, _, _}) do$/;"	f
label	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp label({:traverse, combinators, _, _}) do$/;"	f
label	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  defp label(key) do$/;"	f
labels	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp labels([]) do$/;"	f
labels	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp labels(combinators) do$/;"	f
lag	deps/ecto/lib/ecto/query/window_api.ex	/^  def lag(value, offset \\\\ 1, default \\\\ nil), do: doc! [value, offset, default]$/;"	f
last	deps/credo/lib/credo/code/name.ex	/^  def last(mod_list) when is_list(mod_list) do$/;"	f
last	deps/credo/lib/credo/code/name.ex	/^  def last(name) when is_atom(name) do$/;"	f
last	deps/credo/lib/credo/code/name.ex	/^  def last(name) when is_binary(name) do$/;"	f
last	deps/ecto/lib/ecto/query.ex	/^  def last(queryable, key), do: last(order_by(queryable, ^key), nil)$/;"	f
last	deps/ecto/lib/ecto/query.ex	/^  def last(queryable, nil), do: %{reverse_order(queryable) | limit: limit()}$/;"	f
last	deps/ecto/lib/ecto/query.ex	/^  def last(queryable, order_by \\\\ nil)$/;"	f
last_call_in_do_block?	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp last_call_in_do_block?(ast, candidate) do$/;"	f
last_call_in_rescue_block?	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp last_call_in_rescue_block?(ast, candidate) do$/;"	f
last_insert_id	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp last_insert_id(_key, 0), do: []$/;"	f
last_insert_id	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp last_insert_id(key, last_insert_id), do: [{key, last_insert_id}]$/;"	f
last_insert_id	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp last_insert_id(nil, _last_insert_id), do: []$/;"	f
last_value	deps/ecto/lib/ecto/query/window_api.ex	/^  def last_value(value), do: doc! [value]$/;"	f
layout	deps/phoenix/lib/phoenix/controller.ex	/^  def layout(conn), do: conn.private |> Map.get(:phoenix_layout, false)$/;"	f
layout	deps/phoenix/lib/phoenix/controller.ex	/^  defp layout(conn, assigns, format) do$/;"	f
layout_formats	deps/phoenix/lib/phoenix/controller.ex	/^  def layout_formats(conn) do$/;"	f
lead	deps/ecto/lib/ecto/query/window_api.ex	/^  def lead(value, offset \\\\ 1, default \\\\ nil), do: doc! [value, offset, default]$/;"	f
leave	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def leave(socket) do$/;"	f
leave	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def leave(%State{pids: pids} = state, pid) do$/;"	f
leave	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def leave(%State{pids: pids} = state, pid, topic, key) do$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left != right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left * right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left + right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left - right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left < right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left <= right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left == right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left > right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left >= right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left \/ right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left and right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left in right, do: doc! [left, right]$/;"	f
left	deps/ecto/lib/ecto/query/api.ex	/^  def left or right, do: doc! [left, right]$/;"	f
left joins with missing entries	deps/ecto/integration_test/cases/joins.exs	/^  test "left joins with missing entries" do$/;"	t
legacy_ignore_warnings?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp legacy_ignore_warnings?() do$/;"	f
len_for_bits	deps/puid/lib/entropy.ex	/^  def len_for_bits(bits, charset) when -1 < bits and (is_atom(charset) or is_binary(charset)) do$/;"	f
len_for_bits!	deps/puid/lib/entropy.ex	/^  def len_for_bits!(bits, charset) when -1 < bits and (is_atom(charset) or is_binary(charset)) do$/;"	f
lex	deps/earmark/lib/earmark/helpers/leex_helpers.ex	/^  def lex text, with: lexer do$/;"	f
lex	deps/erlex/lib/erlex.ex	/^  defp lex(str) do$/;"	f
lex	deps/makeup/lib/makeup/lexer/postprocess.ex	/^    def lex(text) do$/;"	f
lex	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  def lex(text, opts \\\\ []) do$/;"	f
lex	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/testing.ex	/^  def lex(text) do$/;"	f
lexeme	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def lexeme(combinator) do$/;"	f
lexer	deps/erlex/src/lexer.erl	/^-module(lexer).$/;"	m
like	deps/ecto/lib/ecto/query/api.ex	/^  def like(string, search), do: doc! [string, search]$/;"	f
limit	deps/ecto/lib/ecto/query.ex	/^  defmacro limit(query, binding \\\\ [], expr) do$/;"	a
limit	deps/ecto/lib/ecto/query.ex	/^  defp limit do$/;"	f
limit	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp limit(%{limit: %QueryExpr{expr: expr}} = query, sources) do$/;"	f
limit	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp limit(%{limit: nil}, _sources), do: []$/;"	f
limit	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp limit(%{limit: %QueryExpr{expr: expr}} = query, sources) do$/;"	f
limit	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp limit(%{limit: nil}, _sources), do: []$/;"	f
limit	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp limit($/;"	f
limit	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp limit(%Query{limit: nil}, _sources), do: []$/;"	f
line	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def line(combinator \\\\ empty(), to_wrap)$/;"	f
line_at	deps/credo/lib/credo/source_file.ex	/^  def line_at(%__MODULE__{} = source_file, line_no) do$/;"	f
line_at	deps/credo/lib/credo/source_file.ex	/^  def line_at(%__MODULE__{} = source_file, line_no, column1, column2) do$/;"	f
line_ending	deps/credo/lib/credo/check/consistency/line_endings/collector.ex	/^  defp line_ending({_line_no, line}) do$/;"	f
line_no_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def line_no_for(block) do$/;"	f
line_no_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def line_no_for(list) when is_list(list) do$/;"	f
line_no_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def line_no_for(nil), do: nil$/;"	f
line_no_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def line_no_for({:__block__, _meta, arguments}) do$/;"	f
line_no_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def line_no_for({:do, arguments}) do$/;"	f
line_no_for	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def line_no_for({atom, meta, _}) when is_atom(atom) do$/;"	f
line_offset_pair	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp line_offset_pair() do$/;"	f
lines	deps/credo/lib/credo/source_file.ex	/^  def lines(%__MODULE__{filename: filename}) do$/;"	f
lines	deps/credo/lib/credo/source_file.ex	/^  def lines(source_file)$/;"	f
lines_to_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp lines_to_blocks(lines, options, recursive) do$/;"	f
lines_with_count	deps/earmark/lib/earmark/line_scanner.ex	/^  defp lines_with_count(lines, offset) do$/;"	f
link	deps/earmark/lib/earmark/helpers/pure_link_helpers.ex	/^  defp link(text), do: render_link(text, text)$/;"	f
link_detail_headings	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp link_detail_headings(content, prefix) do$/;"	f
link_extractor	deps/earmark/lib/earmark/parser.ex	/^  defp link_extractor(_, result), do: result$/;"	f
link_extractor	deps/earmark/lib/earmark/parser.ex	/^  defp link_extractor(item = %Block.IdDef{id: id}, result) do$/;"	f
link_heading	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp link_heading(_match, tag, title, id, prefix) do$/;"	f
link_heading	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp link_heading(match, _tag, _title, "", _prefix), do: match$/;"	f
link_headings	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def link_headings(content, regex \\\\ @heading_regex, prefix \\\\ "")$/;"	f
link_headings	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def link_headings(content, regex, prefix) do$/;"	f
link_headings	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def link_headings(nil, _, _), do: nil$/;"	f
link_id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def link_id(id, type) do$/;"	f
link_id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def link_id(node), do: link_id(node.id, node.type)$/;"	f
link_moduledoc_headings	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp link_moduledoc_headings(content) do$/;"	f
link_text_lexer	deps/earmark/src/link_text_lexer.erl	/^-module(link_text_lexer).$/;"	m
link_text_parser	deps/earmark/src/link_text_parser.erl	/^-module(link_text_parser).$/;"	m
links_from_blocks	deps/earmark/lib/earmark/parser.ex	/^  defp links_from_blocks(blocks) do$/;"	f
list	deps/jason/lib/encode.ex	/^  def list(list, {escape, encode_map}) do$/;"	f
list	deps/jason/lib/encode.ex	/^  defp list([], _escape, _encode_map) do$/;"	f
list	deps/jason/lib/encode.ex	/^  defp list([head | tail], escape, encode_map) do$/;"	f
list	deps/phoenix/lib/phoenix/presence.ex	/^      def list(%Phoenix.Socket{topic: topic}), do: list(topic)$/;"	f
list	deps/phoenix/lib/phoenix/presence.ex	/^      def list(topic) do$/;"	f
list	deps/phoenix/lib/phoenix/presence.ex	/^  def list(module, topic) do$/;"	f
list	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def list(pubsub_server, shard) when is_atom(pubsub_server) do$/;"	f
list	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def list(tracker_name, topic) do$/;"	f
list	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def list(server_pid, topic) do$/;"	f
list	deps/plug/lib/plug/conn/utils.ex	/^  def list(binary) do$/;"	f
list_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def list_<%= schema.plural %> do$/;"	f
list_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def list_<%= schema.plural %> do$/;"	f
list_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "list_<%= schema.plural %>\/0 returns all <%= schema.plural %>" do$/;"	t
list_	deps/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def list_<%= schema.plural %> do$/;"	f
list_	deps/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def list_<%= schema.plural %> do$/;"	f
list_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "list_<%= schema.plural %>\/0 returns all <%= schema.plural %>" do$/;"	t
list_by_prefix	deps/telemetry/src/telemetry_handler_table.erl	/^list_by_prefix(EventPrefix) ->$/;"	f	module:telemetry_handler_table
list_clients	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate list_clients, to: Boruta.Ecto.Admin.Clients$/;"	d
list_clients	lib/boruta/adapters/ecto/admin/clients.ex	/^  def list_clients do$/;"	f
list_entry	deps/credo/lib/credo/cli/command/info/output/default.ex	/^  defp list_entry(name) do$/;"	f
list_for_event	deps/telemetry/src/telemetry_handler_table.erl	/^list_for_event(EventName) ->$/;"	f	module:telemetry_handler_table
list_handlers	deps/telemetry/src/telemetry.erl	/^list_handlers(EventPrefix) ->$/;"	f	module:telemetry
list_len	deps/crypto_rand/lib/crypto_rand.ex	/^  defp list_len(enumerable) do$/;"	f
list_length	deps/ecto/lib/ecto/changeset.ex	/^  defp list_length(%{types: types}, field, value) do$/;"	f
list_loop	deps/jason/lib/encode.ex	/^  defp list_loop([], _escape, _encode_map) do$/;"	f
list_loop	deps/jason/lib/encode.ex	/^  defp list_loop([head | tail], escape, encode_map) do$/;"	f
list_param_to_args	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp list_param_to_args(idx, length) do$/;"	f
list_scopes	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate list_scopes, to: Boruta.Ecto.Admin.Scopes$/;"	d
list_scopes	lib/boruta/adapters/ecto/admin/scopes.ex	/^  def list_scopes do$/;"	f
list_to_attr	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp list_to_attr([key, comp, value]) do$/;"	f
list_to_attr	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp list_to_attr([key, value]), do: {String.to_atom(key), String.to_atom(value)}$/;"	f
list_to_attr	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp list_to_attr([key]), do: {String.to_atom(key), :string}$/;"	f
list_to_text	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp list_to_text(lst), do: lst |> Enum.reverse() |> Enum.join("")$/;"	f
list_unused_filters?	deps/dialyxir/lib/dialyxir/project.ex	/^  def list_unused_filters?(args) do$/;"	f
list_warnings	deps/dialyxir/lib/mix/tasks/dialyzer/explain.ex	/^  defp list_warnings do$/;"	f
listen	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp listen(conn, server_ref, endpoint, opts) do$/;"	f
listen	deps/postgrex/lib/postgrex/notifications.ex	/^  def listen(pid, channel, opts \\\\ []) do$/;"	f
listen!	deps/postgrex/lib/postgrex/notifications.ex	/^  def listen!(pid, channel, opts \\\\ []) do$/;"	f
listener	deps/postgrex/lib/postgrex/protocol.ex	/^  defp listener(s, status, statement, buffer) do$/;"	f
listener_query	deps/postgrex/lib/postgrex/notifications.ex	/^  defp listener_query(_statement, _ok_result, async_result, from, %{connected: false} = s) do$/;"	f
listener_query	deps/postgrex/lib/postgrex/notifications.ex	/^  defp listener_query(statement, ok_result, async_result, from, s) do$/;"	f
lists all	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "lists all <%= schema.plural %>", %{conn: conn} do$/;"	t
lists all	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "lists all <%= schema.plural %>", %{conn: conn} do$/;"	t
lists all	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "lists all <%= schema.plural %>", %{conn: conn} do$/;"	t
lists all	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "lists all <%= schema.plural %>", %{conn: conn} do$/;"	t
literal	deps/ecto/lib/ecto/query/builder.ex	/^  defp literal(value, expected, vars),$/;"	f
literal_clauses	deps/jason/lib/codegen.ex	/^  defp literal_clauses(clauses) do$/;"	f
load	deps/ecto/integration_test/support/types.exs	/^  def load(integer) when is_integer(integer), do: {:ok, integer}$/;"	f
load	deps/ecto/integration_test/support/types.exs	/^  def load(integer), do: {:ok, {:int, integer}}$/;"	f
load	deps/ecto/integration_test/support/types.exs	/^  def load(string), do: {:ok, "PREFIX-" <> string}$/;"	f
load	deps/ecto/lib/ecto/repo.ex	/^      def load(schema_or_types, data) do$/;"	f
load	deps/ecto/lib/ecto/repo/schema.ex	/^  def load(adapter, schema_or_types, data) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^        def load(data) when is_map(data) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load(_type, nil) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load(_type, nil, _loader) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load(type, value) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load(type, value, _loader) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load({:array, type}, value, loader) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load({:embed, embed}, value) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load({:embed, embed}, value, loader) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load({:map, type}, value, loader) when is_map(value) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load({:maybe, type}, value) do$/;"	f
load	deps/ecto/lib/ecto/type.ex	/^  def load({:maybe, type}, value, loader) do$/;"	f
load	deps/ecto/lib/ecto/uuid.ex	/^  def load(<<_::128>> = uuid) do$/;"	f
load	deps/ecto/lib/ecto/uuid.ex	/^  def load(<<_::64, ?-, _::32, ?-, _::32, ?-, _::32, ?-, _::96>> = string) do$/;"	f
load	deps/ecto/lib/ecto/uuid.ex	/^  def load(_), do: :error$/;"	f
load	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "load" do$/;"	t
load	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def load(<<_::128>> = uuid) do$/;"	f
load	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def load(<<_::64, ?-, _::32, ?-, _::32, ?-, _::32, ?-, _::96>> = string) do$/;"	f
load	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def load(_), do: :error$/;"	f
load	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def load(value) do$/;"	f
load	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp load({:module, module}) do$/;"	f
load	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp load({_kind, module, _name, _arity}) do$/;"	f
load!	deps/ecto/lib/ecto/changeset/relation.ex	/^  def load!(%{__meta__: %{state: :built}}, %NotLoaded{__cardinality__: cardinality}) do$/;"	f
load!	deps/ecto/lib/ecto/changeset/relation.ex	/^  def load!(_struct, loaded), do: loaded$/;"	f
load!	deps/ecto/lib/ecto/changeset/relation.ex	/^  def load!(struct, %NotLoaded{__field__: field}) do$/;"	f
load!	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp load!(type, value, field, struct, adapter) do$/;"	f
load!	deps/ecto/lib/ecto/schema/loader.ex	/^  defp load!(struct, field, type, value, loader) do$/;"	f
load_apps	deps/dialyxir/lib/dialyxir/project.ex	/^  defp load_apps(apps) do$/;"	f
load_apps	deps/dialyxir/lib/dialyxir/project.ex	/^  defp load_apps(nil), do: nil$/;"	f
load_assoc	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp load_assoc({:assoc, _assoc, _ids}, nil) do$/;"	f
load_assoc	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp load_assoc({:assoc, assoc, ids}, struct) do$/;"	f
load_assocs	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp load_assocs({child_key, struct}, refls) do$/;"	f
load_backup	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp load_backup(mod) do$/;"	f
load_changes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp load_changes(changeset, state, types, values, embeds, autogen, adapter, schema_meta) do$/;"	f
load_compile_digests	deps/phoenix/lib/phoenix/digester.ex	/^  defp load_compile_digests(output_path) do$/;"	f
load_config	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def load_config(config, module),$/;"	f
load_config	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def load_config(true, module),$/;"	f
load_docs_chunk	deps/ex_doc/lib/ex_doc/utils/code.ex	/^  defp load_docs_chunk(bin) do$/;"	f
load_each	deps/ecto/lib/ecto/repo/schema.ex	/^  defp load_each(struct, [], _types, _adapter) do$/;"	f
load_each	deps/ecto/lib/ecto/repo/schema.ex	/^  defp load_each(struct, [{_, value} | kv], [{key, type} | types], adapter) do$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(%{cardinality: :many, related: schema, field: field},$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(%{cardinality: :many}, nil, _fun), do: {:ok, []}$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(%{cardinality: :one, related: schema, field: field},$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(%{cardinality: :one}, nil, _fun), do: {:ok, nil}$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(_embed, _value, _fun) do$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(_field, schema, value, loader) when is_map(value) do$/;"	f
load_embed	deps/ecto/lib/ecto/type.ex	/^  defp load_embed(field, _schema, value, _fun) do$/;"	f
load_float	deps/ecto/lib/ecto/type.ex	/^  defp load_float(_), do: :error$/;"	f
load_float	deps/ecto/lib/ecto/type.ex	/^  defp load_float(term) when is_float(term), do: {:ok, term}$/;"	f
load_float	deps/ecto/lib/ecto/type.ex	/^  defp load_float(term) when is_integer(term), do: {:ok, :erlang.float(term)}$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:any), do: &{:ok, &1}$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:binary), do: &same_binary\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:binary_id), do: &same_binary\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:boolean), do: &same_boolean\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:date), do: &same_date\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:decimal), do: &same_decimal\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:float), do: &load_float\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:id), do: &same_integer\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:integer), do: &same_integer\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:map), do: &same_map\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:naive_datetime), do: &load_naive_datetime\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:naive_datetime_usec), do: &load_naive_datetime_usec\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:string), do: &same_binary\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:time), do: &load_time\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:time_usec), do: &load_time_usec\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:utc_datetime), do: &load_utc_datetime\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(:utc_datetime_usec), do: &load_utc_datetime_usec\/1$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun(mod) when is_atom(mod), do: &mod.load(&1)$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun({:array, type}), do: &array(&1, load_fun(type), [])$/;"	f
load_fun	deps/ecto/lib/ecto/type.ex	/^  defp load_fun({:map, type}), do: &map(&1, load_fun(type), %{})$/;"	f
load_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp load_manifest(output_path) do$/;"	f
load_migration!	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp load_migration!({version, _, file}) when is_binary(file) do$/;"	f
load_migration!	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp load_migration!({version, _, mod}) when is_atom(mod) do$/;"	f
load_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp load_naive_datetime(%DateTime{} = datetime),$/;"	f
load_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp load_naive_datetime(%NaiveDateTime{} = naive_datetime),$/;"	f
load_naive_datetime	deps/ecto/lib/ecto/type.ex	/^  defp load_naive_datetime(_), do: :error$/;"	f
load_naive_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_naive_datetime_usec(%DateTime{} = datetime),$/;"	f
load_naive_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_naive_datetime_usec(%NaiveDateTime{} = naive_datetime),$/;"	f
load_naive_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_naive_datetime_usec(_), do: :error$/;"	f
load_state	deps/plug/lib/plug/csrf_protection.ex	/^  def load_state(secret_key_base, csrf_state) when is_binary(csrf_state) or is_nil(csrf_state) do$/;"	f
load_struct	deps/ecto/lib/ecto/schema/loader.ex	/^  def load_struct(nil, _prefix, _source), do: %{}$/;"	f
load_struct	deps/ecto/lib/ecto/schema/loader.ex	/^  def load_struct(schema, prefix, source) do$/;"	f
load_structure	deps/ecto_sql/lib/mix/tasks/ecto.load.ex	/^  defp load_structure(repo, opts) do$/;"	f
load_through	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp load_through({:through, assoc, throughs}, struct) do$/;"	f
load_time	deps/ecto/lib/ecto/type.ex	/^  defp load_time(%Time{} = time), do: {:ok, truncate_usec(time)}$/;"	f
load_time	deps/ecto/lib/ecto/type.ex	/^  defp load_time(_), do: :error$/;"	f
load_time_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_time_usec(%Time{} = time), do: {:ok, pad_usec(time)}$/;"	f
load_time_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_time_usec(_), do: :error$/;"	f
load_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp load_utc_datetime(%DateTime{} = datetime),$/;"	f
load_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp load_utc_datetime(%NaiveDateTime{} = naive_datetime),$/;"	f
load_utc_datetime	deps/ecto/lib/ecto/type.ex	/^  defp load_utc_datetime(_),$/;"	f
load_utc_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_utc_datetime_usec(%DateTime{} = datetime),$/;"	f
load_utc_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_utc_datetime_usec(%NaiveDateTime{} = naive_datetime),$/;"	f
load_utc_datetime_usec	deps/ecto/lib/ecto/type.ex	/^  defp load_utc_datetime_usec(_),$/;"	f
loaded	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp loaded(module) do$/;"	f
loaded_and_exported?	deps/ecto/lib/ecto/type.ex	/^  defp loaded_and_exported?(module, fun, arity) do$/;"	f
loaders	deps/ecto/lib/ecto/adapter.ex	/^      def loaders(:binary_id, type), do: [Ecto.UUID, type]$/;"	f
loaders	deps/ecto/lib/ecto/adapter.ex	/^      def loaders(:boolean, type), do: [&bool_decode\/1, type]$/;"	f
loaders	deps/ecto/lib/ecto/adapter.ex	/^      def loaders(_primitive, type), do: [type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/mysql.ex	/^  def loaders(_, _), do: error!()$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders(:binary_id, type),  do: [Ecto.UUID, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders(:boolean, type),    do: [&bool_decode\/1, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders(:float, type),      do: [&float_decode\/1, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders(:map, type),        do: [&json_decode\/1, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders(_, type),           do: [type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders({:embed, _}, type), do: [&json_decode\/1, &Ecto.Type.embedded_load(type, &1, :json)]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def loaders({:map, _}, type),   do: [&json_decode\/1, &Ecto.Type.embedded_load(type, &1, :json)]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def loaders(:binary_id, type),  do: [Ecto.UUID, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def loaders(_, type),           do: [type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def loaders({:embed, _}, type), do: [&Ecto.Type.embedded_load(type, &1, :json)]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def loaders({:map, _}, type),   do: [&Ecto.Type.embedded_load(type, &1, :json)]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def loaders(:binary_id, type), do: [Tds.Ecto.UUID, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def loaders(:boolean, type), do: [&bool_decode\/1, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def loaders(:map, type), do: [&json_decode\/1, type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def loaders(_, type), do: [type]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def loaders({:embed, _}, type), do: [&json_decode\/1, &Ecto.Type.embedded_load(type, &1, :json)]$/;"	f
loaders	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def loaders({:map, _}, type), do: [&json_decode\/1, &Ecto.Type.embedded_load(type, &1, :json)]$/;"	f
local_for_shard	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  defp local_for_shard(shard, pubsub_server) do$/;"	f
local_name	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def local_name(pubsub_server, shard) do$/;"	f
local_plt	deps/dialyxir/lib/dialyxir/project.ex	/^  defp local_plt(name) do$/;"	f
local_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp local_url(:type, name, arity, config) when {name, arity} in @basic_types do$/;"	f
local_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp local_url(:type, name, arity, config) when {name, arity} in @built_in_types do$/;"	f
local_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp local_url(kind, name, arity, config) do$/;"	f
locate	deps/credo/lib/credo/check/consistency/space_in_parentheses/collector.ex	/^  defp locate(kind_of_space, {line_no, line}, locations) do$/;"	f
locate	deps/postgrex/lib/postgrex/type_supervisor.ex	/^  def locate(module, key) do$/;"	f
lock	deps/ecto/lib/ecto/query.ex	/^  defmacro lock(query, binding \\\\ [], expr) do$/;"	a
lock	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp lock(%{lock: binary}, _sources) when is_binary(binary), do: [?\\s | binary]$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp lock(%{lock: expr} = query, sources), do: [?\\s | expr(expr, sources, query)]$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp lock(%{lock: nil}, _sources), do: []$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp lock(%{lock: binary}, _sources) when is_binary(binary), do: [?\\s | binary]$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp lock(%{lock: expr} = query, sources), do: [?\\s | expr(expr, sources, query)]$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp lock(%{lock: nil}, _sources), do: []$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp lock(%{lock: binary}, _sources) when is_binary(binary), do: [" OPTION (", binary, ?)]$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp lock(%{lock: expr} = query, sources), do: [" OPTION (", expr(expr, sources, query), ?)]$/;"	f
lock	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp lock(%{lock: nil}, _sources), do: []$/;"	f
lock	deps/postgrex/lib/postgrex/type_server.ex	/^  defp lock(%{connections: connections, types: types} = state, {pid, _}) do$/;"	f
lock for update	deps/ecto_sql/integration_test/sql/lock.exs	/^  test "lock for update" do$/;"	t
lock_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp lock_error(s, fun) do$/;"	f
lock_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp lock_error(s, fun, query) do$/;"	f
lock_for_migrations	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def lock_for_migrations(meta, query, opts, fun) do$/;"	f
lock_for_migrations	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def lock_for_migrations(meta, query, opts, migration_lock, fun) do$/;"	f
lock_for_migrations	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def lock_for_migrations(meta, query, opts, fun) do$/;"	f
lock_for_migrations	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp lock_for_migrations(should_lock?, repo, opts, fun) when is_boolean(should_lock?) do$/;"	f
lockfile	deps/phoenix/mix.exs	/^  defp lockfile() do$/;"	f
log	deps/credo/lib/credo/execution/task.ex	/^  defp log(:call_end, context_tuple, time) do$/;"	f
log	deps/credo/lib/credo/execution/task.ex	/^  defp log(:call_end, {:task, _exec, task, _opts}, time) do$/;"	f
log	deps/credo/lib/credo/execution/task.ex	/^  defp log(:call_end, {:task_group, _exec, task_group, _opts}, time) do$/;"	f
log	deps/credo/lib/credo/execution/task.ex	/^  defp log(:call_start, context_tuple) do$/;"	f
log	deps/credo/lib/credo/execution/task.ex	/^  defp log(:call_start, {:task, _exec, task, _opts}) do$/;"	f
log	deps/credo/lib/credo/execution/task.ex	/^  defp log(:call_start, {:task_group, _exec, task_group, _opts}) do$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log(fun, entry), do: fun.(entry)$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log(nil, _, _, _, result),$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({:error, err, meter}, call, query, params),$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({:ok, res, meter}, call, query, params),$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({:ok, res1, res2, meter}, call, query, params),$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({kind, reason, stack, meter}, call, query, params),$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({log, times}, call, query, params, result) do$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({mod, fun, args}, entry), do: apply(mod, fun, [entry | args])$/;"	f
log	deps/db_connection/lib/db_connection.ex	/^  defp log({ok, res, meter}, call, query, cursor) when ok in [:cont, :halt],$/;"	f
log	deps/ecto/lib/ecto/log_entry.ex	/^  def log(entry, level \\\\ :debug, metadata \\\\ []) do$/;"	f
log	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log({repo, log, event_name}, params, entry, opts) do$/;"	f
log	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp log(false, _msg), do: :ok$/;"	f
log	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp log(level, msg),  do: Logger.log(level, msg)$/;"	f
log	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp log(false, _msg), do: :ok$/;"	f
log	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp log(level, msg),  do: Logger.log(level, msg)$/;"	f
log	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp log(%{log_level: false}, _msg_func), do: :ok$/;"	f
log	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp log(%{log_level: level}, msg), do: Logger.log(level, msg)$/;"	f
log	deps/plug/lib/plug/debugger.ex	/^  defp log(_status, _kind, _reason, _stack), do: :ok$/;"	f
log	deps/plug/lib/plug/debugger.ex	/^  defp log(status, kind, reason, stack) when status < 500,$/;"	f
log begin	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "log begin, commit and rollback" do$/;"	t
log entry is not sent to telemetry under nil event name	deps/ecto_sql/integration_test/sql/logging.exs	/^  test "log entry is not sent to telemetry under nil event name" do$/;"	t
log entry is sent to telemetry	deps/ecto_sql/integration_test/sql/logging.exs	/^  test "log entry is sent to telemetry" do$/;"	t
log entry is sent to telemetry with custom options	deps/ecto_sql/integration_test/sql/logging.exs	/^  test "log entry is sent to telemetry with custom options" do$/;"	t
log entry sent under another event name	deps/ecto_sql/integration_test/sql/logging.exs	/^  test "log entry sent under another event name" do$/;"	t
log entry when some measurements are nil	deps/ecto_sql/integration_test/sql/logging.exs	/^  test "log entry when some measurements are nil" do$/;"	t
log entry with custom log level	deps/ecto_sql/integration_test/sql/logging.exs	/^  test "log entry with custom log level" do$/;"	t
log queries inside transactions	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "log queries inside transactions" do$/;"	t
log_access_info	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp log_access_info(otp_app, endpoint) do$/;"	f
log_and_execute_ddl	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp log_and_execute_ddl(_repo, _log, func) when is_function(func, 0) do$/;"	f
log_and_execute_ddl	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp log_and_execute_ddl(repo, %{level: level, sql: sql}, command) do$/;"	f
log_and_execute_ddl	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp log_and_execute_ddl(repo, _migration, log, command) do$/;"	f
log_and_execute_ddl	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp log_and_execute_ddl(repo, migration, log, {instruction, %Index{} = index}) do$/;"	f
log_ceil	deps/crypto_rand/lib/crypto_rand.ex	/^  defp log_ceil(n), do: n |> :math.log2() |> r_ceil()$/;"	f
log_halt	deps/plug/lib/plug/builder.ex	/^  defp log_halt(plug_type, plug, env, builder_opts) do$/;"	f
log_iodata	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_iodata(measurements, metadata) do$/;"	f
log_measurements	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_measurements([], total, acc),$/;"	f
log_measurements	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_measurements([{_, nil} | rest], total, acc),$/;"	f
log_measurements	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_measurements([{key, value} | rest], total, acc),$/;"	f
log_ok_error	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_ok_error({:error, _err}), do: "ERROR"$/;"	f
log_ok_error	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_ok_error({:ok, _res}), do: "OK"$/;"	f
log_ok_source	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_ok_source(nil), do: ""$/;"	f
log_ok_source	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_ok_source(source), do: " source=#{inspect(source)}"$/;"	f
log_raised	deps/db_connection/lib/db_connection.ex	/^  defp log_raised(entry, kind, reason, stack) do$/;"	f
log_result	deps/db_connection/lib/db_connection.ex	/^  defp log_result(other), do: other$/;"	f
log_result	deps/db_connection/lib/db_connection.ex	/^  defp log_result({kind, reason, stack}) when kind in [:error, :exit, :throw] do$/;"	f
log_result	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_result(other), do: other$/;"	f
log_result	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_result({:ok, _query, res}), do: {:ok, res}$/;"	f
log_time	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp log_time(label, measurements, key, force) do$/;"	f
logger_import?	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp logger_import?([{:__aliases__, _meta, [:Logger]}]), do: true$/;"	f
logger_import?	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp logger_import?(_), do: false$/;"	f
logo_path	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp logo_path(%{logo: logo}), do: "assets\/logo#{Path.extname(logo)}"$/;"	f
logo_path	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp logo_path(%{logo: nil}), do: nil$/;"	f
logs in	deps/phoenix/lib/phoenix/test/conn_test.ex	/^      test "logs in" do$/;"	t
look_for_alignments	deps/earmark/lib/earmark/parser.ex	/^  defp look_for_alignments([ _first, second | _rest ]) do$/;"	f
lookahead	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def lookahead(combinator \\\\ empty(), to_lookahead)$/;"	f
lookahead_not	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def lookahead_not(combinator \\\\ empty(), to_lookahead)$/;"	f
lookup	deps/ecto/lib/ecto/repo/registry.ex	/^  def lookup(pid) when is_pid(pid) do$/;"	f
lookup	deps/ecto/lib/ecto/repo/registry.ex	/^  def lookup(repo) when is_atom(repo) do$/;"	f
lookup	deps/ex_doc/lib/ex_doc/refs.ex	/^  defp lookup(ref) do$/;"	f
lookup_meta	deps/ecto/lib/ecto/adapter.ex	/^  def lookup_meta(repo_name_or_pid) do$/;"	f
lookup_meta!	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  defp lookup_meta!(repo) do$/;"	f
lovelace_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def lovelace_style, do: HTML.LovelaceStyle.style()$/;"	f
lower	deps/secure_random/lib/secure_random.ex	/^  defp lower(<<>>, acc),$/;"	f
lower	deps/secure_random/lib/secure_random.ex	/^  defp lower(<<h, t::binary>>, acc) when h in ?A..?F,$/;"	f
lower	deps/secure_random/lib/secure_random.ex	/^  defp lower(<<h, t::binary>>, acc),$/;"	f
lowerbound	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def lowerbound(c1, c2) do$/;"	f
lt?	deps/decimal/lib/decimal.ex	/^  def lt?(%Decimal{coef: :qNaN}, _num2), do: false$/;"	f
lt?	deps/decimal/lib/decimal.ex	/^  def lt?(_num1, %Decimal{coef: :qNaN}), do: false$/;"	f
lt?	deps/decimal/lib/decimal.ex	/^  def lt?(num1, num2), do: cmp(num1, num2) == :lt$/;"	f
mac_fun	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp mac_fun(digest, secret) do$/;"	f
main	deps/credo/lib/credo/cli.ex	/^  def main(argv) do$/;"	f
main	deps/earmark/lib/earmark/cli.ex	/^  def main(argv) do$/;"	f
main	deps/ex_doc/lib/ex_doc/cli.ex	/^  def main(args, generator \\\\ &ExDoc.generate_docs\/3) do$/;"	f
make_att	deps/earmark/lib/earmark/transform.ex	/^  defp make_att(name_value_pair, tag)$/;"	f
make_att	deps/earmark/lib/earmark/transform.ex	/^  defp make_att({name, value}, _) do$/;"	f
make_base_map	deps/credo/lib/credo/priority.ex	/^  defp make_base_map(priority_list, %SourceFile{} = source_file) do$/;"	f
make_empty_if_unfetched	deps/plug/lib/plug/parsers.ex	/^  defp make_empty_if_unfetched(%Plug.Conn.Unfetched{}), do: %{}$/;"	f
make_empty_if_unfetched	deps/plug/lib/plug/parsers.ex	/^  defp make_empty_if_unfetched(params), do: params$/;"	f
make_fun	deps/db_connection/lib/db_connection/task.ex	/^  defp make_fun(fun) when is_function(fun, 1) do$/;"	f
make_fun	deps/db_connection/lib/db_connection/task.ex	/^  defp make_fun(mfargs) do$/;"	f
make_image_tuple	deps/earmark/src/link_text_parser.erl	/^make_image_tuple({_Link, L, R}) -> {image, L, string:concat("!", R)}.$/;"	f	module:link_text_parser
make_indent	deps/earmark/lib/earmark/transform.ex	/^  defp make_indent(%{indent: indent}, level) do$/;"	f
make_into	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  defp make_into(fun, stream) do$/;"	f
make_into	deps/postgrex/lib/postgrex/stream.ex	/^  defp make_into(conn, stream, %Postgrex.Copy{ref: ref} = copy, opts) do$/;"	f
make_match	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp make_match([] = _patterns, _varnames, rest_of_tokens_varname) do$/;"	f
make_match	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp make_match([pattern | patterns], [varname | varnames], rest_of_tokens_varname) do$/;"	f
make_portal	deps/postgrex/lib/postgrex/protocol.ex	/^  defp make_portal() do$/;"	f
make_result	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp make_result(nil, _, _, _), do: nil$/;"	f
make_result	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp make_result({parsed, url, title}, link_text, parsed_text, link_or_img) do$/;"	f
make_style	deps/makeup/lib/makeup/styles/html.ex	/^    def make_style(options \\\\ []) do$/;"	f
make_tmp_dir	deps/plug/lib/plug/upload.ex	/^  defp make_tmp_dir(path) do$/;"	f
manifest_join	deps/phoenix/lib/phoenix/digester.ex	/^  defp manifest_join(".", filename), do: filename$/;"	f
manifest_join	deps/phoenix/lib/phoenix/digester.ex	/^  defp manifest_join(path, filename), do: Path.join(path, filename)$/;"	f
manni_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def manni_style, do: HTML.ManniStyle.style()$/;"	f
manual rollback bubbles up on nested transaction	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "manual rollback bubbles up on nested transaction" do$/;"	t
manual rollback doesn	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "manual rollback doesn't bubble up" do$/;"	t
many_assoc_map	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp many_assoc_map([], [], map) do$/;"	f
many_assoc_map	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp many_assoc_map([id|ids], [struct|structs], map) do$/;"	f
many_surrounded_by	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def many_surrounded_by(combinator, left, right) do$/;"	f
many_surrounded_by	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def many_surrounded_by(combinator, left, right) when is_binary(left) and is_binary(right) do$/;"	f
many_surrounded_by	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def many_surrounded_by(combinator, left, right, ttype) do$/;"	f
many_to_many	deps/ecto/lib/ecto/schema.ex	/^  defmacro many_to_many(name, queryable, opts \\\\ []) do$/;"	a
many_to_many assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "many_to_many assoc" do$/;"	t
many_to_many assoc on delete deletes all	deps/ecto/integration_test/cases/assoc.exs	/^  test "many_to_many assoc on delete deletes all" do$/;"	t
many_to_many assoc selector	deps/ecto/integration_test/cases/joins.exs	/^  test "many_to_many assoc selector" do$/;"	t
many_to_many association join	deps/ecto/integration_test/cases/joins.exs	/^  test "many_to_many association join" do$/;"	t
many_to_many changeset assoc	deps/ecto/integration_test/cases/assoc.exs	/^  test "many_to_many changeset assoc" do$/;"	t
many_to_many changeset assoc with schema	deps/ecto/integration_test/cases/assoc.exs	/^  test "many_to_many changeset assoc with schema" do$/;"	t
many_to_many changeset assoc with self	deps/ecto/integration_test/cases/assoc.exs	/^  test "many_to_many changeset assoc with self-referential binary_id" do$/;"	t
map	deps/ecto/lib/ecto/query/api.ex	/^  def map(source, fields), do: doc! [source, fields]$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map([], _fun, acc) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map([], _type, _fun, acc) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map([{key, nil} | t], fun, acc) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map([{key, value} | t], fun, acc) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map([{key, value} | t], type, fun, acc) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map(_, _, _) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map(_, _, _, _) do$/;"	f
map	deps/ecto/lib/ecto/type.ex	/^  defp map(map, fun, acc) when is_map(map) do$/;"	f
map	deps/jason/lib/encode.ex	/^  def map(value, {escape, encode_map}) do$/;"	f
map	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def map(combinator \\\\ empty(), to_map, call)$/;"	f
map type on update	deps/ecto/integration_test/cases/type.exs	/^  test "map type on update" do$/;"	t
map update	deps/ecto/integration_test/cases/repo.exs	/^    test "map update" do$/;"	t
map_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp map_changes([], _new_pks, fun, current, acc, valid?, skip?, _unique, ordered) do$/;"	f
map_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp map_changes([changes | rest], new_pks, fun, current, acc, valid?, skip?, unique, ordered)$/;"	f
map_changes	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp map_changes(_params, _new_pks, _fun, _current, _acc, _valid?, _skip?, _unique, _ordered) do$/;"	f
map_digested_file	deps/phoenix/lib/phoenix/digester.ex	/^  defp map_digested_file(file_path, output_path) do$/;"	f
map_file	deps/phoenix/lib/phoenix/digester.ex	/^  defp map_file(file_path, input_path) do$/;"	f
map_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^    defp map_interpolations($/;"	f
map_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp map_interpolations($/;"	f
map_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp map_interpolations(_, _source), do: []$/;"	f
map_naive	deps/jason/lib/encode.ex	/^  defp map_naive([{key, value} | tail], escape, encode_map) do$/;"	f
map_naive_loop	deps/jason/lib/encode.ex	/^  defp map_naive_loop([], _escape, _encode_map) do$/;"	f
map_naive_loop	deps/jason/lib/encode.ex	/^  defp map_naive_loop([{key, value} | tail], escape, encode_map) do$/;"	f
map_strict	deps/jason/lib/encode.ex	/^  defp map_strict([{key, value} | tail], escape, encode_map) do$/;"	f
map_strict_loop	deps/jason/lib/encode.ex	/^  defp map_strict_loop([], _encode_map, _escape, _visited) do$/;"	f
map_strict_loop	deps/jason/lib/encode.ex	/^  defp map_strict_loop([{key, value} | tail], escape, encode_map, visited) do$/;"	f
map_to_invalid_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp map_to_invalid_errors(errors_with_index) do$/;"	f
mask	deps/plug/lib/plug/csrf_protection.ex	/^  defp mask(token) do$/;"	f
mask	deps/plug_crypto/lib/plug/crypto.ex	/^  def mask(left, right) do$/;"	f
masked_compare	deps/plug_crypto/lib/plug/crypto.ex	/^  def masked_compare(left, right, mask)$/;"	f
masked_compare	deps/plug_crypto/lib/plug/crypto.ex	/^  defp masked_compare(<<>>, <<>>, <<>>, acc) do$/;"	f
masked_compare	deps/plug_crypto/lib/plug/crypto.ex	/^  defp masked_compare(<<x, left::binary>>, <<y, right::binary>>, <<z, mask::binary>>, acc) do$/;"	f
mass	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def mass(ast) do$/;"	f
match	deps/phoenix/lib/phoenix/router.ex	/^  defmacro match(verb, path, plug, plug_opts, options \\\\ []) do$/;"	a
match	deps/plug/lib/plug/router.ex	/^      def match(conn, _opts) do$/;"	f
match	deps/plug/lib/plug/router.ex	/^      defp match("GET", ["foo", "bar"], conn) do$/;"	f
match	deps/plug/lib/plug/router.ex	/^  defmacro match(path, options, contents \\\\ []) do$/;"	a
match?	deps/ecto/lib/ecto/type.ex	/^  def match?(schema_type, query_type) do$/;"	f
match_dispatch	deps/phoenix/lib/phoenix/router.ex	/^  defp match_dispatch() do$/;"	f
match_extra	deps/ex_doc/lib/ex_doc/group_matcher.ex	/^  def match_extra(group_patterns, filename) do$/;"	f
match_for_prefix	deps/telemetry/src/telemetry_handler_table.erl	/^match_for_prefix([Segment | Rest]) ->$/;"	f	module:telemetry_handler_table
match_for_prefix	deps/telemetry/src/telemetry_handler_table.erl	/^match_for_prefix([]) ->$/;"	f	module:telemetry_handler_table
match_group_patterns	deps/ex_doc/lib/ex_doc/group_matcher.ex	/^  defp match_group_patterns(group_patterns, matcher) do$/;"	f
match_module	deps/ex_doc/lib/ex_doc/group_matcher.ex	/^  def match_module(group_patterns, node) do$/;"	f
match_path	deps/plug/lib/plug/router.ex	/^  def match_path(%Plug.Conn{} = conn) do$/;"	f
match_pattern_for_prefix	deps/telemetry/src/telemetry_handler_table.erl	/^match_pattern_for_prefix(EventPrefix) ->$/;"	f	module:telemetry_handler_table
match_regex	deps/credo/lib/credo/execution.ex	/^  defp match_regex(_tuple, [], default_for_empty), do: default_for_empty$/;"	f
match_regex	deps/credo/lib/credo/execution.ex	/^  defp match_regex(tuple, regexes, _default_for_empty) do$/;"	f
match_topic_to_channel!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defp match_topic_to_channel!(socket, topic) do$/;"	f
matches_any?	deps/credo/lib/credo/check/readability/module_doc.ex	/^  defp matches_any?(name, list) when is_list(list) do$/;"	f
matches_any?	deps/credo/lib/credo/check/readability/module_doc.ex	/^  defp matches_any?(name, regex) do$/;"	f
matches_any?	deps/credo/lib/credo/check/readability/module_doc.ex	/^  defp matches_any?(name, string) when is_binary(string) do$/;"	f
matches_id_title	deps/earmark/lib/earmark/line_scanner.ex	/^  def matches_id_title(content) do$/;"	f
matches_requirement?	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^  defp matches_requirement?({check, _}, elixir_version) do$/;"	f
matches_requirement?	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^  defp matches_requirement?({check}, elixir_version) do$/;"	f
matching	deps/postgrex/lib/postgrex/binary_extension.ex	/^      def matching(_), do: unquote(matching)$/;"	f
matching	deps/postgrex/lib/postgrex/extension.ex	/^        def matching(_state), do: [type: "ltree"]$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def matching(_),$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def matching(_),$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/json.ex	/^  def matching({nil, _}),$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def matching(_),$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/jsonb.ex	/^  def matching({nil, _}),$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def matching(_), do: [send: "range_send"]$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def matching(_),$/;"	f
matching	deps/postgrex/lib/postgrex/extensions/void_text.ex	/^  def matching(_), do: [output: "void_out"]$/;"	f
matching_location	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp matching_location($/;"	f
matching_location	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp matching_location(_, _prev, _current, _next, acc) do$/;"	f
max	deps/decimal/lib/decimal.ex	/^  def max(%Decimal{coef: :qNaN}, %Decimal{} = num2), do: num2$/;"	f
max	deps/decimal/lib/decimal.ex	/^  def max(%Decimal{sign: sign1, exp: exp1} = num1, %Decimal{sign: sign2, exp: exp2} = num2) do$/;"	f
max	deps/decimal/lib/decimal.ex	/^  def max(%Decimal{} = num1, %Decimal{coef: :qNaN}), do: num1$/;"	f
max	deps/decimal/lib/decimal.ex	/^  def max(num1, num2) do$/;"	f
max	deps/ecto/lib/ecto/query/api.ex	/^  def max(value), do: doc! [value]$/;"	f
max	deps/ecto/lib/ecto/query/window_api.ex	/^  def max(value), do: doc! [value]$/;"	f
max_age	deps/plug/lib/plug/conn.ex	/^  defp max_age(opts) do$/;"	f
max_file_count	deps/credo/lib/credo/sources.ex	/^  defp max_file_count do$/;"	f
max_params	deps/crypto_rand/lib/crypto_rand.ex	/^  defp max_params(max) do$/;"	f
maybe_action	deps/phoenix/lib/phoenix/logger.ex	/^  defp maybe_action(_), do: []$/;"	f
maybe_action	deps/phoenix/lib/phoenix/logger.ex	/^  defp maybe_action(action) when is_atom(action), do: [?., Atom.to_string(action), ?\/, ?2]$/;"	f
maybe_add_and_monitor_pid	deps/mox/lib/mox/server.ex	/^  defp maybe_add_and_monitor_pid(state, pid) do$/;"	f
maybe_add_and_monitor_pid	deps/mox/lib/mox/server.ex	/^  defp maybe_add_and_monitor_pid(state, pid, on, fun) do$/;"	f
maybe_add_encoding	deps/plug/lib/plug/static.ex	/^  defp maybe_add_encoding(conn, ce), do: put_resp_header(conn, "content-encoding", ce)$/;"	f
maybe_add_encoding	deps/plug/lib/plug/static.ex	/^  defp maybe_add_encoding(conn, nil), do: conn$/;"	f
maybe_add_error_on_pk	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp maybe_add_error_on_pk(%{data: %{__struct__: schema}} = changeset, pk_values, unique) do$/;"	f
maybe_add_vary	deps/plug/lib/plug/static.ex	/^  defp maybe_add_vary(conn, %{gzip?: gzip?, brotli?: brotli?}) do$/;"	f
maybe_append_slash	deps/phoenix/lib/phoenix/router/helpers.ex	/^        defp maybe_append_slash("\/", _), do: "\/"$/;"	f
maybe_append_slash	deps/phoenix/lib/phoenix/router/helpers.ex	/^        defp maybe_append_slash(path, true), do: path <> "\/"$/;"	f
maybe_append_slash	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp maybe_append_slash(path, _), do: path$/;"	f
maybe_apply_as	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_as(%{from: %{as: from_as}}, as) when not is_nil(from_as) do$/;"	f
maybe_apply_as	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_as(%{from: from, aliases: aliases} = query, as) do$/;"	f
maybe_apply_as	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_as(query, nil), do: query$/;"	f
maybe_apply_hints	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_hints(query, []), do: query$/;"	f
maybe_apply_hints	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_hints(query, hints), do: update_in(query.from.hints, &(&1 ++ hints))$/;"	f
maybe_apply_prefix	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_prefix(query, nil), do: query$/;"	f
maybe_apply_prefix	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp maybe_apply_prefix(query, prefix) do$/;"	f
maybe_disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp maybe_disconnect($/;"	f
maybe_disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp maybe_disconnect(other), do: other$/;"	f
maybe_disconnect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp maybe_disconnect({:error, _, %{disconnect_on_error_codes: []}} = result), do: result$/;"	f
maybe_drop_default_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp maybe_drop_default_expr(statement_prefix, table, name, opts) do$/;"	f
maybe_encode	deps/db_connection/lib/db_connection.ex	/^  defp maybe_encode(query, params, meter, opts) do$/;"	f
maybe_encode_msg	deps/postgrex/lib/postgrex/protocol.ex	/^  defp maybe_encode_msg(msg) when is_binary(msg) or is_list(msg), do: msg$/;"	f
maybe_encode_msg	deps/postgrex/lib/postgrex/protocol.ex	/^  defp maybe_encode_msg(msg) when is_tuple(msg), do: encode_msg(msg)$/;"	f
maybe_exclude_itself	deps/ecto/lib/ecto/changeset.ex	/^  defp maybe_exclude_itself(schema, changeset) do$/;"	f
maybe_fetch_format	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp maybe_fetch_format(conn, opts) do$/;"	f
maybe_fetch_query_params	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp maybe_fetch_query_params(conn) do$/;"	f
maybe_fetch_query_params	deps/plug/lib/plug/debugger.ex	/^  defp maybe_fetch_query_params(conn) do$/;"	f
maybe_fetch_session	deps/plug/lib/plug/debugger.ex	/^  defp maybe_fetch_session(conn) do$/;"	f
maybe_first	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp maybe_first(list, :one), do: List.first(list)$/;"	f
maybe_first	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp maybe_first(list, _), do: list$/;"	f
maybe_first	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp maybe_first(list, :one), do: List.first(list)$/;"	f
maybe_first	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp maybe_first(list, _), do: list$/;"	f
maybe_flush	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp maybe_flush() do$/;"	f
maybe_format_code	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  defp maybe_format_code(code) do$/;"	f
maybe_module	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp maybe_module(assoc) do$/;"	f
maybe_on	deps/ecto/lib/ecto/query/inspect.ex	/^  defp maybe_on(%QueryExpr{expr: true}, _names), do: []$/;"	f
maybe_on	deps/ecto/lib/ecto/query/inspect.ex	/^  defp maybe_on(%QueryExpr{} = on, names), do: [on: expr(on, names)]$/;"	f
maybe_pad_usec	deps/ecto/lib/ecto/type.ex	/^  defp maybe_pad_usec(:error), do: :error$/;"	f
maybe_pad_usec	deps/ecto/lib/ecto/type.ex	/^  defp maybe_pad_usec({:ok, struct}), do: {:ok, pad_usec(struct)}$/;"	f
maybe_pmap	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp maybe_pmap(preloaders, repo_name, opts) do$/;"	f
maybe_replace_one!	deps/ecto/lib/ecto/association.ex	/^  defp maybe_replace_one!(%{field: field, __struct__: mod} = meta, current, parent,$/;"	f
maybe_replace_one!	deps/ecto/lib/ecto/association.ex	/^  defp maybe_replace_one!(_, _, _, _, _, _), do: :ok$/;"	f
maybe_rewrite	deps/postgrex/lib/postgrex/type_module.ex	/^  defp maybe_rewrite(ast, extension, cases, opts) do$/;"	f
maybe_sanitize_exception	deps/db_connection/lib/db_connection/connection.ex	/^  defp maybe_sanitize_exception(e, stack, opts) do$/;"	f
maybe_savepoint	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    defp maybe_savepoint(opts, {_, _, in_transaction?}) do$/;"	f
maybe_secure_cookie	deps/plug/lib/plug/conn.ex	/^  defp maybe_secure_cookie(cookie, :https), do: Map.put_new(cookie, :secure, true)$/;"	f
maybe_secure_cookie	deps/plug/lib/plug/conn.ex	/^  defp maybe_secure_cookie(cookie, _), do: cookie$/;"	f
maybe_send	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp maybe_send(%Plug.Conn{state: :set} = conn, _plug), do: Plug.Conn.send_resp(conn)$/;"	f
maybe_send	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp maybe_send(%Plug.Conn{state: :unset}, _plug), do: raise(Plug.Conn.NotSentError)$/;"	f
maybe_send	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp maybe_send(%Plug.Conn{} = conn, _plug), do: conn$/;"	f
maybe_send	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  defp maybe_send(other, plug) do$/;"	f
maybe_sign_or_encrypt_cookie	deps/plug/lib/plug/conn.ex	/^  defp maybe_sign_or_encrypt_cookie(conn, key, value, opts) do$/;"	f
maybe_stream_data	deps/jason/mix.exs	/^  defp maybe_stream_data() do$/;"	f
maybe_truncate_usec	deps/ecto/lib/ecto/type.ex	/^  defp maybe_truncate_usec(:error), do: :error$/;"	f
maybe_truncate_usec	deps/ecto/lib/ecto/type.ex	/^  defp maybe_truncate_usec({:ok, struct}), do: {:ok, truncate_usec(struct)}$/;"	f
maybe_unpack_query	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp maybe_unpack_query(false, queries), do: {[], [], queries}$/;"	f
maybe_unpack_query	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp maybe_unpack_query(true, [{ids, structs} | queries]), do: {ids, structs, queries}$/;"	f
maybe_warn	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp maybe_warn({kind, module, name, arity}, config) do$/;"	f
media_type	deps/ex_doc/lib/ex_doc/formatter/epub/templates.ex	/^    defp media_type("." <> unquote(extension)) do$/;"	f
media_type	deps/ex_doc/lib/ex_doc/formatter/epub/templates.ex	/^  defp media_type(arg),$/;"	f
media_type	deps/plug/lib/plug/conn/utils.ex	/^  def media_type(binary) do$/;"	f
member?	deps/db_connection/lib/db_connection.ex	/^  def member?(_, _), do: {:error, __MODULE__}$/;"	f
member?	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  def member?(_, _), do: {:error, __MODULE__}$/;"	f
member?	deps/postgrex/lib/postgrex/stream.ex	/^  def member?(_, _) do$/;"	f
merge	deps/credo/lib/credo/config_file.ex	/^  def merge([], config), do: config$/;"	f
merge	deps/credo/lib/credo/config_file.ex	/^  def merge([other | tail], base) do$/;"	f
merge	deps/credo/lib/credo/config_file.ex	/^  def merge(_, {:error, _} = a), do: a$/;"	f
merge	deps/credo/lib/credo/config_file.ex	/^  def merge(list) when is_list(list) do$/;"	f
merge	deps/credo/lib/credo/config_file.ex	/^  def merge({:error, _} = a, _), do: a$/;"	f
merge	deps/credo/lib/credo/config_file.ex	/^  def merge({:ok, base}, {:ok, other}) do$/;"	f
merge	deps/ecto/integration_test/cases/repo.exs	/^    test "merge" do$/;"	t
merge	deps/ecto/lib/ecto/changeset.ex	/^  def merge(%Changeset{data: data} = cs1, %Changeset{data: data} = cs2) do$/;"	f
merge	deps/ecto/lib/ecto/changeset.ex	/^  def merge(%Changeset{}, %Changeset{}) do$/;"	f
merge	deps/ecto/lib/ecto/changeset.ex	/^  def merge(changeset1, changeset2)$/;"	f
merge	deps/ecto/lib/ecto/multi.ex	/^  def merge(%Multi{} = multi, merge) when is_function(merge, 1) do$/;"	f
merge	deps/ecto/lib/ecto/multi.ex	/^  def merge(%Multi{} = multi, mod, fun, args)$/;"	f
merge	deps/ecto/lib/ecto/query/api.ex	/^  def merge(left_map, right_map), do: doc! [left_map, right_map]$/;"	f
merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  def merge(%Ecto.Query{select: nil} = query, new_select) do$/;"	f
merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  def merge(%Ecto.Query{select: old_select} = query, new_select) do$/;"	f
merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  def merge(query, expr) do$/;"	f
merge	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge(query, select, old_expr, old_params, old_take, new_select) do$/;"	f
merge	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp merge([struct|sub_structs], {primary_keys, cache, dict, sub_dicts}, parent_key) do$/;"	f
merge	deps/makeup/lib/makeup/lexer.ex	/^  def merge([]),$/;"	f
merge	deps/makeup/lib/makeup/lexer.ex	/^  def merge([token | rest]),$/;"	f
merge	deps/makeup/lib/makeup/lexer.ex	/^  def merge([{tag, meta, value1}, {tag, meta, value2} | rest]),$/;"	f
merge	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def merge(%State{} = local, %State{mode: :delta, values: remote_map} = remote) do$/;"	f
merge	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def merge(%State{} = local, {%State{} = remote, remote_map}) do$/;"	f
merge	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp merge(local, remote, remote_map) do$/;"	f
merge with update on self	deps/ecto/integration_test/cases/repo.exs	/^    test "merge with update on self" do$/;"	t
merge within subquery	deps/ecto/integration_test/cases/repo.exs	/^    test "merge within subquery" do$/;"	t
merge_argument_to_error	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_argument_to_error(other, _query) do$/;"	f
merge_argument_to_error	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_argument_to_error({:&, _, [0]}, %{from: %{source: {source, alias}}}) do$/;"	f
merge_argument_to_error	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_argument_to_error({:&, _, [ix]}, _query) do$/;"	f
merge_assigns	deps/plug/lib/plug/conn.ex	/^  def merge_assigns(%Conn{assigns: assigns} = conn, keyword) when is_list(keyword) do$/;"	f
merge_assocs	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_assocs(assocs, query) do$/;"	f
merge_attributes	deps/ex_machina/lib/ex_machina.ex	/^  def merge_attributes(%{__struct__: _} = record, attrs), do: struct!(record, attrs)$/;"	f
merge_attributes	deps/ex_machina/lib/ex_machina.ex	/^  def merge_attributes(record, attrs), do: Map.merge(record, attrs)$/;"	f
merge_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def merge_attrs(atts, default \\\\ %{})$/;"	f
merge_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def merge_attrs(atts, new) do$/;"	f
merge_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def merge_attrs(atts, new) when is_list(atts) do$/;"	f
merge_attrs	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def merge_attrs(nil, default) do$/;"	f
merge_autogen	deps/ecto/lib/ecto/repo/schema.ex	/^  defp merge_autogen(data, autogen) do$/;"	f
merge_boolean	deps/credo/lib/credo/config_file.ex	/^  defp merge_boolean(_base, false), do: false$/;"	f
merge_boolean	deps/credo/lib/credo/config_file.ex	/^  defp merge_boolean(_base, true), do: true$/;"	f
merge_boolean	deps/credo/lib/credo/config_file.ex	/^  defp merge_boolean(base, _), do: base$/;"	f
merge_boolean	deps/credo/lib/credo/config_file.ex	/^  defp merge_boolean(base, other)$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(:combination, _query, combinations, cache_and_params, operation, adapter) do$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(:from, _query, from, {cache, params}, _operation, _adapter) do$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(:join, query, exprs, {cache, params}, _operation, adapter) do$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(:windows, query, exprs, {cache, params}, _operation, adapter) do$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(:with_cte, _query, nil, cache_and_params, _operation, _adapter) do$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(:with_cte, query, with_expr, cache_and_params, _operation, adapter) do$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(_left, :nocache, true), do: :nocache$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(_left, _right, false),  do: :nocache$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(kind, query, expr, {cache, params}, _operation, adapter)$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(kind, query, exprs, {cache, params}, _operation, adapter)$/;"	f
merge_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_cache(left, right, true),     do: [left|right]$/;"	f
merge_changes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp merge_changes(data, changes) do$/;"	f
merge_chars_helper	deps/makeup/lib/makeup/lexer/combinators.ex	/^  defp merge_chars_helper(_ttype, _attrs, [], []), do: []$/;"	f
merge_chars_helper	deps/makeup/lib/makeup/lexer/combinators.ex	/^  defp merge_chars_helper(ttype, attrs, [], [element | rest]) do$/;"	f
merge_chars_helper	deps/makeup/lib/makeup/lexer/combinators.ex	/^  defp merge_chars_helper(ttype, attrs, acc, [next | rest])$/;"	f
merge_chars_helper	deps/makeup/lib/makeup/lexer/combinators.ex	/^  defp merge_chars_helper(ttype, attrs, acc, list) do$/;"	f
merge_checks	deps/credo/lib/credo/config_file.ex	/^  def merge_checks(%__MODULE__{checks: checks_base}, %__MODULE__{checks: checks_other}) do$/;"	f
merge_config	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp merge_config(opts) do$/;"	f
merge_defaults	deps/phoenix/lib/phoenix/socket.ex	/^  defp merge_defaults(conf, defaults), do: Keyword.merge(defaults, conf)$/;"	f
merge_deltas	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def merge_deltas(%State{mode: :delta} = local, %State{mode: :delta, values: remote_values} = remote) do$/;"	f
merge_error_keys	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_error_keys(errors, msg_func, _) when is_function(msg_func, 1)  do$/;"	f
merge_error_keys	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_error_keys(errors, msg_func, changeset) when is_function(msg_func, 3)  do$/;"	f
merge_expectation	deps/mox/lib/mox/server.ex	/^  defp merge_expectation({current_n, current_calls, _current_stub}, {n, calls, stub}) do$/;"	f
merge_expr	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_expr(_op, left, true), do: left$/;"	f
merge_expr	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_expr(_op, true, right), do: right$/;"	f
merge_expr	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_expr(op, left, right), do: {op, [], [left, right]}$/;"	f
merge_expr_and_params	deps/ecto/lib/ecto/query/planner.ex	/^  defp merge_expr_and_params(op, %QueryExpr{expr: left_expr, params: left_params} = struct,$/;"	f
merge_files	deps/credo/lib/credo/config_file.ex	/^  def merge_files(%__MODULE__{files: files_base}, %__MODULE__{files: files_other}) do$/;"	f
merge_flash	deps/phoenix/lib/phoenix/controller.ex	/^  def merge_flash(conn, enumerable) do$/;"	f
merge_fragments	deps/ecto/lib/ecto/query/builder.ex	/^  defp merge_fragments([h1], []),$/;"	f
merge_fragments	deps/ecto/lib/ecto/query/builder.ex	/^  defp merge_fragments([h1|t1], [h2|t2]),$/;"	f
merge_from	deps/ecto/lib/ecto/association.ex	/^  defp merge_from(%FromExpr{source: {"join expression", _}} = from, assoc_source),$/;"	f
merge_from	deps/ecto/lib/ecto/association.ex	/^  defp merge_from(from, _assoc_source),$/;"	f
merge_headers	deps/plug/lib/plug/conn.ex	/^  defp merge_headers(headers, cookies) do$/;"	f
merge_headers	deps/plug/lib/plug/static.ex	/^  defp merge_headers(conn, headers) do$/;"	f
merge_headers	deps/plug/lib/plug/static.ex	/^  defp merge_headers(conn, {module, function, args}) do$/;"	f
merge_identical	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_identical(lhs, rhs, thing) do$/;"	f
merge_identical	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_identical(nil, object, _thing), do: object$/;"	f
merge_identical	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_identical(object, nil, _thing), do: object$/;"	f
merge_identical	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_identical(object, object, _thing), do: object$/;"	f
merge_output	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp merge_output(left, right) when is_list(left) and is_list(right), do: left ++ right$/;"	f
merge_output	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp merge_output(left, right), do: quote(do: unquote(left) ++ unquote(right))$/;"	f
merge_params	deps/plug/lib/plug/parsers.ex	/^  defp merge_params(conn, body_params, query_string_length, validate_utf8) do$/;"	f
merge_preloads	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp merge_preloads(_preload, {info, _, nil, left}, {info, take, query, right}),$/;"	f
merge_preloads	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp merge_preloads(_preload, {info, take, query, left}, {info, _, nil, right}),$/;"	f
merge_preloads	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp merge_preloads(preload, {info, _, left, _}, {info, _, right, _}) do$/;"	f
merge_private	deps/plug/lib/plug/conn.ex	/^  def merge_private(%Conn{private: private} = conn, keyword) when is_list(keyword) do$/;"	f
merge_related_keys	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_related_keys(_, _, nil, _) do$/;"	f
merge_related_keys	deps/ecto/lib/ecto/changeset.ex	/^  defp merge_related_keys(map, changes, types, msg_func) do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(%Conn{resp_headers: current, adapter: adapter} = conn, headers) do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(%Conn{state: :chunked}, _headers) do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(%Conn{state: :sent}, _headers) do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(conn, headers) when headers == %{} do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(conn, headers)$/;"	f
merge_results	deps/ecto/lib/ecto/multi.ex	/^  defp merge_results(changes, new_changes, names) do$/;"	f
merge_source	deps/ecto/lib/ecto/association.ex	/^  def merge_source(%{__meta__: %{source: source}} = struct, {source, _}) do$/;"	f
merge_source	deps/ecto/lib/ecto/association.ex	/^  def merge_source(schema, query)$/;"	f
merge_source	deps/ecto/lib/ecto/association.ex	/^  def merge_source(struct, _query) do$/;"	f
merge_source	deps/ecto/lib/ecto/association.ex	/^  def merge_source(struct, {source, _}) do$/;"	f
merge_structs	deps/ecto/lib/ecto/multi.ex	/^  defp merge_structs(%Multi{} = lhs, %Multi{} = rhs, joiner) do$/;"	f
merge_take	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_take(old_expr, %{} = old_take, %{} = new_take) do$/;"	f
merge_take_kind	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_take_kind(_, :any, kind), do: kind$/;"	f
merge_take_kind	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_take_kind(_, kind, :any), do: kind$/;"	f
merge_take_kind	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_take_kind(_, kind, kind), do: kind$/;"	f
merge_take_kind	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_take_kind(binding, old, new) do$/;"	f
merge_take_kind_and_fields	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp merge_take_kind_and_fields(binding, {old_kind, old_fields}, {new_kind, new_fields}) do$/;"	f
merger	deps/phoenix/lib/phoenix/config.ex	/^  defp merger(_k, v1, v2) do$/;"	f
message	deps/ecto/lib/ecto/changeset.ex	/^  defp message(opts, key \\\\ :message, default) do$/;"	f
message	deps/ecto/lib/ecto/exceptions.ex	/^  def message(%{action: action, changeset: changeset}) do$/;"	f
message	deps/jason/lib/decoder.ex	/^  def message(%{position: position, data: data}) do$/;"	f
message	deps/jason/lib/decoder.ex	/^  def message(%{position: position, data: data}) when position == byte_size(data) do$/;"	f
message	deps/jason/lib/decoder.ex	/^  def message(%{position: position, token: token}) when is_binary(token) do$/;"	f
message	deps/phoenix/lib/phoenix/exceptions.ex	/^  def message(exception) do$/;"	f
message	deps/phoenix/lib/phoenix/template.ex	/^    def message(exception) do$/;"	f
message	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def message(%{kind: kind, reason: reason, stack: stack}) do$/;"	f
message	deps/plug/lib/plug/parsers.ex	/^    def message(%{exception: exception}) do$/;"	f
message	deps/plug/lib/plug/parsers.ex	/^    def message(exception) do$/;"	f
message	deps/postgrex/lib/postgrex/error.ex	/^  def message(e) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/exception_names.ex	/^  defp message_for({:prefix, expected}, trigger) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/exception_names.ex	/^  defp message_for({:suffix, expected}, trigger) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/line_endings.ex	/^  defp message_for(:unix = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/line_endings.ex	/^  defp message_for(:windows = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use.ex	/^  defp message_for(:multi = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use.ex	/^  defp message_for(:single = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^  defp message_for(expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp message_for(:with_space = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp message_for(:without_space = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^  defp message_for(:with_space = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^  defp message_for(:without_space = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/tabs_or_spaces.ex	/^  defp message_for(:spaces = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/tabs_or_spaces.ex	/^  defp message_for(:tabs = _expected) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/unused_variable_names.ex	/^  defp message_for(:anonymous, trigger) do$/;"	f
message_for	deps/credo/lib/credo/check/consistency/unused_variable_names.ex	/^  defp message_for(:meaningful, trigger) do$/;"	f
message_for_kind	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^  defp message_for_kind(:after), do: "the variable name after the pattern"$/;"	f
message_for_kind	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^  defp message_for_kind(:before), do: "the variable name before the pattern"$/;"	f
meta?	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp meta?(schema) do$/;"	f
metadata	deps/ecto/lib/ecto/repo/schema.ex	/^  defp metadata(%{__struct__: schema, __meta__: %{context: context, source: source, prefix: prefix}},$/;"	f
metadata	deps/ecto/lib/ecto/repo/schema.ex	/^  defp metadata(%{__struct__: schema}, _, _) do$/;"	f
metadata	deps/ecto/lib/ecto/repo/schema.ex	/^  defp metadata(schema, prefix, source, autogen_id, context, opts) do$/;"	f
metadata	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def metadata(runner, opts) do$/;"	f
metainfo	deps/ex_doc/lib/ex_doc/formatter/epub/assets.ex	/^  def metainfo do$/;"	f
meter	deps/db_connection/lib/db_connection.ex	/^  defp meter(opts) do$/;"	f
method	deps/plug/lib/plug/debugger.ex	/^  defp method(%Plug.Conn{method: method}), do: method$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/time.ex	/^  def microsecond_to_elixir(microsec) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def microsecond_to_elixir(@minus_infinity, infinity?) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def microsecond_to_elixir(@plus_infinity, infinity?) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  def microsecond_to_elixir(microsecs, _infinity) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def microsecond_to_elixir(@minus_infinity, infinity?) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def microsecond_to_elixir(@plus_infinity, infinity?) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  def microsecond_to_elixir(microsecs, _infinity) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^  def microsecond_to_elixir(microsec, tz) do$/;"	f
microsecond_to_elixir	deps/postgrex/lib/postgrex/extensions/timetz.ex	/^  defp microsecond_to_elixir(microsec) do$/;"	f
middle_branch	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp middle_branch(stack_name, pattern, group_prefix_varname, group_nr_varname) do$/;"	f
migrate	deps/ecto_sql/lib/ecto/migrator.ex	/^        def migrate do$/;"	f
migrate	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp migrate([], direction, _repo, opts) do$/;"	f
migrate	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp migrate(migrations, direction, repo, opts) do$/;"	f
migrate	lib/release_tasks.ex	/^  def migrate(_argv) do$/;"	f
migrate_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp migrate_manifest(%{"version" => 1} = manifest, _output_path), do: manifest$/;"	f
migrate_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp migrate_manifest(latest, output_path) do$/;"	f
migrated_successfully?	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp migrated_successfully?(ref, pid) do$/;"	f
migrated_versions	deps/ecto_sql/lib/ecto/migrator.ex	/^  def migrated_versions(repo, opts \\\\ []) do$/;"	f
migration?	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp migration?(mod) do$/;"	f
migration_defaults	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp migration_defaults(attrs) do$/;"	f
migration_module	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^  defp migration_module do$/;"	f
migration_module	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp migration_module do$/;"	f
migration_module	lib/mix/tasks/boruta.gen.migrations.ex	/^  defp migration_module do$/;"	f
migrations	deps/ecto_sql/lib/ecto/migrator.ex	/^  def migrations(repo) do$/;"	f
migrations	deps/ecto_sql/lib/ecto/migrator.ex	/^  def migrations(repo, directories) do$/;"	f
migrations up and down	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "migrations up and down" do$/;"	t
migrations_for	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp migrations_for(migration_source) when is_list(migration_source) do$/;"	f
migrations_path	deps/ecto_sql/lib/ecto/migrator.ex	/^  def migrations_path(repo) do$/;"	f
migrator_direction	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def migrator_direction do$/;"	f
mime_to_ext	deps/mime/lib/mime/application.ex	/^        defp mime_to_ext(unquote(type)), do: unquote(List.wrap(exts))$/;"	f
mime_to_ext	deps/mime/lib/mime/application.ex	/^        defp mime_to_ext(unquote(type)), do: unquote(exts)$/;"	f
mime_to_ext	deps/mime/lib/mime/application.ex	/^      defp mime_to_ext(_type), do: nil$/;"	f
mime_to_ext	deps/mime/lib/mime/application.ex	/^      defp mime_to_ext(type)$/;"	f
min	deps/decimal/lib/decimal.ex	/^  def min(%Decimal{coef: :qNaN}, %Decimal{} = num2), do: num2$/;"	f
min	deps/decimal/lib/decimal.ex	/^  def min(%Decimal{sign: sign1, exp: exp1} = num1, %Decimal{sign: sign2, exp: exp2} = num2) do$/;"	f
min	deps/decimal/lib/decimal.ex	/^  def min(%Decimal{} = num1, %Decimal{coef: :qNaN}), do: num1$/;"	f
min	deps/decimal/lib/decimal.ex	/^  def min(num1, num2) do$/;"	f
min	deps/ecto/lib/ecto/query/api.ex	/^  def min(value), do: doc! [value]$/;"	f
min	deps/ecto/lib/ecto/query/window_api.ex	/^  def min(value), do: doc! [value]$/;"	f
min_age	deps/ecto/lib/ecto.ex	/^      def min_age(min) do$/;"	f
min_max	deps/db_connection/lib/db_connection/backoff.ex	/^  defp min_max(opts) do$/;"	f
min_max_compile_runtime_chars	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp min_max_compile_runtime_chars(combinator, to_repeat, count, compile, _runtime, args)$/;"	f
min_max_compile_runtime_chars	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp min_max_compile_runtime_chars(combinator, to_repeat, opts, compile, runtime, args)$/;"	f
minimize	deps/jason/lib/formatter.ex	/^  def minimize(input, opts \\\\ []) do$/;"	f
minimize_to_iodata	deps/jason/lib/formatter.ex	/^  def minimize_to_iodata(input, opts) do$/;"	f
minus	deps/decimal/lib/decimal.ex	/^  def minus(%Decimal{coef: :qNaN} = num), do: num$/;"	f
minus	deps/decimal/lib/decimal.ex	/^  def minus(%Decimal{coef: :sNaN} = num), do: error(:invalid_operation, "operation on NaN", num)$/;"	f
minus	deps/decimal/lib/decimal.ex	/^  def minus(%Decimal{sign: sign} = num), do: context(%{num | sign: -sign})$/;"	f
minus	deps/decimal/lib/decimal.ex	/^  def minus(num), do: minus(decimal(num))$/;"	f
minus_in_binary_size?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp minus_in_binary_size?(line, column) do$/;"	f
missing	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^        def missing(:ok) do$/;"	f
missing	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^        defp missing() do$/;"	f
missing?	deps/ecto/lib/ecto/changeset.ex	/^  defp missing?(_changeset, field, _trim) do$/;"	f
missing?	deps/ecto/lib/ecto/changeset.ex	/^  defp missing?(changeset, field, trim) when is_atom(field) do$/;"	f
missing_pks?	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp missing_pks?(pk_values) do$/;"	f
missing_relation	deps/ecto/lib/ecto/changeset.ex	/^  defp missing_relation(%{changes: changes, errors: errors} = changeset,$/;"	f
mix_app_path	deps/phoenix/lib/mix/phoenix.ex	/^  defp mix_app_path(app, this_otp_app) do$/;"	f
mix_cmd_with_status_check	deps/ecto_sql/mix.exs	/^  defp mix_cmd_with_status_check(args, opts \\\\ []) do$/;"	f
mix_compile	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile(compilers) do$/;"	f
mix_compile	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile({:error, _reason}, _, _) do$/;"	f
mix_compile	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile({:module, Mix.Task}, compilers, apps_to_reload) do$/;"	f
mix_compile_deps	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile_deps(deps, apps_to_reload, compilers) do$/;"	f
mix_compile_project	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile_project(app, apps_to_reload, compilers) do$/;"	f
mix_compile_project	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile_project(nil, _, _), do: :ok$/;"	f
mix_compile_unless_stale_config	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp mix_compile_unless_stale_config(compilers) do$/;"	f
mix_task	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp mix_task(name, config) do$/;"	f
mixing regular join and assoc selector	deps/ecto/integration_test/cases/joins.exs	/^  test "mixing regular join and assoc selector" do$/;"	t
mod_name	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp mod_name(mod_list) do$/;"	f
mod_name	deps/credo/lib/credo/code/scope.ex	/^  def mod_name(nil), do: nil$/;"	f
mod_name	deps/credo/lib/credo/code/scope.ex	/^  def mod_name(scope_name) do$/;"	f
mode	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def mode(manager, mode, opts)$/;"	f
mode	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def mode(repo, mode)$/;"	f
mode	deps/postgrex/lib/postgrex/protocol.ex	/^  defp mode(opts) do$/;"	f
modify	deps/ecto_sql/lib/ecto/migration.ex	/^  def modify(column, type, opts \\\\ []) when is_atom(column) and is_list(opts) do$/;"	f
modify column	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "modify column", %{migration_number: num} do$/;"	t
modify column with from	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "modify column with from", %{migration_number: num} do$/;"	t
modify column with from andd pkey	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "modify column with from andd pkey", %{migration_number: num} do$/;"	t
modify foreign key	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "modify foreign key's on_delete constraint", %{migration_number: num} do$/;"	t
modify foreign key	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "modify foreign key's on_update constraint", %{migration_number: num} do$/;"	t
modify_default	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp modify_default(name, type, opts) do$/;"	f
modify_null	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp modify_null(name, opts) do$/;"	f
modify_value	deps/earmark/lib/earmark/context.ex	/^  def modify_value(%__MODULE__{value: value}=context, fun) do$/;"	f
module	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  defp module(node = %ExDoc.ModuleNode{id: id, type: type, rendered_doc: doc}) do$/;"	f
module_behaviours	deps/mox/lib/mox.ex	/^  defp module_behaviours(module) do$/;"	f
module_id	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp module_id(module) do$/;"	f
module_page	deps/ex_doc/lib/ex_doc/formatter/epub/templates.ex	/^  def module_page(config, module_node) do$/;"	f
module_page	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def module_page(module_node, nodes_map, config) do$/;"	f
module_sections	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp module_sections(%ExDoc.ModuleNode{rendered_doc: nil}), do: [sections: []]$/;"	f
module_sections	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp module_sections(module) do$/;"	f
module_summary	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def module_summary(module_node) do$/;"	f
module_title	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def module_title(%{type: :module, title: title}),$/;"	f
module_title	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def module_title(%{type: :task, title: title}),$/;"	f
module_title	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def module_title(%{type: type, title: title}),$/;"	f
module_title_and_id	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp module_title_and_id(%{name: module, type: :task}) do$/;"	f
module_title_and_id	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp module_title_and_id(%{name: module}) do$/;"	f
module_to_template_root	deps/phoenix/lib/phoenix/template.ex	/^  def module_to_template_root(module, base, suffix) do$/;"	f
module_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp module_url(:ex_doc, module, config) do$/;"	f
module_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp module_url(:otp, module, _config) do$/;"	f
module_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp module_url(module, config) do$/;"	f
modules	deps/credo/lib/credo/code/module.ex	/^  def modules({:defmodule, _, _arguments} = ast) do$/;"	f
modules	deps/phoenix/lib/mix/phoenix.ex	/^  def modules do$/;"	f
modules_for_recompilation	deps/phoenix/lib/mix/tasks/compile.phoenix.ex	/^  defp modules_for_recompilation(modules) do$/;"	f
modules_to_file_paths	deps/phoenix/lib/mix/tasks/compile.phoenix.ex	/^  defp modules_to_file_paths(modules) do$/;"	f
monokai_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def monokai_style, do: HTML.MonokaiStyle.style()$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(1), do: "Jan"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(10), do: "Oct"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(11), do: "Nov"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(12), do: "Dec"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(2), do: "Feb"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(3), do: "Mar"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(4), do: "Apr"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(5), do: "May"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(6), do: "Jun"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(7), do: "Jul"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(8), do: "Aug"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(9), do: "Sep"$/;"	f
msg_decode	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_decode(<<type::int8, size::int32, rest::binary>>) do$/;"	f
msg_decode	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_decode(bin) when byte_size(bin) < 5 do$/;"	f
msg_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_recv(%{sock: {:gen_tcp, sock}} = s, timeout, :active_once) do$/;"	f
msg_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_recv(%{sock: {:ssl, sock}} = s, timeout, :active_once) do$/;"	f
msg_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_recv(%{sock: {mod, sock}} = s, timeout, buffer, more) do$/;"	f
msg_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_recv(s, timeout, buffer) do$/;"	f
msg_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_send(s, msg, buffer) do$/;"	f
msg_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp msg_send(s, msgs, buffer) when is_list(msgs) do$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(<<?\/, t::binary>>, acc) when acc != "", do: mt_wildcard(t, acc)$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(<<h, t::binary>>, acc) when h in @lower or h in @alpha or h == ?-,$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(<<h, t::binary>>, acc) when h in @upper,$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(_, _acc), do: :error$/;"	f
mt_params	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_params(t, first, second) do$/;"	f
mt_second	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_second(<<h, t::binary>>, acc, first) when h in @lower or h in @alpha or h in @other,$/;"	f
mt_second	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_second(<<h, t::binary>>, acc, first) when h in @upper,$/;"	f
mt_second	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_second(t, acc, first), do: mt_params(t, first, acc)$/;"	f
mt_wildcard	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_wildcard(<<?*, t::binary>>, first), do: mt_params(t, first, "*")$/;"	f
mt_wildcard	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_wildcard(t, first), do: mt_second(t, "", first)$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{coef: 0}, %Decimal{coef: :inf}),$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{coef: :inf}, %Decimal{coef: 0}),$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{coef: :qNaN} = num1, %Decimal{}), do: num1$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{coef: :sNaN} = num1, %Decimal{}),$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{sign: sign1, coef: :inf, exp: exp1}, %Decimal{sign: sign2, exp: exp2}) do$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{sign: sign1, exp: exp1}, %Decimal{sign: sign2, coef: :inf, exp: exp2}) do$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{}, %Decimal{coef: :qNaN} = num2), do: num2$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(%Decimal{}, %Decimal{coef: :sNaN} = num2),$/;"	f
mult	deps/decimal/lib/decimal.ex	/^  def mult(num1, num2) do$/;"	f
mult	deps/mox/lib/mox.ex	/^        def mult(a, b), do: a * b$/;"	f
multi_locations	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp multi_locations(multi_usages) do$/;"	f
multipart_type	deps/plug/lib/plug/parsers/multipart.ex	/^  defp multipart_type(headers, opts) do$/;"	f
multipart_type_from_disposition	deps/plug/lib/plug/parsers/multipart.ex	/^  defp multipart_type_from_disposition(headers, disposition) do$/;"	f
multipart_type_from_unnamed	deps/plug/lib/plug/parsers/multipart.ex	/^  defp multipart_type_from_unnamed(opts) do$/;"	f
multiple_returns	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^        defp multiple_returns(n) do$/;"	f
multiple_single_locations	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp multiple_single_locations(single_usages) do$/;"	f
murphy_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def murphy_style, do: HTML.MurphyStyle.style()$/;"	f
mysql_dump	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp mysql_dump(config) do$/;"	f
myxql_dep	deps/ecto_sql/mix.exs	/^  defp myxql_dep do$/;"	f
name	deps/credo/lib/credo/code/module.ex	/^  def name(_), do: "<Unknown Module Name>"$/;"	f
name	deps/credo/lib/credo/code/module.ex	/^  def name({:defmodule, _, [{:__aliases__, _, name_list}, _]}) do$/;"	f
name	deps/credo/lib/credo/code/scope.ex	/^  def name(_ast, line: 0), do: nil$/;"	f
name	deps/credo/lib/credo/code/scope.ex	/^  def name(ast, line: line) do$/;"	f
name!	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  defp name!(opts) do$/;"	f
name_for_number	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def name_for_number(prefix, n) when is_number(n) do$/;"	f
name_for_topic	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def name_for_topic(prefix, topic, pool_size) do$/;"	f
name_from_splitted_parts	deps/credo/lib/credo/code/name.ex	/^  defp name_from_splitted_parts(parts) do$/;"	f
name_from_splitted_parts	deps/credo/lib/credo/code/name.ex	/^  defp name_from_splitted_parts(parts) when length(parts) > 1 do$/;"	f
name_from_struct	deps/ex_machina/lib/ex_machina/strategy.ex	/^  def name_from_struct(%{__struct__: struct_name} = _struct) do$/;"	f
name_to_code	deps/postgrex/lib/postgrex/error_code.ex	/^        def name_to_code(unquote(name)), do: unquote(code)$/;"	f
name_to_code	deps/postgrex/lib/postgrex/error_code.ex	/^  def name_to_code(name)$/;"	f
name_to_string	deps/credo/lib/credo/code/scope.ex	/^  defp name_to_string(atom) when is_atom(atom), do: to_string(atom)$/;"	f
name_to_string	deps/credo/lib/credo/code/scope.ex	/^  defp name_to_string(term), do: Macro.to_string(term)$/;"	f
named joins	deps/ecto/integration_test/cases/joins.exs	/^  test "named joins" do$/;"	t
named_bind?	deps/ecto/lib/ecto/query/builder.ex	/^  defp named_bind?({kind, _, _}), do: kind == :named$/;"	f
names	deps/credo/lib/credo/code/parameters.ex	/^    def names({unquote(op), _meta, arguments}) when is_list(arguments) do$/;"	f
names	deps/credo/lib/credo/code/parameters.ex	/^  def names(nil), do: nil$/;"	f
namespaced_topic	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp namespaced_topic(shard_name) do$/;"	f
nan?	deps/decimal/lib/decimal.ex	/^  def nan?(%Decimal{coef: :qNaN}), do: true$/;"	f
nan?	deps/decimal/lib/decimal.ex	/^  def nan?(%Decimal{coef: :sNaN}), do: true$/;"	f
nan?	deps/decimal/lib/decimal.ex	/^  def nan?(%Decimal{}), do: false$/;"	f
native_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def native_style, do: HTML.NativeStyle.style()$/;"	f
needs_additional_items_attribute?	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp needs_additional_items_attribute?(schema) do$/;"	f
needs_properties_attribute?	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp needs_properties_attribute?(schema) do$/;"	f
negate!	deps/ecto/lib/ecto/query/builder.ex	/^    def negate!(%Decimal{} = decimal), do: Decimal.minus(decimal)$/;"	f
negate!	deps/ecto/lib/ecto/query/builder.ex	/^    def negate!(%Decimal{} = decimal), do: Decimal.negate(decimal)$/;"	f
negate!	deps/ecto/lib/ecto/query/builder.ex	/^  def negate!(number) when is_number(number), do: -number$/;"	f
negated_condition?	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp negated_condition?(_) do$/;"	f
negated_condition?	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp negated_condition?(arguments) when is_list(arguments) do$/;"	f
negated_condition?	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp negated_condition?({:!, _meta, _arguments}) do$/;"	f
negated_condition?	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp negated_condition?({:__block__, _meta, arguments}) do$/;"	f
negated_condition?	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp negated_condition?({:not, _meta, _arguments}) do$/;"	f
negative?	deps/decimal/lib/decimal.ex	/^  def negative?(%Decimal{coef: 0}), do: false$/;"	f
negative?	deps/decimal/lib/decimal.ex	/^  def negative?(%Decimal{coef: :qNaN}), do: false$/;"	f
negative?	deps/decimal/lib/decimal.ex	/^  def negative?(%Decimal{coef: :sNaN} = num),$/;"	f
negative?	deps/decimal/lib/decimal.ex	/^  def negative?(%Decimal{sign: -1}), do: true$/;"	f
negative?	deps/decimal/lib/decimal.ex	/^  def negative?(%Decimal{sign: 1}), do: false$/;"	f
negotiate_serializer	deps/phoenix/lib/phoenix/socket.ex	/^  defp negotiate_serializer(serializers, vsn) when is_list(serializers) do$/;"	f
nest	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp nest(elems, 0, _, acc) do$/;"	f
nest	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp nest(elems, [len | lengths]) do$/;"	f
nest	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp nest(elems, [len]) do$/;"	f
nest	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp nest(elems, n, lengths, acc) do$/;"	f
nest_inner	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp nest_inner([elem | elems], n, acc) do$/;"	f
nest_inner	deps/postgrex/lib/postgrex/extensions/array.ex	/^  defp nest_inner(elems, 0, acc) do$/;"	f
nested assoc	deps/ecto/integration_test/cases/joins.exs	/^  test "nested assoc" do$/;"	t
nested assoc with child preload	deps/ecto/integration_test/cases/joins.exs	/^  test "nested assoc with child preload" do$/;"	t
nested assoc with missing entries	deps/ecto/integration_test/cases/joins.exs	/^  test "nested assoc with missing entries" do$/;"	t
nested assoc with sibling preload	deps/ecto/integration_test/cases/joins.exs	/^  test "nested assoc with sibling preload" do$/;"	t
nested embeds	deps/ecto/integration_test/cases/type.exs	/^  test "nested embeds" do$/;"	t
nested transaction partial rollback	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "nested transaction partial rollback" do$/;"	t
nesting_info	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp nesting_info(title, prefixes) do$/;"	f
new	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def new(conn, _params) do$/;"	f
new	deps/credo/lib/credo/check/config_comment.ex	/^  def new("#{@instruction_disable_lines}:" <> line_count, param_string, line_no) do$/;"	f
new	deps/credo/lib/credo/check/config_comment.ex	/^  def new(instruction, param_string, line_no) do$/;"	f
new	deps/credo/lib/credo/check/config_comment.ex	/^  def new(instruction, param_string, line_no)$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  def new(opts) do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(:exp, min, max) do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(:rand, min, max) do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(:rand_exp, min, max) do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(_, _, max) when not (is_integer(max) and max >= 0) do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(_, min, _) when not (is_integer(min) and min >= 0) do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(_, min, max) when min > max do$/;"	f
new	deps/db_connection/lib/db_connection/backoff.ex	/^  defp new(type, _, _) do$/;"	f
new	deps/db_connection/lib/db_connection/holder.ex	/^  def new(pool, ref, mod, state) do$/;"	f
new	deps/db_connection/lib/db_connection/log_entry.ex	/^  def new(call, query, params, times, result) do$/;"	f
new	deps/decimal/lib/decimal.ex	/^  def new(%Decimal{} = num), do: num$/;"	f
new	deps/decimal/lib/decimal.ex	/^  def new(binary) when is_binary(binary) do$/;"	f
new	deps/decimal/lib/decimal.ex	/^  def new(float) when is_float(float) do$/;"	f
new	deps/decimal/lib/decimal.ex	/^  def new(int) when is_integer(int),$/;"	f
new	deps/decimal/lib/decimal.ex	/^  def new(sign, coef, exp)$/;"	f
new	deps/earmark/lib/earmark/parser/list_info.ex	/^  def new(%Earmark.Line.ListItem{initial_indent: ii, list_indent: width}=item) do$/;"	f
new	deps/ecto/lib/ecto/multi.ex	/^  def new do$/;"	f
new	deps/jason/lib/encode.ex	/^  def new({:duplicate_key, key}) do$/;"	f
new	deps/jason/lib/encode.ex	/^  def new({:invalid_byte, byte, original}) do$/;"	f
new	deps/jason/lib/fragment.ex	/^  def new(encode) when is_function(encode, 1) do$/;"	f
new	deps/jason/lib/fragment.ex	/^  def new(iodata) when is_list(iodata) or is_binary(iodata) do$/;"	f
new	deps/phoenix/lib/mix/phoenix/context.ex	/^  def new(context_name, %Schema{} = schema, opts) do$/;"	f
new	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def new(schema_name, schema_plural, cli_attrs, opts) do$/;"	f
new	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def new(conn, _params) do$/;"	f
new	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  def new(name) do$/;"	f
new	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def new(replica, shard_name) do$/;"	f
new	deps/postgrex/lib/postgrex/types.ex	/^  def new(module) do$/;"	f
new_cert	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp new_cert(public_key, common_name, hostnames) do$/;"	f
new_constraint_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp new_constraint_expr(%Constraint{check: check} = constraint) when is_binary(check) do$/;"	f
new_constraint_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp new_constraint_expr(%Constraint{exclude: exclude} = constraint) when is_binary(exclude) do$/;"	f
new_for_columns	deps/earmark/lib/earmark/block.ex	/^    def new_for_columns(n) do$/;"	f
new_issue_for_members	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  defp new_issue_for_members(filenames, source_file, nodes_threshold, nodes, params, exec) do$/;"	f
new_query_cache	deps/ecto/lib/ecto/query/planner.ex	/^  def new_query_cache(name) do$/;"	f
new_session	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp new_session(conn, endpoint, handler, opts) do$/;"	f
new_status	deps/postgrex/lib/postgrex/protocol.ex	/^  defmacrop new_status(opts, fields \\\\ []) do$/;"	a
newline_allowed?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp newline_allowed?([]), do: true$/;"	f
newline_allowed?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp newline_allowed?(ors) do$/;"	f
newline_forbidden?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp newline_forbidden?([]), do: false$/;"	f
newline_forbidden?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp newline_forbidden?(ands) do$/;"	f
next	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp next(%{queue: queue} = state) do$/;"	f
next	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def next(sequence_name) do$/;"	f
next	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def next(sequence_name) when is_binary(sequence_name) do$/;"	f
next	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def next(sequence_name, [_ | _] = list) do$/;"	f
next	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def next(sequence_name, formatter) do$/;"	f
next	deps/postgrex/lib/postgrex/type_server.ex	/^  defp next(%{types: types, waiting: waiting} = state) do$/;"	f
next_multipart	deps/plug/lib/plug/conn.ex	/^  defp next_multipart(adapter, state, opts) do$/;"	f
nil_safe?	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp nil_safe?(expr) do$/;"	f
nilify_all	deps/ecto/lib/ecto/association.ex	/^  def nilify_all(%{related_key: related_key} = refl, parent, repo_name, opts) do$/;"	f
no assoc constraint error	deps/ecto/integration_test/cases/repo.exs	/^  test "no assoc constraint error" do$/;"	t
no assoc constraint with changeset match	deps/ecto/integration_test/cases/repo.exs	/^  test "no assoc constraint with changeset match" do$/;"	t
no assoc constraint with changeset mismatch	deps/ecto/integration_test/cases/repo.exs	/^  test "no assoc constraint with changeset mismatch" do$/;"	t
no_adapter_data	deps/plug/lib/plug/conn.ex	/^  defp no_adapter_data(%{adapter: {adapter, _}} = conn, _), do: %{conn | adapter: {adapter, :...}}$/;"	f
no_adapter_data	deps/plug/lib/plug/conn.ex	/^  defp no_adapter_data(conn, %{limit: :infinity}), do: conn$/;"	f
no_assoc_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def no_assoc_constraint(changeset, assoc, opts \\\\ []) do$/;"	f
no_assoc_message	deps/ecto/lib/ecto/changeset.ex	/^  defp no_assoc_message(:many), do: "are still associated with this entry"$/;"	f
no_assoc_message	deps/ecto/lib/ecto/changeset.ex	/^  defp no_assoc_message(:one), do: "is still associated with this entry"$/;"	f
no_case?	deps/credo/lib/credo/code/name.ex	/^  def no_case?(name) do$/;"	f
no_check?	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp no_check?(opts) do$/;"	f
no_holder	deps/db_connection/lib/db_connection/holder.ex	/^  defp no_holder(holder, maybe_pid) do$/;"	f
no_plt?	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp no_plt? do$/;"	f
no_secret_key_base	deps/plug/lib/plug/conn.ex	/^  defp no_secret_key_base(%{secret_key_base: nil} = conn), do: conn$/;"	f
no_secret_key_base	deps/plug/lib/plug/conn.ex	/^  defp no_secret_key_base(conn), do: %{conn | secret_key_base: :...}$/;"	f
no_space_between?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def no_space_between?(arg1, arg2) do$/;"	f
no_umbrella!	deps/ecto/lib/mix/ecto.ex	/^  def no_umbrella!(task) do$/;"	f
node_child	deps/ex_doc/lib/ex_doc/formatter/html/search_items.ex	/^  defp node_child(%{id: id, type: type, rendered_doc: doc}, module) do$/;"	f
node_name	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def node_name(server) do$/;"	f
node_name	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  def node_name(configured_name), do: configured_name$/;"	f
node_name	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  def node_name(nil), do: node()$/;"	f
node_name	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  test "node_name\/1 returns the node name", config do$/;"	t
node_tag	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  def node_tag({tag, _, _}), do: tag$/;"	f
node_tag	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  def node_tag({tag, _}), do: tag$/;"	f
non_empty!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp non_empty!([], action) do$/;"	f
non_empty!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp non_empty!(combinator, action) do$/;"	f
non_executable_binary_to_term	deps/plug_crypto/lib/plug/crypto.ex	/^  def non_executable_binary_to_term(binary, opts \\\\ []) when is_binary(binary) do$/;"	f
non_executable_list	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_list([]), do: :ok$/;"	f
non_executable_list	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_list([h | t]) do$/;"	f
non_executable_list	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_list([h | t]) when is_list(t) do$/;"	f
non_executable_terms	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_terms(list) when is_list(list) do$/;"	f
non_executable_terms	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_terms(map) when is_map(map) do$/;"	f
non_executable_terms	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_terms(other) do$/;"	f
non_executable_terms	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_terms(other)$/;"	f
non_executable_terms	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_terms(tuple) when is_tuple(tuple) do$/;"	f
non_executable_tuple	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_tuple(_tuple, 0), do: :ok$/;"	f
non_executable_tuple	deps/plug_crypto/lib/plug/crypto.ex	/^  defp non_executable_tuple(tuple, n) do$/;"	f
noop	deps/earmark/lib/earmark/context.ex	/^  defp noop(text), do: text$/;"	f
normal_status	deps/db_connection/lib/db_connection/connection.ex	/^  defp normal_status(mod, pdict, state) do$/;"	f
normal_status_default	deps/db_connection/lib/db_connection/connection.ex	/^  defp normal_status_default(mod, state) do$/;"	f
normalize	deps/ecto/lib/ecto/query/planner.ex	/^  def normalize(query, operation, adapter, counter) do$/;"	f
normalize	deps/ecto/lib/ecto/repo/preloader.ex	/^  def normalize(preload, take, original) do$/;"	f
normalize_and_preload_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp normalize_and_preload_each(structs, repo_name, preloads, take, opts) do$/;"	f
normalize_check_tuple	deps/credo/lib/credo/config_file.ex	/^  defp normalize_check_tuple(tuple), do: tuple$/;"	f
normalize_check_tuple	deps/credo/lib/credo/config_file.ex	/^  defp normalize_check_tuple({name}), do: {name, []}$/;"	f
normalize_check_tuples	deps/credo/lib/credo/config_file.ex	/^  defp normalize_check_tuples(list) when is_list(list) do$/;"	f
normalize_check_tuples	deps/credo/lib/credo/config_file.ex	/^  defp normalize_check_tuples(nil), do: []$/;"	f
normalize_config	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp normalize_config(config) do$/;"	f
normalize_config	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp normalize_config(%{main: "index"}) do$/;"	f
normalize_config	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp normalize_config(%{main: main} = config) do$/;"	f
normalize_deps	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp normalize_deps(options) do$/;"	f
normalize_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp normalize_each(atom, acc, take, _original) when is_atom(atom) do$/;"	f
normalize_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp normalize_each(other, acc, take, original) do$/;"	f
normalize_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp normalize_each({atom, list}, acc, take, original) when is_atom(atom) do$/;"	f
normalize_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp normalize_each({atom, query}, acc, take, _original)$/;"	f
normalize_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp normalize_each({atom, {query, list}}, acc, take, original)$/;"	f
normalize_groups_for_modules	deps/ex_doc/lib/ex_doc.ex	/^  defp normalize_groups_for_modules(groups_for_modules) do$/;"	f
normalize_homepage_url	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp normalize_homepage_url(options, config) do$/;"	f
normalize_index_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp normalize_index_name(quoted, source) do$/;"	f
normalize_main	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp normalize_main(options) do$/;"	f
normalize_method	deps/plug/lib/plug/router/utils.ex	/^  def normalize_method(method) do$/;"	f
normalize_nest_modules_by_prefix	deps/ex_doc/lib/ex_doc.ex	/^  defp normalize_nest_modules_by_prefix(nest_modules_by_prefix) do$/;"	f
normalize_output	deps/ex_doc/lib/ex_doc.ex	/^  defp normalize_output(output) do$/;"	f
normalize_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_param(_kind, type, _value) do$/;"	f
normalize_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_param(_kind, {:out, :any}, _value) do$/;"	f
normalize_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_param(_kind, {:out, {:array, type}}, _value) do$/;"	f
normalize_param	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_param(kind, {:out, other}, value) do$/;"	f
normalize_pool	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp normalize_pool(pool) do$/;"	f
normalize_port	deps/postgrex/lib/postgrex/utils.ex	/^  defp normalize_port(port) when is_binary(port), do: String.to_integer(port)$/;"	f
normalize_port	deps/postgrex/lib/postgrex/utils.ex	/^  defp normalize_port(port), do: port$/;"	f
normalize_query	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_query(query, operation, adapter, counter) do$/;"	f
normalize_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_select(%{select: nil} = query, _keep_literals?) do$/;"	f
normalize_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp normalize_select(query, keep_literals?) do$/;"	f
normalize_serializer_conf	deps/phoenix/lib/phoenix/socket.ex	/^  defp normalize_serializer_conf(conf, name, transport_mod, default) do$/;"	f
normalize_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp normalize_source("Elixir." <> _ = source),$/;"	f
normalize_source	deps/ecto/lib/ecto/query/inspect.ex	/^  defp normalize_source(source),$/;"	f
normalize_source_beam	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp normalize_source_beam(options, config) do$/;"	f
normalize_source_url	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp normalize_source_url(options, config) do$/;"	f
normalize_ssl_file	deps/plug/lib/plug/ssl.ex	/^  defp normalize_ssl_file(key, options) do$/;"	f
normalize_ssl_files	deps/plug/lib/plug/ssl.ex	/^  defp normalize_ssl_files(options) do$/;"	f
not	deps/ecto/lib/ecto/query/api.ex	/^  def not(value), do: doc! [value]$/;"	f
not_empty?	deps/makeup/lib/makeup/styles/html.ex	/^    def not_empty?(style) do$/;"	f
not_found	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp not_found({pid, _} = from) do$/;"	f
not_found	deps/plug/lib/plug/static.ex	/^        def not_found(conn, _) do$/;"	f
not_in	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp not_in(_pos, []), do: []$/;"	f
not_in	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp not_in(pos, replicas), do: [not: ors(pos, replicas)]$/;"	f
not_nil!	deps/ecto/lib/ecto/query/builder.ex	/^  def not_nil!(nil) do$/;"	f
not_nil!	deps/ecto/lib/ecto/query/builder.ex	/^  def not_nil!(not_nil) do$/;"	f
not_nil!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def not_nil!(nil, field) do$/;"	f
not_nil!	deps/ecto/lib/ecto/query/builder/filter.ex	/^  def not_nil!(other, _field), do: other$/;"	f
not_quote	deps/nimble_parsec/lib/nimble_parsec.ex	/^        defp not_quote(<<?", _::binary>>, context, _, _), do: {:halt, context}$/;"	f
not_quote	deps/nimble_parsec/lib/nimble_parsec.ex	/^        defp not_quote(_, context, _, _), do: {:cont, context}$/;"	f
notify	deps/postgrex/lib/postgrex/protocol.ex	/^  defp notify(opts) do$/;"	f
notify_client_now_available	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp notify_client_now_available(state) do$/;"	f
notify_listeners	deps/postgrex/lib/postgrex/notifications.ex	/^  defp notify_listeners(channels, listeners, channel, payload) do$/;"	f
now	deps/credo/lib/credo/execution/execution_timing.ex	/^  def now(), do: :os.system_time(:microsecond)$/;"	f
now	deps/phoenix/lib/phoenix/digester.ex	/^  defp now() do$/;"	f
now	deps/plug/lib/plug/session/ets.ex	/^  defp now() do$/;"	f
now_ms	deps/phoenix/lib/phoenix/token.ex	/^  defp now_ms, do: System.system_time(:millisecond)$/;"	f
now_ms	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp now_ms, do: System.system_time(:millisecond)$/;"	f
now_ms	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  defp now_ms, do: System.system_time(:millisecond)$/;"	f
now_ms	deps/plug_crypto/lib/plug/crypto.ex	/^  defp now_ms, do: System.system_time(:millisecond)$/;"	f
nth_value	deps/ecto/lib/ecto/query/window_api.ex	/^  def nth_value(value, nth), do: doc! [value, nth]$/;"	f
ntile	deps/ecto/lib/ecto/query/window_api.ex	/^  def ntile(num_buckets), do: doc! [num_buckets]$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp null_expr(_), do: []$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp null_expr(false), do: " NOT NULL"$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp null_expr(true), do: " NULL"$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp null_expr(_), do: []$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp null_expr(false), do: " NOT NULL"$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp null_expr(true), do: " NULL"$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp null_expr(_), do: []$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp null_expr(false), do: [" NOT NULL"]$/;"	f
null_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp null_expr(true), do: [" NULL"]$/;"	f
number	deps/jason/lib/decoder.ex	/^  defp number(<<?., rest::bits>>, original, skip, stack, key_decode, string_decode, len) do$/;"	f
number	deps/jason/lib/decoder.ex	/^  defp number(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number	deps/jason/lib/decoder.ex	/^  defp number(<<e, rest::bits>>, original, skip, stack, key_decode, string_decode, len) when e in 'eE' do$/;"	f
number	deps/jason/lib/decoder.ex	/^  defp number(<<rest::bits>>, original, skip, stack, key_decode, string_decode, len) do$/;"	f
number_exp	deps/jason/lib/decoder.ex	/^  defp number_exp(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, len) do$/;"	f
number_exp	deps/jason/lib/decoder.ex	/^  defp number_exp(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number_exp_cont	deps/jason/lib/decoder.ex	/^  defp number_exp_cont(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number_exp_cont	deps/jason/lib/decoder.ex	/^  defp number_exp_cont(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, prefix, len)$/;"	f
number_exp_cont	deps/jason/lib/decoder.ex	/^  defp number_exp_cont(<<rest::bits>>, original, skip, stack, key_decode, string_decode, len) do$/;"	f
number_exp_cont	deps/jason/lib/decoder.ex	/^  defp number_exp_cont(<<rest::bits>>, original, skip, stack, key_decode, string_decode, prefix, len) do$/;"	f
number_exp_copy	deps/jason/lib/decoder.ex	/^  defp number_exp_copy(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, _prefix) do$/;"	f
number_exp_copy	deps/jason/lib/decoder.ex	/^  defp number_exp_copy(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, prefix)$/;"	f
number_exp_sign	deps/jason/lib/decoder.ex	/^  defp number_exp_sign(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, _prefix, len) do$/;"	f
number_exp_sign	deps/jason/lib/decoder.ex	/^  defp number_exp_sign(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, len) do$/;"	f
number_exp_sign	deps/jason/lib/decoder.ex	/^  defp number_exp_sign(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number_exp_sign	deps/jason/lib/decoder.ex	/^  defp number_exp_sign(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, prefix, len)$/;"	f
number_frac	deps/jason/lib/decoder.ex	/^  defp number_frac(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, len) do$/;"	f
number_frac	deps/jason/lib/decoder.ex	/^  defp number_frac(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number_frac_cont	deps/jason/lib/decoder.ex	/^  defp number_frac_cont(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number_frac_cont	deps/jason/lib/decoder.ex	/^  defp number_frac_cont(<<e, rest::bits>>, original, skip, stack, key_decode, string_decode, len)$/;"	f
number_frac_cont	deps/jason/lib/decoder.ex	/^  defp number_frac_cont(<<rest::bits>>, original, skip, stack, key_decode, string_decode, len) do$/;"	f
number_in_fun?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp number_in_fun?(line, column) do$/;"	f
number_in_range?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp number_in_range?(line, column) do$/;"	f
number_minus	deps/jason/lib/decoder.ex	/^  defp number_minus(<<?0, rest::bits>>, original, skip, stack, key_decode, string_decode) do$/;"	f
number_minus	deps/jason/lib/decoder.ex	/^  defp number_minus(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode) do$/;"	f
number_minus	deps/jason/lib/decoder.ex	/^  defp number_minus(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode)$/;"	f
number_token	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp number_token(_, _), do: nil$/;"	f
number_token	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp number_token({:float, {_, _, number}, _} = tuple, min_number) when min_number < number do$/;"	f
number_token	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp number_token({:int, {_, _, number}, _} = tuple, min_number) when min_number < number do$/;"	f
number_token	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp number_token({:number, _, number} = tuple, min_number) when min_number < number do$/;"	f
number_with_sign?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp number_with_sign?(line, column) do$/;"	f
number_with_underscores	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp number_with_underscores(number, _) when is_integer(number) do$/;"	f
number_with_underscores	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp number_with_underscores(number, source_fragment) when is_number(number) do$/;"	f
number_zero	deps/jason/lib/decoder.ex	/^  defp number_zero(<<?., rest::bits>>, original, skip, stack, key_decode, string_decode, len) do$/;"	f
number_zero	deps/jason/lib/decoder.ex	/^  defp number_zero(<<e, rest::bits>>, original, skip, stack, key_decode, string_decode, len) when e in 'eE' do$/;"	f
number_zero	deps/jason/lib/decoder.ex	/^  defp number_zero(<<rest::bits>>, original, skip, stack, key_decode, string_decode, len) do$/;"	f
numberize_option	deps/earmark/lib/earmark/cli.ex	/^  defp numberize_option({k, v}, option_names) do$/;"	f
numberize_options	deps/earmark/lib/earmark/cli.ex	/^  defp numberize_options(keywords, option_names), do: Enum.map(keywords, &numberize_option(&1, option_names))$/;"	f
oauth_config	lib/boruta/config.ex	/^  defp oauth_config do$/;"	f
object	deps/jason/lib/decoder.ex	/^  defp object(data, original, skip, stack, key_decode, string_decode, value) do$/;"	f
object	deps/jason/lib/decoder.ex	/^  defp object(rest, original, skip, stack, key_decode, string_decode) do$/;"	f
observe_removes	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp observe_removes(%State{pids: pids, values: values, delta: delta} = local, remote, remote_map) do$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:any, _), do: true$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:binary, term), do: is_binary(term)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:boolean, term), do: is_boolean(term)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:date, value), do: Kernel.match?(%Date{}, value)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:decimal, value), do: Kernel.match?(%Decimal{}, value)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:float, term), do: is_float(term)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:id, term), do: is_integer(term)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:integer, term), do: is_integer(term)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:map, term), do: is_map(term) and not Map.has_key?(term, :__struct__)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(:string, term), do: is_binary(term)$/;"	f
of_base_type?	deps/ecto/lib/ecto/type.ex	/^  defp of_base_type?(_, _), do: false$/;"	f
offset	deps/ecto/lib/ecto/query.ex	/^  defmacro offset(query, binding \\\\ [], expr) do$/;"	a
offset	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp offset(%{offset: %QueryExpr{expr: expr}} = query, sources) do$/;"	f
offset	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp offset(%{offset: nil}, _sources), do: []$/;"	f
offset	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp offset(%{offset: %QueryExpr{expr: expr}} = query, sources) do$/;"	f
offset	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp offset(%{offset: nil}, _sources), do: []$/;"	f
offset	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp offset(%Query{offset: _, limit: nil} = query, _sources) do$/;"	f
offset	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp offset(%{offset: nil}, _sources), do: []$/;"	f
offset	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp offset(%{offset: offset, limit: limit} = query, sources) do$/;"	f
oids	deps/postgrex/lib/postgrex/extensions/array.ex	/^  def oids(%Postgrex.TypeInfo{array_elem: elem_oid}, _),$/;"	f
oids	deps/postgrex/lib/postgrex/extensions/range.ex	/^  def oids(%Postgrex.TypeInfo{base_type: base_oid}, _) do$/;"	f
oids	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def oids(%Postgrex.TypeInfo{comp_elems: []}, _),$/;"	f
oids	deps/postgrex/lib/postgrex/extensions/record.ex	/^  def oids(%Postgrex.TypeInfo{comp_elems: comp_oids}, _),$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^        def ok(:ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^        def ok(:error) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^        def ok(:ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^        def ok(:ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^        def ok(:error) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^        def ok(:ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^        def ok() when 0 > 1 do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^        defp ok(n) when n > 1 do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^        def ok(n = 0) when not n < 1 do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^        def ok(ok = "ok") when not is_bitstring(ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^        defp ok(ok) when not is_atom(ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^        def ok(:ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^        def ok(:error) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^        def ok(:ok) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^        def ok(_) do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^        def ok() do$/;"	f
ok	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^        def ok() do$/;"	f
ok_error	deps/ecto/lib/ecto/log_entry.ex	/^  defp ok_error({:error, _}), do: "ERROR"$/;"	f
ok_error	deps/ecto/lib/ecto/log_entry.ex	/^  defp ok_error({:ok, _}), do: "OK"$/;"	f
ok_source	deps/ecto/lib/ecto/log_entry.ex	/^  defp ok_source(nil), do: ""$/;"	f
ok_source	deps/ecto/lib/ecto/log_entry.ex	/^  defp ok_source(source), do: " source=#{inspect(source)}"$/;"	f
on coalesce with mixed types	deps/ecto/integration_test/cases/type.exs	/^  test "on coalesce with mixed types" do$/;"	t
on conflict and associations	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict and associations" do$/;"	t
on conflict ignore	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict ignore" do$/;"	t
on conflict ignore and conflict target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict ignore and conflict target" do$/;"	t
on conflict ignore and returning	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict ignore and returning" do$/;"	t
on conflict keyword list	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict keyword list" do$/;"	t
on conflict keyword list and conflict target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict keyword list and conflict target" do$/;"	t
on conflict keyword list and conflict target and returning	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict keyword list and conflict target and returning" do$/;"	t
on conflict keyword list and conflict target and returning and field source	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict keyword list and conflict target and returning and field source" do$/;"	t
on conflict keyword list and conflict target and returning and source field	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict keyword list and conflict target and returning and source field" do$/;"	t
on conflict query	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict query" do$/;"	t
on conflict query and conflict target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict query and conflict target" do$/;"	t
on conflict query and conflict target and returning	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict query and conflict target and returning" do$/;"	t
on conflict query having condition	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict query having condition" do$/;"	t
on conflict raise	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict raise" do$/;"	t
on conflict replace and conflict_target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict replace and conflict_target" do$/;"	t
on conflict replace_all	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict replace_all" do$/;"	t
on conflict replace_all and conflict target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict replace_all and conflict target" do$/;"	t
on conflict replace_all and conflict_target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict replace_all and conflict_target" do$/;"	t
on conflict replace_all_except	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict replace_all_except" do$/;"	t
on conflict replace_all_except and conflict_target	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict replace_all_except and conflict_target" do$/;"	t
on conflict with inc	deps/ecto/integration_test/cases/repo.exs	/^    test "on conflict with inc" do$/;"	t
on_cast_default	deps/ecto/lib/ecto/changeset.ex	/^  defp on_cast_default(type, module) do$/;"	f
on_conflict	deps/ecto/lib/ecto/repo/schema.ex	/^  defp on_conflict(on_conflict, conflict_target, schema_meta, counter_fun, adapter) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp on_conflict({%{wheres: []} = query, _, []}, _header) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp on_conflict({:nothing, _, []}, [field | _]) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp on_conflict({:raise, _, []}, _header) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp on_conflict({_, _, [_ | _]}, _header) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp on_conflict({_query, _, []}, _header) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp on_conflict({fields, _, []}, _header) when is_list(fields) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp on_conflict({:nothing, _, targets}, _header),$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp on_conflict({:raise, _, []}, _header),$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp on_conflict({fields, _, targets}, _header) when is_list(fields),$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp on_conflict({query, _, targets}, _header),$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp on_conflict({:raise, _, []}, _header) do$/;"	f
on_conflict	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp on_conflict({_, _, _}, _header) do$/;"	f
on_conflict_query	deps/ecto/lib/ecto/repo/schema.ex	/^  defp on_conflict_query(query, from, prefix, counter_fun, adapter, conflict_target) do$/;"	f
on_delete_query	deps/ecto/lib/ecto/association.ex	/^  defp on_delete_query(%{owner_key: owner_key, related_key: related_key,$/;"	f
on_exit_message	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def on_exit_message(topic, join_ref, _reason) do$/;"	f
on_exit_message	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def on_exit_message(topic, reason) do$/;"	f
on_replace	deps/ecto/lib/ecto/changeset/relation.ex	/^  def on_replace(%{on_replace: :mark_as_invalid}, _changeset_or_struct) do$/;"	f
on_replace	deps/ecto/lib/ecto/changeset/relation.ex	/^  def on_replace(%{on_replace: :raise, field: name, owner: owner}, _) do$/;"	f
on_replace	deps/ecto/lib/ecto/changeset/relation.ex	/^  def on_replace(_relation, changeset_or_struct) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{data: struct}, [], _adapter, _opts) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{field: field, join_through: join_through, join_keys: join_keys} = refl,$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{field: name}, _, _, _, _) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{join_keys: join_keys, join_through: join_through},$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{on_replace: :delete} = refl, parent_changeset,$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{on_replace: :nilify}, _parent_changeset, %{action: :replace}, _adapter, _opts) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{on_replace: on_replace} = refl, %{data: parent} = parent_changeset,$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(%{on_replace: on_replace} = refl, parent_changeset,$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(_refl, %{data: parent, repo: repo}, %{action: action} = changeset, _adapter, opts) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(assoc, parent_changeset, changeset, _adapter, opts) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  def on_repo_change(changeset, assocs, adapter, opts) do$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  defp on_repo_change(%{cardinality: :many, field: field, __struct__: mod} = meta,$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  defp on_repo_change(%{cardinality: :one, field: field, __struct__: mod} = meta,$/;"	f
on_repo_change	deps/ecto/lib/ecto/association.ex	/^  defp on_repo_change(%{cardinality: :one, field: field} = meta, nil, parent_changeset,$/;"	f
on_repo_change_unless_halted	deps/ecto/lib/ecto/association.ex	/^  defp on_repo_change_unless_halted(false, mod, meta, parent, changeset, adapter, opts) do$/;"	f
on_repo_change_unless_halted	deps/ecto/lib/ecto/association.ex	/^  defp on_repo_change_unless_halted(true, _mod, _meta, _parent, changeset, _adapter, _opts) do$/;"	f
one	deps/ecto/lib/ecto/repo.ex	/^        def one(queryable, opts \\\\ []) do$/;"	f
one	deps/ecto/lib/ecto/repo/queryable.ex	/^  def one(name, queryable, opts) do$/;"	f
one!	deps/ecto/lib/ecto/repo.ex	/^        def one!(queryable, opts \\\\ []) do$/;"	f
one!	deps/ecto/lib/ecto/repo/queryable.ex	/^  def one!(name, queryable, opts) do$/;"	f
one_assoc_map	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp one_assoc_map([], [], map) do$/;"	f
one_assoc_map	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp one_assoc_map([id|ids], [struct|structs], map) do$/;"	f
online_list	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def online_list(%State{values: values} = state) do$/;"	f
only_variables	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp only_variables({name, _}) do$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp op_to_binary(expr, sources, query),$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp op_to_binary({:is_nil, _, [_]} = expr, sources, query),$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp op_to_binary({op, _, [_, _]} = expr, sources, query) when op in @binary_ops,$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp op_to_binary(expr, sources, query),$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp op_to_binary({:is_nil, _, [_]} = expr, sources, query),$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp op_to_binary({op, _, [_, _]} = expr, sources, query) when op in @binary_ops,$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp op_to_binary(expr, sources, query) do$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp op_to_binary({:is_nil, _, [_]} = expr, sources, query) do$/;"	f
op_to_binary	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp op_to_binary({op, _, [_, _]} = expr, sources, query) when op in @binary_ops do$/;"	f
opaque	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^        def opaque() do$/;"	f
open?	deps/ecto/lib/mix/ecto.ex	/^  def open?(file) do$/;"	f
open_branch	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp open_branch(stack_name, pattern, group_prefix_varname, group_nr_varname) do$/;"	f
open_file	deps/earmark/lib/earmark/cli.ex	/^  defp open_file(filename), do: io_device(File.open(filename, [:utf8]), filename)$/;"	f
open_random_file	deps/plug/lib/plug/upload.ex	/^  defp open_random_file(_prefix, tmp, attempts, _paths) do$/;"	f
open_random_file	deps/plug/lib/plug/upload.ex	/^  defp open_random_file(prefix, tmp, attempts, paths) when attempts < @max_attempts do$/;"	f
open_tag	deps/earmark/lib/earmark/transform.ex	/^  defp open_tag(tag, atts, void? \\\\ false) do$/;"	f
open_to_byte	deps/postgrex/lib/postgrex/extensions/path.ex	/^  def open_to_byte(false), do: 1$/;"	f
open_to_byte	deps/postgrex/lib/postgrex/extensions/path.ex	/^  def open_to_byte(true), do: 0$/;"	f
opens_inline_code	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  def opens_inline_code(%{line: line, lnb: lnb}) do$/;"	f
operation_fun	deps/ecto/lib/ecto/multi.ex	/^  defp operation_fun(operation, opts, fun) do$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?(_), do: false$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:and_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:arrow_op, _, _}), do: false$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:comp_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:comp_op2, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:dual_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:in_match_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:match_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:mult_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:or_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:pipe_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:rel_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:rel_op2, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:stab_op, _, _}), do: true$/;"	f
operator?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def operator?({:two_op, _, _}), do: true$/;"	f
operator_to_boolean	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp operator_to_boolean(:and), do: " AND "$/;"	f
operator_to_boolean	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp operator_to_boolean(:or), do: " OR "$/;"	f
operator_to_boolean	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp operator_to_boolean(:and), do: " AND "$/;"	f
operator_to_boolean	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp operator_to_boolean(:or), do: " OR "$/;"	f
operator_to_boolean	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp operator_to_boolean(:and), do: " AND "$/;"	f
operator_to_boolean	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp operator_to_boolean(:or), do: " OR "$/;"	f
optimistic locking in delete operation with nil field	deps/ecto/integration_test/cases/repo.exs	/^  test "optimistic locking in delete operation with nil field" do$/;"	t
optimistic locking in update	deps/ecto/integration_test/cases/repo.exs	/^  test "optimistic locking in update\/delete operations" do$/;"	t
optimistic locking in update operation with nil field	deps/ecto/integration_test/cases/repo.exs	/^  test "optimistic locking in update operation with nil field" do$/;"	t
optimistic_lock	deps/ecto/lib/ecto/changeset.ex	/^  def optimistic_lock(data_or_changeset, field, incrementer \\\\ &increment_with_rollover\/1) do$/;"	f
option_related_help	deps/earmark/lib/earmark/cli.ex	/^  defp option_related_help do$/;"	f
optional	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def optional(combinator \\\\ empty(), optional) do$/;"	f
options	deps/plug/lib/plug/router.ex	/^  defmacro options(path, options, contents \\\\ []) do$/;"	a
options_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp options_expr(keyword) when is_list(keyword),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp options_expr(nil),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp options_expr(options),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp options_expr(keyword) when is_list(keyword),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp options_expr(nil),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp options_expr(options),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp options_expr(keyword) when is_list(keyword),$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp options_expr(nil), do: []$/;"	f
options_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp options_expr(options), do: [" ", to_string(options)]$/;"	f
or_having	deps/ecto/lib/ecto/query.ex	/^  defmacro or_having(query, binding \\\\ [], expr) do$/;"	a
or_where	deps/ecto/lib/ecto/query.ex	/^  defmacro or_where(query, binding \\\\ [], expr) do$/;"	a
order_by	deps/ecto/lib/ecto/query.ex	/^  defmacro order_by(query, binding \\\\ [], expr)  do$/;"	a
order_by	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp order_by(%{order_bys: []}, _sources), do: []$/;"	f
order_by	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp order_by(%{order_bys: order_bys} = query, sources) do$/;"	f
order_by	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp order_by(%{order_bys: []}, _distinct, _sources), do: []$/;"	f
order_by	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp order_by(%{order_bys: order_bys} = query, distinct, sources) do$/;"	f
order_by	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp order_by(%{order_bys: []}, _sources), do: []$/;"	f
order_by	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp order_by(%{order_bys: order_bys} = query, sources) do$/;"	f
order_by!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def order_by!(query, exprs, file, line) do$/;"	f
order_by_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp order_by_expr({dir, expr}, sources, query) do$/;"	f
order_by_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp order_by_expr({dir, expr}, sources, query) do$/;"	f
order_by_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp order_by_expr({dir, expr}, sources, query) do$/;"	f
order_by_or_distinct!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def order_by_or_distinct!(kind, query, exprs, params) do$/;"	f
order_by_pk	deps/ecto/lib/ecto/query.ex	/^  defp order_by_pk(query, dir) do$/;"	f
order_changeset	deps/ecto/integration_test/cases/repo.exs	/^  def order_changeset(order, params) do$/;"	f
ordinal	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^  def ordinal(1), do: "1st"$/;"	f
ordinal	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^  def ordinal(2), do: "2nd"$/;"	f
ordinal	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^  def ordinal(3), do: "3rd"$/;"	f
ordinal	deps/dialyxir/lib/dialyxir/warning_helpers.ex	/^  def ordinal(n) when is_integer(n), do: "#{n}th"$/;"	f
origin_allowed?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp origin_allowed?(_check_origin, %{host: nil}, _endpoint),$/;"	f
origin_allowed?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp origin_allowed?(check_origin, uri, _endpoint) when is_list(check_origin),$/;"	f
origin_allowed?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp origin_allowed?(true, uri, endpoint),$/;"	f
origin_allowed?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp origin_allowed?(uri, allowed_origins) do$/;"	f
origin_allowed?	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp origin_allowed?({module, function, arguments}, uri, _endpoint),$/;"	f
ors	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp ors(pos, [rep | rest]), do: {:or, {:"=:=", pos, {rep}}, ors(pos, rest)}$/;"	f
ors	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp ors(pos, [rep]), do: {:"=:=", pos, {rep}}$/;"	f
os_symlink	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp os_symlink(_),$/;"	f
os_symlink	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp os_symlink({:win32, _}),$/;"	f
otp_app	deps/phoenix/lib/mix/phoenix.ex	/^  def otp_app do$/;"	f
otp_app	deps/plug/lib/plug/ssl.ex	/^  defp otp_app(options) do$/;"	f
otp_vsn	deps/dialyxir/lib/dialyxir/project.ex	/^  defp otp_vsn() do$/;"	f
output_image_or_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp output_image_or_link(_context, "!" <> _, text, href, title, _lnb) do$/;"	f
output_image_or_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp output_image_or_link(context, _, text, href, title, lnb) do$/;"	f
output_image_or_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp output_image_or_link(context, link_or_image, text, href, title, lnb)$/;"	f
output_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp output_link(context, text, href, title, lnb) do$/;"	f
output_setup	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp output_setup(build, config) do$/;"	f
over	deps/ecto/integration_test/cases/windows.exs	/^  test "over" do$/;"	t
override_method	deps/plug/lib/plug/method_override.ex	/^  defp override_method(conn, %Plug.Conn.Unfetched{}) do$/;"	f
override_method	deps/plug/lib/plug/method_override.ex	/^  defp override_method(conn, body_params) do$/;"	f
owner	deps/postgrex/lib/postgrex/types.ex	/^  def owner({_, table}) do$/;"	f
owner_allow	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp owner_allow(%{ets: ets, log: log} = state, allow, ref, proxy) do$/;"	f
owner_down	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp owner_down(%{ets: ets, log: log} = state, ref) do$/;"	f
ownership_allow	deps/db_connection/lib/db_connection/ownership.ex	/^  defdelegate ownership_allow(manager, owner, allow, opts), to: Manager, as: :allow$/;"	d
ownership_checkin	deps/db_connection/lib/db_connection/ownership.ex	/^  defdelegate ownership_checkin(manager, opts), to: Manager, as: :checkin$/;"	d
ownership_checkout	deps/db_connection/lib/db_connection/ownership.ex	/^  def ownership_checkout(manager, opts) do$/;"	f
ownership_mode	deps/db_connection/lib/db_connection/ownership.ex	/^  defdelegate ownership_mode(manager, mode, opts), to: Manager, as: :mode$/;"	d
p_url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp p_url([{:open_paren, _} | ts], lnb), do: url(ts, {[], [], nil}, [:close_paren], lnb)$/;"	f
p_url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp p_url(_, _), do: nil$/;"	f
package	deps/connection/mix.exs	/^  defp package do$/;"	f
package	deps/credo/mix.exs	/^  defp package do$/;"	f
package	deps/crypto_rand/mix.exs	/^  defp package do$/;"	f
package	deps/db_connection/mix.exs	/^  defp package do$/;"	f
package	deps/decimal/mix.exs	/^  defp package() do$/;"	f
package	deps/dialyxir/mix.exs	/^  defp package do$/;"	f
package	deps/earmark/mix.exs	/^  defp package do$/;"	f
package	deps/ecto/mix.exs	/^  defp package do$/;"	f
package	deps/ecto_sql/mix.exs	/^  defp package do$/;"	f
package	deps/erlex/mix.exs	/^  defp package do$/;"	f
package	deps/ex_doc/mix.exs	/^  defp package do$/;"	f
package	deps/ex_json_schema/mix.exs	/^  defp package do$/;"	f
package	deps/ex_machina/mix.exs	/^  defp package() do$/;"	f
package	deps/jason/mix.exs	/^  defp package() do$/;"	f
package	deps/makeup/mix.exs	/^  defp package do$/;"	f
package	deps/makeup_elixir/mix.exs	/^  defp package do$/;"	f
package	deps/mime/mix.exs	/^  def package do$/;"	f
package	deps/mox/mix.exs	/^  defp package do$/;"	f
package	deps/nimble_parsec/mix.exs	/^  defp package do$/;"	f
package	deps/phoenix/mix.exs	/^  defp package do$/;"	f
package	deps/phoenix_pubsub/mix.exs	/^  defp package do$/;"	f
package	deps/plug/mix.exs	/^  defp package do$/;"	f
package	deps/plug_crypto/mix.exs	/^  defp package do$/;"	f
package	deps/postgrex/mix.exs	/^  defp package do$/;"	f
package	deps/puid/mix.exs	/^  defp package do$/;"	f
package	deps/secure_random/mix.exs	/^  defp package do$/;"	f
package	mix.exs	/^  defp package do$/;"	f
pad	deps/earmark/lib/earmark/helpers.ex	/^  defp pad(1), do: " "$/;"	f
pad	deps/earmark/lib/earmark/helpers.ex	/^  defp pad(2), do: "  "$/;"	f
pad	deps/earmark/lib/earmark/helpers.ex	/^  defp pad(3), do: "   "$/;"	f
pad	deps/earmark/lib/earmark/helpers.ex	/^  defp pad(4), do: "    "$/;"	f
pad	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^  defp pad(i) when i < 10, do: << ?0, ?0 + i >>$/;"	f
pad	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^  defp pad(i), do: to_string(i)$/;"	f
pad	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  defp pad(i) when i < 10, do: << ?0, ?0 + i >>$/;"	f
pad	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  defp pad(i), do: to_string(i)$/;"	f
pad	deps/plug/lib/plug/conn/cookies.ex	/^  defp pad(number) when number in 0..9, do: <<?0, ?0 + number>>$/;"	f
pad	deps/plug/lib/plug/conn/cookies.ex	/^  defp pad(number), do: Integer.to_string(number)$/;"	f
pad	lib/mix/tasks/boruta.gen.migrations.ex	/^  defp pad(i) when i < 10, do: << ?0, ?0 + i >>$/;"	f
pad	lib/mix/tasks/boruta.gen.migrations.ex	/^  defp pad(i), do: to_string(i)$/;"	f
pad_replaced_heredoc	deps/credo/lib/credo/code/heredocs.ex	/^  defp pad_replaced_heredoc(acc, delimiter) do$/;"	f
pad_usec	deps/ecto/lib/ecto/type.ex	/^  defp pad_usec(%{microsecond: {_, 6}} = struct), do: struct$/;"	f
pad_usec	deps/ecto/lib/ecto/type.ex	/^  defp pad_usec(%{microsecond: {microsecond, _}} = struct),$/;"	f
pad_usec	deps/ecto/lib/ecto/type.ex	/^  defp pad_usec(nil), do: nil$/;"	f
paginate	deps/ecto/lib/ecto/query.ex	/^      def paginate(query, page, size) do$/;"	f
paraiso_dark_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def paraiso_dark_style, do: HTML.ParaisoDarkStyle.style()$/;"	f
paraiso_light_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def paraiso_light_style, do: HTML.ParaisoLightStyle.style()$/;"	f
param_pk	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp param_pk(mod, pks) do$/;"	f
parameter_in_function_call?	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp parameter_in_function_call?(location_tuple, tokens, ast) do$/;"	f
parameters	deps/postgrex/lib/postgrex.ex	/^  def parameters(conn, opts \\\\ []) do$/;"	f
params	deps/credo/lib/credo/issue_meta.ex	/^  def params(%SourceFile{}), do: []$/;"	f
params	deps/credo/lib/credo/issue_meta.ex	/^  def params(issue_meta)$/;"	f
params	deps/credo/lib/credo/issue_meta.ex	/^  def params({__MODULE__, _source_file, check_params}), do: check_params$/;"	f
params	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def params(attrs, action \\\\ :create) when action in [:create, :update] do$/;"	f
params	deps/phoenix/lib/phoenix/logger.ex	/^  defp params(%Plug.Conn.Unfetched{}), do: "[UNFETCHED]"$/;"	f
params	deps/phoenix/lib/phoenix/logger.ex	/^  defp params(params), do: params |> filter_values() |> inspect()$/;"	f
params	deps/plug/lib/plug/conn/utils.ex	/^  def params(t) do$/;"	f
params	deps/plug/lib/plug/conn/utils.ex	/^  defp params(param, acc) do$/;"	f
params_defaults	deps/credo/lib/credo/check.ex	/^      def params_defaults do$/;"	f
params_for	deps/ex_machina/lib/ex_machina/ecto.ex	/^      def params_for(factory_name, attrs \\\\ %{}) do$/;"	f
params_for	deps/ex_machina/lib/ex_machina/ecto.ex	/^  def params_for(module, factory_name, attrs \\\\ %{}) do$/;"	f
params_ignore_issue?	deps/credo/lib/credo/check/config_comment.ex	/^  defp params_ignore_issue?([], _issue) do$/;"	f
params_ignore_issue?	deps/credo/lib/credo/check/config_comment.ex	/^  defp params_ignore_issue?(params, issue) when is_list(params) do$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<>>, _acc), do: false$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<?=, t::binary>>, acc) when acc != "", do: params_value(t, acc)$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<h, _::binary>>, _acc)$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<h, t::binary>>, acc), do: params_key(t, <<acc::binary, downcase_char(h)>>)$/;"	f
params_names	deps/credo/lib/credo/check.ex	/^      def params_names do$/;"	f
params_value	deps/plug/lib/plug/conn/utils.ex	/^  defp params_value(token, key) do$/;"	f
params_with_assocs	deps/ex_machina/lib/ex_machina/ecto.ex	/^      def params_with_assocs(factory_name, attrs \\\\ %{}) do$/;"	f
params_with_assocs	deps/ex_machina/lib/ex_machina/ecto.ex	/^  def params_with_assocs(module, factory_name, attrs \\\\ %{}) do$/;"	f
paren_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp paren_expr(expr, sources, query) do$/;"	f
paren_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp paren_expr(expr, sources, query) do$/;"	f
paren_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp paren_expr(expr, sources, query) do$/;"	f
paren_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp paren_expr(false, _sources, _query) do$/;"	f
paren_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp paren_expr(true, _sources, _query) do$/;"	f
parens_for_select	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp parens_for_select([first_expr | _] = expr) do$/;"	f
parens_for_select	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp parens_for_select([first_expr | _] = expr) do$/;"	f
parens_for_select	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp parens_for_select([first_expr | _] = expr) do$/;"	f
parent_as	deps/ecto/lib/ecto/query/api.ex	/^  def parent_as(binding), do: doc! [binding]$/;"	f
parent_key	deps/ecto/lib/ecto/association.ex	/^  defp parent_key(%{owner_key: owner_key, related_key: related_key}, owner) do$/;"	f
parent_key	deps/ecto/lib/ecto/association.ex	/^  defp parent_key(%{related_key: related_key}, nil) do$/;"	f
parse	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^    def parse(pair = {:ok, values})$/;"	f
parse	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^    def parse({:ok, values} = pair)$/;"	f
parse	deps/credo/lib/credo/cli/options.ex	/^  def parse(argv, current_dir, command_names, ignored_args, switches, aliases) do$/;"	f
parse	deps/credo/lib/credo/config_builder.ex	/^  def parse(exec) do$/;"	f
parse	deps/credo/lib/credo/exs_loader.ex	/^  def parse(exs_string, false) do$/;"	f
parse	deps/credo/lib/credo/exs_loader.ex	/^  def parse(exs_string, safe \\\\ false)$/;"	f
parse	deps/credo/lib/credo/exs_loader.ex	/^  def parse(exs_string, true) do$/;"	f
parse	deps/credo/lib/credo/source_file.ex	/^  def parse(source, filename) do$/;"	f
parse	deps/db_connection/lib/db_connection.ex	/^  defp parse(query, meter, opts) do$/;"	f
parse	deps/db_connection/lib/db_connection/query.ex	/^  def parse(query, opts)$/;"	f
parse	deps/decimal/lib/decimal.ex	/^  def parse(binary) when is_binary(binary) do$/;"	f
parse	deps/earmark/lib/earmark/helpers/yecc_helpers.ex	/^  def parse( text, lexer: lexer, parser: parser ) do$/;"	f
parse	deps/earmark/lib/earmark/parser.ex	/^  def parse(text_lines), do: parse(text_lines, %Options{}, false)$/;"	f
parse	deps/earmark/lib/earmark/parser.ex	/^  def parse(text_lines, options = %Options{}, recursive) do$/;"	f
parse	deps/earmark/src/link_text_parser.erl	/^parse(Tokens) ->$/;"	f	module:link_text_parser
parse	deps/erlex/lib/erlex.ex	/^  defp parse(tokens) do$/;"	f
parse	deps/erlex/src/parser.erl	/^parse(Tokens) ->$/;"	f	module:parser
parse	deps/jason/lib/decoder.ex	/^  def parse(data, opts) when is_binary(data) do$/;"	f
parse	deps/plug/lib/plug/parsers/json.ex	/^  def parse(conn, "application", subtype, _headers, {{mod, fun, args}, decoder, opts}) do$/;"	f
parse	deps/plug/lib/plug/parsers/json.ex	/^  def parse(conn, _type, _subtype, _headers, _opts) do$/;"	f
parse	deps/plug/lib/plug/parsers/multipart.ex	/^  def parse(conn, "multipart", subtype, _headers, opts_tuple)$/;"	f
parse	deps/plug/lib/plug/parsers/multipart.ex	/^  def parse(conn, _type, _subtype, _headers, _opts) do$/;"	f
parse	deps/plug/lib/plug/parsers/urlencoded.ex	/^  def parse(conn, "application", "x-www-form-urlencoded", _headers, {{mod, fun, args}, opts}) do$/;"	f
parse	deps/plug/lib/plug/parsers/urlencoded.ex	/^  def parse(conn, _type, _subtype, _headers, _opts) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<_::uint16, rest::binary>>, ?D, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<len::uint16, rest::binary(len, 32)>>, ?t, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<len::uint16, rest::binary>>, ?T, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<overflow_len::uint16, _::binary>>, ?t, size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<pg_pid::int32, rest::binary>>, ?A, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<pid::int32, key::int32>>, ?K, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<status::int8>>, ?Z, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(<<type::int32, rest::binary>>, ?R, size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?1, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?2, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?3, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?I, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?c, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?n, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(_rest, ?s, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(data, ?d, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(message, ?f, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?C, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?E, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?G, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?H, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?N, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?S, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/messages.ex	/^  def parse(rest, ?W, _size) do$/;"	f
parse	deps/postgrex/lib/postgrex/parameters.ex	/^  def parse(query, _), do: query$/;"	f
parse	deps/postgrex/lib/postgrex/query.ex	/^  def parse(%{types: nil, name: name} = query, _) do$/;"	f
parse	deps/postgrex/lib/postgrex/query.ex	/^  def parse(query, _) do$/;"	f
parse	deps/postgrex/lib/postgrex/stream.ex	/^  def parse(copy, _) do$/;"	f
parse!	deps/earmark/lib/earmark/helpers/yecc_helpers.ex	/^  def parse!( text, lexer: lexer, parser: parser ) do$/;"	f
parse!	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  defp parse!(int) do$/;"	f
parse_access_get	deps/ecto/lib/ecto/query/builder.ex	/^  defp parse_access_get({{:., _, [Access, :get]}, _, [left, right]}, acc) do$/;"	f
parse_access_get	deps/ecto/lib/ecto/query/builder.ex	/^  defp parse_access_get({{:., _, [{var, _, context}, field]}, _, []} = expr, acc)$/;"	f
parse_and_scan	deps/earmark/src/link_text_parser.erl	/^parse_and_scan({F, A}) ->$/;"	f	module:link_text_parser
parse_and_scan	deps/earmark/src/link_text_parser.erl	/^parse_and_scan({M, F, A}) ->$/;"	f	module:link_text_parser
parse_and_scan	deps/erlex/src/parser.erl	/^parse_and_scan({F, A}) ->$/;"	f	module:parser
parse_and_scan	deps/erlex/src/parser.erl	/^parse_and_scan({M, F, A}) ->$/;"	f	module:parser
parse_app_info	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp parse_app_info(info, app) do$/;"	f
parse_args	deps/earmark/lib/earmark/cli.ex	/^  defp parse_args(argv) do$/;"	f
parse_args	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp parse_args([_, _, _ | _]) do$/;"	f
parse_args	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp parse_args([_project, _version, _source_beam] = args), do: args$/;"	f
parse_args	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp parse_args(_) do$/;"	f
parse_arity	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp parse_arity(string) do$/;"	f
parse_attrs	deps/earmark/lib/earmark/helpers/attr_parser.ex	/^  def parse_attrs(context, attrs, lnb) do$/;"	f
parse_authorized_scopes	lib/boruta/adapters/ecto/schemas/client.ex	/^  defp parse_authorized_scopes(attrs) do$/;"	f
parse_basic_auth	deps/plug/lib/plug/basic_auth.ex	/^  def parse_basic_auth(conn) do$/;"	f
parse_before_param	deps/plug/src/plug_multipart.erl	/^parse_before_param(<< C, Rest\/bits >>, Params) ->$/;"	f	module:plug_multipart
parse_before_param	deps/plug/src/plug_multipart.erl	/^parse_before_param(<<>>, Params) ->$/;"	f	module:plug_multipart
parse_body	deps/plug/src/plug_multipart.erl	/^parse_body(Stream, Boundary) ->$/;"	f	module:plug_multipart
parse_cd_type	deps/plug/src/plug_multipart.erl	/^parse_cd_type(<< C, Rest\/bits >>, Acc) ->$/;"	f	module:plug_multipart
parse_cd_type	deps/plug/src/plug_multipart.erl	/^parse_cd_type(<<>>, Acc) ->$/;"	f	module:plug_multipart
parse_charlist	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_charlist("", acc, _replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_charlist(<<"\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_charlist(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_charlist(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_charlist(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_charlist(<<_::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_charlist("", acc, _replacement, _empty_line_replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_charlist(<<"\\'"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_charlist(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_charlist(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_charlist(<<"\\n"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_charlist(str, acc, replacement, empty_line_replacement) when is_binary(str) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_charlist(<<"\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_charlist(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_charlist(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_charlist(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_charlist(str, acc, replacement) when is_binary(str) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/strings.ex	/^  defp parse_charlist("", acc, _replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/strings.ex	/^  defp parse_charlist(<<"\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/strings.ex	/^  defp parse_charlist(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/strings.ex	/^  defp parse_charlist(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/strings.ex	/^  defp parse_charlist(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_charlist	deps/credo/lib/credo/code/strings.ex	/^  defp parse_charlist(str, acc, replacement) when is_binary(str) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code("", acc, _replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"#"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"?'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"?\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"\\'\\'\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(<<h::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_code(str, acc, replacement) when is_binary(str) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code("", acc, _replacement, _empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"#"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"'"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"?'"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"?\\""::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"\\""::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"\\'\\'\\'"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<"\\\\\\""::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(<<h::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_code(str, acc, replacement, empty_line_replacement) when is_binary(str) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^    defp parse_code(<<unquote(sigil_start)::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code("", acc, _replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"#"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"?'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"?\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(<<h::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_code(str, acc, replacement) when is_binary(str) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^    defp parse_code(<<unquote(sigil_start)::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code("", acc, _replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"#"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"?'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"?\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"\\'\\'\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<"\\\\\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(<<h::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_code	deps/credo/lib/credo/code/strings.ex	/^  defp parse_code(str, acc, replacement) when is_binary(str) do$/;"	f
parse_comment	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_comment("", acc, _replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_comment(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_comment(str, acc, replacement) when is_binary(str) do$/;"	f
parse_comment	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_comment("", acc, _replacement, _empty_line_replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_comment(<<"\\n"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_comment(str, acc, replacement, empty_line_replacement) when is_binary(str) do$/;"	f
parse_comment	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_comment("", acc, _replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_comment(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_comment(str, acc, replacement) when is_binary(str) do$/;"	f
parse_comment	deps/credo/lib/credo/code/strings.ex	/^  defp parse_comment("", acc, _replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/strings.ex	/^  defp parse_comment(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_comment	deps/credo/lib/credo/code/strings.ex	/^  defp parse_comment(str, acc, replacement) when is_binary(str) do$/;"	f
parse_content_disposition	deps/plug/src/plug_multipart.erl	/^parse_content_disposition(Bin) ->$/;"	f	module:plug_multipart
parse_content_transfer_encoding	deps/plug/src/plug_multipart.erl	/^parse_content_transfer_encoding(Bin) ->$/;"	f	module:plug_multipart
parse_content_type	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp parse_content_type(header) do$/;"	f
parse_content_type	deps/plug/src/plug_multipart.erl	/^parse_content_type(Bin) ->$/;"	f	module:plug_multipart
parse_ct_subtype	deps/plug/src/plug_multipart.erl	/^parse_ct_subtype(<< C, Rest\/bits >>, Type, Acc) ->$/;"	f	module:plug_multipart
parse_ct_subtype	deps/plug/src/plug_multipart.erl	/^parse_ct_subtype(<<>>, Type, Subtype) when Subtype =\/= <<>> ->$/;"	f	module:plug_multipart
parse_ct_type	deps/plug/src/plug_multipart.erl	/^parse_ct_type(<< C, Rest\/bits >>, Acc) ->$/;"	f	module:plug_multipart
parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe(%{postgres: :transaction} = s, %{mode: :savepoint} = status, query) do$/;"	f
parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe(%{postgres: postgres} = s, %{mode: :savepoint}, _)$/;"	f
parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe(s, %{mode: :transaction} = status, query) do$/;"	f
parse_describe_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe_close(s, %{mode: :savepoint} = status, query) do$/;"	f
parse_describe_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe_close(s, %{mode: :transaction} = status, query) do$/;"	f
parse_describe_flush	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe_flush($/;"	f
parse_describe_flush	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe_flush(%{postgres: postgres} = s, %{mode: :savepoint}, _)$/;"	f
parse_describe_flush	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe_flush(s, %{mode: :transaction} = status, query) do$/;"	f
parse_describe_msgs	deps/postgrex/lib/postgrex/protocol.ex	/^  defp parse_describe_msgs(query, tail) do$/;"	f
parse_digits	deps/decimal/lib/decimal.ex	/^  defp parse_digits(<<digit, rest::binary>>, acc) when digit in ?0..?9 do$/;"	f
parse_digits	deps/decimal/lib/decimal.ex	/^  defp parse_digits(bin), do: parse_digits(bin, [])$/;"	f
parse_digits	deps/decimal/lib/decimal.ex	/^  defp parse_digits(rest, acc) do$/;"	f
parse_exp	deps/decimal/lib/decimal.ex	/^  defp parse_exp(<<?e, rest::binary>>) do$/;"	f
parse_exp	deps/decimal/lib/decimal.ex	/^  defp parse_exp(bin) do$/;"	f
parse_exts	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_exts("*", "*"),      do: "*\/*"$/;"	f
parse_exts	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_exts(type, "*"),     do: type$/;"	f
parse_exts	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_exts(type, subtype), do: MIME.extensions(type <> "\/" <> subtype)$/;"	f
parse_float	deps/decimal/lib/decimal.ex	/^  defp parse_float("." <> rest), do: parse_digits(rest)$/;"	f
parse_float	deps/decimal/lib/decimal.ex	/^  defp parse_float(bin), do: {[], bin}$/;"	f
parse_function	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp parse_function(string) do$/;"	f
parse_hd_before_value	deps/plug/src/plug_multipart.erl	/^parse_hd_before_value(<< $\\s, Rest\/bits >>, H, N) ->$/;"	f	module:plug_multipart
parse_hd_before_value	deps/plug/src/plug_multipart.erl	/^parse_hd_before_value(<< $\\t, Rest\/bits >>, H, N) ->$/;"	f	module:plug_multipart
parse_hd_before_value	deps/plug/src/plug_multipart.erl	/^parse_hd_before_value(Buffer, H, N) ->$/;"	f	module:plug_multipart
parse_hd_name	deps/plug/src/plug_multipart.erl	/^parse_hd_name(<< C, Rest\/bits >>, H, SoFar) ->$/;"	f	module:plug_multipart
parse_hd_name_ws	deps/plug/src/plug_multipart.erl	/^parse_hd_name_ws(<< C, Rest\/bits >>, H, Name) ->$/;"	f	module:plug_multipart
parse_hd_value	deps/plug/src/plug_multipart.erl	/^parse_hd_value(<< $\\r, Rest\/bits >>, Headers, Name, SoFar) ->$/;"	f	module:plug_multipart
parse_hd_value	deps/plug/src/plug_multipart.erl	/^parse_hd_value(<< C, Rest\/bits >>, H, N, SoFar) ->$/;"	f	module:plug_multipart
parse_header_accept	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_header_accept(conn, [], acc, accepted) do$/;"	f
parse_header_accept	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_header_accept(conn, [h|t], acc, accepted) do$/;"	f
parse_header_accept	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_header_accept(conn, {_, _, exts}, accepted) do$/;"	f
parse_headers	deps/plug/src/plug_multipart.erl	/^parse_headers(<< "--", Stream\/bits >>, Boundary) ->$/;"	f	module:plug_multipart
parse_headers	deps/plug/src/plug_multipart.erl	/^parse_headers(Stream, Boundary) ->$/;"	f	module:plug_multipart
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc("", acc, _replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc(<<"\\'\\'\\'"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_heredoc(str, acc, replacement) when is_binary(str) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_heredoc("", acc, _replacement, _empty_line_replacement, _here_doc_delimiter) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_heredoc($/;"	f
parse_heredoc	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_heredoc("", acc, _replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_heredoc(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_heredoc(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_heredoc(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_heredoc(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_heredoc(str, acc, replacement) when is_binary(str) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc("", acc, _replacement, _delimiter) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc(<<"\\"\\"\\""::utf8, t::binary>>, acc, replacement, "\\"\\"\\"") do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc(<<"\\'\\'\\'"::utf8, t::binary>>, acc, replacement, "\\'\\'\\'") do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc(<<"\\\\\\""::utf8, t::binary>>, acc, replacement, delimiter) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement, delimiter) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc(<<"\\n"::utf8, t::binary>>, acc, replacement, delimiter) do$/;"	f
parse_heredoc	deps/credo/lib/credo/code/strings.ex	/^  defp parse_heredoc(<<_::utf8, t::binary>>, acc, replacement, delimiter) do$/;"	f
parse_html	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  def parse_html([tag_line|rest]) do$/;"	f
parse_html	deps/earmark/lib/earmark/helpers/html_parser.ex	/^  def parse_html(lines)$/;"	f
parse_integer!	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp parse_integer!(key, value, url) do$/;"	f
parse_lines	deps/earmark/lib/earmark/parser.ex	/^  def parse_lines(lines, options, recursive) do$/;"	f
parse_link	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  def parse_link(src, lnb) do$/;"	f
parse_list	deps/earmark/lib/earmark/parser/list_parser.ex	/^  def parse_list(lines, result, options \\\\ %Options{}) do$/;"	f
parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  def parse_list_items(input, options) do$/;"	f
parse_list_items	deps/earmark/lib/earmark/parser/list_parser.ex	/^  defp parse_list_items(state, input, output, ctxt) do$/;"	f
parse_markdown	deps/earmark/lib/earmark/parser.ex	/^  def parse_markdown(lines, options = %Options{}) when is_list(lines) do$/;"	f
parse_markdown	deps/earmark/lib/earmark/parser.ex	/^  def parse_markdown(lines, options \\\\ %Options{})$/;"	f
parse_markdown	deps/earmark/lib/earmark/parser.ex	/^  def parse_markdown(lines, options) when is_binary(lines) do$/;"	f
parse_module	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp parse_module(<<?:>> <> _ = string, :custom_link) do$/;"	f
parse_module	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp parse_module(<<first>> <> _ = string, _mode) when first in ?A..?Z do$/;"	f
parse_module	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp parse_module(_, _) do$/;"	f
parse_module_function	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp parse_module_function(string) do$/;"	f
parse_multipart	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart(conn, {limit, headers_opts, opts}) do$/;"	f
parse_multipart	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart(conn, {{module, fun, args}, header_opts, opts}) do$/;"	f
parse_multipart	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart({:done, conn}, limit, _opts, _headers_opts, acc) do$/;"	f
parse_multipart	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart({:ok, _headers, conn}, limit, _opts, _headers_opts, acc) do$/;"	f
parse_multipart	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart({:ok, headers, conn}, limit, opts, headers_opts, acc) when limit >= 0 do$/;"	f
parse_multipart_body	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_body({:more, tail, conn}, limit, _opts, body) do$/;"	f
parse_multipart_body	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_body({:more, tail, conn}, limit, opts, body)$/;"	f
parse_multipart_body	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_body({:ok, tail, conn}, limit, _opts, body) do$/;"	f
parse_multipart_body	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_body({:ok, tail, conn}, limit, _opts, body)$/;"	f
parse_multipart_file	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_file({:more, tail, conn}, limit, _opts, _file) do$/;"	f
parse_multipart_file	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_file({:more, tail, conn}, limit, opts, file)$/;"	f
parse_multipart_file	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_file({:ok, tail, conn}, limit, _opts, _file) do$/;"	f
parse_multipart_file	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_file({:ok, tail, conn}, limit, _opts, file)$/;"	f
parse_multipart_headers	deps/plug/lib/plug/parsers/multipart.ex	/^  defp parse_multipart_headers(headers, conn, limit, opts, acc) do$/;"	f
parse_oids	deps/postgrex/lib/postgrex/types.ex	/^  defp parse_oids("{" <> rest) do$/;"	f
parse_oids	deps/postgrex/lib/postgrex/types.ex	/^  defp parse_oids("{}") do$/;"	f
parse_oids	deps/postgrex/lib/postgrex/types.ex	/^  defp parse_oids(bin, acc) do$/;"	f
parse_oids	deps/postgrex/lib/postgrex/types.ex	/^  defp parse_oids(nil) do$/;"	f
parse_opts	deps/jason/lib/formatter.ex	/^  defp parse_opts([], indent, line, record, colon) do$/;"	f
parse_opts	deps/jason/lib/formatter.ex	/^  defp parse_opts([{option, value} | opts], indent, line, record, colon) do$/;"	f
parse_opts	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp parse_opts(args) do$/;"	f
parse_origin	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp parse_origin(origin) do$/;"	f
parse_param_name	deps/plug/src/plug_multipart.erl	/^parse_param_name(<< C, Rest\/bits >>, Params, Acc) ->$/;"	f	module:plug_multipart
parse_param_name	deps/plug/src/plug_multipart.erl	/^parse_param_name(<<>>, Params, Acc) ->$/;"	f	module:plug_multipart
parse_param_quoted_value	deps/plug/src/plug_multipart.erl	/^parse_param_quoted_value(<< $", Rest\/bits >>, Params, Name, Acc) ->$/;"	f	module:plug_multipart
parse_param_quoted_value	deps/plug/src/plug_multipart.erl	/^parse_param_quoted_value(<< $\\\\, C, Rest\/bits >>, Params, Name, Acc) ->$/;"	f	module:plug_multipart
parse_param_quoted_value	deps/plug/src/plug_multipart.erl	/^parse_param_quoted_value(<< C, Rest\/bits >>, Params, Name, Acc)$/;"	f	module:plug_multipart
parse_param_value	deps/plug/src/plug_multipart.erl	/^parse_param_value(<< C, Rest\/bits >>, Params, Name) ->$/;"	f	module:plug_multipart
parse_param_value	deps/plug/src/plug_multipart.erl	/^parse_param_value(<< C, Rest\/bits >>, Params, Name, Acc) ->$/;"	f	module:plug_multipart
parse_param_value	deps/plug/src/plug_multipart.erl	/^parse_param_value(<<>>, Params, Name) ->$/;"	f	module:plug_multipart
parse_param_value	deps/plug/src/plug_multipart.erl	/^parse_param_value(<<>>, Params, Name, Acc) ->$/;"	f	module:plug_multipart
parse_q	deps/phoenix/lib/phoenix/controller.ex	/^  defp parse_q(args) do$/;"	f
parse_removable_sigil	deps/credo/lib/credo/code/sigils.ex	/^    defp parse_removable_sigil("", acc, unquote(sigil_end), _replacement) do$/;"	f
parse_removable_sigil	deps/credo/lib/credo/code/sigils.ex	/^    defp parse_removable_sigil($/;"	f
parse_repo	deps/ecto/lib/mix/ecto.ex	/^  def parse_repo(args) do$/;"	f
parse_repo	deps/ecto/lib/mix/ecto.ex	/^  defp parse_repo([], []) do$/;"	f
parse_repo	deps/ecto/lib/mix/ecto.ex	/^  defp parse_repo([], acc) do$/;"	f
parse_repo	deps/ecto/lib/mix/ecto.ex	/^  defp parse_repo([_|t], acc) do$/;"	f
parse_repo	deps/ecto/lib/mix/ecto.ex	/^  defp parse_repo([key, value|t], acc) when key in ~w(--repo -r) do$/;"	f
parse_result	deps/credo/lib/credo/cli/options.ex	/^  defp parse_result($/;"	f
parse_runtime_dep	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp parse_runtime_dep(runtime_dep) do$/;"	f
parse_safe	deps/credo/lib/credo/exs_loader.ex	/^  def parse_safe(exs_string) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_string_literal("", acc, _replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_string_literal(<<"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_string_literal(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_string_literal(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_string_literal(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/charlists.ex	/^  defp parse_string_literal(str, acc, replacement) when is_binary(str) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_string_literal("", acc, _replacement, _empty_line_replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_string_literal(<<"\\""::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_string_literal(<<"\\\\\\""::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_string_literal(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_string_literal(<<"\\n"::utf8, t::binary>>, acc, replacement, empty_line_replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/heredocs.ex	/^  defp parse_string_literal(str, acc, replacement, empty_line_replacement) when is_binary(str) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_string_literal("", acc, _replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_string_literal(<<"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_string_literal(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_string_literal(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_string_literal(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/sigils.ex	/^  defp parse_string_literal(str, acc, replacement) when is_binary(str) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/strings.ex	/^  defp parse_string_literal("", acc, _replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/strings.ex	/^  defp parse_string_literal(<<"\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/strings.ex	/^  defp parse_string_literal(<<"\\\\\\""::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/strings.ex	/^  defp parse_string_literal(<<"\\\\\\\\"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/strings.ex	/^  defp parse_string_literal(<<"\\n"::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_literal	deps/credo/lib/credo/code/strings.ex	/^  defp parse_string_literal(<<_::utf8, t::binary>>, acc, replacement) do$/;"	f
parse_string_sigil	deps/credo/lib/credo/code/strings.ex	/^    defp parse_string_sigil("", acc, unquote(sigil_end), _replacement) do$/;"	f
parse_string_sigil	deps/credo/lib/credo/code/strings.ex	/^    defp parse_string_sigil($/;"	f
parse_time	deps/db_connection/lib/db_connection/log_entry.ex	/^  defp parse_time({:checkin, start}, {stop, entry}) do$/;"	f
parse_time	deps/db_connection/lib/db_connection/log_entry.ex	/^  defp parse_time({:checkout, start}, {stop, entry}) do$/;"	f
parse_time	deps/db_connection/lib/db_connection/log_entry.ex	/^  defp parse_time({:decode, start}, {stop, entry}) do$/;"	f
parse_time	deps/db_connection/lib/db_connection/log_entry.ex	/^  defp parse_time({_, start}, {stop, entry}) do$/;"	f
parse_times	deps/db_connection/lib/db_connection/log_entry.ex	/^  defp parse_times([], entry), do: entry$/;"	f
parse_times	deps/db_connection/lib/db_connection/log_entry.ex	/^  defp parse_times(times, entry) do$/;"	f
parse_unsign	deps/decimal/lib/decimal.ex	/^  defp parse_unsign("inf", _) do$/;"	f
parse_unsign	deps/decimal/lib/decimal.ex	/^  defp parse_unsign("infinity", _) do$/;"	f
parse_unsign	deps/decimal/lib/decimal.ex	/^  defp parse_unsign("nan", _) do$/;"	f
parse_unsign	deps/decimal/lib/decimal.ex	/^  defp parse_unsign("snan", _) do$/;"	f
parse_unsign	deps/decimal/lib/decimal.ex	/^  defp parse_unsign(bin, raw) do$/;"	f
parse_uri_query	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp parse_uri_query(%URI{query: nil}),$/;"	f
parse_uri_query	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp parse_uri_query(%URI{query: query} = url) do$/;"	f
parse_url	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def parse_url(""), do: []$/;"	f
parse_url	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def parse_url(url) when is_binary(url) do$/;"	f
parse_version	deps/postgrex/lib/postgrex/utils.ex	/^  def parse_version(version) do$/;"	f
parse_version_bit	deps/postgrex/lib/postgrex/utils.ex	/^  defp parse_version_bit(bit) do$/;"	f
parsec	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def parsec(combinator \\\\ empty(), name) when is_combinator(combinator) and is_atom(name) do$/;"	f
parsed_prepare_declare	deps/db_connection/lib/db_connection.ex	/^  defp parsed_prepare_declare(conn, query, params, meter, opts) do$/;"	f
parsed_prepare_execute	deps/db_connection/lib/db_connection.ex	/^  defp parsed_prepare_execute(conn, query, params, meter, opts) do$/;"	f
parser	deps/erlex/src/parser.erl	/^-module(parser).$/;"	m
part	deps/plug/src/plug_multipart.erl	/^part(Boundary, Headers) ->$/;"	f	module:plug_multipart
partially_expand	deps/ecto/lib/ecto/query/builder/dynamic.ex	/^  def partially_expand(query, %{binding: binding} = dynamic, params, count) do$/;"	f
partition_attrs_and_assocs	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp partition_attrs_and_assocs(schema_module, attrs) do$/;"	f
parts_count	deps/credo/lib/credo/code/name.ex	/^  def parts_count(module_name) do$/;"	f
pascal_case?	deps/credo/lib/credo/code/name.ex	/^  def pascal_case?(name) do$/;"	f
password	lib/boruta/oauth/json/schema.ex	/^  def password do$/;"	f
past_event	deps/db_connection/lib/db_connection.ex	/^  defp past_event(log_events, _, nil),$/;"	f
past_event	deps/db_connection/lib/db_connection.ex	/^  defp past_event(nil, _, _),$/;"	f
past_event	deps/db_connection/lib/db_connection.ex	/^  defp past_event({log, events}, event, time),$/;"	f
pastie_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def pastie_style, do: HTML.PastieStyle.style()$/;"	f
patch	deps/plug/lib/plug/router.ex	/^  defmacro patch(path, options, contents \\\\ []) do$/;"	a
patch_switch	deps/credo/lib/credo/cli/options.ex	/^  defp patch_switch(switch, unknowns), do: {switch, unknowns}$/;"	f
patch_switch	deps/credo/lib/credo/cli/options.ex	/^  defp patch_switch({:min_priority, str}, unknowns) do$/;"	f
patch_switches	deps/credo/lib/credo/cli/options.ex	/^  defp patch_switches(switches_keywords) do$/;"	f
path	deps/phoenix/lib/phoenix/endpoint.ex	/^      def path(path) do$/;"	f
path	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def path(endpoint) do$/;"	f
path	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def path(data, path) do$/;"	f
path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def path(_router, %URI{} = uri, path) do$/;"	f
path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def path(_router, %_{endpoint: endpoint}, path) do$/;"	f
path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def path(_router, endpoint, path) when is_atom(endpoint) do$/;"	f
path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def path(router, %Conn{} = conn, path) do$/;"	f
path	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def path(router, other, _path) do$/;"	f
path	deps/plug/lib/plug/mime.ex	/^  def path(path) do$/;"	f
path	deps/plug/lib/plug/static.ex	/^  defp path(from, segments), do: Path.join([from | segments])$/;"	f
path	deps/plug/lib/plug/static.ex	/^  defp path({app, from}, segments) when is_atom(app) and is_binary(from),$/;"	f
path	deps/plug/lib/plug/upload.ex	/^  defp path(prefix, tmp) do$/;"	f
path_with_script	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp path_with_script(path, []) do$/;"	f
path_with_script	deps/phoenix/lib/phoenix/router/helpers.ex	/^  defp path_with_script(path, script) do$/;"	f
paths	deps/phoenix/lib/mix/tasks/phx.gen.channel.ex	/^  defp paths do$/;"	f
paths	deps/phoenix/lib/mix/tasks/phx.gen.presence.ex	/^  defp paths do$/;"	f
pending_all	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp pending_all(versions, migration_source, direction) do$/;"	f
pending_in_direction	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp pending_in_direction(versions, migration_source, :down) do$/;"	f
pending_in_direction	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp pending_in_direction(versions, migration_source, :up) do$/;"	f
pending_scale	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp pending_scale(0, scale), do: scale$/;"	f
pending_scale	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp pending_scale(num, scale), do: pending_scale(div(num, 10), scale - 1)$/;"	f
pending_step	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp pending_step(versions, migration_source, direction, count) do$/;"	f
pending_to	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp pending_to(versions, migration_source, direction, target) do$/;"	f
per_category	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp per_category(%Execution{all: false}), do: @per_category$/;"	f
per_category	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp per_category(%Execution{all: true}), do: 1_000_000$/;"	f
percent_rank	deps/ecto/lib/ecto/query/window_api.ex	/^  def percent_rank(), do: doc! []$/;"	f
perform_operation	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp perform_operation(repo, module, operation) do$/;"	f
perldoc_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def perldoc_style, do: HTML.PerldocStyle.style()$/;"	f
permalink_changeset	deps/ecto/integration_test/cases/repo.exs	/^  def permalink_changeset(comment, params) do$/;"	f
permanent	deps/phoenix/lib/phoenix/config.ex	/^  def permanent(module, key, value) do$/;"	f
permdown	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  defp permdown(replica), do: %Replica{replica | status: :permdown}$/;"	f
permdown	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp permdown(state, %Replica{name: name} = remote_replica) do$/;"	f
persist_flash	deps/phoenix/lib/phoenix/controller.ex	/^  defp persist_flash(conn, value) do$/;"	f
persisted?	lib/boruta.ex	/^    def persisted?(%{__meta__: %{state: :loaded}}), do: true$/;"	f
persisted?	lib/boruta.ex	/^    def persisted?(_resource_owner), do: false$/;"	f
pg2_namespace	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  defp pg2_namespace(server_name), do: {:phx, server_name}$/;"	f
pg_dump	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp pg_dump(default, config) do$/;"	f
phoenix_channel_handled_in	deps/phoenix/lib/phoenix/logger.ex	/^  def phoenix_channel_handled_in(_, %{duration: duration}, %{socket: socket} = metadata, _) do$/;"	f
phoenix_channel_joined	deps/phoenix/lib/phoenix/logger.ex	/^  def phoenix_channel_joined(_, %{duration: duration}, %{socket: socket} = metadata, _) do$/;"	f
phoenix_controller_pipeline	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^      defp phoenix_controller_pipeline(unquote(conn), var!(action)) do$/;"	f
phoenix_endpoint_start	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_endpoint_start(_, _, %{conn: conn} = metadata, _) do$/;"	f
phoenix_endpoint_stop	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_endpoint_stop(_, %{duration: duration}, %{conn: conn} = metadata, _) do$/;"	f
phoenix_error_rendered	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_error_rendered(_, _, %{log: false}, _), do: :ok$/;"	f
phoenix_error_rendered	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_error_rendered(_, _, %{log: level, status: status, kind: kind, reason: reason}, _) do$/;"	f
phoenix_router_dispatch_start	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_router_dispatch_start(_, _, %{log: false}, _), do: :ok$/;"	f
phoenix_router_dispatch_start	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_router_dispatch_start(_, _, metadata, _) do$/;"	f
phoenix_socket_connected	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_socket_connected(_, %{duration: duration}, %{log: level} = meta, _) do$/;"	f
phoenix_socket_connected	deps/phoenix/lib/phoenix/logger.ex	/^  defp phoenix_socket_connected(_, _, %{log: false}, _), do: :ok$/;"	f
pick_language_and_lexer	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  defp pick_language_and_lexer(""), do: {"elixir", Makeup.Lexers.ElixirLexer, []}$/;"	f
pick_language_and_lexer	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  defp pick_language_and_lexer(lang) do$/;"	f
pid_map	deps/mox/lib/mox/server.ex	/^  defp pid_map(pid) do$/;"	f
ping	deps/db_connection/lib/db_connection/connection.ex	/^  def ping({pid, ref}, state) do$/;"	f
ping	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    def ping(state), do: proxy(:ping, state, [])$/;"	f
ping	deps/postgrex/lib/postgrex/protocol.ex	/^  def ping(%{buffer: buffer} = s) do$/;"	f
ping	deps/postgrex/lib/postgrex/protocol.ex	/^  def ping(%{postgres: :transaction, transactions: :strict} = s) do$/;"	f
ping replies with status ok	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel_test.exs	/^  test "ping replies with status ok", %{socket: socket} do$/;"	t
ping replies with status ok	deps/phoenix/priv/templates/phx.gen.channel/channel_test.exs	/^  test "ping replies with status ok", %{socket: socket} do$/;"	t
ping_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp ping_recv(s, status, old_buffer, buffer) do$/;"	f
pipe_through	deps/phoenix/lib/phoenix/router.ex	/^  defmacro pipe_through(pipes) do$/;"	a
pipe_through	deps/phoenix/lib/phoenix/router/scope.ex	/^  def pipe_through(module, new_pipes) do$/;"	f
pipeline	deps/phoenix/lib/phoenix/router.ex	/^  defmacro pipeline(plug, do: block) do$/;"	a
pipeline	deps/phoenix/lib/phoenix/router/scope.ex	/^  def pipeline(module, pipe) when is_atom(pipe) do$/;"	f
pk_definition	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp pk_definition(columns, prefix) do$/;"	f
pk_definitions	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp pk_definitions(columns, prefix) do$/;"	f
pk_definitions	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp pk_definitions(columns, prefix) do$/;"	f
plan	deps/ecto/lib/ecto/query/planner.ex	/^  def plan(query, operation, adapter) do$/;"	f
plan_assocs	deps/ecto/lib/ecto/query/planner.ex	/^  def plan_assocs(query) do$/;"	f
plan_assocs	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_assocs(_query, _ix, []), do: :ok$/;"	f
plan_assocs	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_assocs(query, ix, assocs) do$/;"	f
plan_cache	deps/ecto/lib/ecto/query/planner.ex	/^  def plan_cache(query, operation, adapter) do$/;"	f
plan_combinations	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_combinations(query, adapter) do$/;"	f
plan_ctes	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_ctes(%Ecto.Query{with_ctes: %{queries: queries}} = query, adapter) do$/;"	f
plan_ctes	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_ctes(%Ecto.Query{with_ctes: nil} = query, _adapter), do: query$/;"	f
plan_from	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_from(%{from: from} = query, adapter) do$/;"	f
plan_from	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_from(%{from: nil} = query, _adapter) do$/;"	f
plan_joins	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_joins([%JoinExpr{assoc: {ix, assoc}, qual: qual, on: on, prefix: prefix} = join|t],$/;"	f
plan_joins	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_joins([%JoinExpr{source: %Ecto.Query{} = join_query, qual: qual, on: on, prefix: prefix} = join|t],$/;"	f
plan_joins	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_joins([%JoinExpr{} = join|t],$/;"	f
plan_joins	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_joins([], _query, joins, sources, tail_sources, _counter, _offset, _adapter) do$/;"	f
plan_joins	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_joins(query, sources, offset, adapter) do$/;"	f
plan_query	deps/ecto/lib/ecto/adapter/queryable.ex	/^  def plan_query(operation, adapter, queryable) do$/;"	f
plan_query_in_rows	deps/ecto/lib/ecto/repo/schema.ex	/^  defp plan_query_in_rows(rows, header, adapter) do$/;"	f
plan_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source(_query, %{source: {:fragment, _, _} = source, prefix: nil} = expr, _adapter),$/;"	f
plan_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source(query, %{source: %Ecto.SubQuery{} = subquery, prefix: prefix} = expr, adapter) do$/;"	f
plan_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source(query, %{source: {:fragment, _, _}, prefix: prefix} = expr, _adapter),$/;"	f
plan_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source(query, %{source: {nil, schema}} = expr, _adapter)$/;"	f
plan_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source(query, %{source: {source, schema}, prefix: prefix} = expr, _adapter)$/;"	f
plan_source_schema_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source_schema_prefix(%FromExpr{prefix: prefix}, _schema),$/;"	f
plan_source_schema_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_source_schema_prefix(%JoinExpr{prefix: prefix}, schema),$/;"	f
plan_sources	deps/ecto/lib/ecto/query/planner.ex	/^  def plan_sources(query, adapter) do$/;"	f
plan_subquery	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_subquery(subquery, query, prefix, adapter) do$/;"	f
plan_wheres	deps/ecto/lib/ecto/query/planner.ex	/^  defp plan_wheres(query, adapter) do$/;"	f
plt_add	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_add(plt, files) do$/;"	f
plt_add_apps	deps/dialyxir/lib/dialyxir/project.ex	/^  defp plt_add_apps, do: dialyzer_config()[:plt_add_apps] || [] |> load_apps()$/;"	f
plt_apps	deps/dialyxir/lib/dialyxir/project.ex	/^  defp plt_apps, do: dialyzer_config()[:plt_apps] |> load_apps()$/;"	f
plt_check	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_check(plt, files) do$/;"	f
plt_copy	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_copy(plt, new_plt) do$/;"	f
plt_ensure	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_ensure(plt, nil), do: plt_new(plt)$/;"	f
plt_ensure	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_ensure(plt, prev_plt), do: plt_copy(prev_plt, plt)$/;"	f
plt_file	deps/dialyxir/lib/dialyxir/project.ex	/^  def plt_file() do$/;"	f
plt_files	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_files(plt) do$/;"	f
plt_hash_file	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp plt_hash_file, do: Project.plt_file() <> ".hash"$/;"	f
plt_ignore_apps	deps/dialyxir/lib/dialyxir/project.ex	/^  defp plt_ignore_apps, do: dialyzer_config()[:plt_ignore_apps] || []$/;"	f
plt_info	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_info(plt) do$/;"	f
plt_new	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_new(plt) do$/;"	f
plt_path	deps/dialyxir/lib/dialyxir/project.ex	/^  defp plt_path(_), do: false$/;"	f
plt_path	deps/dialyxir/lib/dialyxir/project.ex	/^  defp plt_path(file) when is_binary(file), do: Path.expand(file)$/;"	f
plt_path	deps/dialyxir/lib/dialyxir/project.ex	/^  defp plt_path({:no_warn, file}) when is_binary(file), do: Path.expand(file)$/;"	f
plt_remove	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_remove(plt, files) do$/;"	f
plt_run	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp plt_run(opts) do$/;"	f
plts_list	deps/dialyxir/lib/dialyxir/project.ex	/^  def plts_list(deps, include_project \\\\ true, exclude_core \\\\ false) do$/;"	f
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro plug(plug)$/;"	a
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro plug(plug), do:$/;"	a
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro plug(plug, opts)$/;"	a
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro plug(plug, opts), do:$/;"	a
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro plug(plug, {:when, _, [opts, guards]}), do:$/;"	a
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defmacro plug({:when, _, [plug, guards]}), do:$/;"	a
plug	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  defp plug(plug, opts, guards, caller) do$/;"	f
plug	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp plug() do$/;"	f
plug	deps/phoenix/lib/phoenix/router.ex	/^  defmacro plug(plug, opts \\\\ []) do$/;"	a
plug	deps/plug/lib/plug/builder.ex	/^  defmacro plug(plug, opts \\\\ []) do$/;"	a
plug_builder_call	deps/plug/lib/plug/builder.ex	/^      defp plug_builder_call(unquote(conn), opts), do: unquote(body)$/;"	f
plug_cowboy_deprecation_warning	deps/plug/lib/plug/adapters/cowboy2.ex	/^  defp plug_cowboy_deprecation_warning() do$/;"	f
plug_init_mode	deps/phoenix/lib/phoenix.ex	/^  def plug_init_mode do$/;"	f
plug_multipart	deps/plug/src/plug_multipart.erl	/^-module(plug_multipart).$/;"	m
plug_server	deps/plug/lib/plug/upload.ex	/^  defp plug_server do$/;"	f
plugin_for_prefix	deps/earmark/lib/earmark/options.ex	/^  def plugin_for_prefix(options, plugin_name) do$/;"	f
plus	deps/decimal/lib/decimal.ex	/^  def plus(%Decimal{coef: :sNaN} = num), do: error(:invalid_operation, "operation on NaN", num)$/;"	f
plus	deps/decimal/lib/decimal.ex	/^  def plus(%Decimal{} = num), do: context(num)$/;"	f
pmap	deps/earmark/lib/earmark.ex	/^  def pmap(collection, func, timeout \\\\ @default_timeout_in_ms) do$/;"	f
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: broadcast\/3 and broadcast!\/3 publishes message to each subscriber", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: broadcast\/3 does not publish message to other topic subscribers", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: broadcast_from\/4 and broadcast_from!\/4 skips sender", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: direct_broadcast is defined by adapter", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: direct_broadcast_from is defined by adapter", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: subscribe and unsubscribe", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: subscribe\/3 with link does not down adapter", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: subscribe\/3 with link downs subscriber", config do$/;"	t
pool	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^    test "pool #{size}: unsubscribe on not subcribed topic noops", config do$/;"	t
pool_checkin	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp pool_checkin(reason, state) do$/;"	f
pool_disconnect	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp pool_disconnect(err, state) do$/;"	f
pool_done	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp pool_done(err, state, op, done, stop_or_disconnect \\\\ &Holder.disconnect\/2) do$/;"	f
pool_size	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  defp pool_size(tracker_name) do$/;"	f
pool_stop	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp pool_stop(err, state) do$/;"	f
pool_update	deps/db_connection/lib/db_connection/connection.ex	/^  defp pool_update(state, %{pool: pool, tag: tag, mod: mod} = s) do$/;"	f
pools_for_shard	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  defp pools_for_shard(shard, pubsub_server) do$/;"	f
pop	deps/phoenix/lib/phoenix/router/scope.ex	/^  def pop(module) do$/;"	f
pop	deps/plug/lib/plug/conn/unfetched.ex	/^  def pop(%{aspect: aspect}, key) do$/;"	f
pop_assocs	deps/ecto/lib/ecto/repo/schema.ex	/^  defp pop_assocs(%{changes: changes, types: types} = changeset, assocs) do$/;"	f
pop_assocs	deps/ecto/lib/ecto/repo/schema.ex	/^  defp pop_assocs(changeset, []) do$/;"	f
pop_current	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp pop_current(current, pk_values) do$/;"	f
pop_ordered	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp pop_ordered(_pk_values, tail), do: tail$/;"	f
pop_ordered	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp pop_ordered(pk_values, [pk_values | tail]), do: tail$/;"	f
port_to_integer	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp port_to_integer(port) when is_binary(port), do: String.to_integer(port)$/;"	f
port_to_integer	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp port_to_integer(port) when is_integer(port), do: port$/;"	f
port_to_integer	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp port_to_integer({:system, env_var}), do: port_to_integer(System.get_env(env_var))$/;"	f
pos_string	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp pos_string(line_no, column), do: ":#{line_no}:#{column}"$/;"	f
pos_string	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp pos_string(line_no, nil), do: ":#{line_no}"$/;"	f
pos_string	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp pos_string(nil, nil), do: ""$/;"	f
pos_suffix	deps/credo/lib/credo/cli/filename.ex	/^  def pos_suffix(line_no, column), do: ":#{line_no}:#{column}"$/;"	f
pos_suffix	deps/credo/lib/credo/cli/filename.ex	/^  def pos_suffix(line_no, nil), do: ":#{line_no}"$/;"	f
pos_suffix	deps/credo/lib/credo/cli/filename.ex	/^  def pos_suffix(nil, nil), do: ""$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position(token) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position(token, false) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position(token, true) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({:atom_unsafe, {line_no, col_start, _}, atom_or_charlist}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({:bin_heredoc, {line_no, col_start, _}, atom_or_charlist}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({:bin_string, {line_no, col_start, _}, atom_or_charlist}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({:list_string, {line_no, col_start, _}, atom_or_charlist}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({_, {line_no, col_start, _}, atom_or_charlist, _, _, _}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({_, {line_no, col_start, _}, atom_or_charlist, _, _}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({_, {line_no, col_start, _}, atom_or_charlist, _}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({_, {line_no, col_start, _}, atom_or_charlist}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({atom_or_charlist, {line_no, col_start, _}}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({{line_no, col_start, _}, list}) when is_list(list) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    def position({{line_no, col_start, nil}, {_line_no2, _col_start2, nil}, atom_or_charlist}) do$/;"	f
position	deps/credo/lib/credo/code/token.ex	/^    defdelegate position(token), to: __MODULE__.ElixirPre1_6_0$/;"	d
position	deps/credo/lib/credo/code/token.ex	/^    defdelegate position(token), to: __MODULE__.PositionHelper$/;"	d
position	deps/credo/lib/credo/code/token.ex	/^  def position(token)$/;"	f
position_tuple	deps/credo/lib/credo/code/token.ex	/^    defp position_tuple(_, _line_no, _col_start), do: nil$/;"	f
position_tuple	deps/credo/lib/credo/code/token.ex	/^    defp position_tuple(atom, line_no, col_start) when is_atom(atom) do$/;"	f
position_tuple	deps/credo/lib/credo/code/token.ex	/^    defp position_tuple(list, line_no, col_start) when is_list(list) do$/;"	f
position_tuple	deps/credo/lib/credo/code/token.ex	/^    defp position_tuple(number, line_no, col_start) when is_number(number) do$/;"	f
position_tuple_for_heredoc	deps/credo/lib/credo/code/token.ex	/^    defp position_tuple_for_heredoc(list, line_no, col_start)$/;"	f
position_tuple_for_quoted_string	deps/credo/lib/credo/code/token.ex	/^    def position_tuple_for_quoted_string(list, line_no, col_start)$/;"	f
positive?	deps/decimal/lib/decimal.ex	/^  def positive?(%Decimal{coef: 0}), do: false$/;"	f
positive?	deps/decimal/lib/decimal.ex	/^  def positive?(%Decimal{coef: :qNaN}), do: false$/;"	f
positive?	deps/decimal/lib/decimal.ex	/^  def positive?(%Decimal{coef: :sNaN} = num),$/;"	f
positive?	deps/decimal/lib/decimal.ex	/^  def positive?(%Decimal{sign: -1}), do: false$/;"	f
positive?	deps/decimal/lib/decimal.ex	/^  def positive?(%Decimal{sign: 1}), do: true$/;"	f
post	deps/plug/lib/plug/router.ex	/^  defmacro post(path, options, contents \\\\ []) do$/;"	a
post_checkout	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  defp post_checkout(conn_mod, conn_state, opts) do$/;"	f
post_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def post_traverse(combinator \\\\ empty(), to_post_traverse, call)$/;"	f
postgrex_dep	deps/ecto_sql/mix.exs	/^  defp postgrex_dep do$/;"	f
postprocess	deps/ecto/lib/ecto/repo/schema.ex	/^  defp postprocess(nil, [], _adapter, _schema, _schema_meta) do$/;"	f
postprocess	deps/ecto/lib/ecto/repo/schema.ex	/^  defp postprocess(rows, fields, _adapter, nil, _schema_meta) do$/;"	f
postprocess	deps/ecto/lib/ecto/repo/schema.ex	/^  defp postprocess(rows, types, adapter, schema, %{prefix: prefix, source: source}) do$/;"	f
postprocess	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  def postprocess(tokens, _opts \\\\ []), do: postprocess_helper(tokens)$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([]), do: []$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([token | tokens]), do: [token | postprocess_helper(tokens)]$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, "_" <> _name = text} | tokens]),$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, text} | tokens]) when text in @keyword,$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, text} | tokens]) when text in @keyword_declaration,$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, text} | tokens]) when text in @keyword_namespace,$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, text} | tokens]) when text in @name_builtin_pseudo,$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, text} | tokens]) when text in @name_constant,$/;"	f
postprocess_helper	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp postprocess_helper([{:name, attrs, text} | tokens]) when text in @operator_word,$/;"	f
postprocessor	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp postprocessor(:none, postprocess, _take, adapter) do$/;"	f
postprocessor	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp postprocessor({:any, _}, postprocess, _take, adapter) do$/;"	f
postprocessor	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp postprocessor({:map, _}, postprocess, take, adapter) do$/;"	f
postwalk	deps/credo/lib/credo/code.ex	/^  def postwalk(%SourceFile{} = source_file, fun, accumulator) do$/;"	f
postwalk	deps/credo/lib/credo/code.ex	/^  def postwalk(ast_or_source_file, fun, accumulator \\\\ [])$/;"	f
postwalk	deps/credo/lib/credo/code.ex	/^  def postwalk(source_ast, fun, accumulator) do$/;"	f
pow10	deps/decimal/lib/decimal.ex	/^      defp pow10(unquote(int)), do: unquote(acc)$/;"	f
pow10	deps/decimal/lib/decimal.ex	/^  defp pow10(num) when num > 104, do: pow10(104) * pow10(num - 104)$/;"	f
pow10	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^    defp pow10(unquote(x)), do: unquote(acc)$/;"	f
pow10	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp pow10(num) when num > 100, do: pow10(100) * pow10(num - 100)$/;"	f
pow2	deps/crypto_rand/lib/crypto_rand.ex	/^  defp pow2(n), do: bsl(1, n)$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, _empty, opts) when byte in ',' do$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, empty, opts) do$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, empty, opts) when byte in ' \\n\\r\\t' do$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, empty, opts) when byte in ':' do$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, empty, opts) when byte in '{[' do$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, false = empty, opts) when byte in '}]' do$/;"	f
pp_byte	deps/jason/lib/formatter.ex	/^  defp pp_byte(byte, rest, output, depth, true = _empty, opts) when byte in '}]' do$/;"	f
pp_iodata	deps/jason/lib/formatter.ex	/^  defp pp_iodata(<<>>, output_acc, depth, empty, opts) do$/;"	f
pp_iodata	deps/jason/lib/formatter.ex	/^  defp pp_iodata(<<byte, rest::binary>>, output_acc, depth, empty, opts) do$/;"	f
pp_iodata	deps/jason/lib/formatter.ex	/^  defp pp_iodata([], output_acc, depth, empty, opts) do$/;"	f
pp_iodata	deps/jason/lib/formatter.ex	/^  defp pp_iodata([byte | rest], output_acc, depth, empty, opts) when is_integer(byte) do$/;"	f
pp_iodata	deps/jason/lib/formatter.ex	/^  defp pp_iodata([head | tail], output_acc, depth, empty, opts) do$/;"	f
pp_string	deps/jason/lib/formatter.ex	/^  defp pp_string(<<>>, output_acc, in_bs, cont) do$/;"	f
pp_string	deps/jason/lib/formatter.ex	/^  defp pp_string([], output_acc, in_bs, cont) do$/;"	f
pp_string	deps/jason/lib/formatter.ex	/^  defp pp_string([byte | rest], output_acc, in_bs, cont) when is_integer(byte) do$/;"	f
pp_string	deps/jason/lib/formatter.ex	/^  defp pp_string([head | tail], output_acc, in_bs, cont) do$/;"	f
pp_string	deps/jason/lib/formatter.ex	/^  defp pp_string(binary, output_acc, false = _in_bs, cont) when is_binary(binary) do$/;"	f
pp_string	deps/jason/lib/formatter.ex	/^  defp pp_string(binary, output_acc, true = _in_bs, cont) when is_binary(binary) do$/;"	f
pre_checkin	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  defp pre_checkin(:checkin, Connection, {conn_mod, conn_state, _in_transaction?}, opts) do$/;"	f
pre_checkin	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  defp pre_checkin(_, Connection, {conn_mod, conn_state, _in_transaction?}, _opts) do$/;"	f
pre_existing?	deps/phoenix/lib/mix/phoenix/context.ex	/^  def pre_existing?(%Context{file: file}), do: File.exists?(file)$/;"	f
pre_existing_tests?	deps/phoenix/lib/mix/phoenix/context.ex	/^  def pre_existing_tests?(%Context{test_file: file}), do: File.exists?(file)$/;"	f
pre_post_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp pre_post_traverse(:pre, %{line: line, offset: offset}, _), do: {line, offset}$/;"	f
pre_post_traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp pre_post_traverse(_, _, %{line: line, offset: offset}), do: {line, offset}$/;"	f
pre_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def pre_traverse(combinator \\\\ empty(), to_pre_traverse, call)$/;"	f
precedence	deps/makeup/lib/makeup/token/utils.ex	/^  def precedence do$/;"	f
precision	deps/decimal/lib/decimal.ex	/^  defp precision(%Decimal{coef: :inf} = num, _precision, _rounding) do$/;"	f
precision	deps/decimal/lib/decimal.ex	/^  defp precision(%Decimal{coef: :qNaN} = num, _precision, _rounding) do$/;"	f
precision	deps/decimal/lib/decimal.ex	/^  defp precision(%Decimal{coef: :sNaN} = num, _precision, _rounding) do$/;"	f
precision	deps/decimal/lib/decimal.ex	/^  defp precision(%Decimal{sign: sign, coef: coef, exp: exp} = num, precision, rounding) do$/;"	f
precompile_serializers	deps/phoenix/lib/phoenix/socket.ex	/^  defp precompile_serializers(serializers) do$/;"	f
prederive	deps/plug/lib/plug/session/cookie.ex	/^  defp prederive(_secret_key_base, value, _key_opts) do$/;"	f
prederive	deps/plug/lib/plug/session/cookie.ex	/^  defp prederive(secret_key_base, value, key_opts)$/;"	f
prefix	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "prefix", %{migration_number: num} do$/;"	t
prefix	deps/ecto_sql/lib/ecto/migration.ex	/^  def prefix do$/;"	f
prefix	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def prefix do$/;"	f
prefix_and_suffix	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  defp prefix_and_suffix(exception_name) do$/;"	f
preload	deps/ecto/lib/ecto/query.ex	/^  defmacro preload(query, bindings \\\\ [], expr) do$/;"	a
preload	deps/ecto/lib/ecto/repo.ex	/^        def preload(struct_or_structs_or_nil, preloads, opts \\\\ []) do$/;"	f
preload	deps/ecto/lib/ecto/repo/preloader.ex	/^  def preload(nil, _repo_name, _preloads, _opts) do$/;"	f
preload	deps/ecto/lib/ecto/repo/preloader.ex	/^  def preload(struct, repo_name, preloads, opts) when is_map(struct) do$/;"	f
preload	deps/ecto/lib/ecto/repo/preloader.ex	/^  def preload(structs, repo_name, preloads, opts) when is_list(structs) do$/;"	f
preload belongs_to	deps/ecto/integration_test/cases/preload.exs	/^  test "preload belongs_to" do$/;"	t
preload belongs_to with no associated entry	deps/ecto/integration_test/cases/preload.exs	/^  test "preload belongs_to with no associated entry" do$/;"	t
preload belongs_to with shared assocs	deps/ecto/integration_test/cases/preload.exs	/^  test "preload belongs_to with shared assocs" do$/;"	t
preload custom prefix from options	deps/ecto/integration_test/cases/preload.exs	/^  test "preload custom prefix from options" do$/;"	t
preload custom prefix from schema	deps/ecto/integration_test/cases/preload.exs	/^  test "preload custom prefix from schema" do$/;"	t
preload empty	deps/ecto/integration_test/cases/preload.exs	/^  test "preload empty" do$/;"	t
preload has_many	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_many" do$/;"	t
preload has_many through	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_many through" do$/;"	t
preload has_many through	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_many through-through" do$/;"	t
preload has_many through many_to_many	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_many through many_to_many" do$/;"	t
preload has_many with no associated entries	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_many with no associated entries" do$/;"	t
preload has_one	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_one" do$/;"	t
preload has_one through	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_one through" do$/;"	t
preload has_one with no associated entries	deps/ecto/integration_test/cases/preload.exs	/^  test "preload has_one with no associated entries" do$/;"	t
preload keyword query	deps/ecto/integration_test/cases/preload.exs	/^  test "preload keyword query" do$/;"	t
preload many assocs	deps/ecto/integration_test/cases/preload.exs	/^  test "preload many assocs" do$/;"	t
preload many_to_many	deps/ecto/integration_test/cases/preload.exs	/^  test "preload many_to_many" do$/;"	t
preload many_to_many with function	deps/ecto/integration_test/cases/preload.exs	/^  test "preload many_to_many with function" do$/;"	t
preload many_to_many with no associated entries	deps/ecto/integration_test/cases/preload.exs	/^  test "preload many_to_many with no associated entries" do$/;"	t
preload nested	deps/ecto/integration_test/cases/preload.exs	/^  test "preload nested" do$/;"	t
preload nested via custom query	deps/ecto/integration_test/cases/preload.exs	/^  test "preload nested via custom query" do$/;"	t
preload raises with association set but without id	deps/ecto/integration_test/cases/preload.exs	/^  test "preload raises with association set but without id" do$/;"	t
preload skips already loaded for cardinality many	deps/ecto/integration_test/cases/preload.exs	/^  test "preload skips already loaded for cardinality many" do$/;"	t
preload skips already loaded for cardinality one	deps/ecto/integration_test/cases/preload.exs	/^  test "preload skips already loaded for cardinality one" do$/;"	t
preload through with nil association	deps/ecto/integration_test/cases/preload.exs	/^  test "preload through with nil association" do$/;"	t
preload through with query	deps/ecto/integration_test/cases/preload.exs	/^  test "preload through with query" do$/;"	t
preload through with take	deps/ecto/integration_test/cases/preload.exs	/^  test "preload through with take" do$/;"	t
preload with binary_id	deps/ecto/integration_test/cases/preload.exs	/^  test "preload with binary_id" do$/;"	t
preload with function	deps/ecto/integration_test/cases/preload.exs	/^  test "preload with function" do$/;"	t
preload with parameter from select_merge	deps/ecto/integration_test/cases/preload.exs	/^  test "preload with parameter from select_merge" do$/;"	t
preload with query	deps/ecto/integration_test/cases/preload.exs	/^  test "preload with query" do$/;"	t
preload with take	deps/ecto/integration_test/cases/preload.exs	/^  test "preload with take" do$/;"	t
preload_assocs	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp preload_assocs($/;"	f
preload_assocs	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp preload_assocs([], [], _repo_name, _opts), do: []$/;"	f
preload_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp preload_each([], _repo_name, _preloads, _opts), do: []$/;"	f
preload_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp preload_each(structs, _repo_name, [], _opts),   do: structs$/;"	f
preload_each	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp preload_each(structs, repo_name, preloads, opts) do$/;"	f
preload_info	deps/ecto/lib/ecto/association.ex	/^  def preload_info(%{join_keys: [{_, owner_key}, {_, _}]} = refl) do$/;"	f
preload_info	deps/ecto/lib/ecto/association.ex	/^  def preload_info(%{related_key: related_key} = refl) do$/;"	f
preload_info	deps/ecto/lib/ecto/association.ex	/^  def preload_info(%{through: through} = refl) do$/;"	f
preload_prefix	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp preload_prefix(opts, sample) do$/;"	f
preloads	deps/ecto/lib/ecto/query/inspect.ex	/^  defp preloads([]), do: []$/;"	f
preloads	deps/ecto/lib/ecto/query/inspect.ex	/^  defp preloads(preloads), do: [preload: inspect(preloads)]$/;"	f
prelude	deps/phoenix/lib/phoenix/router.ex	/^  defp prelude() do$/;"	f
prepare	deps/db_connection/lib/db_connection.ex	/^  def prepare(conn, query, opts \\\\ []) do$/;"	f
prepare	deps/db_connection/lib/db_connection.ex	/^  defp prepare(%DBConnection{pool_ref: pool_ref} = conn, query, meter, opts) do$/;"	f
prepare	deps/ecto/lib/ecto/embedded.ex	/^  def prepare(changeset, embeds, adapter, repo_action) do$/;"	f
prepare	deps/ecto/lib/ecto/embedded.ex	/^  defp prepare(embeds, _types, _adapter, _repo, _repo_action) when embeds == %{} do$/;"	f
prepare	deps/ecto/lib/ecto/embedded.ex	/^  defp prepare(embeds, types, adapter, repo, repo_action) do$/;"	f
prepare	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def prepare(:all, query) do$/;"	f
prepare	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def prepare(:delete_all, query) do$/;"	f
prepare	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def prepare(:update_all, query) do$/;"	f
prepare	deps/phoenix/lib/phoenix/router.ex	/^      defp prepare(conn) do$/;"	f
prepare	deps/postgrex/lib/postgrex.ex	/^  def prepare(conn, name, statement, opts \\\\ []) do$/;"	f
prepare!	deps/db_connection/lib/db_connection.ex	/^  def prepare!(conn, query, opts \\\\ []) do$/;"	f
prepare!	deps/postgrex/lib/postgrex.ex	/^  def prepare!(conn, name, statement, opts \\\\ []) do$/;"	f
prepare_assigns	deps/phoenix/lib/phoenix/controller.ex	/^  defp prepare_assigns(conn, assigns, template, format) do$/;"	f
prepare_changes	deps/ecto/lib/ecto/changeset.ex	/^  def prepare_changes(%Changeset{prepare: prepare} = changeset, function) when is_function(function, 1) do$/;"	f
prepare_declare	deps/db_connection/lib/db_connection.ex	/^  defp prepare_declare(conn, query, params, opts) do$/;"	f
prepare_declare!	deps/db_connection/lib/db_connection.ex	/^  defp prepare_declare!(conn, query, params, opts) do$/;"	f
prepare_each	deps/ecto/lib/ecto/embedded.ex	/^  defp prepare_each(%{cardinality: :many} = embed, changesets, adapter, repo, repo_action) do$/;"	f
prepare_each	deps/ecto/lib/ecto/embedded.ex	/^  defp prepare_each(%{cardinality: :one} = embed, changeset, adapter, repo, repo_action) do$/;"	f
prepare_each	deps/ecto/lib/ecto/embedded.ex	/^  defp prepare_each(%{cardinality: :one}, nil, _adapter, _repo, _repo_action) do$/;"	f
prepare_execute	deps/db_connection/lib/db_connection.ex	/^  def prepare_execute(conn, query, params, opts \\\\ []) do$/;"	f
prepare_execute	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def prepare_execute(conn, name, sql, params, opts) do$/;"	f
prepare_execute	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def prepare_execute(conn, name, sql, params, opts) do$/;"	f
prepare_execute	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def prepare_execute(pid, _name, statement, params, opts \\\\ []) do$/;"	f
prepare_execute	deps/postgrex/lib/postgrex.ex	/^  def prepare_execute(conn, name, statement, params, opts \\\\ []) do$/;"	f
prepare_execute!	deps/db_connection/lib/db_connection.ex	/^  def prepare_execute!(conn, query, params, opts \\\\ []) do$/;"	f
prepare_execute!	deps/postgrex/lib/postgrex.ex	/^  def prepare_execute!(conn, name, statement, params, opts \\\\ []) do$/;"	f
prepare_for_aggregate	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp prepare_for_aggregate(queryable) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%DateTime{} = value) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%Date{} = value) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%Decimal{} = value) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%NaiveDateTime{} = value) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%Time{} = value) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%{__struct__: module} = _value) do$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(%{} = value), do: {json_library().encode!(value), :string}$/;"	f
prepare_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_param(value), do: prepare_raw_param(value)$/;"	f
prepare_params	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_params(params) do$/;"	f
prepare_queries	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp prepare_queries(structs, module, assocs, prefix, repo_name, opts) do$/;"	f
prepare_query	deps/ecto/lib/ecto/adapter/queryable.ex	/^  def prepare_query(operation, repo_name_or_pid, queryable) do$/;"	f
prepare_query	deps/ecto/lib/ecto/repo.ex	/^        def prepare_query(operation, query, opts), do: {query, opts}$/;"	f
prepare_query	deps/ecto/lib/ecto/repo.ex	/^      def prepare_query(_operation, query, opts) do$/;"	f
prepare_query	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp prepare_query(operation, repo, query, opts) do$/;"	f
prepare_raw_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_raw_param(value) when is_binary(value) do$/;"	f
prepare_raw_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_raw_param(value) when value == false, do: {0, :boolean}$/;"	f
prepare_raw_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_raw_param(value) when value == true, do: {1, :boolean}$/;"	f
prepare_raw_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_raw_param(value), do: {value, nil}$/;"	f
prepare_raw_param	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp prepare_raw_param({_, :varchar} = value), do: value$/;"	f
prepare_send_download	deps/phoenix/lib/phoenix/controller.ex	/^  defp prepare_send_download(conn, filename, opts) do$/;"	f
prepare_stream	deps/db_connection/lib/db_connection.ex	/^  def prepare_stream(%DBConnection{} = conn, query, params, opts \\\\ []) do$/;"	f
prepare_stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp prepare_stream(adapter_meta, prepared, params, opts) do$/;"	f
prepend	deps/earmark/lib/earmark/ast/inline.ex	/^  defp prepend(%Context{}=context, prep) do$/;"	f
prepend	deps/earmark/lib/earmark/context.ex	/^  def prepend(%__MODULE__{value: value} = ctx, prep, messages) do$/;"	f
prepend	deps/earmark/lib/earmark/context.ex	/^  def prepend(context, ast, messages \\\\ [])$/;"	f
prepend	deps/ecto/lib/ecto/multi.ex	/^  def prepend(lhs, rhs) do$/;"	f
prepend_if	deps/ecto/lib/ecto/query/planner.ex	/^  defp prepend_if(cache, false, _prepend), do: cache$/;"	f
prepend_if	deps/ecto/lib/ecto/query/planner.ex	/^  defp prepend_if(cache, true, prepend), do: prepend ++ cache$/;"	f
prepend_my_username	deps/credo/lib/credo/check/warning/unused_enum_operation.ex	/^      def prepend_my_username(my_username, usernames) do$/;"	f
prepend_resp_headers	deps/plug/lib/plug/conn.ex	/^  def prepend_resp_headers(%Conn{adapter: adapter, resp_headers: resp_headers} = conn, headers)$/;"	f
prepend_resp_headers	deps/plug/lib/plug/conn.ex	/^  def prepend_resp_headers(%Conn{state: :chunked}, _headers) do$/;"	f
prepend_resp_headers	deps/plug/lib/plug/conn.ex	/^  def prepend_resp_headers(%Conn{state: :sent}, _headers) do$/;"	f
prepend_resp_headers	deps/plug/lib/plug/conn.ex	/^  def prepend_resp_headers(conn, headers)$/;"	f
prepend_task	deps/credo/lib/credo/execution.ex	/^  def prepend_task(exec, _plugin_mod, group_name, task_tuple) do$/;"	f
prepend_task	deps/credo/lib/credo/execution.ex	/^  def prepend_task(exec, plugin_mod, group_name, task_mod) when is_atom(task_mod) do$/;"	f
prepend_task	deps/credo/lib/credo/plugin.ex	/^  def prepend_task(%Execution{initializing_plugin: plugin_mod} = exec, group_name, task_mod) do$/;"	f
prepend_unless_empty	deps/plug/lib/plug/conn.ex	/^  defp prepend_unless_empty("", body), do: body$/;"	f
prepend_unless_empty	deps/plug/lib/plug/conn.ex	/^  defp prepend_unless_empty(acc, body), do: acc <> body$/;"	f
preprocess	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp preprocess(row, [], _from, _adapter) do$/;"	f
preprocess	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp preprocess(row, [source | sources], from, adapter) do$/;"	f
preprocessor	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp preprocessor(:none, preprocess, adapter) do$/;"	f
preprocessor	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp preprocessor({_, from}, preprocess, adapter) do$/;"	f
preprocessor	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp preprocessor({_, {:source, {source, schema}, prefix, types}}, preprocess, adapter) do$/;"	f
presence	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp presence([]), do: nil$/;"	f
presence	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp presence(other), do: other$/;"	f
present?	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^      defp present?(_), do: true$/;"	f
present?	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^      defp present?(false), do: false$/;"	f
present?	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^      defp present?(nil), do: false$/;"	f
pretty	deps/ecto/lib/ecto/exceptions.ex	/^  defp pretty(term) do$/;"	f
pretty_print	deps/erlex/lib/erlex.ex	/^  def pretty_print(str) do$/;"	f
pretty_print	deps/jason/lib/formatter.ex	/^  def pretty_print(input, opts \\\\ []) do$/;"	f
pretty_print_args	deps/erlex/lib/erlex.ex	/^  def pretty_print_args(args) do$/;"	f
pretty_print_contract	deps/erlex/lib/erlex.ex	/^  def pretty_print_contract(contract) do$/;"	f
pretty_print_contract	deps/erlex/lib/erlex.ex	/^  def pretty_print_contract(contract, module, function) do$/;"	f
pretty_print_infix	deps/erlex/lib/erlex.ex	/^  def pretty_print_infix('=:='), do: "==="$/;"	f
pretty_print_infix	deps/erlex/lib/erlex.ex	/^  def pretty_print_infix('=<'), do: "<="$/;"	f
pretty_print_infix	deps/erlex/lib/erlex.ex	/^  def pretty_print_infix('=\/='), do: "!=="$/;"	f
pretty_print_infix	deps/erlex/lib/erlex.ex	/^  def pretty_print_infix('\/='), do: "!="$/;"	f
pretty_print_infix	deps/erlex/lib/erlex.ex	/^  def pretty_print_infix(infix), do: to_string(infix)$/;"	f
pretty_print_pattern	deps/erlex/lib/erlex.ex	/^  def pretty_print_pattern('pattern ' ++ rest) do$/;"	f
pretty_print_pattern	deps/erlex/lib/erlex.ex	/^  def pretty_print_pattern(pattern) do$/;"	f
pretty_print_to_iodata	deps/jason/lib/formatter.ex	/^  def pretty_print_to_iodata(input, opts \\\\ []) do$/;"	f
pretty_print_type	deps/erlex/lib/erlex.ex	/^  def pretty_print_type(type) do$/;"	f
pretty_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def pretty_type(%{type: t}) do$/;"	f
prewalk	deps/credo/lib/credo/code.ex	/^  def prewalk(%SourceFile{} = source_file, fun, accumulator) do$/;"	f
prewalk	deps/credo/lib/credo/code.ex	/^  def prewalk(ast_or_source_file, fun, accumulator \\\\ [])$/;"	f
prewalk	deps/credo/lib/credo/code.ex	/^  def prewalk(source_ast, fun, accumulator) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk(%Ecto.Query.Tagged{value: v, type: type} = tagged, kind, query, expr, acc, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk(:update, query, expr, counter, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk(kind, query, expr, counter, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk(list, kind, query, expr, acc, adapter) when is_list(list) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk(other, _kind, _query, _expr, acc, _adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({:^, meta, [ix]}, _kind, _query, _expr, acc, _adapter) when is_integer(ix) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({:in, in_meta, [left, {:^, meta, [param]}]}, kind, query, expr, acc, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({:in, in_meta, [left, {:subquery, i}]}, kind, query, expr, acc, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({:json_extract_path, meta, [json_field, path]}, kind, query, _expr, acc, _adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({:type, _, [arg, type]}, kind, query, expr, acc, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({left, meta, args}, kind, query, expr, acc, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({left, right}, kind, query, expr, acc, adapter) do$/;"	f
prewalk	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk({{:., dot_meta, [left, field]}, meta, []},$/;"	f
prewalk_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk_source(%Ecto.SubQuery{query: inner_query} = subquery, _kind, query, _expr, counter, adapter) do$/;"	f
prewalk_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk_source(source, _kind, _query, _expr, acc, _adapter) do$/;"	f
prewalk_source	deps/ecto/lib/ecto/query/planner.ex	/^  defp prewalk_source({:fragment, meta, fragments}, kind, query, expr, acc, adapter) do$/;"	f
primary_key	deps/ecto/lib/ecto.ex	/^  def primary_key(%{__struct__: schema} = struct) do$/;"	f
primary_key!	deps/ecto/lib/ecto.ex	/^  def primary_key!(%{__struct__: schema} = struct) do$/;"	f
primary_key!	deps/ecto/lib/ecto/association.ex	/^  defp primary_key!(nil), do: []$/;"	f
primary_key!	deps/ecto/lib/ecto/association.ex	/^  defp primary_key!(struct), do: Ecto.primary_key!(struct)$/;"	f
primary_key!	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp primary_key!(%{autogenerate_id: {_, key, _type}}, [key]), do: key$/;"	f
primary_key!	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp primary_key!(%{schema: schema}, returning) do$/;"	f
primary_key!	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp primary_key!(_, []), do: nil$/;"	f
primitive types	deps/ecto/integration_test/cases/type.exs	/^  test "primitive types" do$/;"	t
primitive types boolean negate	deps/ecto/integration_test/cases/type.exs	/^  test "primitive types boolean negate" do$/;"	t
primitive?	deps/ecto/lib/ecto/type.ex	/^  def primitive?(_), do: false$/;"	f
primitive?	deps/ecto/lib/ecto/type.ex	/^  def primitive?(base) when base in @base, do: true$/;"	f
primitive?	deps/ecto/lib/ecto/type.ex	/^  def primitive?({composite, _}) when composite in @composite, do: true$/;"	f
print	deps/credo/lib/credo/cli/command/categories/output/default.ex	/^  def print(_exec, categories) do$/;"	f
print	deps/credo/lib/credo/cli/command/categories/output/json.ex	/^  def print(_exec, categories) do$/;"	f
print	deps/credo/lib/credo/cli/command/info/info_output.ex	/^  def print(exec, info) do$/;"	f
print	deps/credo/lib/credo/cli/command/info/output/default.ex	/^  def print(%Execution{verbose: true}, info) do$/;"	f
print	deps/credo/lib/credo/cli/command/info/output/default.ex	/^  def print(_exec, info) do$/;"	f
print	deps/credo/lib/credo/cli/command/info/output/json.ex	/^  def print(%Execution{verbose: true}, info) do$/;"	f
print	deps/credo/lib/credo/cli/command/info/output/json.ex	/^  def print(_exec, info) do$/;"	f
print	deps/credo/lib/credo/cli/output/summary.ex	/^  def print($/;"	f
print	deps/credo/lib/credo/cli/output/summary.ex	/^  def print(_source_files, %Execution{format: "oneline"}, _time_load, _time_run) do$/;"	f
print	deps/credo/lib/credo/cli/output/summary.ex	/^  def print(source_files, exec, time_load, time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def print_after_info(explanations, exec, line_no, column) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/explain/output/json.ex	/^  def print_after_info(explanations, _exec, _, _) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  def print_after_info(source_files, exec, time_load, time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/list/output/flycheck.ex	/^  def print_after_info(_source_files, exec, _time_load, _time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/list/output/json.ex	/^  def print_after_info(_source_files, exec, _time_load, _time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/list/output/oneline.ex	/^  def print_after_info(_source_files, exec, _time_load, _time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  def print_after_info(source_files, exec, time_load, time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/suggest/output/flycheck.ex	/^  def print_after_info(_source_files, exec, _time_load, _time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/suggest/output/json.ex	/^  def print_after_info(_source_files, exec, _time_load, _time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/command/suggest/output/oneline.ex	/^  def print_after_info(_source_files, exec, _time_load, _time_run) do$/;"	f
print_after_info	deps/credo/lib/credo/cli/output/format_delegator.ex	/^      def print_after_info(source_files, exec, time_load, time_run) do$/;"	f
print_argument	deps/credo/lib/credo/execution/task/validate_options.ex	/^  defp print_argument(name) do$/;"	f
print_banner	deps/credo/lib/credo/cli/command/help.ex	/^  def print_banner do$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def print_before_info(source_files, exec) do$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/explain/output/json.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/list/list_command.ex	/^  defp print_before_info(exec) do$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  def print_before_info(source_files, exec) do$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/list/output/flycheck.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/list/output/json.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/list/output/oneline.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  def print_before_info(source_files, exec) do$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/suggest/output/flycheck.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/suggest/output/json.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/suggest/output/oneline.ex	/^  def print_before_info(_source_files, _exec), do: nil$/;"	f
print_before_info	deps/credo/lib/credo/cli/command/suggest/suggest_command.ex	/^  defp print_before_info(exec) do$/;"	f
print_before_info	deps/credo/lib/credo/cli/output/format_delegator.ex	/^      def print_before_info(source_files, exec) do$/;"	f
print_categories	deps/credo/lib/credo/cli/command/categories/categories_output.ex	/^  def print_categories(exec, categories) do$/;"	f
print_category	deps/credo/lib/credo/cli/command/categories/output/default.ex	/^  defp print_category(%{color: color, title: title, description: text}) do$/;"	f
print_config_instructions	deps/credo/lib/credo/cli/command/gen.check.ex	/^  defp print_config_instructions(filename, check_name) do$/;"	f
print_disabled_check_config	deps/credo/lib/credo/cli/output.ex	/^  defp print_disabled_check_config(list) do$/;"	f
print_explanations	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp print_explanations($/;"	f
print_help	deps/credo/lib/credo/cli/command/explain/explain_output.ex	/^  def print_help(exec) do$/;"	f
print_help	deps/credo/lib/credo/cli/command/info/info_output.ex	/^  def print_help(exec) do$/;"	f
print_help	deps/credo/lib/credo/cli/command/list/list_output.ex	/^  def print_help(exec) do$/;"	f
print_help	deps/credo/lib/credo/cli/command/suggest/suggest_output.ex	/^  def print_help(exec) do$/;"	f
print_info	deps/credo/lib/credo/cli/command/info/info_command.ex	/^  defp print_info(exec) do$/;"	f
print_issue	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp print_issue($/;"	f
print_issue	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  defp print_issue($/;"	f
print_issue_column	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp print_issue_column(column, trigger, outer_color, inner_color) do$/;"	f
print_issue_column	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  defp print_issue_column(raw_line, line, issue, outer_color, inner_color) do$/;"	f
print_issue_line	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issue_line($/;"	f
print_issue_line_no	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp print_issue_line_no($/;"	f
print_issue_line_no	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  defp print_issue_line_no(source_file, term_width, issue, outer_color, inner_color) do$/;"	f
print_issue_message	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issue_message("", _outer_color, _message_color) do$/;"	f
print_issue_message	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issue_message($/;"	f
print_issue_message	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issue_message(message, outer_color, message_color) do$/;"	f
print_issue_trigger_marker	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issue_trigger_marker($/;"	f
print_issues	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  defp print_issues($/;"	f
print_issues	deps/credo/lib/credo/cli/command/list/output/default.ex	/^  defp print_issues(issues, _filename, source_file, _exec, term_width) do$/;"	f
print_issues	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issues(issues, source_file_map, exec, term_width) do$/;"	f
print_issues	deps/credo/lib/credo/cli/output/formatter/flycheck.ex	/^  def print_issues(issues) do$/;"	f
print_issues	deps/credo/lib/credo/cli/output/formatter/json.ex	/^  def print_issues(issues) do$/;"	f
print_issues	deps/credo/lib/credo/cli/output/formatter/oneline.ex	/^  def print_issues(issues) do$/;"	f
print_issues_for_category	deps/credo/lib/credo/cli/command/suggest/output/default.ex	/^  defp print_issues_for_category($/;"	f
print_line	deps/credo/lib/credo/cli/command/categories/output/default.ex	/^  defp print_line(line, color) do$/;"	f
print_map	deps/credo/lib/credo/cli/output/formatter/json.ex	/^  def print_map(map) do$/;"	f
print_message	deps/credo/lib/credo/cli/command/help.ex	/^  def print_message(exec) do$/;"	f
print_messages	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  defp print_messages(messages, options) do$/;"	f
print_numbered_list	deps/credo/lib/credo/cli/output.ex	/^  defp print_numbered_list(list) do$/;"	f
print_params_explanation	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def print_params_explanation(check, outer_color) do$/;"	f
print_params_explanation	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def print_params_explanation(nil, _), do: nil$/;"	f
print_params_explanation	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def print_params_explanation(outer_color, check_name, [], _defaults) do$/;"	f
print_params_explanation	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  def print_params_explanation(outer_color, check_name, keywords, defaults) do$/;"	f
print_priority_hint	deps/credo/lib/credo/cli/output/summary.ex	/^  defp print_priority_hint([], %Execution{min_priority: min_priority})$/;"	f
print_priority_hint	deps/credo/lib/credo/cli/output/summary.ex	/^  defp print_priority_hint([], _exec), do: nil$/;"	f
print_priority_hint	deps/credo/lib/credo/cli/output/summary.ex	/^  defp print_priority_hint(_, %Execution{min_priority: min_priority})$/;"	f
print_priority_hint	deps/credo/lib/credo/cli/output/summary.ex	/^  defp print_priority_hint(_, _exec), do: nil$/;"	f
print_result	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  def print_result([filename, line_no, column], source_files, exec) do$/;"	f
print_result	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  def print_result([filename, line_no], source_files, exec) do$/;"	f
print_result	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  def print_result([filename], source_files, exec) do$/;"	f
print_results_and_summary	deps/credo/lib/credo/cli/command/explain/explain_command.ex	/^  defp print_results_and_summary(exec) do$/;"	f
print_results_and_summary	deps/credo/lib/credo/cli/command/list/list_command.ex	/^  defp print_results_and_summary(exec) do$/;"	f
print_results_and_summary	deps/credo/lib/credo/cli/command/suggest/suggest_command.ex	/^  defp print_results_and_summary(%Execution{} = exec) do$/;"	f
print_shell_instructions	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp print_shell_instructions(keyfile, certfile) do$/;"	f
print_shell_instructions	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def print_shell_instructions(%Context{schema: schema}) do$/;"	f
print_shell_instructions	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  def print_shell_instructions(%Context{schema: schema, context_app: ctx_app} = context) do$/;"	f
print_shell_instructions	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  def print_shell_instructions(%Context{schema: schema, context_app: ctx_app} = context) do$/;"	f
print_shell_instructions	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def print_shell_instructions(%Schema{} = schema) do$/;"	f
print_skipped_checks	deps/credo/lib/credo/cli/output.ex	/^  def print_skipped_checks(%Execution{skipped_checks: []}), do: nil$/;"	f
print_skipped_checks	deps/credo/lib/credo/cli/output.ex	/^  def print_skipped_checks(%Execution{skipped_checks: skipped_checks}) do$/;"	f
print_source_line	deps/credo/lib/credo/cli/command/explain/output/default.ex	/^  defp print_source_line(related_code, line_no, term_width, code_color, outer_color) do$/;"	f
print_switch	deps/credo/lib/credo/execution/task/validate_options.ex	/^  defp print_switch(name) do$/;"	f
print_switch	deps/credo/lib/credo/execution/task/validate_options.ex	/^  defp print_switch({name, _value}), do: print_switch(name)$/;"	f
print_usage	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp print_usage do$/;"	f
print_version	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp print_version do$/;"	f
printable?	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp printable?(codepoint), do: List.ascii_printable?([codepoint])$/;"	f
printable_ascii_chars	deps/puid/lib/puid.ex	/^        defp printable_ascii_chars(0, _, _, _, string), do: string$/;"	f
printable_ascii_chars	deps/puid/lib/puid.ex	/^        defp printable_ascii_chars(n, bits, uniform_offset, uniform_bytes, string) do$/;"	f
priority_arrow	deps/credo/lib/credo/cli/output.ex	/^  def priority_arrow(priority) do$/;"	f
priority_as_name	deps/credo/lib/credo/cli/options.ex	/^  defp priority_as_name(str), do: Priority.to_integer(str)$/;"	f
priority_as_number	deps/credo/lib/credo/cli/options.ex	/^  defp priority_as_number(str) do$/;"	f
priority_for	deps/credo/lib/credo/check.ex	/^  defp priority_for(source_file, scope) do$/;"	f
priority_for	deps/credo/lib/credo/priority.ex	/^    defp priority_for({unquote(op), _, arguments} = ast)$/;"	f
priority_for	deps/credo/lib/credo/priority.ex	/^  defp priority_for({:defmodule, _, _} = ast) do$/;"	f
priority_name	deps/credo/lib/credo/cli/output.ex	/^  def priority_name(priority) do$/;"	f
priv_path_for	lib/release_tasks.ex	/^  defp priv_path_for(repo, filename) do$/;"	f
process	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^        def process(:ok) do$/;"	f
process	deps/earmark/lib/earmark/cli.ex	/^  defp process(:help) do$/;"	f
process	deps/earmark/lib/earmark/cli.ex	/^  defp process(:version) do$/;"	f
process	deps/earmark/lib/earmark/cli.ex	/^  defp process({io_device, filename, options}) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process([value | row], {:value, :any}, _from, _adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process([value | row], {:value, type}, _from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, value, _from, _adapter)$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:list, args}, from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:map, args}, from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:map, data, args}, from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:merge, left, right}, from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:source, :from}, from, _adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:source, {source, schema}, prefix, types}, _from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:struct, struct, args}, from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:struct, struct, data, args}, from, adapter) do$/;"	f
process	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process(row, {:tuple, args}, from, adapter) do$/;"	f
process_args	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process_args(args, row, from, adapter) do$/;"	f
process_children	deps/ecto/lib/ecto/repo/schema.ex	/^  defp process_children(changeset, assocs, user_changeset, adapter, opts) do$/;"	f
process_current	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp process_current(current, get_pks) do$/;"	f
process_current	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp process_current(nil, _get_pks),$/;"	f
process_definition_call	deps/credo/lib/credo/execution/process_definition.ex	/^      defp process_definition_call(exec) do$/;"	f
process_dumpers	deps/ecto/lib/ecto/type.ex	/^  defp process_dumpers([], {:ok, _} = acc, _adapter),$/;"	f
process_dumpers	deps/ecto/lib/ecto/type.ex	/^  defp process_dumpers([fun|t], {:ok, value}, adapter) when is_function(fun),$/;"	f
process_dumpers	deps/ecto/lib/ecto/type.ex	/^  defp process_dumpers([type|t], {:ok, value}, adapter),$/;"	f
process_dumpers	deps/ecto/lib/ecto/type.ex	/^  defp process_dumpers(_, :error, _adapter),$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs(list) when is_list(list) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs(v)$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({:%{}, _meta, body}) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({:__aliases__, _meta, name_list}) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({:sigil_r, _, [{:<<>>, _, [regex_as_string]}, []]}) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({:sigil_w, _, [{:<<>>, _, [list_as_string]}, []]}) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({:{}, _meta, body}) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({key, value}) when is_atom(key) or is_binary(key) do$/;"	f
process_exs	deps/credo/lib/credo/exs_loader.ex	/^  defp process_exs({{:__aliases__, _meta, name_list}, options}) do$/;"	f
process_group	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp process_group([{_, _mod_list_first, a}, {line_no, mod_list_second, b}], _)$/;"	f
process_group	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp process_group([{line_no1, mod_list_first, _}, {line_no2, mod_list_second, _}], _) do$/;"	f
process_group	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp process_group([{line_no1, mod_list_first, _}], _) do$/;"	f
process_group	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp process_group(_, _), do: {:cont, nil}$/;"	f
process_kv	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process_kv(kv, row, from, adapter) do$/;"	f
process_line	deps/credo/.template.check.ex	/^  defp process_line({line_no, line}, issues, line_regex, issue_meta) do$/;"	f
process_loaders	deps/ecto/lib/ecto/type.ex	/^  defp process_loaders([], {:ok, _} = acc, _adapter),$/;"	f
process_loaders	deps/ecto/lib/ecto/type.ex	/^  defp process_loaders([fun|t], {:ok, value}, adapter) when is_function(fun),$/;"	f
process_loaders	deps/ecto/lib/ecto/type.ex	/^  defp process_loaders([type|t], {:ok, value}, adapter),$/;"	f
process_loaders	deps/ecto/lib/ecto/type.ex	/^  defp process_loaders(_, :error, _adapter),$/;"	f
process_map	deps/credo/lib/credo/exs_loader.ex	/^  defp process_map([], acc), do: acc$/;"	f
process_map	deps/credo/lib/credo/exs_loader.ex	/^  defp process_map([head | tail], acc) do$/;"	f
process_map_item	deps/credo/lib/credo/exs_loader.ex	/^  defp process_map_item({key, value}, acc)$/;"	f
process_param	deps/ecto/lib/ecto/changeset.ex	/^  defp process_param(key, params, types, data, empty_values, defaults, {changes, errors, valid?}) do$/;"	f
process_parents	deps/ecto/lib/ecto/repo/schema.ex	/^  defp process_parents(%{changes: changes} = changeset, assocs, adapter, opts) do$/;"	f
process_tuple	deps/credo/lib/credo/exs_loader.ex	/^  defp process_tuple([], acc), do: acc$/;"	f
process_tuple	deps/credo/lib/credo/exs_loader.ex	/^  defp process_tuple([head | tail], acc) do$/;"	f
process_tuple_item	deps/credo/lib/credo/exs_loader.ex	/^  defp process_tuple_item(value, acc) do$/;"	f
process_type_ast	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp process_type_ast(ast, _), do: ast$/;"	f
process_type_ast	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp process_type_ast({:"::", _, [d | _]}, :opaque), do: d$/;"	f
process_update	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp process_update(data, args, row, from, adapter) do$/;"	f
project	deps/bunt/mix.exs	/^  def project do$/;"	f
project	deps/connection/mix.exs	/^  def project do$/;"	f
project	deps/credo/mix.exs	/^  def project do$/;"	f
project	deps/crypto_rand/mix.exs	/^  def project do$/;"	f
project	deps/db_connection/mix.exs	/^  def project do$/;"	f
project	deps/decimal/mix.exs	/^  def project() do$/;"	f
project	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  def project do$/;"	f
project	deps/dialyxir/mix.exs	/^  def project do$/;"	f
project	deps/earmark/mix.exs	/^  def project do$/;"	f
project	deps/ecto/mix.exs	/^  def project do$/;"	f
project	deps/ecto_sql/mix.exs	/^        def project do$/;"	f
project	deps/ecto_sql/mix.exs	/^  def project do$/;"	f
project	deps/erlex/mix.exs	/^  def project do$/;"	f
project	deps/ex_doc/lib/mix/tasks/docs.ex	/^      def project do$/;"	f
project	deps/ex_doc/mix.exs	/^  def project do$/;"	f
project	deps/ex_json_schema/mix.exs	/^  def project do$/;"	f
project	deps/ex_machina/mix.exs	/^  def project() do$/;"	f
project	deps/jason/mix.exs	/^  def project() do$/;"	f
project	deps/makeup/mix.exs	/^  def project do$/;"	f
project	deps/makeup_elixir/mix.exs	/^  def project do$/;"	f
project	deps/mime/mix.exs	/^  def project do$/;"	f
project	deps/mox/lib/mox.ex	/^      def project do$/;"	f
project	deps/mox/mix.exs	/^  def project do$/;"	f
project	deps/nimble_parsec/mix.exs	/^  def project do$/;"	f
project	deps/phoenix/mix.exs	/^  def project do$/;"	f
project	deps/phoenix_pubsub/mix.exs	/^  def project do$/;"	f
project	deps/plug/mix.exs	/^  def project do$/;"	f
project	deps/plug_crypto/mix.exs	/^  def project do$/;"	f
project	deps/postgrex/mix.exs	/^  def project do$/;"	f
project	deps/puid/mix.exs	/^  def project do$/;"	f
project	deps/secure_random/mix.exs	/^  def project do$/;"	f
project	mix.exs	/^  def project do$/;"	f
prompt_for_code_injection	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def prompt_for_code_injection(%Context{} = context) do$/;"	f
prompt_for_conflicts	deps/phoenix/lib/mix/phoenix.ex	/^  def prompt_for_conflicts(generator_files) do$/;"	f
prompt_for_conflicts	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp prompt_for_conflicts(context) do$/;"	f
prompt_for_conflicts	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  defp prompt_for_conflicts(schema) do$/;"	f
prompt_for_conflicts	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  defp prompt_for_conflicts(context) do$/;"	f
prompt_for_conflicts	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  defp prompt_for_conflicts(context) do$/;"	f
prompt_for_conflicts	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  defp prompt_for_conflicts(schema) do$/;"	f
properly_indent	deps/earmark/lib/earmark/helpers/reparse_helpers.ex	/^  def properly_indent(%Line.Indent{level: level, content: content}, target_level)$/;"	f
properly_indent	deps/earmark/lib/earmark/helpers/reparse_helpers.ex	/^  def properly_indent(%{inside_code: true, line: line}, _level) do$/;"	f
properly_indent	deps/earmark/lib/earmark/helpers/reparse_helpers.ex	/^  def properly_indent(line, _) do$/;"	f
properties_matching	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp properties_matching(properties, pattern) do$/;"	f
protect_from_forgery	deps/phoenix/lib/phoenix/controller.ex	/^  def protect_from_forgery(conn, opts \\\\ []) do$/;"	f
protocol_version	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def protocol_version do$/;"	f
proxy	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^    defp proxy(fun, {conn_mod, state, in_transaction?}, args) do$/;"	f
proxy_checkin	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp proxy_checkin(state, maybe_owner, caller) do$/;"	f
proxy_checkin_all_except	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp proxy_checkin_all_except(state, except, caller) do$/;"	f
proxy_checkout	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp proxy_checkout(state, caller, opts) do$/;"	f
proxy_io	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp proxy_io(fun) do$/;"	f
prune	deps/plug/lib/plug/conn/query.ex	/^  defp prune([?& | t]), do: t$/;"	f
prune	deps/plug/lib/plug/conn/query.ex	/^  defp prune([]), do: []$/;"	f
prune_args_from_stacktrace	deps/plug_crypto/lib/plug/crypto.ex	/^  def prune_args_from_stacktrace([{mod, fun, [_ | _] = args, info} | rest]),$/;"	f
prune_args_from_stacktrace	deps/plug_crypto/lib/plug/crypto.ex	/^  def prune_args_from_stacktrace(stacktrace) when is_list(stacktrace),$/;"	f
prune_args_from_stacktrace	deps/plug_crypto/lib/plug/crypto.ex	/^  def prune_args_from_stacktrace(stacktrace)$/;"	f
prune_hashes	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def prune_hashes($/;"	f
pruned_stacktrace	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp pruned_stacktrace(pid) do$/;"	f
public	lib/boruta/adapters/ecto/scopes.ex	/^  def public do$/;"	f
public?	deps/ex_doc/lib/ex_doc/refs.ex	/^  def public?(ref) do$/;"	f
publish	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp publish(conn, server_ref, endpoint, opts) do$/;"	f
publish_reply	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp publish_reply(state, reply) do$/;"	f
publish_reply	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp publish_reply(state, reply) when is_map(reply) do$/;"	f
published	deps/ecto/lib/ecto/query.ex	/^      def published(query) do$/;"	f
published_multi	deps/ecto/lib/ecto/query.ex	/^      def published_multi(query) do$/;"	f
pubsub	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp pubsub() do$/;"	f
pubsub_children	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp pubsub_children(_mod, conf) do$/;"	f
pubsub_server	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def pubsub_server(endpoint) do$/;"	f
purge	deps/ecto_sql/integration_test/sql/migrator.exs	/^  defp purge(modules) do$/;"	f
push	deps/phoenix/lib/phoenix/channel.ex	/^  def push(socket, event, message) do$/;"	f
push	deps/phoenix/lib/phoenix/channel/server.ex	/^  def push(_, topic, event, payload, _) do$/;"	f
push	deps/phoenix/lib/phoenix/channel/server.ex	/^  def push(pid, topic, event, payload, serializer)$/;"	f
push	deps/phoenix/lib/phoenix/router/scope.ex	/^  def push(module, opts) when is_list(opts) do$/;"	f
push	deps/phoenix/lib/phoenix/router/scope.ex	/^  def push(module, path) when is_binary(path) do$/;"	f
push	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def push(socket, event, payload \\\\ %{}) do$/;"	f
push	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  def push(%State{mode: :normal} = _parent, generations, %State{mode: :delta} = delta, opts) do$/;"	f
push	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  def push(%State{mode: :normal} = parent, [] = _generations, %State{mode: :delta} = delta, opts) do$/;"	f
push	deps/plug/lib/plug/adapters/test/conn.ex	/^  def push(%{owner: owner, ref: ref}, path, headers) do$/;"	f
push	deps/plug/lib/plug/conn.ex	/^  def push(%Conn{} = conn, path, headers \\\\ []) do$/;"	f
push!	deps/plug/lib/plug/conn.ex	/^  def push!(%Conn{adapter: {adapter, _}} = conn, path, headers \\\\ []) do$/;"	f
push_delta_generation	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp push_delta_generation(%{deltas: deltas} = state, %State{mode: :delta} = delta) do$/;"	f
push_delta_generation	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp push_delta_generation(state, {%State{mode: :normal}, _}) do$/;"	f
put	deps/credo/lib/credo/execution/execution_config_files.ex	/^  def put(%Execution{config_files_pid: pid}, list) do$/;"	f
put	deps/credo/lib/credo/execution/execution_source_files.ex	/^  def put(%Execution{source_files_pid: pid}, list) do$/;"	f
put	deps/credo/lib/credo/service/ets_table_helper.ex	/^      def put(filename, value) do$/;"	f
put	deps/plug/lib/plug/router.ex	/^  defmacro put(path, options, contents \\\\ []) do$/;"	a
put	deps/plug/lib/plug/session/cookie.ex	/^  def put(conn, _sid, term, opts) do$/;"	f
put	deps/plug/lib/plug/session/ets.ex	/^  def put(_conn, nil, data, table) do$/;"	f
put	deps/plug/lib/plug/session/ets.ex	/^  def put(_conn, sid, data, table) do$/;"	f
put	deps/postgrex/lib/postgrex/parameters.ex	/^  def put(ref, name, value) do$/;"	f
put_action	deps/ecto/lib/ecto/multi.ex	/^  defp put_action(%{action: action} = changeset, action) do$/;"	f
put_action	deps/ecto/lib/ecto/multi.ex	/^  defp put_action(%{action: nil} = changeset, action) do$/;"	f
put_action	deps/ecto/lib/ecto/multi.ex	/^  defp put_action(%{action: original}, action) do$/;"	f
put_assign	deps/credo/lib/credo/execution.ex	/^  def put_assign(exec, name, value) do$/;"	f
put_assoc	deps/ecto/lib/ecto/changeset.ex	/^  def put_assoc(%Changeset{} = changeset, name, value, opts \\\\ []) do$/;"	f
put_cache_header	deps/plug/lib/plug/static.ex	/^  defp put_cache_header($/;"	f
put_cache_header	deps/plug/lib/plug/static.ex	/^  defp put_cache_header(conn, _, _, _, _, _) do$/;"	f
put_cache_header	deps/plug/lib/plug/static.ex	/^  defp put_cache_header(conn, _qs_cache, et_cache, et_generation, file_info, path)$/;"	f
put_change	deps/ecto/lib/ecto/changeset.ex	/^  def put_change(%Changeset{data: data, types: types} = changeset, key, value) do$/;"	f
put_change	deps/ecto/lib/ecto/changeset.ex	/^  def put_change(%Changeset{types: nil}, _key, _value) do$/;"	f
put_change	deps/ecto/lib/ecto/changeset.ex	/^  defp put_change(_data, _changes, _errors, _valid?, key, _value, nil) when not is_atom(key) do$/;"	f
put_change	deps/ecto/lib/ecto/changeset.ex	/^  defp put_change(data, _changes, _errors, _valid?, key, _value, nil) when is_atom(key) do$/;"	f
put_change	deps/ecto/lib/ecto/changeset.ex	/^  defp put_change(data, changes, errors, valid?, key, value, type) do$/;"	f
put_change	deps/ecto/lib/ecto/changeset.ex	/^  defp put_change(data, changes, errors, valid?, key, value, {tag, relation})$/;"	f
put_channel	deps/phoenix/lib/phoenix/socket.ex	/^  defp put_channel(state, pid, topic, join_ref) do$/;"	f
put_chars	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^  defp put_chars(from, reply, chars, output) do$/;"	f
put_cli_switch	deps/credo/lib/credo/execution.ex	/^  def put_cli_switch(exec, _plugin_mod, name, type) do$/;"	f
put_cli_switch_alias	deps/credo/lib/credo/execution.ex	/^  def put_cli_switch_alias(exec, _plugin_mod, name, alias_name) do$/;"	f
put_cli_switch_plugin_param_converter	deps/credo/lib/credo/execution.ex	/^  def put_cli_switch_plugin_param_converter(exec, plugin_mod, cli_switch_name, plugin_param_name) do$/;"	f
put_command	deps/credo/lib/credo/execution.ex	/^  def put_command(exec, _plugin_mod, name, command_mod) do$/;"	f
put_conn	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp put_conn(pool, conn) do$/;"	f
put_context	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp put_context(%State{delta: delta, replica: rep} = state, new_ctx) do$/;"	f
put_context_app	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp put_context_app(opts, nil), do: opts$/;"	f
put_context_app	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp put_context_app(opts, string) do$/;"	f
put_context_app	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  defp put_context_app(opts, nil), do: opts$/;"	f
put_context_app	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  defp put_context_app(opts, string) do$/;"	f
put_cookie	deps/plug/lib/plug/session.ex	/^  defp put_cookie(value, conn, %{cookie_opts: cookie_opts, key: key}),$/;"	f
put_dynamic_repo	deps/ecto/lib/ecto/repo.ex	/^      def put_dynamic_repo(dynamic) when is_atom(dynamic) or is_pid(dynamic) do$/;"	f
put_embed	deps/ecto/lib/ecto/changeset.ex	/^  def put_embed(%Changeset{} = changeset, name, value, opts \\\\ []) do$/;"	f
put_extension_registry	deps/makeup/lib/makeup/registry.ex	/^  defp put_extension_registry(registry) do$/;"	f
put_flash	deps/phoenix/lib/phoenix/controller.ex	/^  def put_flash(conn, key, message) do$/;"	f
put_flash	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate put_flash(conn, key, value), to: Phoenix.Controller$/;"	d
put_format	deps/phoenix/lib/phoenix/controller.ex	/^  def put_format(conn, format), do: put_private(conn, :phoenix_format, format)$/;"	f
put_group_ids	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp put_group_ids([], _group_id_varname) do$/;"	f
put_group_ids	deps/makeup/lib/makeup/lexer/groups.ex	/^  defp put_group_ids(tokens, group_id_varname) do$/;"	f
put_heartbeat	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  def put_heartbeat(replicas, {name, vsn}) do$/;"	f
put_host	deps/plug/lib/plug/ssl.ex	/^  defp put_host(conn, [proper_host]),$/;"	f
put_host	deps/plug/lib/plug/ssl.ex	/^  defp put_host(conn, _),$/;"	f
put_hostname_if_present	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp put_hostname_if_present(keyword, "") do$/;"	f
put_hostname_if_present	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp put_hostname_if_present(keyword, hostname) when is_binary(hostname) do$/;"	f
put_hsts_header	deps/plug/lib/plug/ssl.ex	/^  defp put_hsts_header(conn, hsts_header) when is_binary(hsts_header) do$/;"	f
put_hsts_header	deps/plug/lib/plug/ssl.ex	/^  defp put_hsts_header(conn, nil), do: conn$/;"	f
put_http_protocol	deps/plug/lib/plug/test.ex	/^  def put_http_protocol(conn, http_protocol) do$/;"	f
put_layout	deps/phoenix/lib/phoenix/controller.ex	/^  def put_layout(%Plug.Conn{state: state} = conn, layout) do$/;"	f
put_layout_formats	deps/phoenix/lib/phoenix/controller.ex	/^  def put_layout_formats(%Plug.Conn{state: state} = conn, formats)$/;"	f
put_layout_formats	deps/phoenix/lib/phoenix/controller.ex	/^  def put_layout_formats(%Plug.Conn{}, _formats), do: raise AlreadySentError$/;"	f
put_markdown_processor	deps/ex_doc/lib/ex_doc/markdown.ex	/^  def put_markdown_processor(processor) do$/;"	f
put_meta	deps/ecto/lib/ecto.ex	/^  def put_meta(%{__meta__: meta} = struct, opts) do$/;"	f
put_meta	deps/ecto/lib/ecto.ex	/^  defp put_meta(_meta, key, _value) do$/;"	f
put_meta	deps/ecto/lib/ecto.ex	/^  defp put_meta(meta, :context, context) do$/;"	f
put_meta	deps/ecto/lib/ecto.ex	/^  defp put_meta(meta, :prefix, prefix) do$/;"	f
put_meta	deps/ecto/lib/ecto.ex	/^  defp put_meta(meta, :source, source) do$/;"	f
put_meta	deps/ecto/lib/ecto.ex	/^  defp put_meta(meta, :state, state) do$/;"	f
put_missing_oids	deps/postgrex/lib/postgrex/protocol.ex	/^  defp put_missing_oids(missing, type_info, new, types) do$/;"	f
put_name_registry	deps/makeup/lib/makeup/registry.ex	/^  defp put_name_registry(registry) do$/;"	f
put_new	deps/plug/lib/plug/session/ets.ex	/^  defp put_new(data, table, counter \\\\ 0)$/;"	f
put_new_action	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp put_new_action(%{action: action} = changeset, new_action) when is_nil(action),$/;"	f
put_new_action	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp put_new_action(changeset, _new_action),$/;"	f
put_new_layout	deps/phoenix/lib/phoenix/controller.ex	/^  def put_new_layout(%Plug.Conn{state: state} = conn, layout)$/;"	f
put_new_monitor	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  defp put_new_monitor(%{monitors: monitors} = state, pid) do$/;"	f
put_new_topics	deps/phoenix/lib/phoenix/channel.ex	/^        defp put_new_topics(socket, topics) do$/;"	f
put_new_view	deps/phoenix/lib/phoenix/controller.ex	/^  def put_new_view(%Plug.Conn{state: state} = conn, module)$/;"	f
put_new_view	deps/phoenix/lib/phoenix/controller.ex	/^  def put_new_view(%Plug.Conn{}, _module), do: raise AlreadySentError$/;"	f
put_or_noop_meta	deps/ecto/lib/ecto.ex	/^  defp put_or_noop_meta([], _meta, false), do: :noop$/;"	f
put_or_noop_meta	deps/ecto/lib/ecto.ex	/^  defp put_or_noop_meta([], meta, true), do: meta$/;"	f
put_or_noop_meta	deps/ecto/lib/ecto.ex	/^  defp put_or_noop_meta([{key, value}|t], meta, updated?) do$/;"	f
put_peer_data	deps/plug/lib/plug/test.ex	/^  def put_peer_data(conn, peer_data) do$/;"	f
put_pending_clock	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp put_pending_clock(state, clocks) do$/;"	f
put_plugin_param	deps/credo/lib/credo/execution.ex	/^  def put_plugin_param(exec, plugin_mod, param_name, param_value) do$/;"	f
put_port	deps/plug/lib/plug/ssl.ex	/^  defp put_port(conn, headers) do$/;"	f
put_presence	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp put_presence(state, pid, topic, key, meta, prev_meta \\\\ nil) do$/;"	f
put_presences	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp put_presences(state, %State{} = presences), do: %{state | presences: presences}$/;"	f
put_private	deps/plug/lib/plug/conn.ex	/^  def put_private(%Conn{private: private} = conn, key, value) when is_atom(key) do$/;"	f
put_refresh_token	lib/boruta/adapters/ecto/schemas/token.ex	/^  defp put_refresh_token(%Ecto.Changeset{data: data, changes: changes} = changeset) do$/;"	f
put_relation	deps/ecto/lib/ecto/changeset.ex	/^  defp put_relation(_tag, %{types: nil}, _name, _value, _opts) do$/;"	f
put_relation	deps/ecto/lib/ecto/changeset.ex	/^  defp put_relation(tag, changeset, name, value, _opts) do$/;"	f
put_repo_and_action	deps/ecto/lib/ecto/repo/schema.ex	/^  defp put_repo_and_action(%{action: :ignore, valid?: valid?} = changeset, action, repo, opts) do$/;"	f
put_repo_and_action	deps/ecto/lib/ecto/repo/schema.ex	/^  defp put_repo_and_action(%{action: given}, action, repo, _opts) when given != nil and given != action,$/;"	f
put_repo_and_action	deps/ecto/lib/ecto/repo/schema.ex	/^  defp put_repo_and_action(changeset, action, repo, opts),$/;"	f
put_req_cookie	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defdelegate put_req_cookie(conn, key, value), to: Plug.Test$/;"	d
put_req_cookie	deps/plug/lib/plug/test.ex	/^  def put_req_cookie(conn, key, value) when is_binary(key) and is_binary(value) do$/;"	f
put_req_header	deps/plug/lib/plug/conn.ex	/^  def put_req_header(%Conn{adapter: adapter, req_headers: headers} = conn, key, value)$/;"	f
put_req_header	deps/plug/lib/plug/conn.ex	/^  def put_req_header(%Conn{state: :sent}, _key, _value) do$/;"	f
put_req_header	deps/plug/lib/plug/conn.ex	/^  def put_req_header(conn, key, value)$/;"	f
put_resp_content_type	deps/plug/lib/plug/conn.ex	/^  def put_resp_content_type(conn, content_type, charset \\\\ "utf-8")$/;"	f
put_resp_content_type	deps/plug/lib/plug/conn.ex	/^  def put_resp_content_type(conn, content_type, charset)$/;"	f
put_resp_content_type	deps/plug/lib/plug/conn.ex	/^  def put_resp_content_type(conn, content_type, nil) when is_binary(content_type) do$/;"	f
put_resp_cookie	deps/plug/lib/plug/conn.ex	/^  def put_resp_cookie(%Conn{} = conn, key, value, opts \\\\ [])$/;"	f
put_resp_header	deps/plug/lib/plug/conn.ex	/^  def put_resp_header(%Conn{adapter: adapter, resp_headers: headers} = conn, key, value)$/;"	f
put_resp_header	deps/plug/lib/plug/conn.ex	/^  def put_resp_header(%Conn{state: :chunked}, _key, _value) do$/;"	f
put_resp_header	deps/plug/lib/plug/conn.ex	/^  def put_resp_header(%Conn{state: :sent}, _key, _value) do$/;"	f
put_result	deps/credo/lib/credo/execution.ex	/^  def put_result(exec, name, value) do$/;"	f
put_root_layout	deps/phoenix/lib/phoenix/controller.ex	/^  def put_root_layout(%Plug.Conn{state: state} = conn, layout) do$/;"	f
put_router_url	deps/phoenix/lib/phoenix/controller.ex	/^  def put_router_url(conn, %URI{} = uri) do$/;"	f
put_router_url	deps/phoenix/lib/phoenix/controller.ex	/^  def put_router_url(conn, url) when is_binary(url) do$/;"	f
put_router_url_by_user	deps/phoenix/lib/phoenix/controller.ex	/^      def put_router_url_by_user(conn) do$/;"	f
put_scheme	deps/plug/lib/plug/ssl.ex	/^  defp put_scheme(%{scheme: :http, port: 80} = conn, ["https"]),$/;"	f
put_scheme	deps/plug/lib/plug/ssl.ex	/^  defp put_scheme(%{scheme: :https, port: 443} = conn, ["http"]),$/;"	f
put_scheme	deps/plug/lib/plug/ssl.ex	/^  defp put_scheme(conn, ["http"]),$/;"	f
put_scheme	deps/plug/lib/plug/ssl.ex	/^  defp put_scheme(conn, ["https"]),$/;"	f
put_scheme	deps/plug/lib/plug/ssl.ex	/^  defp put_scheme(conn, _scheme),$/;"	f
put_secret	lib/boruta/adapters/ecto/schemas/client.ex	/^  defp put_secret(%Ecto.Changeset{data: data, changes: changes} = changeset) do$/;"	f
put_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^      def put_secret_key_base(conn, _) do$/;"	f
put_secure_browser_headers	deps/phoenix/lib/phoenix/controller.ex	/^  def put_secure_browser_headers(conn, []) do$/;"	f
put_secure_browser_headers	deps/phoenix/lib/phoenix/controller.ex	/^  def put_secure_browser_headers(conn, headers \\\\ %{})$/;"	f
put_secure_browser_headers	deps/phoenix/lib/phoenix/controller.ex	/^  def put_secure_browser_headers(conn, headers) when is_map(headers) do$/;"	f
put_secure_defaults	deps/phoenix/lib/phoenix/controller.ex	/^  defp put_secure_defaults(conn) do$/;"	f
put_session	deps/plug/lib/plug/conn.ex	/^  def put_session(%Conn{state: state}, _key, _value) when not (state in @unsent),$/;"	f
put_session	deps/plug/lib/plug/conn.ex	/^  def put_session(conn, key, value) when is_atom(key) or is_binary(key) do$/;"	f
put_session	deps/plug/lib/plug/conn.ex	/^  defp put_session(conn, fun) do$/;"	f
put_session	deps/plug/lib/plug/session.ex	/^  defp put_session(sid, conn, %{store: store, store_config: store_config}),$/;"	f
put_source	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp put_source(opts, %{sources: sources}) when is_binary(elem(elem(sources, 0), 0)) do$/;"	f
put_source	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp put_source(opts, _) do$/;"	f
put_source_files	deps/credo/lib/credo/execution.ex	/^  def put_source_files(exec, source_files) do$/;"	f
put_ssl_file	deps/plug/lib/plug/ssl.ex	/^  defp put_ssl_file(options, key, value) do$/;"	f
put_state	deps/db_connection/lib/db_connection/holder.ex	/^  def put_state(pool_ref(holder: sink_holder), state) do$/;"	f
put_static_url	deps/phoenix/lib/phoenix/controller.ex	/^  def put_static_url(conn, %URI{} = uri) do$/;"	f
put_static_url	deps/phoenix/lib/phoenix/controller.ex	/^  def put_static_url(conn, url) when is_binary(url) do$/;"	f
put_status	deps/db_connection/lib/db_connection/holder.ex	/^  def put_status(pool_ref(holder: holder), status) do$/;"	f
put_status	deps/plug/lib/plug/conn.ex	/^  def put_status(%Conn{state: :sent}, _status), do: raise(AlreadySentError)$/;"	f
put_status	deps/plug/lib/plug/conn.ex	/^  def put_status(%Conn{} = conn, nil), do: %{conn | status: nil}$/;"	f
put_status	deps/plug/lib/plug/conn.ex	/^  def put_status(%Conn{} = conn, status), do: %{conn | status: Plug.Conn.Status.code(status)}$/;"	f
put_struct_field	deps/ecto/lib/ecto/schema.ex	/^  defp put_struct_field(mod, name, assoc) do$/;"	f
put_tag	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp put_tag(clouds, {name, _clock} = tag) do$/;"	f
put_top	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp put_top(module, value) do$/;"	f
put_uniq	deps/decimal/lib/decimal.ex	/^  defp put_uniq(list, elem) do$/;"	f
put_uniq	deps/decimal/lib/decimal.ex	/^  defp put_uniq(list, elems) when is_list(elems) do$/;"	f
put_update	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp put_update(state, pid, topic, key, meta, %{phx_ref: ref} = prev_meta) do$/;"	f
put_value	lib/boruta/adapters/ecto/schemas/token.ex	/^  defp put_value(%Ecto.Changeset{data: data, changes: changes} = changeset) do$/;"	f
put_view	deps/phoenix/lib/phoenix/controller.ex	/^  def put_view(%Plug.Conn{state: state} = conn, module) when state in @unsent do$/;"	f
put_view	deps/phoenix/lib/phoenix/controller.ex	/^  def put_view(%Plug.Conn{}, _module), do: raise AlreadySentError$/;"	f
puts	deps/bunt/lib/bunt.ex	/^  def puts(value \\\\ "") do$/;"	f
puts	deps/credo/lib/credo/cli/output/shell.ex	/^  def puts do$/;"	f
puts	deps/credo/lib/credo/cli/output/shell.ex	/^  def puts(value) do$/;"	f
puts	deps/credo/lib/credo/cli/output/ui.ex	/^    def puts(_), do: nil$/;"	f
puts	deps/credo/lib/credo/cli/output/ui.ex	/^    def puts(_, color) when is_atom(color), do: nil$/;"	f
puts	deps/credo/lib/credo/cli/output/ui.ex	/^    def puts(v, color) when is_atom(color) do$/;"	f
puts	deps/credo/lib/credo/cli/output/ui.ex	/^    def puts, do: nil$/;"	f
puts	deps/credo/lib/credo/cli/output/ui.ex	/^    defdelegate puts(v), to: @shell_service$/;"	d
puts	deps/credo/lib/credo/cli/output/ui.ex	/^    defdelegate puts, to: @shell_service$/;"	d
puts_edge	deps/credo/lib/credo/cli/output/ui.ex	/^  def puts_edge(color, indent \\\\ 2) when is_integer(indent) do$/;"	f
qs	deps/plug/lib/plug/ssl.ex	/^  defp qs(""), do: ""$/;"	f
qs	deps/plug/lib/plug/ssl.ex	/^  defp qs(qs), do: "?" <> qs$/;"	f
qual!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def qual!(qual) do$/;"	f
qual!	deps/ecto/lib/ecto/query/builder/join.ex	/^  def qual!(qual) when qual in @qualifiers, do: qual$/;"	f
queries periodically	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^      test "queries periodically" do$/;"	t
queries_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp queries_delete(%{queries: nil}), do: true$/;"	f
queries_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp queries_delete(%{queries: queries}), do: :ets.delete(queries)$/;"	f
queries_new	deps/postgrex/lib/postgrex/protocol.ex	/^  defp queries_new(), do: :ets.new(__MODULE__, [:set, :public])$/;"	f
query	deps/ecto/lib/ecto/query/builder/from.ex	/^  defp query(prefix, source, schema, as, hints) do$/;"	f
query	deps/ecto/lib/ecto/query/planner.ex	/^  def query(query, operation, cache, adapter, counter) do$/;"	f
query	deps/ecto/lib/ecto/repo/assoc.ex	/^  def query([], _assocs, _sources, _fun), do: []$/;"	f
query	deps/ecto/lib/ecto/repo/assoc.ex	/^  def query(rows, [], _sources, fun), do: Enum.map(rows, fun)$/;"	f
query	deps/ecto/lib/ecto/repo/assoc.ex	/^  def query(rows, assocs, sources, fun) do$/;"	f
query	deps/ecto/lib/ecto/repo/assoc.ex	/^  def query(rows, assocs, sources, fun)$/;"	f
query	deps/ecto/lib/ecto/repo/preloader.ex	/^  def query([], _repo_name, _preloads, _take, _fun, _opts), do: []$/;"	f
query	deps/ecto/lib/ecto/repo/preloader.ex	/^  def query(rows, _repo_name, [], _take, fun, _opts), do: Enum.map(rows, fun)$/;"	f
query	deps/ecto/lib/ecto/repo/preloader.ex	/^  def query(rows, repo_name, preloads, take, fun, opts) do$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def query(conn, sql, params, opts) do$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def query(conn, sql, params, opts) do$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def query(sql, params \\\\ [], opts \\\\ []) do$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def query(adapter_meta, sql, params, opts) do$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def query(repo, sql, params \\\\ [], opts \\\\ [])$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def query(repo, sql, params, opts) when is_atom(repo) or is_pid(repo) do$/;"	f
query	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def query(conn, sql, params, opts) do$/;"	f
query	deps/postgrex/lib/postgrex.ex	/^  def query(conn, statement, params, opts \\\\ []) do$/;"	f
query count distinct	deps/ecto/integration_test/cases/repo.exs	/^  test "query count distinct" do$/;"	t
query where interpolation	deps/ecto/integration_test/cases/repo.exs	/^  test "query where interpolation" do$/;"	t
query!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp query!(%Ecto.Query{} = query), do: query$/;"	f
query!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp query!(query) when is_function(query, 1), do: query$/;"	f
query!	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "query!\/4 with dynamic repo" do$/;"	t
query!	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "query!\/4 with iodata" do$/;"	t
query!	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "query!\/4" do$/;"	t
query!	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def query!(sql, params \\\\ [], opts \\\\ []) do$/;"	f
query!	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def query!(repo, sql, params \\\\ [], opts \\\\ []) do$/;"	f
query!	deps/postgrex/lib/postgrex.ex	/^  def query!(conn, statement, params, opts \\\\ []) do$/;"	f
query_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_delete($/;"	f
query_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_delete(%{queries: nil}, _), do: :ok$/;"	f
query_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_delete(%{queries: queries}, %Query{name: name}) do$/;"	f
query_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_delete(_, %Query{name: ""}), do: :ok$/;"	f
query_delete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_delete(_, _, _), do: :ok$/;"	f
query_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_error(s, msg) do$/;"	f
query_for_aggregate	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp query_for_aggregate(queryable, aggregate) do$/;"	f
query_for_aggregate	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp query_for_aggregate(queryable, aggregate, field) do$/;"	f
query_for_get	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp query_for_get(_queryable, nil) do$/;"	f
query_for_get	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp query_for_get(queryable, id) do$/;"	f
query_for_get_by	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp query_for_get_by(queryable, clauses) do$/;"	f
query_lookup	deps/ecto/lib/ecto/query/planner.ex	/^  defp query_lookup(:nocache, query, operation, _cache, adapter, counter) do$/;"	f
query_lookup	deps/ecto/lib/ecto/query/planner.ex	/^  defp query_lookup(key, query, operation, cache, adapter, counter) do$/;"	f
query_member?	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_member?(%{queries: nil}, _), do: false$/;"	f
query_member?	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_member?(%{queries: queries}, %Query{name: name, ref: ref}) do$/;"	f
query_member?	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_member?(_, %{name: ""}), do: false$/;"	f
query_prepare	deps/ecto/lib/ecto/query/planner.ex	/^  defp query_prepare(query, operation, adapter, counter, cache, key) do$/;"	f
query_prepare_execute	deps/postgrex/lib/postgrex.ex	/^  defp query_prepare_execute(conn, query, params, opts) do$/;"	f
query_put	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_put(%{queries: nil}, _), do: :ok$/;"	f
query_put	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_put(%{queries: queries}, %Query{name: name, cache: :reference, ref: ref}) do$/;"	f
query_put	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_put(%{queries: queries}, %Query{name: name, cache: :statement, ref: ref} = query) do$/;"	f
query_put	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_put(_, %Query{name: ""}), do: :ok$/;"	f
query_put	deps/postgrex/lib/postgrex/protocol.ex	/^  defp query_put(_, %Query{ref: nil}), do: :ok$/;"	f
query_to_joins	deps/ecto/lib/ecto/query/planner.ex	/^  def query_to_joins(qual, source, %{wheres: wheres, joins: joins}, position) do$/;"	f
query_with_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp query_with_cache(key, query, operation, cache, adapter, counter, params) do$/;"	f
query_without_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp query_without_cache(query, operation, adapter, counter) do$/;"	f
quote_if_buffer	deps/plug/lib/plug/router/utils.ex	/^  defp quote_if_buffer(identifier, "", context, _fun) do$/;"	f
quote_if_buffer	deps/plug/lib/plug/router/utils.ex	/^  defp quote_if_buffer(identifier, _buffer, context, fun) do$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_name(name) do$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_name(name) when is_atom(name),$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_name(name)$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_name(name) do$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_name(name) when is_atom(name) do$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp quote_name(name) do$/;"	f
quote_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp quote_name(name) when is_atom(name) do$/;"	f
quote_name	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp quote_name(name) when is_atom(name), do: quote_name(Atom.to_string(name))$/;"	f
quote_name	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp quote_name(name), do: name$/;"	f
quote_name	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp quote_name(nil, name), do: quote_name(name)$/;"	f
quote_name	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp quote_name(prefix, name), do: quote_name(prefix) <> "." <> quote_name(name)$/;"	f
quote_plug	deps/plug/lib/plug/builder.ex	/^  defp quote_plug(plug_type, plug, opts, guards, acc, env, builder_opts) do$/;"	f
quote_plug	deps/plug/lib/plug/builder.ex	/^  defp quote_plug({:module, plug, opts, guards}, :compile, acc, env, builder_opts) do$/;"	f
quote_plug	deps/plug/lib/plug/builder.ex	/^  defp quote_plug({plug_type, plug, opts, guards}, _init_mode, acc, env, builder_opts) do$/;"	f
quote_plug_call	deps/plug/lib/plug/builder.ex	/^  defp quote_plug_call(:function, plug, opts) do$/;"	f
quote_plug_call	deps/plug/lib/plug/builder.ex	/^  defp quote_plug_call(:module, plug, opts) do$/;"	f
quote_qualified_name	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_qualified_name(name, sources, ix) do$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_table(name) do$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_table(name) when is_atom(name),$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_table(nil, name),    do: quote_table(name)$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp quote_table(prefix, name), do: [quote_table(prefix), ?., quote_table(name)]$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_table(name) do$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_table(name) when is_atom(name),$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_table(nil, name),    do: quote_table(name)$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp quote_table(prefix, name), do: [quote_table(prefix), ?., quote_table(name)]$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp quote_table(name) do$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp quote_table(name) when is_atom(name), do: quote_table(Atom.to_string(name))$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp quote_table(nil, name), do: quote_table(name)$/;"	f
quote_table	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp quote_table(prefix, name),$/;"	f
quoted	deps/mime/lib/mime/application.ex	/^  def quoted(custom_types) do$/;"	f
quoted_ascii_to_integer	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp quoted_ascii_to_integer([], _index) do$/;"	f
quoted_ascii_to_integer	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp quoted_ascii_to_integer([var | vars], 1) do$/;"	f
quoted_ascii_to_integer	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp quoted_ascii_to_integer([var | vars], index) do$/;"	f
quoted_constant_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp quoted_constant_traverse(combinator, to_traverse, call) do$/;"	f
quoted_dir!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def quoted_dir!(_kind, dir) when dir in @directions,$/;"	f
quoted_dir!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def quoted_dir!(kind, other) do$/;"	f
quoted_dir!	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  def quoted_dir!(kind, {:^, _, [expr]}),$/;"	f
quoted_field!	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_field!(atom) when is_atom(atom),$/;"	f
quoted_field!	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_field!(other),$/;"	f
quoted_field!	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_field!({:^, _, [expr]}),$/;"	f
quoted_interval!	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_interval!(other),$/;"	f
quoted_interval!	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_interval!({:^, _, [expr]}),$/;"	f
quoted_json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  defp quoted_json_path_element!(binary) when is_binary(binary),$/;"	f
quoted_json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  defp quoted_json_path_element!(integer) when is_integer(integer),$/;"	f
quoted_json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  defp quoted_json_path_element!(other),$/;"	f
quoted_json_path_element!	deps/ecto/lib/ecto/query/builder.ex	/^  defp quoted_json_path_element!({:^, _, [expr]}),$/;"	f
quoted_post_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def quoted_post_traverse(combinator \\\\ empty(), to_post_traverse, {_, _, _} = call)$/;"	f
quoted_pre_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def quoted_pre_traverse(combinator \\\\ empty(), to_pre_traverse, {_, _, _} = call)$/;"	f
quoted_repeat_while	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def quoted_repeat_while(combinator \\\\ empty(), to_repeat, {_, _, _} = while)$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<>>, _acc), do: false$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<?", t::binary>>, acc), do: strip_spaces(t) == "" and acc$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<?\\\\, h, t::binary>>, acc), do: quoted_token(t, <<acc::binary, h>>)$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<h, t::binary>>, acc), do: quoted_token(t, <<acc::binary, h>>)$/;"	f
quoted_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def quoted_traverse(combinator \\\\ empty(), to_traverse, call) do$/;"	f
quoted_traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp quoted_traverse(combinator, to_traverse, pre_or_pos, call) do$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^    def quoted_type({unquote(agg), _, [expr, unquote_splicing(args)]}, vars) do$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type(_, _vars), do: :any$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type(list, vars) when is_list(list) do$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type(literal, _vars) when is_binary(literal),  do: :string$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type(literal, _vars) when is_boolean(literal), do: :boolean$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type(literal, _vars) when is_float(literal),   do: :float$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type(literal, _vars) when is_integer(literal), do: :integer$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:-, _, [number]}, _vars) when is_float(number), do: :float$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:-, _, [number]}, _vars) when is_integer(number), do: :integer$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:<<>>, _, _}, _vars), do: :binary$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:date_add, _, [_, _, __]}, _vars), do: :date$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:datetime_add, _, [_, _, __]}, _vars), do: :naive_datetime$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:field, _, [{var, _, context}, field]}, vars)$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:field, _, [{var, _, context}, {:^, _, [code]}]}, vars)$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:type, _, [_, type]}, _vars), do: type$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({:{}, _, elems}, vars), do: {:tuple, Enum.map(elems, &quoted_type(&1, vars))}$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({left, right}, vars), do: quoted_type({:{}, [], [left, right]}, vars)$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({name, _, args}, _vars) when is_atom(name) and is_list(args) do$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({sigil, _, [_, []]}, _vars) when sigil in ~w(sigil_s sigil_S)a, do: :string$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({sigil, _, [_, []]}, _vars) when sigil in ~w(sigil_w sigil_W)a, do: {:array, :string}$/;"	f
quoted_type	deps/ecto/lib/ecto/query/builder.ex	/^  def quoted_type({{:., _, [{var, _, context}, field]}, _, []}, vars)$/;"	f
r_ceil	deps/crypto_rand/lib/crypto_rand.ex	/^  defp r_ceil(n), do: n |> :math.ceil() |> round()$/;"	f
rainbow_dash_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def rainbow_dash_style, do: HTML.RainbowDashStyle.style()$/;"	f
raise_function_replaced_error	deps/ex_machina/lib/ex_machina.ex	/^      defp raise_function_replaced_error(old_function, new_function) do$/;"	f
raise_if_updating_with_struct!	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp raise_if_updating_with_struct!(%{field: name, owner: owner}, %{__struct__: _} = new) do$/;"	f
raise_if_updating_with_struct!	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp raise_if_updating_with_struct!(_, _) do$/;"	f
raise_infinity	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  defp raise_infinity(type) do$/;"	f
raise_infinity	deps/postgrex/lib/postgrex/extensions/timestamptz.ex	/^  defp raise_infinity(type) do$/;"	f
raise_invalid_assoc	deps/ecto/lib/ecto/changeset.ex	/^  defp raise_invalid_assoc(types, assoc) do$/;"	f
raise_invalid_message	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp raise_invalid_message(topic, event, payload) do$/;"	f
raise_invalid_path	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp raise_invalid_path(path) do$/;"	f
raise_invalid_reference_error	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def raise_invalid_reference_error(ref) when is_binary(ref),$/;"	f
raise_invalid_reference_error	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def raise_invalid_reference_error(ref),$/;"	f
raise_invalid_url	deps/phoenix/lib/phoenix/controller.ex	/^  defp raise_invalid_url(url) do$/;"	f
raise_missing_migrations	deps/ecto_sql/lib/mix/ecto_sql.ex	/^  defp raise_missing_migrations(path, repo) do$/;"	f
raise_no_markdown_processor	deps/ex_doc/lib/ex_doc/markdown.ex	/^  defp raise_no_markdown_processor do$/;"	f
raise_notsup	deps/plug_crypto/lib/plug/crypto/message_encryptor.ex	/^  defp raise_notsup(algo) do$/;"	f
raise_pool_size_error	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def raise_pool_size_error do$/;"	f
raise_route_error	deps/phoenix/lib/phoenix/router/helpers.ex	/^        defp raise_route_error(unquote(helper), suffix, arity, action, params) do$/;"	f
raise_route_error	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def raise_route_error(mod, fun, arity, action, routes, params) do$/;"	f
raise_sql_call_error	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp raise_sql_call_error(%DBConnection.OwnershipError{} = err) do$/;"	f
raise_sql_call_error	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp raise_sql_call_error(err), do: raise err$/;"	f
raise_template_not_found	deps/phoenix/lib/phoenix/template.ex	/^  def raise_template_not_found(view_module, template, assigns) do$/;"	f
raise_unfetched	deps/plug/lib/plug/conn/unfetched.ex	/^  defp raise_unfetched({access, _}, aspect, key) do$/;"	f
raise_with_help	deps/phoenix/lib/mix/tasks/phx.gen.channel.ex	/^  defp raise_with_help do$/;"	f
raise_with_help	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def raise_with_help(msg) do$/;"	f
raise_with_help	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def raise_with_help(msg) do$/;"	f
raise_with_help	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def raise_with_help(msg) do$/;"	f
raised_close	deps/db_connection/lib/db_connection.ex	/^  defp raised_close(conn, query, meter, opts, kind, reason, stack) do$/;"	f
raises if repo is not started or not exist	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "raises if repo is not started or not exist" do$/;"	t
raises if repo is not using sandbox	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "raises if repo is not using sandbox" do$/;"	t
raises on NoSQL migrations	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "raises on NoSQL migrations", %{migration_number: num} do$/;"	t
raises when connection pool is too small	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "raises when connection pool is too small" do$/;"	t
raises when primary key is not unique on struct operation	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "raises when primary key is not unique on struct operation" do$/;"	t
rand	deps/db_connection/lib/db_connection/backoff.ex	/^  defp rand({mod, state}, min, max) do$/;"	f
rand_module	deps/db_connection/lib/db_connection/backoff.ex	/^  defp rand_module() do$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random("", _rand_bytes), do: raise(Enum.EmptyError)$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random(<<elem::binary-size(1)>>, _rand_bytes), do: elem$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random([], _rand_bytes), do: raise(Enum.EmptyError)$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random([elem], _rand_bytes), do: elem$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random(enumerable, rand_bytes) do$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random(list, rand_bytes) when is_list(list),$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random(source, rand_bytes \\\\ &:crypto.strong_rand_bytes\/1)$/;"	f
random	deps/crypto_rand/lib/crypto_rand.ex	/^  def random(string, rand_bytes) when is_binary(string) do$/;"	f
random_bytes	deps/secure_random/lib/secure_random.ex	/^  def random_bytes(n \\\\ @default_length) do$/;"	f
random_file	deps/plug/lib/plug/upload.ex	/^  def random_file(prefix) do$/;"	f
random_file!	deps/plug/lib/plug/upload.ex	/^  def random_file!(prefix) do$/;"	f
random_prefix	deps/makeup/lib/makeup/lexer/groups.ex	/^  def random_prefix(n), do: Enum.map(1..n, fn _ -> Enum.random(?0..?9) end) |> to_string$/;"	f
random_ref	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp random_ref() do$/;"	f
random_seed	deps/db_connection/lib/db_connection/backoff.ex	/^  defp random_seed() do$/;"	f
random_string	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  defp random_string(_), do: Mix.raise "The secret should be at least 32 characters long"$/;"	f
random_string	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  defp random_string(length) when length > 31 do$/;"	f
ranges_to_orddict	deps/jason/lib/codegen.ex	/^  defp ranges_to_orddict(ranges) do$/;"	f
rank	deps/ecto/lib/ecto/query/window_api.ex	/^  def rank(), do: doc! []$/;"	f
ratio	deps/decimal/lib/decimal.ex	/^  defp ratio(coef, exp) when exp < 0, do: {coef, pow10(-exp)}$/;"	f
ratio	deps/decimal/lib/decimal.ex	/^  defp ratio(coef, exp) when exp >= 0, do: {coef * pow10(exp), 1}$/;"	f
raw_config	deps/phoenix/lib/phoenix/template.ex	/^  defp raw_config(name) do$/;"	f
rdn	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  defp rdn(common_name) do$/;"	f
read_app_info	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp read_app_info(app_file, app) do$/;"	f
read_backup	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp read_backup(_path), do: :error$/;"	f
read_backup	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp read_backup(path) when is_list(path) do$/;"	f
read_body	deps/plug/lib/plug/conn.ex	/^  def read_body(%Conn{adapter: {adapter, state}} = conn, opts \\\\ []) do$/;"	f
read_body	deps/plug/lib/plug/parsers.ex	/^        def read_body(conn, opts) do$/;"	f
read_config	deps/ex_doc/lib/ex_doc/cli.ex	/^  defp read_config(path) do$/;"	f
read_files	deps/credo/lib/credo/sources.ex	/^  defp read_files(filenames) do$/;"	f
read_from_cwd	deps/credo/lib/credo/check/warning/unused_file_operation.ex	/^      def read_from_cwd(filename) do$/;"	f
read_from_cwd	deps/credo/lib/credo/check/warning/unused_path_operation.ex	/^      def read_from_cwd(filename) do$/;"	f
read_from_file_path	deps/credo/lib/credo/config_file.ex	/^  def read_from_file_path(exec, dir, config_file, config_name \\\\ nil, safe \\\\ false) do$/;"	f
read_from_stdin	deps/credo/lib/credo/sources.ex	/^  defp read_from_stdin(source \\\\ "") do$/;"	f
read_from_stdin!	deps/credo/lib/credo/sources.ex	/^  defp read_from_stdin! do$/;"	f
read_multipart_from_buffer_or_adapter	deps/plug/lib/plug/conn.ex	/^  defp read_multipart_from_buffer_or_adapter("", adapter, state, opts) do$/;"	f
read_multipart_from_buffer_or_adapter	deps/plug/lib/plug/conn.ex	/^  defp read_multipart_from_buffer_or_adapter(buffer, _adapter, state, _opts) do$/;"	f
read_or_default	deps/credo/lib/credo/config_file.ex	/^  def read_or_default(exec, dir, config_name \\\\ nil, safe \\\\ false) do$/;"	f
read_part_body	deps/plug/lib/plug/conn.ex	/^  def read_part_body(%Conn{adapter: {adapter, state}} = conn, opts) do$/;"	f
read_part_body	deps/plug/lib/plug/conn.ex	/^  defp read_part_body(%Conn{} = conn, data, acc, length, boundary, adapter, state, _opts)$/;"	f
read_part_body	deps/plug/lib/plug/conn.ex	/^  defp read_part_body(%Conn{} = conn, data, acc, length, boundary, adapter, state, opts) do$/;"	f
read_part_headers	deps/plug/lib/plug/conn.ex	/^  def read_part_headers(%Conn{adapter: {adapter, state}} = conn, opts \\\\ []) do$/;"	f
read_part_headers	deps/plug/lib/plug/conn.ex	/^  defp read_part_headers(conn, data, boundary, adapter, state, opts) do$/;"	f
read_req_body	deps/plug/lib/plug/adapters/test/conn.ex	/^  def read_req_body(%{req_body: body} = state, opts \\\\ []) do$/;"	f
read_table	deps/earmark/lib/earmark/parser.ex	/^  defp read_table( rest, col_count, %Block.Table{rows: rows}) do$/;"	f
read_table	deps/earmark/lib/earmark/parser.ex	/^  defp read_table([ %Line.TableLine{columns: cols} | rest ],$/;"	f
read_table	deps/earmark/lib/earmark/parser.ex	/^  defp read_table(lines, col_count, into_table)$/;"	f
readme	deps/earmark/mix.exs	/^  defp readme(args) do$/;"	f
reason_atom	deps/plug/lib/plug/conn/status.ex	/^    def reason_atom(unquote(code)), do: unquote(atom)$/;"	f
reason_atom	deps/plug/lib/plug/conn/status.ex	/^  def reason_atom(code) do$/;"	f
reason_atom	deps/plug/lib/plug/conn/status.ex	/^  def reason_atom(code)$/;"	f
reason_phrase	deps/plug/lib/plug/conn/status.ex	/^    def reason_phrase(unquote(code)), do: unquote(phrase)$/;"	f
reason_phrase	deps/plug/lib/plug/conn/status.ex	/^  def reason_phrase(code) do$/;"	f
reason_phrase	deps/plug/lib/plug/conn/status.ex	/^  def reason_phrase(integer)$/;"	f
rebind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rebind(%{postgres: :transaction} = s, %{mode: :savepoint} = status, query, params, cursor) do$/;"	f
rebind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rebind(%{postgres: postgres} = s, %{mode: :savepoint}, _, _, _)$/;"	f
rebind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rebind(s, %{mode: :transaction} = status, query, params, cursor) do$/;"	f
rebind_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rebind_execute(%{postgres: :transaction} = s, %{mode: :savepoint} = status, query, params) do$/;"	f
rebind_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rebind_execute(%{postgres: postgres} = s, %{mode: :savepoint}, _, _)$/;"	f
rebind_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rebind_execute(s, %{mode: :transaction} = status, query, params) do$/;"	f
receive_informs	deps/plug/lib/plug/test.ex	/^  defp receive_informs(ref, informs) do$/;"	f
receive_loop	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  defp receive_loop() do$/;"	f
receive_pushes	deps/plug/lib/plug/test.ex	/^  defp receive_pushes(ref, pushes) do$/;"	f
receive_resp	deps/plug/lib/plug/test.ex	/^  defp receive_resp(ref) do$/;"	f
receive_response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp receive_response({:error, {_kind, exception, stack}}, expected_status) do$/;"	f
receive_response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp receive_response({:ok, conn}, expected_status) do$/;"	f
reconnect_or_stop	deps/postgrex/lib/postgrex/notifications.ex	/^  defp reconnect_or_stop(error, _reason, _protocol, %{auto_reconnect: true} = s)$/;"	f
reconnect_or_stop	deps/postgrex/lib/postgrex/notifications.ex	/^  defp reconnect_or_stop(error, reason, protocol, %{auto_reconnect: false} = s)$/;"	f
record	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  def record(module, entry_point, name, defs, inline, opts) do$/;"	f
record_exception	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  defp record_exception(ast, acc) do$/;"	f
record_not_matching	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  defp record_not_matching(expected, {_, meta, _} = ast, acc) do$/;"	f
record_not_matching	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  defp record_not_matching(expected, actual, capture_name, meta, acc) do$/;"	f
record_not_matching	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp record_not_matching(expected, prev, current, next, acc) do$/;"	f
record_not_matching	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp record_not_matching(expected, {name, meta, _}, acc) do$/;"	f
record_position	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  defp record_position(kind, _capture_name, _meta, acc) do$/;"	f
record_spaces	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp record_spaces(prev, current, next, acc) do$/;"	f
record_unused_variable	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp record_unused_variable(_, acc), do: Map.update(acc, :meaningful, 1, &(&1 + 1))$/;"	f
record_unused_variable	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp record_unused_variable({:_, _, _}, acc), do: Map.update(acc, :anonymous, 1, &(&1 + 1))$/;"	f
recur_through	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp recur_through(field, {structs, owner}) do$/;"	f
recurse_path	deps/credo/lib/credo/sources.ex	/^  defp recurse_path(path) do$/;"	f
recursive_ctes	deps/ecto/lib/ecto/query.ex	/^  def recursive_ctes(%__MODULE__{with_ctes: with_expr} = query, value) when is_boolean(value) do$/;"	f
recursive_ctes	deps/ecto/lib/ecto/query.ex	/^  def recursive_ctes(queryable, value) do$/;"	f
recursively_strip	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp recursively_strip(record = %{__struct__: _}) do$/;"	f
recursively_strip	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp recursively_strip(record), do: record$/;"	f
recv	deps/connection/lib/connection.ex	/^        def recv(conn, bytes, timeout \\\\\\\\ 3000) do$/;"	f
recv_bind	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_bind(s, status, buffer) do$/;"	f
recv_buffer	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_buffer(%{sock: {:gen_tcp, sock}} = s) do$/;"	f
recv_buffer	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_buffer(%{sock: {:ssl, sock}} = s) do$/;"	f
recv_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_close(s, status, buffer) do$/;"	f
recv_copy_in	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_copy_in(s, status, query, buffer) do$/;"	f
recv_copy_in_done	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_copy_in_done(s, status, query, buffer) do$/;"	f
recv_copy_out	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_copy_out(s, status, query, acc \\\\ [], buffer) do$/;"	f
recv_copy_out	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_copy_out(s, status, query, max_rows, [], buffer) do$/;"	f
recv_copy_out	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_copy_out(s, status, query, max_rows, acc, max_rows, buffer) do$/;"	f
recv_copy_out	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_copy_out(s, status, query, max_rows, acc, nrows, buffer) do$/;"	f
recv_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_describe(s, status, param_oids \\\\ [], buffer) do$/;"	f
recv_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_execute(s, status, query, cursor, max_rows, rows, buffer) do$/;"	f
recv_execute	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_execute(s, status, query, rows \\\\ [], buffer) do$/;"	f
recv_listener	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_listener(s, status, buffer) do$/;"	f
recv_parse	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_parse(s, status, buffer) do$/;"	f
recv_parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_parse_describe(s, status, %Query{ref: nil} = query, buffer) do$/;"	f
recv_parse_describe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_parse_describe(s, status, query, buffer) do$/;"	f
recv_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_ready(%{transactions: :naive} = s, status, buffer) do$/;"	f
recv_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_ready(%{transactions: :strict, postgres: postgres} = s, status, buffer) do$/;"	f
recv_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_ready(%{transactions: :strict, postgres: {postgres, _}} = s, status, buffer) do$/;"	f
recv_strict_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_strict_ready(s, status, expected, buffer) do$/;"	f
recv_transaction	deps/postgrex/lib/postgrex/protocol.ex	/^  defp recv_transaction(s, status, tags \\\\ [], buffer) do$/;"	f
recycle	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def recycle(conn, headers \\\\ ~w(accept accept-language authorization)) do$/;"	f
recycle_cookies	deps/plug/lib/plug/test.ex	/^  def recycle_cookies(new_conn, old_conn) do$/;"	f
redescribe	deps/postgrex/lib/postgrex/protocol.ex	/^  defp redescribe(s, query, result_oids, columns, buffer) do$/;"	f
redirect	deps/phoenix/lib/phoenix/controller.ex	/^  def redirect(conn, opts) when is_list(opts) do$/;"	f
redirect_to_https	deps/plug/lib/plug/ssl.ex	/^  defp redirect_to_https(%{host: host} = conn, custom_host, log_level) do$/;"	f
redirected_params	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def redirected_params(%Plug.Conn{} = conn) do$/;"	f
redirected_to	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def redirected_to(%Conn{state: :unset}, _status) do$/;"	f
redirected_to	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def redirected_to(%Conn{status: status} = conn, status) do$/;"	f
redirected_to	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def redirected_to(conn, status \\\\ 302)$/;"	f
redirected_to	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def redirected_to(conn, status) do$/;"	f
redirected_to	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def redirected_to(conn, status) when is_atom(status) do$/;"	f
redirects to show when data is valid	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "redirects to show when data is valid", %{conn: conn} do$/;"	t
redirects to show when data is valid	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "redirects to show when data is valid", %{conn: conn} do$/;"	t
redirects when data is valid	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "redirects when data is valid", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
redirects when data is valid	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "redirects when data is valid", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
reduce	deps/db_connection/lib/db_connection.ex	/^  def reduce(%DBConnection.PrepareStream{} = stream, acc, fun) do$/;"	f
reduce	deps/db_connection/lib/db_connection.ex	/^  def reduce(%DBConnection.Stream{} = stream, acc, fun) do$/;"	f
reduce	deps/db_connection/lib/db_connection.ex	/^  def reduce(stream, acc, fun), do: DBConnection.reduce(stream, acc, fun)$/;"	f
reduce	deps/decimal/lib/decimal.ex	/^  def reduce(%Decimal{coef: :inf} = num) do$/;"	f
reduce	deps/decimal/lib/decimal.ex	/^  def reduce(%Decimal{coef: :qNaN} = num), do: num$/;"	f
reduce	deps/decimal/lib/decimal.ex	/^  def reduce(%Decimal{coef: :sNaN} = num), do: error(:invalid_operation, "operation on NaN", num)$/;"	f
reduce	deps/decimal/lib/decimal.ex	/^  def reduce(%Decimal{sign: sign, coef: coef, exp: exp}) do$/;"	f
reduce	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def reduce(adapter_meta, statement, params, opts, acc, fun) do$/;"	f
reduce	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  def reduce(stream, acc, fun) do$/;"	f
reduce	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def reduce(combinator \\\\ empty(), to_reduce, call)$/;"	f
reduce	deps/plug/lib/plug/parsers.ex	/^  defp reduce($/;"	f
reduce	deps/plug/lib/plug/parsers.ex	/^  defp reduce(conn, [], type, subtype, _params, pass, query_string_length, validate_utf8) do$/;"	f
reduce	deps/postgrex/lib/postgrex/stream.ex	/^  def reduce(%Postgrex.Stream{query: %Query{} = query} = stream, acc, fun) do$/;"	f
reduce	deps/postgrex/lib/postgrex/stream.ex	/^  def reduce(%Postgrex.Stream{query: statement} = stream, acc, fun) do$/;"	f
reduce_converters	deps/credo/lib/credo/config_builder.ex	/^  defp reduce_converters({_switch_name, _plugin_mod, false}, exec) do$/;"	f
reduce_converters	deps/credo/lib/credo/config_builder.ex	/^  defp reduce_converters({switch_name, plugin_mod, converter_fun}, exec)$/;"	f
reduce_converters	deps/credo/lib/credo/config_builder.ex	/^  defp reduce_converters({switch_name, plugin_mod, param_name}, exec) when is_atom(param_name) do$/;"	f
reduce_converters	deps/credo/lib/credo/config_builder.ex	/^  defp reduce_converters({switch_name, plugin_mod, true}, exec) do$/;"	f
reduce_delete_changesets	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp reduce_delete_changesets([], _fun, _acc, _valid?, true), do: :ignore$/;"	f
reduce_delete_changesets	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp reduce_delete_changesets([], _fun, acc, valid?, false), do: {:ok, acc, valid?}$/;"	f
reduce_delete_changesets	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp reduce_delete_changesets([struct | rest], fun, acc, valid?, _skip?) do$/;"	f
reduce_to_col_end	deps/credo/lib/credo/code/token.ex	/^    defp reduce_to_col_end(value, {current_line_no, current_col_start, _}) do$/;"	f
reduce_umbrella_children	deps/dialyxir/lib/dialyxir/project.ex	/^  defp reduce_umbrella_children(acc, f) do$/;"	f
reduce_unused_variables	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp reduce_unused_variables(ast, callback, acc) do$/;"	f
reestablish_listener	deps/postgrex/lib/postgrex/notifications.ex	/^  defp reestablish_listener({ref, {channel, pid}}, {:ok, s, timeout}) do$/;"	f
ref	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  def ref(%Replica{name: name, vsn: vsn}), do: {name, vsn}$/;"	f
ref_to_string	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp ref_to_string([:root | path]), do: ["#" | path] |> Enum.join("\/")$/;"	f
ref_to_string	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp ref_to_string([url | path]), do: [url <> "#" | path] |> Enum.join("\/")$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_column_type(:bigserial, _opts), do: "BIGINT UNSIGNED"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_column_type(:serial, _opts), do: "BIGINT UNSIGNED"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_column_type(type, opts), do: column_type(type, opts)$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_column_type(:bigserial, _opts), do: "bigint"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_column_type(:serial, _opts), do: "integer"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_column_type(type, opts), do: column_type(type, opts)$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_column_type(:bigserial, _opts), do: "BIGINT"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_column_type(:id, _opts), do: "BIGINT"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_column_type(:serial, _opts), do: "INT"$/;"	f
reference_column_type	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_column_type(type, opts), do: column_type(type, opts)$/;"	f
reference_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_expr(%Reference{} = ref, table, name),$/;"	f
reference_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_expr(%Reference{} = ref, table, name),$/;"	f
reference_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_expr(%Reference{} = ref, table, name) do$/;"	f
reference_link	deps/earmark/lib/earmark/ast/inline.ex	/^  defp reference_link(context, match, alt_text, id, lnb) do$/;"	f
reference_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_name(%Reference{name: name}, _table, _column),$/;"	f
reference_name	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_name(%Reference{name: nil}, table, column),$/;"	f
reference_name	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_name(%Reference{name: name}, _table, _column),$/;"	f
reference_name	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_name(%Reference{name: nil}, table, column),$/;"	f
reference_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_name(%Reference{name: name}, _table, _column), do: quote_name(name)$/;"	f
reference_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_name(%Reference{name: nil}, table, column),$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_delete(:delete_all), do: " ON DELETE CASCADE"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_delete(:nilify_all), do: " ON DELETE SET NULL"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_delete(:restrict), do: " ON DELETE RESTRICT"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_delete(_), do: []$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_delete(:delete_all), do: " ON DELETE CASCADE"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_delete(:nilify_all), do: " ON DELETE SET NULL"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_delete(:restrict), do: " ON DELETE RESTRICT"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_delete(_), do: []$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_delete(:delete_all), do: " ON DELETE CASCADE"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_delete(:nilify_all), do: " ON DELETE SET NULL"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_delete(:nothing), do: " ON DELETE NO ACTION"$/;"	f
reference_on_delete	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_delete(_), do: []$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_update(:nilify_all), do: " ON UPDATE SET NULL"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_update(:restrict), do: " ON UPDATE RESTRICT"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_update(:update_all), do: " ON UPDATE CASCADE"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp reference_on_update(_), do: []$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_update(:nilify_all), do: " ON UPDATE SET NULL"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_update(:restrict), do: " ON UPDATE RESTRICT"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_update(:update_all), do: " ON UPDATE CASCADE"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp reference_on_update(_), do: []$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_update(:nilify_all), do: " ON UPDATE SET NULL"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_update(:nothing), do: " ON UPDATE NO ACTION"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_update(:update_all), do: " ON UPDATE CASCADE"$/;"	f
reference_on_update	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp reference_on_update(_), do: []$/;"	f
references	deps/ecto_sql/lib/ecto/migration.ex	/^  def references(table, opts \\\\ [])$/;"	f
references	deps/ecto_sql/lib/ecto/migration.ex	/^  def references(table, opts) when is_atom(table) do$/;"	f
references	deps/ecto_sql/lib/ecto/migration.ex	/^  def references(table, opts) when is_binary(table) and is_list(opts) do$/;"	f
refresh_token	deps/ex_doc/lib/mix/tasks/docs.ex	/^        def refresh_token(params \\\\ [])$/;"	f
refresh_token	lib/boruta/oauth/json/schema.ex	/^  def refresh_token do$/;"	f
refuse	deps/phoenix/lib/phoenix/controller.ex	/^  defp refuse(_conn, given, accepted) do$/;"	f
refute_broadcast	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro refute_broadcast(event, payload, timeout \\\\ Application.fetch_env!(:ex_unit, :refute_receive_timeout)) do$/;"	a
refute_issue?	deps/credo/lib/credo/check/readability/max_line_length.ex	/^  defp refute_issue?(line_no, definitions, ignore_definitions, specs, ignore_specs) do$/;"	f
refute_push	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro refute_push(event, payload, timeout \\\\ Application.fetch_env!(:ex_unit, :refute_receive_timeout)) do$/;"	a
refute_reply	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro refute_reply(ref, status, payload \\\\ Macro.escape(%{}), timeout \\\\ Application.fetch_env!(:ex_unit, :refute_receive_timeout)) do$/;"	a
regex_value?	deps/credo/lib/credo/check/config_comment.ex	/^  defp regex_value?(param_string), do: param_string =~ ~r'^\/.+\/$'$/;"	f
register_before_send	deps/plug/lib/plug/conn.ex	/^  def register_before_send(%Conn{before_send: before_send} = conn, callback)$/;"	f
register_before_send	deps/plug/lib/plug/conn.ex	/^  def register_before_send(%Conn{state: state}, _callback)$/;"	f
register_before_send	deps/plug/lib/plug/conn.ex	/^  def register_before_send(conn, callback)$/;"	f
register_cli_switch	deps/credo/lib/credo/plugin.ex	/^  def register_cli_switch($/;"	f
register_command	deps/credo/lib/credo/plugin.ex	/^  def register_command(%Execution{initializing_plugin: plugin_mod} = exec, name, command_mod) do$/;"	f
register_default_config	deps/credo/lib/credo/plugin.ex	/^  def register_default_config($/;"	f
register_forwards	deps/phoenix/lib/phoenix/router/scope.ex	/^  def register_forwards(_, _, plug) do$/;"	f
register_forwards	deps/phoenix/lib/phoenix/router/scope.ex	/^  def register_forwards(module, path, plug) when is_atom(plug) do$/;"	f
register_lexer	deps/makeup/lib/makeup/registry.ex	/^  def register_lexer(lexer, opts) do$/;"	f
register_lexer_with_extension	deps/makeup/lib/makeup/registry.ex	/^  def register_lexer_with_extension(name, {lexer, options}) when is_binary(name) do$/;"	f
register_lexer_with_name	deps/makeup/lib/makeup/registry.ex	/^  def register_lexer_with_name(name, {lexer, options}) when is_binary(name) do$/;"	f
register_telemetry	deps/ecto_sql/integration_test/sql/transaction.exs	/^  defp register_telemetry() do$/;"	f
registration_changeset	deps/ecto/lib/ecto.ex	/^      def registration_changeset(user, params) do$/;"	f
regular_file_info	deps/plug/lib/plug/static.ex	/^  defp regular_file_info(path) do$/;"	f
related_from_query	deps/ecto/lib/ecto/association.ex	/^  def related_from_query(atom, _name) when is_atom(atom), do: atom$/;"	f
related_from_query	deps/ecto/lib/ecto/association.ex	/^  def related_from_query(queryable, name) do$/;"	f
related_from_query	deps/ecto/lib/ecto/association.ex	/^  def related_from_query({source, schema}, _name) when is_binary(source) and is_atom(schema), do: schema$/;"	f
related_key_pos	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp related_key_pos(_query, pos) when pos >= 0, do: pos$/;"	f
related_key_pos	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp related_key_pos(query, pos), do: Ecto.Query.Builder.count_binds(query) + pos$/;"	f
related_key_to_field	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp related_key_to_field(query, {pos, key}) do$/;"	f
relation!	deps/ecto/lib/ecto/changeset.ex	/^  defp relation!(_op, type, _name, {type, relation}),$/;"	f
relation!	deps/ecto/lib/ecto/changeset.ex	/^  defp relation!(op, :assoc, name, nil),$/;"	f
relation!	deps/ecto/lib/ecto/changeset.ex	/^  defp relation!(op, type, name, nil),$/;"	f
relation!	deps/ecto/lib/ecto/changeset.ex	/^  defp relation!(op, type, name, schema_type),$/;"	f
relation!	deps/ecto/lib/ecto/changeset.ex	/^  defp relation!(op, type, name, {other, _}) when other in @relations,$/;"	f
relative_asset	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp relative_asset([], output, pattern),$/;"	f
relative_asset	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp relative_asset([h | _], output, _pattern), do: Path.relative_to(h, output)$/;"	f
relative_digested_path	deps/phoenix/lib/phoenix/digester.ex	/^  defp relative_digested_path(digested_path), do: "\/" <> digested_path$/;"	f
relative_digested_path	deps/phoenix/lib/phoenix/digester.ex	/^  defp relative_digested_path(digested_path, false), do: relative_digested_path(digested_path)$/;"	f
relative_digested_path	deps/phoenix/lib/phoenix/digester.ex	/^  defp relative_digested_path(digested_path, true),$/;"	f
relative_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp relative_path(fragment), do: relative_ref_path(fragment)$/;"	f
relative_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp relative_path(nil), do: []$/;"	f
relative_ref_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp relative_ref_path(ref) do$/;"	f
relevant_config_files	deps/credo/lib/credo/config_file.ex	/^  defp relevant_config_files(dir) do$/;"	f
relevant_directories	deps/credo/lib/credo/config_file.ex	/^  def relevant_directories(dir) do$/;"	f
reload	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload(%{types: types} = s, status, oids, acc, buffer) do$/;"	f
reload	lib/boruta/repo.ex	/^  def reload(%module{id: id}) do$/;"	f
reload!	deps/phoenix/lib/phoenix/code_reloader.ex	/^  defdelegate reload!(endpoint), to: Phoenix.CodeReloader.Server$/;"	d
reload!	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def reload!(endpoint) do$/;"	f
reload_closed	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_closed(s, status, query, oids, buffer) do$/;"	f
reload_complete	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_complete(s, status, {type_infos, new, missing, prev}, buffer) do$/;"	f
reload_describe_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_describe_result(%{types: types} = s, param_oids, result_oids, buffer) do$/;"	f
reload_describe_result	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_describe_result(s, param_oids, nil, buffer) do$/;"	f
reload_fetch	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_fetch(%{types: types} = s, status, query, oids, buffer) do$/;"	f
reload_flushed	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_flushed(s, %{mode: :savepoint} = status, query, oids, buffer) do$/;"	f
reload_flushed	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_flushed(s, %{mode: :transaction} = status, query, oids, buffer) do$/;"	f
reload_init	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_init(%{types: types} = s, status, oids, exit_ref, buffer) do$/;"	f
reload_prepare	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_prepare(s, %{prepare: prepare} = status, query) do$/;"	f
reload_query	deps/postgrex/lib/postgrex/types.ex	/^  def reload_query(version, oids, {_, table}) do$/;"	f
reload_ready	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_ready(s, status, query, oids, buffer) do$/;"	f
reload_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_recv(%{types: types} = s, status, acc, buffer) do$/;"	f
reload_row	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_row({type_infos, oids, missing, current}, values, types) do$/;"	f
reload_send	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_send(s, status, statement, acc, buffer) do$/;"	f
reload_spawn	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_spawn(s, status, query, oids, buffer) do$/;"	f
reload_transaction	deps/postgrex/lib/postgrex/protocol.ex	/^  defp reload_transaction(s, status, query, oids, buffer) do$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{coef: 0}, %Decimal{coef: 0}),$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{coef: :inf}, %Decimal{coef: :inf}),$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{coef: :qNaN} = num1, %Decimal{}), do: num1$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{coef: :sNaN} = num1, %Decimal{}),$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{sign: sign1, coef: :inf}, %Decimal{}), do: %Decimal{sign: sign1, coef: 0}$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{sign: sign1}, %Decimal{coef: 0}),$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{sign: sign1}, %Decimal{coef: :inf} = num2) do$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{} = num1, %Decimal{} = num2) do$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{}, %Decimal{coef: :qNaN} = num2), do: num2$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(%Decimal{}, %Decimal{coef: :sNaN} = num2),$/;"	f
rem	deps/decimal/lib/decimal.ex	/^  def rem(num1, num2) do$/;"	f
remaining_line_after	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  defp remaining_line_after(issue_meta, line_no, text) do$/;"	f
remote_schema_resolver	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp remote_schema_resolver do$/;"	f
remote_url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp remote_url(kind, module, name, arity, config) do$/;"	f
remove	deps/ecto_sql/lib/ecto/migration.ex	/^  def remove(column) when is_atom(column) do$/;"	f
remove	deps/ecto_sql/lib/ecto/migration.ex	/^  def remove(column, type, opts \\\\ []) when is_atom(column) do$/;"	f
remove	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp remove(%State{pids: pids, values: values} = state, pid, topic, key) do$/;"	f
remove column	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "remove column", %{migration_number: num} do$/;"	t
remove column when exists	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "remove column when exists", %{migration_number: num} do$/;"	t
remove_colors	deps/credo/lib/credo/cli/output/shell.ex	/^  defp remove_colors(value) do$/;"	f
remove_delta_tag	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp remove_delta_tag(%{mode: :delta, values: values, clouds: clouds} = delta, tag) do$/;"	f
remove_down_replicas	deps/phoenix_pubsub/lib/phoenix/tracker/delta_generation.ex	/^  def remove_down_replicas(generations, replica_ref) do$/;"	f
remove_down_replicas	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def remove_down_replicas(%State{mode: :delta, range: range} = delta, replica) do$/;"	f
remove_down_replicas	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def remove_down_replicas(%State{mode: :normal, context: ctx, values: values, pids: pids} = state, replica) do$/;"	f
remove_files	deps/phoenix/lib/phoenix/digester.ex	/^  defp remove_files(files, output_path) do$/;"	f
remove_files_from_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp remove_files_from_manifest(manifest, files, output_path) do$/;"	f
remove_first_macro_arg	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp remove_first_macro_arg({:"::", info, [{name, info2, [_term_arg | rest_args]}, return]}) do$/;"	f
remove_heredocs_and_convert_to_ast	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp remove_heredocs_and_convert_to_ast(source_file) do$/;"	f
remove_if_exists	deps/ecto_sql/lib/ecto/migration.ex	/^  def remove_if_exists(column, type) when is_atom(column) do$/;"	f
remove_initial_newline	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer.ex	/^  defp remove_initial_newline([{ttype, meta, text} | tokens]) do$/;"	f
remove_line_ending	deps/earmark/lib/earmark/helpers.ex	/^  def remove_line_ending(line) do$/;"	f
remove_line_no_and_column	deps/credo/lib/credo/cli/filename.ex	/^  def remove_line_no_and_column(filename) do$/;"	f
remove_line_no_and_column	deps/credo/lib/credo/cli/filename.ex	/^  defp remove_line_no_and_column(parts, false) do$/;"	f
remove_line_no_and_column	deps/credo/lib/credo/cli/filename.ex	/^  defp remove_line_no_and_column(parts, true) do$/;"	f
remove_magic_item!	deps/credo/lib/credo/check/warning/unused_tuple_operation.ex	/^      def remove_magic_item!(tuple) do$/;"	f
remove_metadata	deps/credo/lib/credo/code.ex	/^  def remove_metadata(ast) do$/;"	f
remove_missing_checks	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp remove_missing_checks(%Execution{checks: checks} = exec) do$/;"	f
remove_prefix	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp remove_prefix("c:" <> rest), do: rest$/;"	f
remove_prefix	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp remove_prefix("t:" <> rest), do: rest$/;"	f
remove_prefix	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp remove_prefix(rest), do: rest$/;"	f
remove_trailing_blank_lines	deps/earmark/lib/earmark/parser.ex	/^  defp remove_trailing_blank_lines(lines) do$/;"	f
remove_trailing_closing_parens	deps/earmark/lib/earmark/helpers/pure_link_helpers.ex	/^  defp remove_trailing_closing_parens(leading_spaces_count, link_text) do$/;"	f
rename	deps/ecto_sql/lib/ecto/migration.ex	/^  def rename(%Table{} = table, current_column, to: new_column) when is_atom(current_column) and is_atom(new_column) do$/;"	f
rename	deps/ecto_sql/lib/ecto/migration.ex	/^  def rename(%Table{} = table_current, to: %Table{} = table_new) do$/;"	f
rename column	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "rename column", %{migration_number: num} do$/;"	t
rename table	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "rename table", %{migration_number: num} do$/;"	t
render	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/changeset_view.ex	/^  def render("error.json", %{changeset: changeset}) do$/;"	f
render	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/view.ex	/^  def render("<%= schema.singular %>.json", %{<%= schema.singular %>: <%= schema.singular %>}) do$/;"	f
render	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/view.ex	/^  def render("index.json", %{<%= schema.plural %>: <%= schema.plural %>}) do$/;"	f
render	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/view.ex	/^  def render("show.json", %{<%= schema.singular %>: <%= schema.singular %>}) do$/;"	f
render	deps/earmark/lib/earmark/ast_renderer.ex	/^  def render(blocks, context = %Context{options: %Options{}}, loose? \\\\ true) do$/;"	f
render	deps/phoenix/lib/phoenix/controller.ex	/^  def render(conn, assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/controller.ex	/^  def render(conn, template) when is_binary(template) or is_atom(template) do$/;"	f
render	deps/phoenix/lib/phoenix/controller.ex	/^  def render(conn, template, assigns)$/;"	f
render	deps/phoenix/lib/phoenix/controller.ex	/^  def render(conn, template_or_assigns \\\\ [])$/;"	f
render	deps/phoenix/lib/phoenix/controller.ex	/^  def render(conn, view, template)$/;"	f
render	deps/phoenix/lib/phoenix/controller.ex	/^  def render(conn, view, template, assigns)$/;"	f
render	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp render(conn, status, kind, reason, stack, opts) do$/;"	f
render	deps/phoenix/lib/phoenix/template.ex	/^        def render(template, assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^        def render("show.json", %{user: user}) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render("scripts.html", _assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render("scripts.index.html", _assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render("scripts.show.html", _assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render(module, template) when is_atom(module) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render(template, _assigns) when not is_binary(template) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render(template, assigns \\\\ %{})$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render(template, assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^      def render(template, assigns) when not is_map(assigns) do$/;"	f
render	deps/phoenix/lib/phoenix/view.ex	/^  def render(module, template, assigns) do$/;"	f
render	deps/phoenix/priv/templates/phx.gen.json/changeset_view.ex	/^  def render("error.json", %{changeset: changeset}) do$/;"	f
render	deps/phoenix/priv/templates/phx.gen.json/view.ex	/^  def render("<%= schema.singular %>.json", %{<%= schema.singular %>: <%= schema.singular %>}) do$/;"	f
render	deps/phoenix/priv/templates/phx.gen.json/view.ex	/^  def render("index.json", %{<%= schema.plural %>: <%= schema.plural %>}) do$/;"	f
render	deps/phoenix/priv/templates/phx.gen.json/view.ex	/^  def render("show.json", %{<%= schema.singular %>: <%= schema.singular %>}) do$/;"	f
render	deps/plug/lib/plug/debugger.ex	/^  def render(conn, status, kind, reason, stack, opts) do$/;"	f
render_all	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def render_all(project_nodes, ext, config, opts) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block($/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.BlockQuote{blocks: blocks, attrs: attrs}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.FnList{blocks: footnotes}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.HtmlComment{lines: lines}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.HtmlOneline{html: html}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Html{html: html}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Ial{verbatim: verbatim}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.IdDef{}, context, _loose?), do: context$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.ListItem{blocks: blocks, attrs: attrs, loose?: loose?}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Para{lnb: lnb, lines: lines, attrs: attrs}, context, loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Ruler{type: "*", attrs: attrs}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Ruler{type: "-", attrs: attrs}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Ruler{type: "_", attrs: attrs}, context, _loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(%Block.Text{line: line, lnb: lnb}, context, loose?) do$/;"	f
render_block	deps/earmark/lib/earmark/ast_renderer.ex	/^  defp render_block(block, context, loose?)$/;"	f
render_code	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def render_code(%Block.Code{lines: lines}) do$/;"	f
render_code	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  defp render_code(lang, lexer, lexer_opts, code, opts) do$/;"	f
render_doc	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp render_doc(%{doc: doc} = node, autolink_opts, opts) do$/;"	f
render_doc	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp render_doc(%{doc: nil} = node, _autolink_opts, _opts),$/;"	f
render_errors	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp render_errors(module) do$/;"	f
render_existing	deps/phoenix/lib/phoenix/view.ex	/^  def render_existing(module, template, assigns \\\\ []) do$/;"	f
render_footnote_link	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def render_footnote_link(ref, backref, number) do$/;"	f
render_footnote_list	deps/earmark/lib/earmark/ast/renderer/footnote_list_renderer.ex	/^  def render_footnote_list(items) do$/;"	f
render_header	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  def render_header(header, lnb, aligns, context) do$/;"	f
render_html_block	deps/earmark/lib/earmark/ast/renderer/html_renderer.ex	/^  def render_html_block(lines, context) do$/;"	f
render_html_comment_line	deps/earmark/lib/earmark/ast/renderer/html_renderer.ex	/^  def render_html_comment_line(line) do$/;"	f
render_html_oneline	deps/earmark/lib/earmark/ast/renderer/html_renderer.ex	/^  def render_html_oneline([line|_], context) do$/;"	f
render_image	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def render_image(text, href, title) do$/;"	f
render_layout	deps/phoenix/lib/phoenix/view.ex	/^  defp render_layout(layout, _assigns) do$/;"	f
render_layout	deps/phoenix/lib/phoenix/view.ex	/^  defp render_layout({layout_mod, layout_tpl}, assigns)$/;"	f
render_link	deps/earmark/lib/earmark/helpers/ast_helpers.ex	/^  def render_link(url, text) do$/;"	f
render_many	deps/phoenix/lib/phoenix/view.ex	/^  def render_many(collection, view, template, assigns \\\\ %{}) do$/;"	f
render_one	deps/phoenix/lib/phoenix/view.ex	/^  def render_one(nil, _view, _template, _assigns), do: nil$/;"	f
render_one	deps/phoenix/lib/phoenix/view.ex	/^  def render_one(resource, view, template, assigns \\\\ %{})$/;"	f
render_one	deps/phoenix/lib/phoenix/view.ex	/^  def render_one(resource, view, template, assigns) do$/;"	f
render_rows	deps/earmark/lib/earmark/ast/renderer/table_renderer.ex	/^  def render_rows(rows, lnb, aligns, context) do$/;"	f
render_template	deps/phoenix/lib/phoenix/template.ex	/^      defp render_template(template, %{__phx_render_existing__: {__MODULE__, template}}) do$/;"	f
render_template	deps/phoenix/lib/phoenix/template.ex	/^      defp render_template(template, %{__phx_template_not_found__: __MODULE__} = assigns) do$/;"	f
render_template	deps/phoenix/lib/phoenix/template.ex	/^      defp render_template(template, assigns) do$/;"	f
render_template	deps/phoenix/lib/phoenix/template.ex	/^      defp render_template(unquote(name), assigns) do$/;"	f
render_to_iodata	deps/phoenix/lib/phoenix/view.ex	/^  def render_to_iodata(module, template, assign) do$/;"	f
render_to_string	deps/phoenix/lib/phoenix/view.ex	/^  def render_to_string(module, template, assign) do$/;"	f
render_token	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  defp render_token(escaped_value, css_class, meta, highlight_tag) do$/;"	f
render_with_layouts	deps/phoenix/lib/phoenix/controller.ex	/^  defp render_with_layouts(conn, view, template, format) do$/;"	f
render_within	deps/phoenix/lib/phoenix/view.ex	/^  defp render_within({false, assigns}, module, template) do$/;"	f
render_within	deps/phoenix/lib/phoenix/view.ex	/^  defp render_within({layout, assigns}, inner_mod, inner_tpl) do$/;"	f
renders	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders <%= schema.singular %> when data is valid", %{conn: conn, <%= schema.singular %>: %<%= inspect schema.alias %>{id: id} = <%= schema.singular %>} do$/;"	t
renders	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders <%= schema.singular %> when data is valid", %{conn: conn} do$/;"	t
renders	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders <%= schema.singular %> when data is valid", %{conn: conn, <%= schema.singular %>: %<%= inspect schema.alias %>{id: id} = <%= schema.singular %>} do$/;"	t
renders	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders <%= schema.singular %> when data is valid", %{conn: conn} do$/;"	t
renders errors when data is invalid	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
renders errors when data is invalid	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn} do$/;"	t
renders errors when data is invalid	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
renders errors when data is invalid	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn} do$/;"	t
renders errors when data is invalid	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
renders errors when data is invalid	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn} do$/;"	t
renders errors when data is invalid	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
renders errors when data is invalid	deps/phoenix/priv/templates/phx.gen.json/controller_test.exs	/^    test "renders errors when data is invalid", %{conn: conn} do$/;"	t
renders form	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders form", %{conn: conn} do$/;"	t
renders form	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders form", %{conn: conn} do$/;"	t
renders form for editing chosen	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders form for editing chosen <%= schema.singular %>", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
renders form for editing chosen	deps/phoenix/priv/templates/phx.gen.html/controller_test.exs	/^    test "renders form for editing chosen <%= schema.singular %>", %{conn: conn, <%= schema.singular %>: <%= schema.singular %>} do$/;"	t
renew_session	deps/plug/lib/plug/session.ex	/^  defp renew_session(sid, conn, config) do$/;"	f
reparse_link	deps/earmark/lib/earmark/helpers/pure_link_helpers.ex	/^  defp reparse_link(leading_spaces_count, link_text, open_count) do$/;"	f
repeat	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def repeat(combinator \\\\ empty(), to_repeat)$/;"	f
repeat_while	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def repeat_while(combinator \\\\ empty(), to_repeat, while)$/;"	f
repeat_while	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp repeat_while(quoted, true_name, true_args, false_name, false_args) do$/;"	f
replace	deps/earmark/lib/earmark/helpers.ex	/^  def replace(text, regex, replacement, options \\\\ []) do$/;"	f
replace	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp replace(fields) do$/;"	f
replace	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def replace(combinator \\\\ empty(), to_replace, value)$/;"	f
replace_all_fields!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp replace_all_fields!(_kind, schema, to_remove) do$/;"	f
replace_all_fields!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp replace_all_fields!(kind, nil, _to_remove) do$/;"	f
replace_interpolations	deps/credo/lib/credo/code/interpolation_helper.ex	/^  def replace_interpolations(source, char \\\\ " ", filename \\\\ "nofilename")$/;"	f
replace_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp replace_line(line, col_start, col_end, char) do$/;"	f
replace_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp replace_line(position, lines, char) do$/;"	f
replace_line	deps/credo/lib/credo/code/interpolation_helper.ex	/^  defp replace_line({line_no, col_start, line_no, col_end}, lines, char) do$/;"	f
replace_with_spaces	deps/credo/lib/credo/code/charlists.ex	/^  def replace_with_spaces($/;"	f
replace_with_spaces	deps/credo/lib/credo/code/heredocs.ex	/^  def replace_with_spaces($/;"	f
replace_with_spaces	deps/credo/lib/credo/code/sigils.ex	/^  def replace_with_spaces($/;"	f
replace_with_spaces	deps/credo/lib/credo/code/strings.ex	/^  def replace_with_spaces($/;"	f
replaceable?	deps/ecto/lib/ecto/association.ex	/^  defp replaceable?(%Ecto.Association.NotLoaded{}), do: false$/;"	f
replaceable?	deps/ecto/lib/ecto/association.ex	/^  defp replaceable?(%{__meta__: %{state: :built}}), do: false$/;"	f
replaceable?	deps/ecto/lib/ecto/association.ex	/^  defp replaceable?(_), do: true$/;"	f
replaceable?	deps/ecto/lib/ecto/association.ex	/^  defp replaceable?(nil), do: false$/;"	f
replay	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  def replay(contents, id) when is_binary(contents) do$/;"	f
replica_down	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def replica_down(%State{replicas: replicas} = state, replica) do$/;"	f
replica_up	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def replica_up(%State{replicas: replicas, context: ctx} = state, replica) do$/;"	f
replica_users	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp replica_users(%State{values: values}, replica) do$/;"	f
replicas	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def replicas(c), do: Map.keys(c)$/;"	f
reply	deps/connection/lib/connection.ex	/^  defdelegate reply(from, response), to: :gen_server$/;"	d
reply	deps/phoenix/lib/phoenix/channel.ex	/^  def reply(socket_ref, status) when is_atom(status) do$/;"	f
reply	deps/phoenix/lib/phoenix/channel.ex	/^  def reply({transport_pid, serializer, topic, ref, join_ref}, {status, payload}) do$/;"	f
reply	deps/phoenix/lib/phoenix/channel/server.ex	/^  def reply(_, _, _, topic, {_status, payload}, _) do$/;"	f
reply	deps/phoenix/lib/phoenix/channel/server.ex	/^  def reply(pid, join_ref, ref, topic, {status, payload}, serializer)$/;"	f
reply_error	deps/db_connection/lib/db_connection/holder.ex	/^  def reply_error(from, exception) do$/;"	f
reply_ignore	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp reply_ignore(msg, socket) do$/;"	f
reply_redirect	deps/db_connection/lib/db_connection/holder.ex	/^  def reply_redirect(from, caller, redirect) do$/;"	f
repo	deps/ecto_sql/lib/ecto/migration.ex	/^  def repo do$/;"	f
repo	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def repo do$/;"	f
repo_changes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp repo_changes(%{repo_changes: repo_changes} = changeset) do$/;"	f
repo_config	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def repo_config(key, default) do$/;"	f
repo_init	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp repo_init(type, repo, config) do$/;"	f
report_diff	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp report_diff(state, [], []), do: state$/;"	f
report_diff	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp report_diff(state, joined, left) do$/;"	f
report_diff_join	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp report_diff_join(state, topic, key, meta, nil = _prev_meta) do$/;"	f
report_diff_join	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp report_diff_join(state, topic, key, meta, prev_meta) do$/;"	f
report_event	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp report_event(%{report_events_to: nil}, _event), do: :ok$/;"	f
report_event	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp report_event(%{report_events_to: pid} = state, event) do$/;"	f
report_name	deps/connection/lib/connection.ex	/^  defp report_name(name) when name === self(), do: name$/;"	f
report_name	deps/connection/lib/connection.ex	/^  defp report_name({:global, name}), do: name$/;"	f
report_name	deps/connection/lib/connection.ex	/^  defp report_name({:local, name}), do: name$/;"	f
report_name	deps/connection/lib/connection.ex	/^  defp report_name({:via, _, name}), do: name$/;"	f
report_reason	deps/connection/lib/connection.ex	/^  defp report_reason(reason) do$/;"	f
report_reason	deps/connection/lib/connection.ex	/^  defp report_reason({:undef, [{mod, fun, args, _} | _] = stack} = reason) do$/;"	f
repos	deps/ecto_sql/lib/ecto/migrator.ex	/^        defp repos do$/;"	f
request	lib/boruta/oauth/request/authorize.ex	/^  def request(%{query_params: query_params}, resource_owner) do$/;"	f
request	lib/boruta/oauth/request/authorize.ex	/^  def request(%{}, _) do$/;"	f
request	lib/boruta/oauth/request/introspect.ex	/^  def request(%{$/;"	f
request	lib/boruta/oauth/request/introspect.ex	/^  def request(%{body_params: %{} = body_params}) do$/;"	f
request	lib/boruta/oauth/request/introspect.ex	/^  def request(%{req_headers: [{"authorization", "Basic " <> _ = authorization_header}], body_params: %{} = body_params}) do$/;"	f
request	lib/boruta/oauth/request/introspect.ex	/^  def request(%{}) do$/;"	f
request	lib/boruta/oauth/request/revoke.ex	/^  def request(%{$/;"	f
request	lib/boruta/oauth/request/revoke.ex	/^  def request(%{body_params: %{} = body_params}) do$/;"	f
request	lib/boruta/oauth/request/revoke.ex	/^  def request(%{}) do$/;"	f
request	lib/boruta/oauth/request/token.ex	/^  def request(%{$/;"	f
request	lib/boruta/oauth/request/token.ex	/^  def request(%{body_params: %{} = body_params}) do$/;"	f
request	lib/boruta/oauth/request/token.ex	/^  def request(%{req_headers: [{"authorization", "Basic " <> _ = authorization_header}], body_params: %{} = body_params}) do$/;"	f
request	lib/boruta/oauth/request/token.ex	/^  def request(%{}) do$/;"	f
request_basic_auth	deps/plug/lib/plug/basic_auth.ex	/^  def request_basic_auth(conn, options \\\\ []) when is_list(options) do$/;"	f
request_transfer	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp request_transfer(state, {name, _vsn}) do$/;"	f
request_transfer_from_replicas_needing_synced	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp request_transfer_from_replicas_needing_synced(%{current_sample_count: 1} = state) do$/;"	f
request_transfer_from_replicas_needing_synced	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp request_transfer_from_replicas_needing_synced(state) do$/;"	f
request_url	deps/plug/lib/plug/conn.ex	/^  def request_url(%Conn{} = conn) do$/;"	f
request_url_port	deps/plug/lib/plug/conn.ex	/^  defp request_url_port(:http, 80), do: ""$/;"	f
request_url_port	deps/plug/lib/plug/conn.ex	/^  defp request_url_port(:https, 443), do: ""$/;"	f
request_url_port	deps/plug/lib/plug/conn.ex	/^  defp request_url_port(_, port), do: [?:, Integer.to_string(port)]$/;"	f
request_url_qs	deps/plug/lib/plug/conn.ex	/^  defp request_url_qs(""), do: ""$/;"	f
request_url_qs	deps/plug/lib/plug/conn.ex	/^  defp request_url_qs(qs), do: [??, qs]$/;"	f
required_argument_length	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp required_argument_length(_), do: 2$/;"	f
required_argument_length	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp required_argument_length(idx) when idx == 0, do: 3$/;"	f
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(%__MODULE__{stack: stack} = reason) do$/;"	f
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(_conn, :error, %__MODULE__{stack: stack} = reason, _stack) do$/;"	f
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(_conn, kind, reason, stack) do$/;"	f
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(conn, :error, reason, stack) do$/;"	f
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(conn, kind, reason) do$/;"	f
rescue_block?	deps/credo/lib/credo/code/block.ex	/^  def rescue_block?(ast) do$/;"	f
rescue_block_for	deps/credo/lib/credo/code/block.ex	/^  def rescue_block_for(_) do$/;"	f
rescue_block_for	deps/credo/lib/credo/code/block.ex	/^  def rescue_block_for(arguments) when is_list(arguments) do$/;"	f
rescue_block_for	deps/credo/lib/credo/code/block.ex	/^  def rescue_block_for(do: _do_block, rescue: rescue_block) do$/;"	f
rescue_block_for	deps/credo/lib/credo/code/block.ex	/^  def rescue_block_for({_atom, _meta, arguments}) when is_list(arguments) do$/;"	f
rescue_block_for!	deps/credo/lib/credo/code/block.ex	/^  def rescue_block_for!(ast) do$/;"	f
reset	deps/db_connection/lib/db_connection.ex	/^  defp reset(%DBConnection{pool_ref: pool_ref}) do$/;"	f
reset	deps/db_connection/lib/db_connection/backoff.ex	/^  def reset(%Backoff{type: :exp} = s), do: %Backoff{s | state: nil}$/;"	f
reset	deps/db_connection/lib/db_connection/backoff.ex	/^  def reset(%Backoff{type: :rand_exp, min: min, state: state} = s) do$/;"	f
reset	deps/db_connection/lib/db_connection/backoff.ex	/^  def reset(%Backoff{type: :rand} = s), do: s$/;"	f
reset	deps/ecto/lib/ecto/multi.ex	/^        def reset(account, params) do$/;"	f
reset	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def reset do$/;"	f
reset	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def reset(sequence_name) do$/;"	f
reset	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def reset(sequence_names) when is_list(sequence_names) do$/;"	f
reset cache on parameterised query after alter column type	deps/ecto_sql/integration_test/sql/alter.exs	/^  test "reset cache on parameterised query after alter column type" do$/;"	t
reset cache on returning query after alter column type	deps/ecto_sql/integration_test/sql/alter.exs	/^  test "reset cache on returning query after alter column type" do$/;"	t
reset_conn	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp reset_conn(pool, conn) do$/;"	f
reset_delta	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def reset_delta(%State{context: ctx, replica: replica} = state) do$/;"	f
resize	deps/jason/lib/codegen.ex	/^  defp resize(array, size), do: :array.resize(size, array)$/;"	f
resolve	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def resolve(root = %Root{}), do: resolve_root(root)$/;"	f
resolve	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  def resolve(schema = %{}), do: resolve_root(%Root{schema: schema})$/;"	f
resolve_and_cache_remote_schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_and_cache_remote_schema(root, url) do$/;"	f
resolve_apps	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp resolve_apps(apps, cache) do$/;"	f
resolve_module	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp resolve_module(module, beams) do$/;"	f
resolve_modules	deps/dialyxir/lib/dialyxir/plt.ex	/^  defp resolve_modules(modules, beams) do$/;"	f
resolve_property	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_property(root, tuple, _), do: {root, tuple}$/;"	f
resolve_property	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_property(root, {"$ref", ref}, scope) do$/;"	f
resolve_property	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_property(root, {key, values}, scope) when is_list(values) do$/;"	f
resolve_property	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_property(root, {key, value}, scope) when is_map(value) do$/;"	f
resolve_ref	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_ref(root, "#") do$/;"	f
resolve_ref	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_ref(root, ref) do$/;"	f
resolve_ref!	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_ref!(root, ref) do$/;"	f
resolve_remote_schema	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_remote_schema(root, url, remote_schema) do$/;"	f
resolve_root	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_root(root) do$/;"	f
resolve_with_root	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_with_root(root, non_schema, _scope), do: {root, non_schema}$/;"	f
resolve_with_root	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_with_root(root, schema = %{"id" => id}, scope) when is_binary(id) do$/;"	f
resolve_with_root	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_with_root(root, schema = %{}, scope), do: do_resolve(root, schema, scope)$/;"	f
resolve_with_root	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp resolve_with_root(root, schema, scope \\\\ "")$/;"	f
resource	deps/db_connection/lib/db_connection.ex	/^  defp resource(%DBConnection{} = conn, start, next, stop, opts) do$/;"	f
resource_name	deps/phoenix/lib/phoenix/naming.ex	/^  def resource_name(alias, suffix \\\\ "") do$/;"	f
resource_owners	lib/boruta/config.ex	/^  def resource_owners do$/;"	f
resources	deps/phoenix/lib/phoenix/router.ex	/^  defmacro resources(path, controller) do$/;"	a
resources	deps/phoenix/lib/phoenix/router.ex	/^  defmacro resources(path, controller, do: nested_context) do$/;"	a
resources	deps/phoenix/lib/phoenix/router.ex	/^  defmacro resources(path, controller, opts) do$/;"	a
resources	deps/phoenix/lib/phoenix/router.ex	/^  defmacro resources(path, controller, opts, do: nested_context) do$/;"	a
resp	deps/plug/lib/plug/conn.ex	/^  def resp(%Conn{state: state}, status, _body)$/;"	f
resp	deps/plug/lib/plug/conn.ex	/^  def resp(%Conn{} = conn, status, body)$/;"	f
resp	deps/plug/lib/plug/conn.ex	/^  def resp(%Conn{}, _status, nil) do$/;"	f
response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def response(%Conn{state: :unset}, _status) do$/;"	f
response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def response(%Conn{status: status, resp_body: body}, given) do$/;"	f
response_content_type	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def response_content_type(conn, format) when is_atom(format) do$/;"	f
response_content_type?	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp response_content_type?(header, format) do$/;"	f
response_type	lib/boruta/oauth/json/schema.ex	/^  def response_type do$/;"	f
result	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp result(formatted_warnings, filter_map, formatted_unnecessary_skips) do$/;"	f
result	deps/phoenix/lib/phoenix/socket.ex	/^  defp result(:error), do: :error$/;"	f
result	deps/phoenix/lib/phoenix/socket.ex	/^  defp result({:ok, _}), do: :ok$/;"	f
resume	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def resume(module, fun, args) do$/;"	f
resume_session	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp resume_session(%{"token" => token}, endpoint, opts) do$/;"	f
resume_session	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp resume_session(_params, _endpoint, _opts), do: :error$/;"	f
return_error	deps/earmark/src/link_text_parser.erl	/^return_error(Line, Message) ->$/;"	f	module:link_text_parser
return_error	deps/erlex/src/parser.erl	/^return_error(Line, Message) ->$/;"	f	module:parser
returning	deps/ecto/lib/ecto/repo/schema.ex	/^  defp returning(schema, opts) do$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp returning(%{select: %{fields: fields}} = query, sources),$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp returning(%{select: nil}, _sources),$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp returning([]),$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp returning(returning),$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp returning(%{select: %{fields: fields}} = query, idx, verb),$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp returning(%{select: nil}, _, _),$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp returning([], _verb), do: []$/;"	f
returning	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp returning(returning, verb) when is_list(returning) do$/;"	f
returns a code	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns a code", %{client: client, resource_owner: resource_owner} do$/;"	t
returns a code with public scope	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns a code with public scope", %{client: client, resource_owner: resource_owner} do$/;"	t
returns a code with state	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns a code with state", %{client: client, resource_owner: resource_owner} do$/;"	t
returns a token	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns a token", %{client: client, code: code, resource_owner: resource_owner} do$/;"	t
returns a token	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns a token", %{client: client, resource_owner: resource_owner} do$/;"	t
returns a token	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns a token", %{client: client, resource_owner: resource_owner} do$/;"	t
returns a token if client_id	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns a token if client_id\/scret are valid", %{client: client} do$/;"	t
returns a token if scope is authorized	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns a token if scope is authorized", %{client_with_scope: client, resource_owner: resource_owner} do$/;"	t
returns a token if scope is authorized	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns a token if scope is authorized", %{client_with_scope: client} do$/;"	t
returns a token if scope is authorized	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns a token if scope is authorized", %{client_with_scope: client, resource_owner: resource_owner} do$/;"	t
returns a token if scope is authorized	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns a token if scope is authorized", %{client_with_scope: client, resource_owner: resource_owner} do$/;"	t
returns a token introspected if token is active	test/boruta/oauth/integration/introspect_test.exs	/^    test "returns a token introspected if token is active", %{client: client, token: token, resource_owner: resource_owner} do$/;"	t
returns a token with public scope	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns a token with public scope", %{client: client} do$/;"	t
returns a token with scope	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns a token with scope", %{client: client, code_with_scope: code, resource_owner: resource_owner} do$/;"	t
returns all clients	test/boruta/admin_test.exs	/^    test "returns all clients" do$/;"	t
returns all scopes	test/boruta/admin_test.exs	/^    test "returns all scopes" do$/;"	t
returns already started for started repos	deps/ecto/integration_test/cases/repo.exs	/^  test "returns already started for started repos" do$/;"	t
returns an empty string if an empty string given	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an empty string if an empty string given" do$/;"	t
returns an empty string if nil given	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an empty string if nil given" do$/;"	t
returns an error if	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if `client_id` is invalid" do$/;"	t
returns an error if	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if `code` and request redirect_uri do not match", %{client: client, bad_redirect_uri_code: bad_redirect_uri_code} do$/;"	t
returns an error if	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if `code` is invalid", %{client: client} do$/;"	t
returns an error if	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if `redirect_uri` is invalid", %{client: client} do$/;"	t
returns an error if	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if `response_type` is 'code' and schema is invalid" do$/;"	t
returns an error if	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns an error if `grant_type` is 'client_credentials' and schema is invalid" do$/;"	t
returns an error if	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns an error if `response_type` is 'token' and schema is invalid" do$/;"	t
returns an error if	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns an error if `grant_type` is 'refresh_token' and schema is invalid" do$/;"	t
returns an error if Basic auth fails	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if Basic auth fails" do$/;"	t
returns an error if access_token associated is expired	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns an error if access_token associated is expired", %{client: client, expired_access_token: token} do$/;"	t
returns an error if bad authorization header is given	test/boruta/basic_auth_test.exs	/^    test "returns an error if bad authorization header is given" do$/;"	t
returns an error if client is invalid	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns an error if client is invalid" do$/;"	t
returns an error if client_id	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns an error if client_id\/scret are invalid" do$/;"	t
returns an error if client_id	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if client_id\/secret are invalid" do$/;"	t
returns an error if client_id is invalid	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns an error if client_id is invalid" do$/;"	t
returns an error if credentials are not in base64	test/boruta/basic_auth_test.exs	/^    test "returns an error if credentials are not in base64" do$/;"	t
returns an error if grant type is not allowed	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns an error if grant type is not allowed", %{client_without_grant_type: client} do$/;"	t
returns an error if grant type is not allowed by client	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if grant type is not allowed by client", %{client_without_grant_type: client, code: code} do$/;"	t
returns an error if grant type is not allowed by client	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if grant type is not allowed by client", %{client_without_grant_type: client, resource_owner: resource_owner} do$/;"	t
returns an error if grant type is not allowed by client	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns an error if grant type is not allowed by client", %{client_without_grant_type: client, access_token: token} do$/;"	t
returns an error if grant type is not allowed by the client	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns an error if grant type is not allowed by the client", %{client_without_grant_type: client, resource_owner: resource_owner} do$/;"	t
returns an error if grant type is not allowed by the client	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if grant type is not allowed by the client", %{client_without_grant_type: client, resource_owner: resource_owner} do$/;"	t
returns an error if password is invalid	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if password is invalid", %{client: client, resource_owner: resource_owner} do$/;"	t
returns an error if private scope given	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if private scope given", %{$/;"	t
returns an error if redirect_uri is invalid	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns an error if redirect_uri is invalid", %{client: client} do$/;"	t
returns an error if refresh_token is invalid	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns an error if refresh_token is invalid", %{client: client} do$/;"	t
returns an error if request is invalid	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if request is invalid" do$/;"	t
returns an error if request is invalid	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if request is invalid" do$/;"	t
returns an error if scope given and token does not have any	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if scope given and token does not have any", %{$/;"	t
returns an error if scope is unknown or unauthorized	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if scope is unknown or unauthorized", %{client_with_scope: client, resource_owner: resource_owner} do$/;"	t
returns an error if scope is unknown or unauthorized	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns an error if scope is unknown or unauthorized", %{client_with_scope: client, resource_owner: resource_owner} do$/;"	t
returns an error if scope is unknown or unauthorized	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns an error if scope is unknown or unauthorized", %{client: client, access_token: token} do$/;"	t
returns an error if scope is unknown or unauthorized by the client	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if scope is unknown or unauthorized by the client", %{client_with_scope: client, resource_owner: resource_owner} do$/;"	t
returns an error if scopes are unknown or unauthorized	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns an error if scopes are unknown or unauthorized", %{client_with_scope: client} do$/;"	t
returns an error if some non authorized by token but by client scope given	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some non authorized by token but by client scope given", %{$/;"	t
returns an error if some non existing scope given	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some non existing scope given", %{$/;"	t
returns an error if some non existing scope given are unknown or unauthorized by the token	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some non existing scope given are unknown or unauthorized by the token", %{$/;"	t
returns an error if some private scope are unknown or unauthorized by the client	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some private scope are unknown or unauthorized by the client", %{$/;"	t
returns an error if some private scope are unknown or unauthorized by the resource_owner	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some private scope are unknown or unauthorized by the resource_owner", %{$/;"	t
returns an error if some private scope are unknown or unauthorized by the token	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some private scope are unknown or unauthorized by the token", %{$/;"	t
returns an error if some public scope given are unknown or unauthorized by the token	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns an error if some public scope given are unknown or unauthorized by the token", %{$/;"	t
returns an error if user is invalid	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error if user is invalid", %{client: client} do$/;"	t
returns an error if user is invalid	test/boruta/oauth/integration/implicit_grant_test.exs	/^    test "returns an error if user is invalid", %{client: client} do$/;"	t
returns an error if username is invalid	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^    test "returns an error if username is invalid", %{client: client} do$/;"	t
returns an error with empty params	test/boruta/oauth/integration/common_grant_test.exs	/^    test "returns an error with empty params" do$/;"	t
returns an error with invalid client_id	test/boruta/oauth/integration/introspect_test.exs	/^    test "returns an error with invalid client_id\/secret", %{client: client} do$/;"	t
returns an error with invalid client_id	test/boruta/oauth/integration/revoke_test.exs	/^    test "returns an error with invalid client_id\/secret", %{client: client} do$/;"	t
returns an error with invalid grant_type	test/boruta/oauth/integration/common_grant_test.exs	/^    test "returns an error with invalid grant_type" do$/;"	t
returns an error with invalid request	test/boruta/oauth/integration/introspect_test.exs	/^    test "returns an error with invalid request" do$/;"	t
returns an error with invalid request	test/boruta/oauth/integration/revoke_test.exs	/^    test "returns an error with invalid request" do$/;"	t
returns an error with invalid response_type	test/boruta/oauth/integration/common_grant_test.exs	/^    test "returns an error with invalid response_type" do$/;"	t
returns an error with private scope	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^    test "returns an error with private scope", %{client: client, resource_owner: resource_owner} do$/;"	t
returns an error with private scope	test/boruta/oauth/integration/client_credentials_grant_test.exs	/^    test "returns an error with private scope", %{client: client} do$/;"	t
returns an error without params	test/boruta/oauth/integration/common_grant_test.exs	/^    test "returns an error without params" do$/;"	t
returns an error without params	test/boruta/oauth/integration/introspect_test.exs	/^    test "returns an error without params" do$/;"	t
returns an error without params	test/boruta/oauth/integration/revoke_test.exs	/^    test "returns an error without params" do$/;"	t
returns an inactive token if token is inactive	test/boruta/oauth/integration/introspect_test.exs	/^    test "returns an inactive token if token is inactive", %{client: client} do$/;"	t
returns error changeset with invalid redirect_uri	test/boruta/admin_test.exs	/^    test "returns error changeset with invalid redirect_uri (bad URI format)" do$/;"	t
returns error changeset with name containing whitespace	test/boruta/admin_test.exs	/^    test "returns error changeset with name containing whitespace" do$/;"	t
returns error changeset with name containing whitespace	test/boruta/admin_test.exs	/^    test "returns error changeset with name containing whitespace", %{scope: scope} do$/;"	t
returns error changeset with name missing	test/boruta/admin_test.exs	/^    test "returns error changeset with name missing" do$/;"	t
returns error changeset with name missing	test/boruta/admin_test.exs	/^    test "returns error changeset with name missing", %{scope: scope} do$/;"	t
returns error changeset with public set to nil	test/boruta/admin_test.exs	/^    test "returns error changeset with public set to nil", %{scope: scope} do$/;"	t
returns false table doesn	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "returns false table doesn't exists" do$/;"	t
returns scope if some private scope are authorized by the client	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns scope if some private scope are authorized by the client", %{$/;"	t
returns scope if some private scope are authorized by the resource_owner	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns scope if some private scope are authorized by the resource_owner", %{$/;"	t
returns scope if some private scope are authorized by the token	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns scope if some private scope are authorized by the token", %{$/;"	t
returns scope if some public scope are authorized by the token	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns scope if some public scope are authorized by the token", %{$/;"	t
returns scope if some public scope given	test/boruta/oauth/authorization/scope_test.exs	/^    test "returns scope if some public scope given", %{$/;"	t
returns the client with given id	test/boruta/admin_test.exs	/^    test "returns the client with given id" do$/;"	t
returns the scope with given id	test/boruta/admin_test.exs	/^    test "returns the scope with given id" do$/;"	t
returns the scopes with given id	test/boruta/admin_test.exs	/^    test "returns the scopes with given id" do$/;"	t
returns token	test/boruta/oauth/integration/refresh_token_test.exs	/^    test "returns token", %{client: client, access_token: token} do$/;"	t
returns true when table exists	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "returns true when table exists" do$/;"	t
returns username	test/boruta/basic_auth_test.exs	/^    test "returns username\/password if credentials valid" do$/;"	t
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse(_command), do: false$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:alter,  %Table{} = table, changes}) do$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:create, %Constraint{} = constraint}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:create, %Index{} = index}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:create, %Table{} = table, _columns}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:create_if_not_exists, %Constraint{} = constraint}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:create_if_not_exists, %Index{} = index}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:create_if_not_exists, %Table{} = table, _columns}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:drop, %Index{} = index}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:drop_if_exists, %Index{} = index}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:rename, %Table{} = table, current_column, new_column}),$/;"	f
reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp reverse({:rename, %Table{} = table_current, %Table{} = table_new}),$/;"	f
reverse_now_or_later	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp reverse_now_or_later(expr), do: quote(do: :lists.reverse(unquote(expr)))$/;"	f
reverse_now_or_later	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp reverse_now_or_later(list) when is_list(list), do: :lists.reverse(list)$/;"	f
reverse_order	deps/ecto/lib/ecto/query.ex	/^  def reverse_order(%Ecto.Query{} = query) do$/;"	f
reverse_order	deps/ecto/lib/ecto/query.ex	/^  def reverse_order(queryable) do$/;"	f
reverse_order_by	deps/ecto/lib/ecto/query.ex	/^  defp reverse_order_by(%{expr: expr} = order_by) do$/;"	f
reverse_sort	deps/makeup/lib/makeup/lexer/combinators.ex	/^  defp reverse_sort(items) do$/;"	f
revoke	lib/boruta/adapters/ecto/access_tokens.ex	/^  def revoke(%Oauth.Token{value: value}) do$/;"	f
revoke	lib/boruta/oauth.ex	/^  def revoke(conn, module) do$/;"	f
revoke	lib/boruta/oauth/json/schema.ex	/^  def revoke do$/;"	f
revoke token if token is active	test/boruta/oauth/integration/revoke_test.exs	/^    test "revoke token if token is active", %{client: client, token: token, resource_owner: resource_owner} do$/;"	t
revoke_error	test/support/boruta/oauth/application_mock.ex	/^  def revoke_error(_conn, error), do: {:revoke_error, error}$/;"	f
revoke_request	lib/boruta/oauth/request.ex	/^  defdelegate revoke_request(conn), to: Request.Revoke, as: :request$/;"	d
revoke_success	test/support/boruta/oauth/application_mock.ex	/^  def revoke_success(_conn), do: {:revoke_success}$/;"	f
revoked?	lib/boruta/oauth/schemas/token.ex	/^  def revoked?(%Token{revoked_at: _}), do: {:error, "Token revoked."}$/;"	f
revoked?	lib/boruta/oauth/schemas/token.ex	/^  def revoked?(%Token{revoked_at: nil}), do: :ok$/;"	f
rewrite	deps/postgrex/lib/postgrex/type_module.ex	/^  defp rewrite(ast, [{:->, clause_meta, _} | _original]) do$/;"	f
rewrite_combinations	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp rewrite_combinations(%{combinations: []} = query), do: query$/;"	f
rewrite_combinations	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp rewrite_combinations(%{combinations: combinations} = query) do$/;"	f
rewrite_ix	deps/ecto/lib/ecto/association.ex	/^  defp rewrite_ix(_mapping, ix), do: ix$/;"	f
rewrite_ix	deps/ecto/lib/ecto/association.ex	/^  defp rewrite_ix(ix, ix), do: 0$/;"	f
rewrite_ix	deps/ecto/lib/ecto/association.ex	/^  defp rewrite_ix(mapping, ix) when ix > mapping, do: ix - 1$/;"	f
rewrite_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_ix(0, ix, _last_ix, _source_ix, _inc_x), do: ix$/;"	f
rewrite_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_ix(join_ix, _ix, _last_ix, _source_ix, inc_ix), do: join_ix + inc_ix$/;"	f
rewrite_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_ix(join_ix, _ix, last_ix, _source_ix, _inc_ix) when join_ix > last_ix, do: join_ix$/;"	f
rewrite_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_ix(last_ix, _ix, last_ix, source_ix, _inc_x), do: source_ix$/;"	f
rewrite_join	deps/ecto/lib/ecto/association.ex	/^  defp rewrite_join(%{on: on, ix: ix} = join, mapping) when ix >= mapping do$/;"	f
rewrite_join	deps/ecto/lib/ecto/association.ex	/^  defp rewrite_join(join, _mapping) do$/;"	f
rewrite_join	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_join(%{on: on, ix: join_ix} = join, qual, ix, last_ix, source_ix, inc_ix) do$/;"	f
rewrite_on	deps/plug/lib/plug/ssl.ex	/^  defp rewrite_on(_conn, [other | _rewrite_on]) do$/;"	f
rewrite_on	deps/plug/lib/plug/ssl.ex	/^  defp rewrite_on(conn, [:x_forwarded_host | rewrite_on]) do$/;"	f
rewrite_on	deps/plug/lib/plug/ssl.ex	/^  defp rewrite_on(conn, [:x_forwarded_port | rewrite_on]) do$/;"	f
rewrite_on	deps/plug/lib/plug/ssl.ex	/^  defp rewrite_on(conn, [:x_forwarded_proto | rewrite_on]) do$/;"	f
rewrite_on	deps/plug/lib/plug/ssl.ex	/^  defp rewrite_on(conn, []) do$/;"	f
rewrite_param_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_param_ix(param, _, _, _, _), do: param$/;"	f
rewrite_param_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_param_ix({value, {type_ix, field}}, ix, last_ix, source_ix, inc_ix) when is_integer(type_ix) do$/;"	f
rewrite_param_ix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_param_ix({value, {upper, {type_ix, field}}}, ix, last_ix, source_ix, inc_ix) when is_integer(type_ix) do$/;"	f
rewrite_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_prefix(%{prefix: nil} = expr, prefix), do: %{expr | prefix: prefix}$/;"	f
rewrite_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_prefix(expr, _prefix), do: expr$/;"	f
rewrite_prefix	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_prefix(expr, nil), do: expr$/;"	f
rewrite_serializer	deps/phoenix/lib/phoenix/socket.ex	/^  defp rewrite_serializer(Phoenix.Transports.LongPollSerializer), do: Phoenix.Socket.V1.JSONSerializer$/;"	f
rewrite_serializer	deps/phoenix/lib/phoenix/socket.ex	/^  defp rewrite_serializer(Phoenix.Transports.V2.LongPollSerializer), do: Phoenix.Socket.V2.JSONSerializer$/;"	f
rewrite_serializer	deps/phoenix/lib/phoenix/socket.ex	/^  defp rewrite_serializer(Phoenix.Transports.V2.WebSocketSerializer), do: Phoenix.Socket.V2.JSONSerializer$/;"	f
rewrite_serializer	deps/phoenix/lib/phoenix/socket.ex	/^  defp rewrite_serializer(Phoenix.Transports.WebSocketSerializer), do: Phoenix.Socket.V1.JSONSerializer$/;"	f
rewrite_serializer	deps/phoenix/lib/phoenix/socket.ex	/^  defp rewrite_serializer(module), do: module$/;"	f
rewrite_sources	deps/ecto/lib/ecto/query/planner.ex	/^  def rewrite_sources(%{expr: expr, params: params} = part, mapping) do$/;"	f
rewrite_type	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_type(other, _mapping) do$/;"	f
rewrite_type	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_type({composite, {ix, field}}, mapping) when is_integer(ix) do$/;"	f
rewrite_type	deps/ecto/lib/ecto/query/planner.ex	/^  defp rewrite_type({ix, field}, mapping) when is_integer(ix) do$/;"	f
rfc2822	deps/plug/lib/plug/conn/cookies.ex	/^  defp rfc2822({{year, month, day} = date, {hour, minute, second}}) do$/;"	f
right joins with missing entries	deps/ecto/integration_test/cases/joins.exs	/^  test "right joins with missing entries" do$/;"	t
rollback	deps/db_connection/lib/db_connection.ex	/^  def rollback(%DBConnection{conn_mode: :transaction} = conn, reason) do$/;"	f
rollback	deps/db_connection/lib/db_connection.ex	/^  def rollback(%DBConnection{} = _conn, _reason) do$/;"	f
rollback	deps/db_connection/lib/db_connection.ex	/^  def rollback(conn, reason)$/;"	f
rollback	deps/db_connection/lib/db_connection.ex	/^  defp rollback(conn, run, opts) do$/;"	f
rollback	deps/ecto/lib/ecto/repo.ex	/^        def rollback(value) do$/;"	f
rollback	deps/ecto/lib/ecto/repo/transaction.ex	/^  def rollback(name, value) do$/;"	f
rollback	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def rollback(meta, value) do$/;"	f
rollback	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def rollback(%{pid: pool}, value) do$/;"	f
rollback	deps/ecto_sql/lib/ecto/migrator.ex	/^        def rollback(repo, version) do$/;"	f
rollback	deps/postgrex/lib/postgrex.ex	/^  defdelegate rollback(conn, reason), to: DBConnection$/;"	d
rollback_flushed	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rollback_flushed(s, %{mode: :savepoint} = status, err, buffer) do$/;"	f
rolls back references in change	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "rolls back references in change\/1", %{migration_number: num} do$/;"	t
root_and_path_for_url	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp root_and_path_for_url(root, fragment, "") do$/;"	f
root_and_path_for_url	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp root_and_path_for_url(root, fragment, url) do$/;"	f
root_layout	deps/phoenix/lib/phoenix/controller.ex	/^  def root_layout(conn), do: conn.private |> Map.get(:phoenix_root_layout, false)$/;"	f
root_with_ref	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp root_with_ref(root, url, ref) do$/;"	f
round	deps/decimal/lib/decimal.ex	/^  def round(%Decimal{coef: :inf} = num, _, _), do: num$/;"	f
round	deps/decimal/lib/decimal.ex	/^  def round(%Decimal{coef: :qNaN} = num, _, _), do: num$/;"	f
round	deps/decimal/lib/decimal.ex	/^  def round(%Decimal{coef: :sNaN} = num, _, _),$/;"	f
round	deps/decimal/lib/decimal.ex	/^  def round(%Decimal{} = num, n, mode) do$/;"	f
round	deps/decimal/lib/decimal.ex	/^  def round(num, n, mode) do$/;"	f
round	deps/decimal/lib/decimal.ex	/^  def round(num, places \\\\ 0, mode \\\\ :half_up)$/;"	f
route	deps/phoenix/lib/phoenix/router/scope.ex	/^  def route(line, module, kind, verb, path, plug, plug_opts, opts) do$/;"	f
route_helper	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp route_helper(web_path, singular) do$/;"	f
route_info	deps/phoenix/lib/phoenix/router.ex	/^  def route_info(router, method, path, host) when is_binary(path) do$/;"	f
route_info	deps/phoenix/lib/phoenix/router.ex	/^  def route_info(router, method, split_path, host) when is_list(split_path) do$/;"	f
route_name	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp route_name(name), do: name <> "_path"$/;"	f
route_name	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp route_name(nil),  do: ""$/;"	f
router	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp router(nil, base) do$/;"	f
router	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp router(router_name, _base) do$/;"	f
router_module	deps/phoenix/lib/phoenix/controller.ex	/^  def router_module(conn), do: conn.private.phoenix_router$/;"	f
row_decode	deps/postgrex/lib/postgrex/types.ex	/^  defp row_decode(<<-1::int32, rest::binary>>) do$/;"	f
row_decode	deps/postgrex/lib/postgrex/types.ex	/^  defp row_decode(<<>>), do: []$/;"	f
row_decode	deps/postgrex/lib/postgrex/types.ex	/^  defp row_decode(<<len::uint32, value::binary(len), rest::binary>>) do$/;"	f
row_number	deps/ecto/lib/ecto/query/window_api.ex	/^  def row_number(), do: doc! []$/;"	f
rows_msg	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rows_msg(s, rows, buffer) do$/;"	f
rows_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rows_recv(%{sock: {mod, sock}} = s, result_types, rows, buffer, more) do$/;"	f
rows_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp rows_recv(%{types: types} = s, result_types, rows, buffer) do$/;"	f
rpc	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  defp rpc(pid, func) do$/;"	f
rrt_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def rrt_style, do: HTML.RrtStyle.style()$/;"	f
rules_for	deps/earmark/lib/earmark/context.ex	/^  defp rules_for(options) do$/;"	f
run	deps/credo/.template.check.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check.ex	/^        def run(source_file, params) do$/;"	f
run	deps/credo/lib/credo/check/config_comment_finder.ex	/^  def run(source_files, _exec, _params) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/collector.ex	/^        def run(source_files, exec, params) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/exception_names.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/line_endings.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/parameter_pattern_matching.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/space_in_parentheses.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/tabs_or_spaces.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/consistency/unused_variable_names.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/design/alias_usage.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def run(source_files, exec, params \\\\ []) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/design/tag_fixme.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/design/tag_todo.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/alias_as.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/alias_order.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/function_names.ex	/^  def run(%SourceFile{} = source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/max_line_length.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/module_doc.ex	/^  def run(%SourceFile{filename: filename} = source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/module_names.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/multi_alias.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/parentheses_in_condition.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/prefer_implicit_try.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/redundant_blank_lines.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/semicolons.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/single_pipe.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/space_after_commas.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/specs.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/trailing_blank_line.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/unnecessary_alias_expansion.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/readability/variable_names.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/append_single_item.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/cond_statements.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/function_arity.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^            def run(filename) do$/;"	f
run	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/map_into.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/nesting.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/runner.ex	/^  def run(source_files, exec) when is_list(source_files) do$/;"	f
run	deps/credo/lib/credo/check/warning/bool_operation_on_same_values.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/expensive_empty_enum_check.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/iex_pry.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/io_inspect.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/operation_with_constant_result.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_enum_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_file_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_keyword_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_list_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_operation.ex	/^  def run(source_file, params \\\\ [], checked_module, funs_with_return_value, format_issue_fun) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_path_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_regex_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_string_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/check/warning/unused_tuple_operation.ex	/^  def run(source_file, params \\\\ []) do$/;"	f
run	deps/credo/lib/credo/cli.ex	/^  def run(argv) do$/;"	f
run	deps/credo/lib/credo/execution.ex	/^  def run(initial_exec) do$/;"	f
run	deps/credo/lib/credo/execution/execution_timing.ex	/^  def run(fun) do$/;"	f
run	deps/credo/lib/credo/execution/execution_timing.ex	/^  def run(fun, args) do$/;"	f
run	deps/credo/lib/credo/execution/process_definition.ex	/^  defmacro run(module) do$/;"	a
run	deps/credo/lib/credo/execution/process_definition.ex	/^  defmacro run(module)$/;"	a
run	deps/credo/lib/credo/execution/task.ex	/^  def run(task, %Credo.Execution{debug: true} = exec, opts) do$/;"	f
run	deps/credo/lib/credo/execution/task.ex	/^  def run(task, exec, opts \\\\ [])$/;"	f
run	deps/credo/lib/credo/execution/task.ex	/^  def run(task, exec, opts) do$/;"	f
run	deps/credo/lib/mix/tasks/credo.ex	/^  def run(argv) do$/;"	f
run	deps/credo/lib/mix/tasks/credo.gen.check.ex	/^  def run(argv) do$/;"	f
run	deps/credo/lib/mix/tasks/credo.gen.config.ex	/^  def run(argv) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  def run(%DBConnection{} = conn, fun, _) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  def run(conn, fun, opts \\\\ [])$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  def run(pool, fun, opts) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  defp run(%DBConnection{} = conn, fun, arg, meter, opts) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  defp run(%DBConnection{} = conn, fun, arg1, arg2, meter, opts) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  defp run(%DBConnection{} = conn, fun, meter, opts) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  defp run(pool, fun, arg, meter, opts) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  defp run(pool, fun, arg1, arg2, meter, opts) do$/;"	f
run	deps/db_connection/lib/db_connection.ex	/^  defp run(pool, fun, meter, opts) do$/;"	f
run	deps/dialyxir/lib/dialyxir/dialyzer.ex	/^    def run(args, filterer) do$/;"	f
run	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^    def run(args) do$/;"	f
run	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  def run(args) do$/;"	f
run	deps/dialyxir/lib/mix/tasks/dialyzer/explain.ex	/^  def run(args) do$/;"	f
run	deps/ecto/lib/ecto/multi.ex	/^  def run(multi, name, mod, fun, args)$/;"	f
run	deps/ecto/lib/ecto/multi.ex	/^  def run(multi, name, run) when is_function(run, 2) do$/;"	f
run	deps/ecto/lib/mix/tasks/ecto.create.ex	/^  def run(args) do$/;"	f
run	deps/ecto/lib/mix/tasks/ecto.drop.ex	/^  def run(args) do$/;"	f
run	deps/ecto/lib/mix/tasks/ecto.ex	/^  def run(args) do$/;"	f
run	deps/ecto/lib/mix/tasks/ecto.gen.repo.ex	/^  def run(args) do$/;"	f
run	deps/ecto_sql/integration_test/sql/alter.exs	/^  defp run(direction, repo, module) do$/;"	f
run	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def run(repo, version, module, direction, operation, migrator_direction, opts) do$/;"	f
run	deps/ecto_sql/lib/ecto/migrator.ex	/^  def run(repo, direction, opts) do$/;"	f
run	deps/ecto_sql/lib/ecto/migrator.ex	/^  def run(repo, migration_source, direction, opts) do$/;"	f
run	deps/ecto_sql/lib/mix/tasks/ecto.dump.ex	/^  def run(args) do$/;"	f
run	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^  def run(args) do$/;"	f
run	deps/ecto_sql/lib/mix/tasks/ecto.load.ex	/^  def run(args, table_exists? \\\\ &Ecto.Adapters.SQL.table_exists?\/2) do$/;"	f
run	deps/ecto_sql/lib/mix/tasks/ecto.migrate.ex	/^  def run(args, migrator \\\\ &Ecto.Migrator.run\/4) do$/;"	f
run	deps/ecto_sql/lib/mix/tasks/ecto.migrations.ex	/^  def run(args, migrations \\\\ &Ecto.Migrator.migrations\/2, puts \\\\ &IO.puts\/1) do$/;"	f
run	deps/ecto_sql/lib/mix/tasks/ecto.rollback.ex	/^  def run(args, migrator \\\\ &Ecto.Migrator.run\/4) do$/;"	f
run	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  def run(project_nodes, config) when is_map(config) do$/;"	f
run	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def run(project_nodes, config) when is_map(config) do$/;"	f
run	deps/ex_doc/lib/mix/tasks/docs.ex	/^  def run(args, config \\\\ Mix.Project.config(), generator \\\\ &ExDoc.generate_docs\/3) do$/;"	f
run	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/compile.phoenix.ex	/^  def run(_args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.digest.clean.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.digest.ex	/^  def run(all_args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.cert.ex	/^  def run(all_args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.channel.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.html.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.json.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.presence.ex	/^  def run([]) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.presence.ex	/^  def run([alias_name]) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def run(args) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  def run([]),    do: run(["64"])$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  def run([_|_]), do: invalid_args!()$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.gen.secret.ex	/^  def run([int]), do: int |> parse!() |> random_string() |> Mix.shell().info()$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  def run(args, base \\\\ Mix.Phoenix.base()) do$/;"	f
run	deps/phoenix/lib/mix/tasks/phx.server.ex	/^  def run(args) do$/;"	f
run	deps/plug/lib/plug.ex	/^  def run(%Plug.Conn{halted: true} = conn, _plugs, _opts),$/;"	f
run	deps/plug/lib/plug.ex	/^  def run(%Plug.Conn{} = conn, plugs, opts),$/;"	f
run	deps/plug/lib/plug.ex	/^  def run(conn, plugs, opts \\\\ [])$/;"	f
run	lib/mix/tasks/boruta.gen.migrations.ex	/^  def run(args) do$/;"	f
run down to	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "run down to\/step migration", config do$/;"	t
run up to	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "run up to\/step migration", config do$/;"	t
run_action	deps/plug/lib/plug/debugger.ex	/^  def run_action(%Plug.Conn{} = conn) do$/;"	f
run_args	deps/phoenix/lib/mix/tasks/phx.server.ex	/^  defp run_args do$/;"	f
run_before_send	deps/plug/lib/plug/conn.ex	/^  defp run_before_send(%Conn{before_send: before_send} = conn, new) do$/;"	f
run_begin	deps/db_connection/lib/db_connection.ex	/^  defp run_begin(conn, meter, opts) do$/;"	f
run_check_on_single_source_file	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_single_source_file($/;"	f
run_check_on_single_source_file	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_single_source_file({_check, false}, _source_file, _exec), do: []$/;"	f
run_check_on_single_source_file	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_single_source_file({check, params}, source_file, exec) do$/;"	f
run_check_on_single_source_file	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_single_source_file({check}, source_file, exec) do$/;"	f
run_check_on_source_files	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_source_files($/;"	f
run_check_on_source_files	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_source_files({_check, false}, _source_files, _exec), do: []$/;"	f
run_check_on_source_files	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_source_files({check, params}, source_files, exec) do$/;"	f
run_check_on_source_files	deps/credo/lib/credo/check/runner.ex	/^  defp run_check_on_source_files({check}, source_files, exec) do$/;"	f
run_checks_and_append_issues	deps/credo/lib/credo/check/runner.ex	/^  defp run_checks_and_append_issues(%SourceFile{} = source_file, exec, checks) do$/;"	f
run_checks_individually	deps/credo/lib/credo/check/runner.ex	/^  defp run_checks_individually(%SourceFile{} = source_file, checks, exec) do$/;"	f
run_child	deps/db_connection/lib/db_connection/task.ex	/^  def run_child(mod, state, fun, opts) do$/;"	f
run_cleanup	deps/db_connection/lib/db_connection.ex	/^  defp run_cleanup(%DBConnection{} = conn, fun, args, meter, opts) do$/;"	f
run_cleanup	deps/db_connection/lib/db_connection.ex	/^  defp run_cleanup(pool, fun, args, meter, opts) do$/;"	f
run_cli_switch_plugin_param_converters	deps/credo/lib/credo/config_builder.ex	/^  defp run_cli_switch_plugin_param_converters(exec) do$/;"	f
run_close	deps/db_connection/lib/db_connection.ex	/^  defp run_close(conn, args, meter, opts) do$/;"	f
run_commit	deps/db_connection/lib/db_connection.ex	/^  defp run_commit(conn, meter, opts) do$/;"	f
run_config_comment_finder	deps/credo/lib/credo/check/runner.ex	/^  def run_config_comment_finder(source_files, exec) do$/;"	f
run_deallocate	deps/db_connection/lib/db_connection.ex	/^  defp run_deallocate(conn, args, meter, opts) do$/;"	f
run_declare	deps/db_connection/lib/db_connection.ex	/^  defp run_declare(conn, query, params, meter, opts) do$/;"	f
run_dialyzer	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp run_dialyzer(opts, dargs) do$/;"	f
run_execute	deps/db_connection/lib/db_connection.ex	/^  defp run_execute(conn, query, params, meter, opts) do$/;"	f
run_fetch	deps/db_connection/lib/db_connection.ex	/^  defp run_fetch(conn, args, meter, opts) do$/;"	f
run_maybe_in_transaction	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp run_maybe_in_transaction(parent, ref, repo, dynamic_repo, module, fun) do$/;"	f
run_migrations	lib/release_tasks.ex	/^  defp run_migrations do$/;"	f
run_migrations_for	lib/release_tasks.ex	/^  defp run_migrations_for(repo) do$/;"	f
run_on_all?	deps/credo/lib/credo/check.ex	/^      def run_on_all? do$/;"	f
run_on_all_body	deps/credo/lib/credo/check.ex	/^  defp run_on_all_body(_), do: false$/;"	f
run_on_all_body	deps/credo/lib/credo/check.ex	/^  defp run_on_all_body(true), do: true$/;"	f
run_on_all_check?	deps/credo/lib/credo/check/runner.ex	/^  defp run_on_all_check?({check, _params}), do: check.run_on_all?$/;"	f
run_on_all_check?	deps/credo/lib/credo/check/runner.ex	/^  defp run_on_all_check?({check}), do: check.run_on_all?$/;"	f
run_on_file	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^        def run_on_file(filename, modes, command_name) do$/;"	f
run_prepare	deps/db_connection/lib/db_connection.ex	/^  defp run_prepare(conn, query, meter, opts) do$/;"	f
run_prepare	deps/ecto/lib/ecto/embedded.ex	/^  defp run_prepare(changeset, repo) do$/;"	f
run_prepare	deps/ecto/lib/ecto/repo/schema.ex	/^  defp run_prepare(changeset, prepare) do$/;"	f
run_prepare_declare	deps/db_connection/lib/db_connection.ex	/^  defp run_prepare_declare(conn, query, params, meter, opts) do$/;"	f
run_prepare_execute	deps/db_connection/lib/db_connection.ex	/^  defp run_prepare_execute(conn, query, params, meter, opts) do$/;"	f
run_query	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp run_query(sql, opts) do$/;"	f
run_query	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp run_query(sql, opts) do$/;"	f
run_query	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  defp run_query(opts, sql_command) do$/;"	f
run_rollback	deps/db_connection/lib/db_connection.ex	/^  defp run_rollback(conn, meter, opts) do$/;"	f
run_seeds	lib/release_tasks.ex	/^  defp run_seeds do$/;"	f
run_seeds_for	lib/release_tasks.ex	/^  defp run_seeds_for(repo) do$/;"	f
run_status	deps/db_connection/lib/db_connection.ex	/^  defp run_status(conn, meter, opts) do$/;"	f
run_stream_fetch	deps/db_connection/lib/db_connection.ex	/^  defp run_stream_fetch(conn, args, meter, opts) do$/;"	f
run_task	deps/credo/lib/credo/cli/command.ex	/^      defp run_task(exec, task), do: Credo.Execution.Task.run(task, exec)$/;"	f
run_transaction	deps/db_connection/lib/db_connection.ex	/^  defp run_transaction(conn, fun, run, opts) do$/;"	f
run_with_cmd	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp run_with_cmd(cmd, opts, opt_args) do$/;"	f
run_with_cmd	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp run_with_cmd(cmd, opts, opt_args) do$/;"	f
run_with_timing	deps/credo/lib/credo/execution/task.ex	/^  defp run_with_timing(task, exec, opts) do$/;"	f
runner	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp runner do$/;"	f
runs all migrations	deps/ecto_sql/integration_test/sql/migrator.exs	/^  test "runs all migrations", config do$/;"	t
runs inside a sandbox that is rolled back on checkin	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "runs inside a sandbox that is rolled back on checkin" do$/;"	t
runs inside a sandbox that may be disabled	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "runs inside a sandbox that may be disabled" do$/;"	t
runs inside a sandbox with caller data when preloading associations	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "runs inside a sandbox with caller data when preloading associations" do$/;"	t
runs inside a sidebox with custom ownership timeout	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "runs inside a sidebox with custom ownership timeout" do$/;"	t
runtime!	deps/ecto/lib/ecto/query/builder/windows.ex	/^  def runtime!(query, runtime, file, line) do$/;"	f
runtime_aliases	deps/ecto/lib/ecto/query/builder/join.ex	/^  def runtime_aliases(aliases, name, join_count) when is_atom(name) and is_integer(join_count) do$/;"	f
runtime_aliases	deps/ecto/lib/ecto/query/builder/join.ex	/^  def runtime_aliases(aliases, nil, _), do: aliases$/;"	f
runtime_config	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def runtime_config(type, repo, otp_app, opts) do$/;"	f
runtime_error!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp runtime_error!(value) do$/;"	f
runtime_field!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp runtime_field!(query, key, kw, acc) do$/;"	f
safe32_chars	deps/puid/lib/puid.ex	/^        defp safe32_chars(0, _, _, _, string), do: string$/;"	f
safe32_chars	deps/puid/lib/puid.ex	/^        defp safe32_chars(n, bits, uniform_offset, uniform_bytes, string) do$/;"	f
safe_atom_name	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp safe_atom_name(_), do: nil$/;"	f
safe_atom_name	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp safe_atom_name(token) when is_binary(token) do$/;"	f
safe_atom_name	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp safe_atom_name(token) when is_list(token) do$/;"	f
safe_atom_name	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp safe_atom_name({:ok, [{:atom, {_, _, _}, atom} | _]}, token) do$/;"	f
safe_atom_name	deps/credo/lib/credo/check/readability/prefer_unquoted_atoms.ex	/^  defp safe_atom_name({:ok, _, _, [{:atom, _, atom} | _]}, token) do$/;"	f
safe_binary_to_term	deps/plug_crypto/lib/plug/crypto.ex	/^  def safe_binary_to_term(binary, opts \\\\ []) do$/;"	f
safe_dump	deps/ecto/lib/ecto/schema/loader.ex	/^  def safe_dump(struct, types, dumper) do$/;"	f
salutation	deps/credo/lib/credo/check/warning/unused_string_operation.ex	/^      def salutation(username) do$/;"	f
samba_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def samba_style, do: HTML.SambaStyle.style()$/;"	f
same_binary	deps/ecto/lib/ecto/type.ex	/^  defp same_binary(_), do: :error$/;"	f
same_binary	deps/ecto/lib/ecto/type.ex	/^  defp same_binary(term) when is_binary(term), do: {:ok, term}$/;"	f
same_boolean	deps/ecto/lib/ecto/type.ex	/^  defp same_boolean(_), do: :error$/;"	f
same_boolean	deps/ecto/lib/ecto/type.ex	/^  defp same_boolean(term) when is_boolean(term), do: {:ok, term}$/;"	f
same_date	deps/ecto/lib/ecto/type.ex	/^  defp same_date(%Date{} = term), do: {:ok, term}$/;"	f
same_date	deps/ecto/lib/ecto/type.ex	/^  defp same_date(_), do: :error$/;"	f
same_decimal	deps/ecto/lib/ecto/type.ex	/^  defp same_decimal(%Decimal{} = term), do: check_decimal(term, true)$/;"	f
same_decimal	deps/ecto/lib/ecto/type.ex	/^  defp same_decimal(_), do: :error$/;"	f
same_decimal	deps/ecto/lib/ecto/type.ex	/^  defp same_decimal(term) when is_float(term), do: {:ok, Decimal.from_float(term)}$/;"	f
same_decimal	deps/ecto/lib/ecto/type.ex	/^  defp same_decimal(term) when is_integer(term), do: {:ok, Decimal.new(term)}$/;"	f
same_integer	deps/ecto/lib/ecto/type.ex	/^  defp same_integer(_), do: :error$/;"	f
same_integer	deps/ecto/lib/ecto/type.ex	/^  defp same_integer(term) when is_integer(term), do: {:ok, term}$/;"	f
same_map	deps/ecto/lib/ecto/type.ex	/^  defp same_map(_), do: :error$/;"	f
same_map	deps/ecto/lib/ecto/type.ex	/^  defp same_map(term) when is_map(term), do: {:ok, term}$/;"	f
sample_id	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp sample_id(opts) do$/;"	f
sanitize_additional_items_attribute	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp sanitize_additional_items_attribute(schema) do$/;"	f
sanitize_properties_attribute	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp sanitize_properties_attribute(schema) do$/;"	f
sanitized_message	deps/db_connection/lib/db_connection/connection.ex	/^  defp sanitized_message(%KeyError{} = e), do: ": #{Exception.message(%{e | term: nil})}"$/;"	f
sanitized_message	deps/db_connection/lib/db_connection/connection.ex	/^  defp sanitized_message(_), do: ""$/;"	f
save_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp save_manifest(%{"latest" => _, "version" => _, "digests" => _} = manifest, output_path) do$/;"	f
save_manifest	deps/phoenix/lib/phoenix/digester.ex	/^  defp save_manifest(files, latest, old_digests, output_path) do$/;"	f
says welcome on the home page	deps/phoenix/lib/phoenix/test/conn_test.ex	/^      test "says welcome on the home page" do$/;"	t
scale	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp scale(coef, 0), do: coef$/;"	f
scale	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp scale(coef, diff) when diff < 0, do: div(coef, pow10(-diff))$/;"	f
scale	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp scale(coef, diff) when diff > 0, do: coef * pow10(diff)$/;"	f
scale_down	deps/decimal/lib/decimal.ex	/^  defp scale_down(num, den, exp) do$/;"	f
scale_up	deps/decimal/lib/decimal.ex	/^  defp scale_up(num, den, exp) when num >= den, do: {num, exp}$/;"	f
scale_up	deps/decimal/lib/decimal.ex	/^  defp scale_up(num, den, exp), do: scale_up(num <<< 1, den, exp - 1)$/;"	f
scan_lines	deps/earmark/lib/earmark/line_scanner.ex	/^  def scan_lines(lines, options \\\\ %Options{}, recursive \\\\ false)$/;"	f
scan_lines	deps/earmark/lib/earmark/line_scanner.ex	/^  def scan_lines(lines, options, recursive) do$/;"	f
schedule_inactive_shutdown	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  defp schedule_inactive_shutdown(window_ms) do$/;"	f
schedule_next_heartbeat	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp schedule_next_heartbeat(state) do$/;"	f
schema	deps/ecto/lib/ecto/schema.ex	/^  defmacro schema(source, [do: block]) do$/;"	a
schema	deps/ecto/lib/ecto/schema.ex	/^  defp schema(caller, source, meta?, type, block) do$/;"	f
schema	deps/ex_json_schema/lib/ex_json_schema/schema/draft4.ex	/^  def schema, do: @schema$/;"	f
schema_access_template	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp schema_access_template(%Context{schema: schema}) do$/;"	f
schema_associations	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp schema_associations(schema) do$/;"	f
schema_defaults	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp schema_defaults(attrs) do$/;"	f
schema_embeds	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp schema_embeds(schema) do$/;"	f
schema_fields	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp schema_fields(schema) do$/;"	f
schema_for_association_join!	deps/ecto/lib/ecto/query/planner.ex	/^  defp schema_for_association_join!(query, join, source) do$/;"	f
schema_non_virtual_fields	deps/ex_machina/lib/ex_machina/ecto_strategy.ex	/^  defp schema_non_virtual_fields(schema) do$/;"	f
schema_type	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp schema_type(:text), do: :string$/;"	f
schema_type	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp schema_type(:uuid), do: Ecto.UUID$/;"	f
schema_type	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp schema_type(val) do$/;"	f
schemaless calendar types	deps/ecto/integration_test/cases/type.exs	/^  test "schemaless calendar types" do$/;"	t
schemaless types	deps/ecto/integration_test/cases/type.exs	/^  test "schemaless types" do$/;"	t
scope	deps/phoenix/lib/phoenix/router.ex	/^  defmacro scope(options, do: context) do$/;"	a
scope	deps/phoenix/lib/phoenix/router.ex	/^  defmacro scope(path, alias, options, do: context) do$/;"	a
scope	deps/phoenix/lib/phoenix/router.ex	/^  defmacro scope(path, options, do: context) do$/;"	a
scope_count	deps/credo/lib/credo/cli/output/summary.ex	/^  defp scope_count(%SourceFile{} = source_file) do$/;"	f
scope_count	deps/credo/lib/credo/cli/output/summary.ex	/^  defp scope_count([]), do: 0$/;"	f
scope_count	deps/credo/lib/credo/cli/output/summary.ex	/^  defp scope_count(source_files) when is_list(source_files) do$/;"	f
scope_count_traverse	deps/credo/lib/credo/cli/output/summary.ex	/^    defp scope_count_traverse({unquote(op), _, _} = ast, count) do$/;"	f
scope_count_traverse	deps/credo/lib/credo/cli/output/summary.ex	/^  defp scope_count_traverse(ast, count) do$/;"	f
scope_factory	test/support/boruta_factory.ex	/^  def scope_factory do$/;"	f
scope_fixture	test/boruta/admin_test.exs	/^  def scope_fixture(attrs \\\\ %{}) do$/;"	f
scope_for	deps/credo/lib/credo/check.ex	/^  defp scope_for(source_file, line: line_no) do$/;"	f
scope_list	deps/credo/lib/credo/check.ex	/^  defp scope_list(%SourceFile{filename: filename} = source_file) do$/;"	f
scope_priorities	deps/credo/lib/credo/priority.ex	/^  def scope_priorities(%SourceFile{} = source_file) do$/;"	f
scoped_alias	deps/phoenix/lib/phoenix/router.ex	/^  def scoped_alias(router_module, alias) do$/;"	f
script_name	deps/phoenix/lib/phoenix/endpoint.ex	/^      def script_name do$/;"	f
script_name	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def script_name(endpoint) do$/;"	f
scrub?	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub?(" " <> rest), do: scrub?(rest)$/;"	f
scrub?	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub?(""), do: true$/;"	f
scrub?	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub?(_), do: false$/;"	f
scrub_param	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub_param(%{__struct__: mod} = struct) when is_atom(mod) do$/;"	f
scrub_param	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub_param(%{} = param) do$/;"	f
scrub_param	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub_param(param) do$/;"	f
scrub_param	deps/phoenix/lib/phoenix/controller.ex	/^  defp scrub_param(param) when is_list(param) do$/;"	f
scrub_params	deps/phoenix/lib/phoenix/controller.ex	/^  def scrub_params(conn, required_key) when is_binary(required_key) do$/;"	f
secret	lib/boruta/utils/token_generator.ex	/^  def secret(_) do$/;"	f
secure_compare	deps/plug_crypto/lib/plug/crypto.ex	/^  def secure_compare(left, right) when is_binary(left) and is_binary(right) do$/;"	f
secure_compare	deps/plug_crypto/lib/plug/crypto.ex	/^  defp secure_compare(<<>>, <<>>, acc) do$/;"	f
secure_compare	deps/plug_crypto/lib/plug/crypto.ex	/^  defp secure_compare(<<x, left::binary>>, <<y, right::binary>>, acc) do$/;"	f
seed	deps/db_connection/lib/db_connection/backoff.ex	/^  defp seed() do$/;"	f
seed	lib/release_tasks.ex	/^  def seed(_argv) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match("*" <> argument, buffer, context) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match(":" <> argument, buffer, context) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match(<<>>, buffer, _context) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match(<<h, t::binary>>, buffer, context) do$/;"	f
segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp segments(segments, [], _reserved, trailing_slash?, _opts) do$/;"	f
segments	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp segments(segments, query, reserved, trailing_slash?, _opts) when is_list(query) or is_map(query) do$/;"	f
select	deps/ecto/lib/ecto/query.ex	/^  defmacro select(query, binding \\\\ [], expr) do$/;"	a
select	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp select(%{select: %{fields: fields}, distinct: distinct} = query, sources) do$/;"	f
select	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp select([], _sources, _query),$/;"	f
select	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp select(fields, sources, query) do$/;"	f
select	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp select(%{select: %{fields: fields}} = query, select_distinct, sources) do$/;"	f
select	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp select(%{select: %{fields: fields}, distinct: distinct} = query, sources) do$/;"	f
select	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp select([], _sources, _query) do$/;"	f
select	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp select(fields, sources, query) do$/;"	f
select!	deps/ecto/lib/ecto/query/builder/select.ex	/^  def select!(kind, query, fields, file, line) do$/;"	f
select_dump	deps/ecto/lib/ecto/query/planner.ex	/^  defp select_dump(fields, dumper, ix) do$/;"	f
select_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp select_expr(value, sources, query), do: expr(value, sources, query)$/;"	f
select_expr	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp select_expr({:not, _, [expr]}, sources, query) do$/;"	f
select_field	deps/ecto/lib/ecto/query/planner.ex	/^  defp select_field(field, ix) do$/;"	f
select_fields	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp select_fields([], _sources, _query),$/;"	f
select_fields	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp select_fields(fields, sources, query) do$/;"	f
select_merge	deps/ecto/lib/ecto/query.ex	/^  defmacro select_merge(query, binding \\\\ [], expr) do$/;"	a
select_versions	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  defp select_versions(table, config) do$/;"	f
select_versions	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  defp select_versions(table, config) do$/;"	f
send	deps/connection/lib/connection.ex	/^        def send(conn, data), do: Connection.call(conn, {:send, data})$/;"	f
send_and_receive	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp send_and_receive(parent, ref, value) do$/;"	f
send_chunked	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_chunked(state, _status, _headers), do: {:ok, "", %{state | chunks: ""}}$/;"	f
send_chunked	deps/plug/lib/plug/conn.ex	/^  def send_chunked(%Conn{adapter: {adapter, payload}, owner: owner} = conn, status) do$/;"	f
send_chunked	deps/plug/lib/plug/conn.ex	/^  def send_chunked(%Conn{state: state}, status)$/;"	f
send_download	deps/phoenix/lib/phoenix/controller.ex	/^  def send_download(conn, kind, opts \\\\ [])$/;"	f
send_download	deps/phoenix/lib/phoenix/controller.ex	/^  def send_download(conn, {:binary, contents}, opts) do$/;"	f
send_download	deps/phoenix/lib/phoenix/controller.ex	/^  def send_download(conn, {:file, path}, opts) do$/;"	f
send_entire_file	deps/plug/lib/plug/static.ex	/^  defp send_entire_file(conn, path, options) do$/;"	f
send_file	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_file(%{method: "HEAD"} = state, status, headers, _path, _offset, _length) do$/;"	f
send_file	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_file(state, status, headers, path, offset, length) do$/;"	f
send_file	deps/plug/lib/plug/conn.ex	/^  def send_file($/;"	f
send_file	deps/plug/lib/plug/conn.ex	/^  def send_file(%Conn{state: state}, status, _file, _offset, _length)$/;"	f
send_file	deps/plug/lib/plug/conn.ex	/^  def send_file(conn, status, file, offset \\\\ 0, length \\\\ :all)$/;"	f
send_json	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp send_json(conn, data) do$/;"	f
send_range	deps/plug/lib/plug/static.ex	/^  defp send_range(conn, path, 0, range_end, file_size, options) when range_end == file_size - 1 do$/;"	f
send_range	deps/plug/lib/plug/static.ex	/^  defp send_range(conn, path, range_start, range_end, file_size, _options) do$/;"	f
send_resp	deps/phoenix/lib/phoenix/controller.ex	/^  defp send_resp(conn, default_status, default_content_type, body) do$/;"	f
send_resp	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_resp(%{method: "HEAD"} = state, status, headers, _body) do$/;"	f
send_resp	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_resp(state, status, headers, body) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{adapter: {adapter, payload}, state: :set, owner: owner} = conn) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{state: :unset}) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{} = conn, status, body) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{}) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(conn)$/;"	f
send_socket_close	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp send_socket_close(%{transport_pid: transport_pid}, reason) do$/;"	f
send_stuttered_heartbeat	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp send_stuttered_heartbeat(pid, interval) do$/;"	f
sent_informs	deps/plug/lib/plug/test.ex	/^  def sent_informs(%Conn{adapter: {Plug.Adapters.Test.Conn, %{ref: ref}}}) do$/;"	f
sent_pushes	deps/plug/lib/plug/test.ex	/^  def sent_pushes(%Conn{adapter: {Plug.Adapters.Test.Conn, %{ref: ref}}}) do$/;"	f
sent_resp	deps/plug/lib/plug/test.ex	/^  def sent_resp(%Conn{adapter: {Plug.Adapters.Test.Conn, %{ref: ref}}}) do$/;"	f
sequence	deps/ex_machina/lib/ex_machina.ex	/^  def sequence(name), do: ExMachina.Sequence.next(name)$/;"	f
sequence	deps/ex_machina/lib/ex_machina.ex	/^  def sequence(name, formatter), do: ExMachina.Sequence.next(name, formatter)$/;"	f
serialize_close	deps/phoenix/lib/phoenix/socket.ex	/^  defp serialize_close(%{serializer: serializer}, topic, join_ref) do$/;"	f
serve_range	deps/plug/lib/plug/static.ex	/^  defp serve_range(conn, _file_info, path, _range, options) do$/;"	f
serve_range	deps/plug/lib/plug/static.ex	/^  defp serve_range(conn, file_info, path, [range], options) do$/;"	f
serve_static	deps/plug/lib/plug/static.ex	/^  defp serve_static(:error, conn, _segments, _range, _options) do$/;"	f
serve_static	deps/plug/lib/plug/static.ex	/^  defp serve_static({content_encoding, file_info, path}, conn, segments, range, options) do$/;"	f
server	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp server() do$/;"	f
server?	deps/phoenix/lib/phoenix/endpoint.ex	/^  def server?(otp_app, endpoint) when is_atom(otp_app) and is_atom(endpoint) do$/;"	f
server?	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def server?(conf) when is_list(conf) do$/;"	f
server?	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def server?(otp_app, endpoint) when is_atom(otp_app) and is_atom(endpoint) do$/;"	f
server_children	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp server_children(mod, config, otp_app, server?) do$/;"	f
server_ref	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp server_ref(endpoint_id, id, pid, topic) do$/;"	f
session_key	deps/plug/lib/plug/conn.ex	/^  defp session_key(atom) when is_atom(atom), do: Atom.to_string(atom)$/;"	f
session_key	deps/plug/lib/plug/conn.ex	/^  defp session_key(binary) when is_binary(binary), do: binary$/;"	f
set	deps/credo/lib/credo/execution/execution_issues.ex	/^  def set(%Execution{issues_pid: pid}, issues) do$/;"	f
set_belongs_to_primary_key	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp set_belongs_to_primary_key(record, belongs_to, association) do$/;"	f
set_canonical_url	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp set_canonical_url(config, filename) do$/;"	f
set_command_and_path	deps/credo/lib/credo/execution/task/determine_command.ex	/^  defp set_command_and_path(exec, _options, nil, _path), do: exec$/;"	f
set_command_and_path	deps/credo/lib/credo/execution/task/determine_command.ex	/^  defp set_command_and_path(exec, options, command, path) do$/;"	f
set_command_and_path	deps/credo/lib/credo/execution/task/set_default_command.ex	/^  defp set_command_and_path(exec, options, command, path) do$/;"	f
set_compatible_tls_defaults	deps/plug/lib/plug/ssl.ex	/^  defp set_compatible_tls_defaults(options) do$/;"	f
set_config_comments	deps/credo/lib/credo/cli/task/prepare_checks_to_run.ex	/^  defp set_config_comments(exec, source_files) do$/;"	f
set_context	deps/decimal/lib/decimal.ex	/^  def set_context(%Context{} = context) do$/;"	f
set_initializing_plugin	deps/credo/lib/credo/execution.ex	/^  def set_initializing_plugin(%__MODULE__{initializing_plugin: mod1}, mod2) do$/;"	f
set_initializing_plugin	deps/credo/lib/credo/execution.ex	/^  def set_initializing_plugin(%__MODULE__{initializing_plugin: nil} = exec, plugin_mod) do$/;"	f
set_initializing_plugin	deps/credo/lib/credo/execution.ex	/^  def set_initializing_plugin(exec, nil) do$/;"	f
set_issues	deps/credo/lib/credo/execution.ex	/^  def set_issues(exec, issues) do$/;"	f
set_managed_tls_defaults	deps/plug/lib/plug/ssl.ex	/^  defp set_managed_tls_defaults(options) do$/;"	f
set_messages	deps/earmark/lib/earmark/message.ex	/^  def set_messages(c = %Context{}, messages), do: put_in(c.options.messages, messages)$/;"	f
set_messages	deps/earmark/lib/earmark/message.ex	/^  def set_messages(container, messages)$/;"	f
set_mode	deps/mox/lib/mox/server.ex	/^  def set_mode(owner_pid, mode) do$/;"	f
set_mox_from_context	deps/mox/lib/mox.ex	/^  def set_mox_from_context(%{async: true} = _context), do: set_mox_private()$/;"	f
set_mox_from_context	deps/mox/lib/mox.ex	/^  def set_mox_from_context(_context), do: set_mox_global()$/;"	f
set_mox_global	deps/mox/lib/mox.ex	/^  def set_mox_global(context \\\\ %{}) do$/;"	f
set_mox_private	deps/mox/lib/mox.ex	/^  def set_mox_private(_context \\\\ %{}), do: Mox.Server.set_mode(self(), :private)$/;"	f
set_parent_and_current_task	deps/credo/lib/credo/execution.ex	/^  def set_parent_and_current_task(exec, parent_task, current_task) do$/;"	f
set_persisted_belongs_to_ids	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp set_persisted_belongs_to_ids(record = %{__struct__: struct}) do$/;"	f
set_request_id	deps/plug/lib/plug/request_id.ex	/^  defp set_request_id({conn, request_id}, header) do$/;"	f
set_secure_defaults	deps/plug/lib/plug/ssl.ex	/^  defp set_secure_defaults(options) do$/;"	f
set_strict	deps/credo/lib/credo/execution.ex	/^  def set_strict(%__MODULE__{strict: false} = exec) do$/;"	f
set_strict	deps/credo/lib/credo/execution.ex	/^  def set_strict(%__MODULE__{strict: true} = exec) do$/;"	f
set_strict	deps/credo/lib/credo/execution.ex	/^  def set_strict(exec)$/;"	f
set_strict	deps/credo/lib/credo/execution.ex	/^  def set_strict(exec), do: exec$/;"	f
set_strong_tls_defaults	deps/plug/lib/plug/ssl.ex	/^  defp set_strong_tls_defaults(options) do$/;"	f
set_transaction_isolation_level	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  defp set_transaction_isolation_level(repo, isolation) do$/;"	f
set_value	deps/earmark/lib/earmark/context.ex	/^  def set_value(%__MODULE__{} = ctx, value) do$/;"	f
setopts	deps/postgrex/lib/postgrex/protocol.ex	/^  defp setopts(%{sock: {mod, sock}} = s, opts, buffer) do$/;"	f
setopts	deps/postgrex/lib/postgrex/protocol.ex	/^  defp setopts(:gen_tcp, sock, opts), do: :inet.setopts(sock, opts)$/;"	f
setopts	deps/postgrex/lib/postgrex/protocol.ex	/^  defp setopts(:ssl, sock, opts), do: :ssl.setopts(sock, opts)$/;"	f
shard_multicall	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  defp shard_multicall(tracker_name, message) do$/;"	f
share_and_reply	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp share_and_reply(%{checkouts: checkouts} = state, shared, caller) do$/;"	f
shift	deps/crypto_rand/lib/crypto_rand.ex	/^  defp shift(bits, offset, bytes) do$/;"	f
shout broadcasts to	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.channel/channel_test.exs	/^  test "shout broadcasts to <%= singular %>:lobby", %{socket: socket} do$/;"	t
shout broadcasts to	deps/phoenix/priv/templates/phx.gen.channel/channel_test.exs	/^  test "shout broadcasts to <%= singular %>:lobby", %{socket: socket} do$/;"	t
show	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def show(conn, %{"id" => id}) do$/;"	f
show	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def show(conn, %{"id" => id}) do$/;"	f
show	deps/phoenix/lib/phoenix/controller.ex	/^        def show(conn, %{"id" => id}) do$/;"	f
show	deps/phoenix/lib/phoenix/controller.ex	/^        def show(conn, %{"id" => id}, current_user) do$/;"	f
show	deps/phoenix/lib/phoenix/controller.ex	/^        def show(conn, _params) do$/;"	f
show	deps/phoenix/lib/phoenix/controller.ex	/^        def show(conn, params) do$/;"	f
show	deps/phoenix/lib/phoenix/controller.ex	/^      def show(conn, _params) do$/;"	f
show	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def show(conn, %{"id" => id}) do$/;"	f
show	deps/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def show(conn, %{"id" => id}) do$/;"	f
show_count_skipped	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp show_count_skipped(warnings, filtered_warnings, filter_map) do$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle("", _), do: ""$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle(<<_::binary-size(1)>> = string, _), do: string$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle([], _), do: []$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle([_] = list, _), do: list$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle(enumerable, rand_bytes) do$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle(list, rand_bytes) when is_list(list) do$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle(source, rand_bytes \\\\ &:crypto.strong_rand_bytes\/1)$/;"	f
shuffle	deps/crypto_rand/lib/crypto_rand.ex	/^  def shuffle(string, rand_bytes) when is_binary(string),$/;"	f
shuffle_list	deps/crypto_rand/lib/crypto_rand.ex	/^  defp shuffle_list(list, len, rand_bytes) do$/;"	f
shutdown	deps/plug/lib/plug/adapters/cowboy.ex	/^  def shutdown(ref) do$/;"	f
shutdown	deps/plug/lib/plug/adapters/cowboy2.ex	/^  def shutdown(ref) do$/;"	f
shutdown_duplicate_channel	deps/phoenix/lib/phoenix/socket.ex	/^  defp shutdown_duplicate_channel(pid) do$/;"	f
sidebar_entries	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_entries({group, docs}) do$/;"	f
sidebar_extras	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_extras(extras) do$/;"	f
sidebar_module	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_module({id, modules}) do$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:behaviour), do: "modules"$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:exception), do: "modules"$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:extra), do: "extras"$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:module), do: "modules"$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:protocol), do: "modules"$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:search), do: "search"$/;"	f
sidebar_type	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  defp sidebar_type(:task), do: "tasks"$/;"	f
sigil	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^  def sigil(ldelim, rdelim, ranges, middle, ttype, attrs \\\\ %{}) do$/;"	f
sigil?	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp sigil?(atom) do$/;"	f
sign	deps/phoenix/lib/phoenix/token.ex	/^  def sign(context, salt, data, opts \\\\ []) when is_binary(salt) do$/;"	f
sign	deps/plug_crypto/lib/plug/crypto.ex	/^  def sign(key_base, salt, data, opts \\\\ []) when is_binary(key_base) and is_binary(salt) do$/;"	f
sign	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  def sign(message, secret, digest_type \\\\ :sha256)$/;"	f
sign_token	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp sign_token(endpoint, data, opts) do$/;"	f
signing_input	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  defp signing_input(protected, payload) when is_binary(protected) and is_binary(payload) do$/;"	f
single_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp single_change(%{on_replace: on_replace} = relation, new, current_pks_fun, new_pks_fun, fun, current) do$/;"	f
single_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp single_change(_relation, new, _current_pks_fun, _new_pks_fun, fun, nil) do$/;"	f
single_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp single_change(_relation, nil, _current_pks_fun, _new_pks_fun, fun, current) do$/;"	f
single_change	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp single_change(new, current, fun, allowed_actions, skippable?) do$/;"	f
single_quote	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp single_quote(value), do: [?', escape_string(value), ?']$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?(%Regex{} = pattern, {_, _, _, short_description}) do$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?(_, _), do: false$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?({file, warning, line}, {file, warning, line, _}), do: true$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?({file, warning}, {file, warning, _, _}), do: true$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?({file}, {file, _, _, _}), do: true$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?({short_description, warning, line}, {_, warning, line, short_description}), do: true$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?({short_description, warning}, {_, warning, _, short_description}), do: true$/;"	f
skip?	deps/dialyxir/lib/dialyxir/project.ex	/^  defp skip?({short_description}, {_, _, _, short_description}), do: true$/;"	f
skip?	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp skip?(%{valid?: true, changes: empty, action: :update}) when empty == %{},$/;"	f
skip?	deps/ecto/lib/ecto/changeset/relation.ex	/^  defp skip?(_changeset),$/;"	f
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, skip_token, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, {end_token,_T,Push}, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, {end_token,_T}, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, {error,_S}, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, {skip_token,Push}, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, {token,_T,Push}, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/link_text_lexer.erl	/^skip_cont(Rest, Line, {token,_T}, Error) ->$/;"	f	module:link_text_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, skip_token, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, {end_token,_T,Push}, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, {end_token,_T}, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, {error,_S}, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, {skip_token,Push}, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, {token,_T,Push}, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/earmark/src/string_lexer.erl	/^skip_cont(Rest, Line, {token,_T}, Error) ->$/;"	f	module:string_lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, skip_token, Error) ->$/;"	f	module:lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, {end_token,_T,Push}, Error) ->$/;"	f	module:lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, {end_token,_T}, Error) ->$/;"	f	module:lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, {error,_S}, Error) ->$/;"	f	module:lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, {skip_token,Push}, Error) ->$/;"	f	module:lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, {token,_T,Push}, Error) ->$/;"	f	module:lexer
skip_cont	deps/erlex/src/lexer.erl	/^skip_cont(Rest, Line, {token,_T}, Error) ->$/;"	f	module:lexer
skip_csrf_protection?	deps/plug/lib/plug/csrf_protection.ex	/^  defp skip_csrf_protection?(%Plug.Conn{private: %{plug_skip_csrf_protection: true}}), do: true$/;"	f
skip_csrf_protection?	deps/plug/lib/plug/csrf_protection.ex	/^  defp skip_csrf_protection?(%Plug.Conn{}), do: false$/;"	f
skip_preamble	deps/plug/src/plug_multipart.erl	/^skip_preamble(Stream, Boundary) ->$/;"	f	module:plug_multipart
skip_safety_warnings?	deps/ecto/lib/mix/tasks/ecto.drop.ex	/^  defp skip_safety_warnings? do$/;"	f
skip_safety_warnings?	deps/ecto_sql/lib/mix/tasks/ecto.load.ex	/^  defp skip_safety_warnings? do$/;"	f
skip_specs_types_and_capture	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp skip_specs_types_and_capture([{:at_op, {line, _, _}, :@} | tokens]) do$/;"	f
skip_specs_types_and_capture	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp skip_specs_types_and_capture([{:capture_op, _, _} | tokens]) do$/;"	f
skip_specs_types_and_capture	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp skip_specs_types_and_capture([{:identifier, _, :&} | [{:identifier, _, :\/} | tokens]]) do$/;"	f
skip_specs_types_and_capture	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp skip_specs_types_and_capture(tokens), do: tokens$/;"	f
skip_tokens	deps/earmark/src/link_text_lexer.erl	/^skip_tokens(Ics, Line, Error) ->$/;"	f	module:link_text_lexer
skip_tokens	deps/earmark/src/link_text_lexer.erl	/^skip_tokens(S0, Ics0, L0, Tcs, Tlen0, Tline, Error, A0, Alen0) ->$/;"	f	module:link_text_lexer
skip_tokens	deps/earmark/src/string_lexer.erl	/^skip_tokens(Ics, Line, Error) ->$/;"	f	module:string_lexer
skip_tokens	deps/earmark/src/string_lexer.erl	/^skip_tokens(S0, Ics0, L0, Tcs, Tlen0, Tline, Error, A0, Alen0) ->$/;"	f	module:string_lexer
skip_tokens	deps/erlex/src/lexer.erl	/^skip_tokens(Ics, Line, Error) ->$/;"	f	module:lexer
skip_tokens	deps/erlex/src/lexer.erl	/^skip_tokens(S0, Ics0, L0, Tcs, Tlen0, Tline, Error, A0, Alen0) ->$/;"	f	module:lexer
slice	deps/crypto_rand/lib/crypto_rand.ex	/^  defp slice(bits, offset, bytes) do$/;"	f
slice	deps/db_connection/lib/db_connection.ex	/^  def slice(_), do: {:error, __MODULE__}$/;"	f
slice	deps/ecto_sql/lib/ecto/adapters/sql/stream.ex	/^  def slice(_), do: {:error, __MODULE__}$/;"	f
slice	deps/postgrex/lib/postgrex/stream.ex	/^  def slice(_) do$/;"	f
smartypants	deps/earmark/lib/earmark/context.ex	/^  defp smartypants(text) do$/;"	f
smartypants	deps/earmark/lib/earmark/transform.ex	/^  defp smartypants(text, %{smartypants: true}) do$/;"	f
smartypants	deps/earmark/lib/earmark/transform.ex	/^  defp smartypants(text, _options), do: text$/;"	f
smartypants	deps/earmark/lib/earmark/transform.ex	/^  defp smartypants(text, options)$/;"	f
snake_case?	deps/credo/lib/credo/code/name.ex	/^  def snake_case?(name) do$/;"	f
sock_close	deps/postgrex/lib/postgrex/protocol.ex	/^  defp sock_close(%{sock: {mod, sock}}), do: mod.close(sock)$/;"	f
socket	deps/phoenix/lib/phoenix/channel/server.ex	/^  def socket(pid) do$/;"	f
socket	deps/phoenix/lib/phoenix/endpoint.ex	/^  defmacro socket(path, module, opts \\\\ []) do$/;"	a
socket	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro socket() do$/;"	a
socket	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro socket(id, assigns) do$/;"	a
socket	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro socket(socket_module) do$/;"	a
socket	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defmacro socket(socket_module, socket_id, socket_assigns) do$/;"	a
socket_children	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp socket_children(endpoint) do$/;"	f
socket_path	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp socket_path(path, config) do$/;"	f
socket_path	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp socket_path(path, config) do$/;"	f
socket_paths	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp socket_paths(endpoint, path, socket, opts) do$/;"	f
socket_ref	deps/phoenix/lib/phoenix/channel.ex	/^  def socket_ref(%Socket{joined: true, ref: ref} = socket) when not is_nil(ref) do$/;"	f
socket_ref	deps/phoenix/lib/phoenix/channel.ex	/^  def socket_ref(_socket) do$/;"	f
socket_transports	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp socket_transports(endpoint, path, socket, opts) do$/;"	f
some_func	deps/credo/lib/credo/check/readability/space_after_commas.ex	/^      def some_func(first, second, third) do$/;"	f
some_func	deps/credo/lib/credo/check/readability/space_after_commas.ex	/^      def some_func(first,second,third) do$/;"	f
some_function	deps/credo/lib/credo/check/refactor/nesting.ex	/^        def some_function(parameter1, parameter2) do$/;"	f
sort	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp sort([], [], _mode, compile, runtime) do$/;"	f
sort	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp sort([], kw, _mode, _compile, _runtime) do$/;"	f
sort	deps/ecto/lib/ecto/query/builder/windows.ex	/^  defp sort([key | keys], kw, mode, compile, runtime) do$/;"	f
sort_by_id	deps/ecto/integration_test/cases/preload.exs	/^  defp sort_by_id(values) do$/;"	f
sort_key	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp sort_key(name, arity) do$/;"	f
sort_messages	deps/earmark/lib/earmark/message.ex	/^  def sort_messages(container) do$/;"	f
sort_usernames	deps/credo/lib/credo/check/warning/unused_list_operation.ex	/^      def sort_usernames(usernames) do$/;"	f
source	deps/credo/lib/credo/source_file.ex	/^  def source(%__MODULE__{filename: filename}) do$/;"	f
source	deps/credo/lib/credo/source_file.ex	/^  def source(source_file)$/;"	f
source	deps/ecto/integration_test/cases/repo.exs	/^    test "source (without an ecto schema) on conflict query and conflict target" do$/;"	t
source_and_filename	deps/credo/lib/credo/source_file.ex	/^  def source_and_filename(%__MODULE__{filename: filename} = source_file, _default_filename) do$/;"	f
source_and_filename	deps/credo/lib/credo/source_file.ex	/^  def source_and_filename(source, default_filename) when is_binary(source) do$/;"	f
source_and_filename	deps/credo/lib/credo/source_file.ex	/^  def source_and_filename(source_file_or_source, default_filename \\\\ "nofilename")$/;"	f
source_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp source_cache(%{source: %Ecto.SubQuery{params: inner, cache: key}}, params),$/;"	f
source_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp source_cache(%{source: {:fragment, _, _} = source, prefix: prefix}, params),$/;"	f
source_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp source_cache(%{source: {_, nil} = source, prefix: prefix}, params),$/;"	f
source_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp source_cache(%{source: {bin, schema}, prefix: prefix}, params),$/;"	f
source_file	deps/credo/lib/credo/issue_meta.ex	/^  def source_file(%SourceFile{} = source_file) do$/;"	f
source_file	deps/credo/lib/credo/issue_meta.ex	/^  def source_file(issue_meta)$/;"	f
source_file	deps/credo/lib/credo/issue_meta.ex	/^  def source_file({__MODULE__, source_file, _params}) do$/;"	f
source_file_from_stdin	deps/credo/lib/credo/sources.ex	/^  defp source_file_from_stdin(filename) do$/;"	f
source_files_with_issues	deps/credo/lib/credo/check/consistency/collector.ex	/^  defp source_files_with_issues(frequencies_per_file, most_frequent_match) do$/;"	f
source_fragment	deps/credo/lib/credo/check/readability/large_numbers.ex	/^  defp source_fragment({line_no, column1, _}, issue_meta) do$/;"	f
source_link	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp source_link(%{path: _, url: nil}, _line), do: nil$/;"	f
source_link	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp source_link(source, line) do$/;"	f
source_path	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp source_path(module, config) do$/;"	f
source_repo_priv	deps/ecto_sql/lib/mix/ecto_sql.ex	/^  def source_repo_priv(repo) do$/;"	f
source_take!	deps/ecto/lib/ecto/query/planner.ex	/^  defp source_take!(kind, query, take, field, ix) do$/;"	f
space_between?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def space_between?(arg1, arg2) do$/;"	f
spaces	deps/credo/lib/credo/check/consistency/space_in_parentheses/collector.ex	/^  defp spaces({_line_no, line}, acc) do$/;"	f
span	deps/telemetry/src/telemetry.erl	/^span(EventPrefix, StartMetadata, SpanFunction) ->$/;"	f	module:telemetry
spawn_pid	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  defp spawn_pid do$/;"	f
specific_option_help	deps/earmark/lib/earmark/cli.ex	/^  defp specific_option_help(option) do$/;"	f
split	deps/plug/lib/plug/router/utils.ex	/^  def split(bin) do$/;"	f
split	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  defp split(microsecs) do$/;"	f
split	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  defp split(microsecs) when microsecs < 0 and rem(microsecs, 1_000_000) != 0 do$/;"	f
split	deps/postgrex/lib/postgrex/extensions/timestamp.ex	/^  defp split(secs, microsecs) do$/;"	f
split	lib/boruta/oauth/schemas/scope.ex	/^  def split(nil), do: []$/;"	f
split	lib/boruta/oauth/schemas/scope.ex	/^  def split(scope) do$/;"	f
split_args	deps/credo/lib/credo/cli/options.ex	/^  defp split_args([], current_dir, _) do$/;"	f
split_args	deps/credo/lib/credo/cli/options.ex	/^  defp split_args([head | tail] = args, current_dir, command_names) do$/;"	f
split_extension	deps/postgrex/lib/postgrex/type_module.ex	/^  defp split_extension({:->, _, [head, body]}) do$/;"	f
split_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp split_fragment(<<>>, consumed),$/;"	f
split_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp split_fragment(<<??, rest :: binary>>, consumed),$/;"	f
split_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp split_fragment(<<?\\\\, ??, rest :: binary>>, consumed),$/;"	f
split_fragment	deps/ecto/lib/ecto/query/builder.ex	/^  defp split_fragment(<<first :: utf8, rest :: binary>>, consumed),$/;"	f
split_into_lines	deps/makeup/lib/makeup/lexer.ex	/^  def split_into_lines(tokens) do$/;"	f
split_name	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp split_name(string, name) do$/;"	f
split_parts	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp split_parts(coef, scale) when scale < 0 do$/;"	f
split_parts	deps/postgrex/lib/postgrex/extensions/numeric.ex	/^  defp split_parts(coef, scale) when scale >= 0 do$/;"	f
split_pascal_case	deps/credo/lib/credo/code/name.ex	/^  def split_pascal_case(name) do$/;"	f
split_path	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp split_path(nil), do: []$/;"	f
split_path	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp split_path(path) do$/;"	f
split_range!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp split_range!(_.._, _context), do: true$/;"	f
split_range!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp split_range!(range, context) do$/;"	f
split_range!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp split_range!(x, _context) when is_integer(x), do: true$/;"	f
split_range!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp split_range!({:not, _.._}, _context), do: false$/;"	f
split_range!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp split_range!({:not, x}, _context) when is_integer(x), do: false$/;"	f
split_ranges!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp split_ranges!(ranges, context) do$/;"	f
split_semicolon	deps/plug/lib/plug/conn/utils.ex	/^  defp split_semicolon(<<>>, <<>>, acc, _), do: acc$/;"	f
split_semicolon	deps/plug/lib/plug/conn/utils.ex	/^  defp split_semicolon(<<>>, buffer, acc, _), do: [buffer | acc]$/;"	f
split_semicolon	deps/plug/lib/plug/conn/utils.ex	/^  defp split_semicolon(<<?", rest::binary>>, buffer, acc, quoted?),$/;"	f
split_semicolon	deps/plug/lib/plug/conn/utils.ex	/^  defp split_semicolon(<<?;, rest::binary>>, buffer, acc, false),$/;"	f
split_semicolon	deps/plug/lib/plug/conn/utils.ex	/^  defp split_semicolon(<<char, rest::binary>>, buffer, acc, quoted?),$/;"	f
split_super	deps/postgrex/lib/postgrex/type_module.ex	/^  defp split_super({:->, _, [head, body]}) do$/;"	f
split_table_columns	deps/earmark/lib/earmark/line_scanner.ex	/^  defp split_table_columns(line) do$/;"	f
split_while	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp split_while([id|ids], [struct|structs], id, acc),$/;"	f
split_while	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp split_while(ids, structs, _id, acc),$/;"	f
split_with	deps/credo/lib/credo/backports/enum.ex	/^    def split_with(list, fun), do: Enum.partition(list, fun)$/;"	f
split_with	deps/credo/lib/credo/backports/enum.ex	/^    def split_with(list, fun), do: Enum.split_with(list, fun)$/;"	f
split_with	deps/credo/lib/credo/backports/enum.ex	/^  def split_with(list, fun)$/;"	f
split_with	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp split_with(enumerable, fun) when is_function(fun, 1) do$/;"	f
sql_call	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_call(adapter_meta, callback, args, params, opts) do$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("DELETE" <> _), do: :red$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("INSERT" <> _), do: :green$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("LOCK" <> _), do: :white$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("ROLLBACK" <> _), do: :red$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("SELECT" <> _), do: :cyan$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("UPDATE" <> _), do: :yellow$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("begin" <> _), do: :magenta$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color("commit" <> _), do: :magenta$/;"	f
sql_color	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp sql_color(_), do: nil$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(%Decimal{coef: 0, exp: exp} = num),$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(%Decimal{coef: :qNaN} = num),$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(%Decimal{coef: :sNaN} = num),$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(%Decimal{sign: -1} = num),$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(%Decimal{sign: 1, coef: :inf} = num),$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(%Decimal{sign: 1, coef: coef, exp: exp}) do$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  def sqrt(num) do$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  defp sqrt(coef, shift, exp) do$/;"	f
sqrt	deps/decimal/lib/decimal.ex	/^  defp sqrt(shifted_coef, shift, exp, exact) do$/;"	f
sqrt_loop	deps/decimal/lib/decimal.ex	/^  defp sqrt_loop(coef, guess) do$/;"	f
ssl	deps/postgrex/lib/postgrex/protocol.ex	/^  defp ssl(s, status) do$/;"	f
ssl_connect	deps/postgrex/lib/postgrex/protocol.ex	/^  defp ssl_connect(%{sock: {:gen_tcp, sock}, timeout: timeout} = s, status) do$/;"	f
ssl_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp ssl_recv(%{sock: {:gen_tcp, sock}} = s, status) do$/;"	f
standard_token_types	deps/makeup/lib/makeup/token/utils.ex	/^  def standard_token_types do$/;"	f
start	deps/bunt/lib/bunt.ex	/^  def start(_, _), do: {:ok, self()}$/;"	f
start	deps/connection/lib/connection.ex	/^  def start(mod, args, opts \\\\ []) do$/;"	f
start	deps/connection/lib/connection.ex	/^  defp start(mod, args, options, link) do$/;"	f
start	deps/credo/lib/credo/application.ex	/^  def start(_type, _args) do$/;"	f
start	deps/db_connection/lib/db_connection/app.ex	/^  def start(_, _) do$/;"	f
start	deps/dialyxir/lib/dialyxir.ex	/^  def start(_, _) do$/;"	f
start	deps/ecto/lib/ecto.ex	/^      def start(_type, _args) do$/;"	f
start	deps/ecto/lib/ecto/application.ex	/^  def start(_type, _args) do$/;"	f
start	deps/ecto_sql/lib/ecto/adapters/sql/application.ex	/^  def start(_type, _args) do$/;"	f
start	deps/ex_doc/lib/ex_doc/application.ex	/^  def start(_type, _args) do$/;"	f
start	deps/ex_machina/lib/ex_machina.ex	/^  def start(_type, _args), do: ExMachina.Sequence.start_link()$/;"	f
start	deps/makeup/lib/makeup/application.ex	/^  def start(_type, _args) do$/;"	f
start	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/application.ex	/^  def start(_type, _args) do$/;"	f
start	deps/mime/lib/mime/application.ex	/^  def start(_, _) do$/;"	f
start	deps/mox/lib/mox/application.ex	/^  def start(_, _) do$/;"	f
start	deps/phoenix/lib/phoenix.ex	/^  def start(_type, _args) do$/;"	f
start	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^  def start() do$/;"	f
start	deps/phoenix_pubsub/lib/phoenix/pubsub/supervisor.ex	/^  def start(_type, _args) do$/;"	f
start	deps/plug/lib/plug/application.ex	/^  def start(_, _) do$/;"	f
start	deps/plug_crypto/lib/plug/crypto/application.ex	/^  def start(_, _) do$/;"	f
start	deps/postgrex/lib/postgrex/app.ex	/^  def start(_, _) do$/;"	f
start	deps/telemetry/src/telemetry_app.erl	/^start(_StartType, _StartArgs) ->$/;"	f	module:telemetry_app
start	lib/boruta/application.ex	/^  def start(_type, _args) do$/;"	f
start_and_end	deps/plug/lib/plug/static.ex	/^  defp start_and_end("-" <> rest, file_size) do$/;"	f
start_and_end	deps/plug/lib/plug/static.ex	/^  defp start_and_end(range, file_size) do$/;"	f
start_backoff	deps/connection/lib/connection.ex	/^  defp start_backoff(:infinity), do: nil$/;"	f
start_backoff	deps/connection/lib/connection.ex	/^  defp start_backoff(timeout) do$/;"	f
start_child	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def start_child({mod, fun, args}, adapter, meta) do$/;"	f
start_child	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^  def start_child(endpoint, name, key, args) do$/;"	f
start_command	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def start_command(command) do$/;"	f
start_crypto_keys	deps/plug_crypto/lib/plug/crypto/application.ex	/^  defp start_crypto_keys do$/;"	f
start_deadline	deps/db_connection/lib/db_connection/holder.ex	/^  defp start_deadline(nil, _, _, _, _) do$/;"	f
start_deadline	deps/db_connection/lib/db_connection/holder.ex	/^  defp start_deadline(timeout, pid, ref, holder, start) do$/;"	f
start_handshake_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  defp start_handshake_timer(:infinity, _), do: :infinity$/;"	f
start_handshake_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  defp start_handshake_timer(timeout, sock) do$/;"	f
start_idle	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp start_idle(now_in_native, %{idle_interval: interval} = codel) do$/;"	f
start_link	deps/connection/lib/connection.ex	/^        def start_link(host, port, opts, timeout \\\\\\\\ 5000) do$/;"	f
start_link	deps/connection/lib/connection.ex	/^  def start_link(mod, args, opts \\\\ []) do$/;"	f
start_link	deps/credo/lib/credo/cli/output/shell.ex	/^  def start_link(opts \\\\ []) do$/;"	f
start_link	deps/credo/lib/credo/service/ets_table_helper.ex	/^      def start_link(opts \\\\ []) do$/;"	f
start_link	deps/db_connection/lib/db_connection.ex	/^  def start_link(conn_mod, opts) do$/;"	f
start_link	deps/db_connection/lib/db_connection/connection.ex	/^  def start_link(mod, opts, pool, tag) do$/;"	f
start_link	deps/db_connection/lib/db_connection/connection_pool.ex	/^  def start_link({mod, opts}) do$/;"	f
start_link	deps/db_connection/lib/db_connection/connection_pool/pool.ex	/^  def start_link(arg) do$/;"	f
start_link	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  def start_link({module, opts}) do$/;"	f
start_link	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def start_link({caller, pool, pool_opts}) do$/;"	f
start_link	deps/db_connection/lib/db_connection/watcher.ex	/^  def start_link(_) do$/;"	f
start_link	deps/ecto/lib/ecto/repo.ex	/^      def start_link(opts \\\\ []) do$/;"	f
start_link	deps/ecto/lib/ecto/repo/registry.ex	/^  def start_link(_opts) do$/;"	f
start_link	deps/ecto/lib/ecto/repo/supervisor.ex	/^  def start_link(repo, otp_app, adapter, opts) do$/;"	f
start_link	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def start_link({parent, repo, module, direction, migrator_direction, log}) do$/;"	f
start_link	deps/ex_doc/lib/ex_doc/refs.ex	/^  def start_link(arg) do$/;"	f
start_link	deps/ex_machina/lib/ex_machina/sequence.ex	/^  def start_link do$/;"	f
start_link	deps/mox/lib/mox/server.ex	/^  def start_link(_options) do$/;"	f
start_link	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  def start_link(_opts) do$/;"	f
start_link	deps/phoenix/lib/phoenix/channel.ex	/^      def start_link(triplet) do$/;"	f
start_link	deps/phoenix/lib/phoenix/channel/server.ex	/^  def start_link(channel, triplet) do$/;"	f
start_link	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def start_link() do$/;"	f
start_link	deps/phoenix/lib/phoenix/config.ex	/^  def start_link(module, config, defaults, opts \\\\ []) do$/;"	f
start_link	deps/phoenix/lib/phoenix/endpoint.ex	/^      def start_link(_opts \\\\ []) do$/;"	f
start_link	deps/phoenix/lib/phoenix/endpoint/cowboy2_adapter.ex	/^  def start_link(scheme, endpoint, {m, f, [ref | _] = a}) do$/;"	f
start_link	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  def start_link(scheme, endpoint, {m, f, [ref | _] = a}) do$/;"	f
start_link	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def start_link(otp_app, mod) do$/;"	f
start_link	deps/phoenix/lib/phoenix/endpoint/watcher.ex	/^  def start_link(cmd, args, opts) do$/;"	f
start_link	deps/phoenix/lib/phoenix/presence.ex	/^      def start_link(opts \\\\ []) do$/;"	f
start_link	deps/phoenix/lib/phoenix/presence.ex	/^  def start_link(module, otp_app, task_supervisor, opts) do$/;"	f
start_link	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^    def start_link(worker, ref, i) do$/;"	f
start_link	deps/phoenix/lib/phoenix/socket/pool_supervisor.ex	/^  def start_link(args) do$/;"	f
start_link	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def start_link() do$/;"	f
start_link	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def start_link(arg) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^        def start_link(name, options) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^  def start_link(server_name, local_name) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def start_link(server_name, gc_name) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub/local_supervisor.ex	/^  def start_link(server, pool_size, dispatch_rules) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  def start_link(name, opts) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2.ex	/^  def start_link(opts) when is_list(opts) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/pubsub/pg2_server.ex	/^  def start_link(server_name, pool_size) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^        def start_link(opts) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def start_link(tracker, tracker_opts, pool_opts) do$/;"	f
start_link	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def start_link(tracker, tracker_opts, pool_opts) do$/;"	f
start_link	deps/plug/lib/plug/upload.ex	/^  def start_link(_) do$/;"	f
start_link	deps/postgrex/lib/postgrex.ex	/^  def start_link(opts) do$/;"	f
start_link	deps/postgrex/lib/postgrex/notifications.ex	/^  def start_link(opts) do$/;"	f
start_link	deps/postgrex/lib/postgrex/parameters.ex	/^  def start_link(_) do$/;"	f
start_link	deps/postgrex/lib/postgrex/type_server.ex	/^  def start_link({module, starter, opts}) do$/;"	f
start_link	deps/postgrex/lib/postgrex/type_supervisor.ex	/^  def start_link(_) do$/;"	f
start_link	deps/telemetry/src/telemetry_handler_table.erl	/^start_link() ->$/;"	f	module:telemetry_handler_table
start_link	deps/telemetry/src/telemetry_sup.erl	/^start_link() ->$/;"	f	module:telemetry_sup
start_listener_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  defp start_listener_timer(:infinity, _), do: :infinity$/;"	f
start_listener_timer	deps/postgrex/lib/postgrex/protocol.ex	/^  defp start_listener_timer(timeout, {mod, sock}) do$/;"	f
start_opts	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp start_opts(opts) do$/;"	f
start_owner!	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def start_owner!(repo, opts \\\\ []) do$/;"	f
start_poll	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp start_poll(now, last_sent, %{interval: interval} = codel) do$/;"	f
start_poll	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp start_poll(now, %{interval: interval} = state) do$/;"	f
start_server	deps/credo/lib/credo/execution/execution_config_files.ex	/^  def start_server(exec) do$/;"	f
start_server	deps/credo/lib/credo/execution/execution_issues.ex	/^  def start_server(exec) do$/;"	f
start_server	deps/credo/lib/credo/execution/execution_source_files.ex	/^  def start_server(exec) do$/;"	f
start_server	deps/credo/lib/credo/execution/execution_timing.ex	/^  def start_server(exec) do$/;"	f
start_server	deps/postgrex/lib/postgrex/type_supervisor.ex	/^  defp start_server(module, pair) do$/;"	f
start_servers	deps/credo/lib/credo/execution.ex	/^  defp start_servers(%__MODULE__{} = exec) do$/;"	f
start_services	lib/release_tasks.ex	/^  defp start_services do$/;"	f
start_supervised	deps/db_connection/lib/db_connection/connection_pool/pool.ex	/^  def start_supervised(tag, mod, opts) do$/;"	f
start_timer	deps/db_connection/lib/db_connection/connection.ex	/^  defp start_timer(_, :infinity), do: nil$/;"	f
start_timer	deps/db_connection/lib/db_connection/connection.ex	/^  defp start_timer(pid, timeout) do$/;"	f
start_timer	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp start_timer(_, :infinity), do: nil$/;"	f
start_timer	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp start_timer(pid, timeout) do$/;"	f
started_at	deps/credo/lib/credo/execution/execution_timing.ex	/^  def started_at(exec) do$/;"	f
startup	deps/postgrex/lib/postgrex/protocol.ex	/^  defp startup(s, %{opts: opts} = status) do$/;"	f
static_cache	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp static_cache(digests, value) do$/;"	f
static_file_to_id	deps/ex_doc/lib/ex_doc/formatter/epub/templates.ex	/^  def static_file_to_id(static_file) do$/;"	f
static_integrity	deps/phoenix/lib/phoenix/endpoint.ex	/^      def static_integrity(path) do$/;"	f
static_integrity	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp static_integrity(nil), do: nil$/;"	f
static_integrity	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp static_integrity(sha), do: "sha512-#{sha}"$/;"	f
static_integrity	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_integrity(%Conn{private: %{phoenix_endpoint: endpoint}}, path) do$/;"	f
static_integrity	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_integrity(%_{endpoint: endpoint}, path) do$/;"	f
static_integrity	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_integrity(endpoint, path) when is_atom(endpoint) do$/;"	f
static_lookup	deps/phoenix/lib/phoenix/endpoint.ex	/^      def static_lookup(path) do$/;"	f
static_lookup	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def static_lookup(_endpoint, "\/" <> _ = path) do$/;"	f
static_lookup	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def static_lookup(_endpoint, "\/\/" <> _ = path) do$/;"	f
static_lookup	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def static_lookup(_endpoint, path) when is_binary(path) do$/;"	f
static_path	deps/phoenix/lib/phoenix/endpoint.ex	/^      def static_path(path) do$/;"	f
static_path	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def static_path(endpoint) do$/;"	f
static_path	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_path(%Conn{private: private} = conn, path) do$/;"	f
static_path	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_path(%_{endpoint: endpoint} = conn, path) do$/;"	f
static_path	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_path(endpoint, path) when is_atom(endpoint) do$/;"	f
static_url	deps/phoenix/lib/phoenix/endpoint.ex	/^      def static_url do$/;"	f
static_url	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def static_url(endpoint) do$/;"	f
static_url	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_url(%Conn{private: private}, path) do$/;"	f
static_url	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_url(%_{endpoint: endpoint} = conn, path) do$/;"	f
static_url	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def static_url(endpoint, path) when is_atom(endpoint) do$/;"	f
status	deps/db_connection/lib/db_connection.ex	/^  def status(conn, opts \\\\ []) do$/;"	f
status	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp status(:error, error), do: Plug.Exception.status(error)$/;"	f
status	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp status(:exit, _exit),   do: 500$/;"	f
status	deps/phoenix/lib/phoenix/endpoint/render_errors.ex	/^  defp status(:throw, _throw), do: 500$/;"	f
status	deps/phoenix/lib/phoenix/exceptions.ex	/^  def status(_), do: 400$/;"	f
status	deps/plug/lib/plug/debugger.ex	/^  defp status(:error, error), do: Plug.Exception.status(error)$/;"	f
status	deps/plug/lib/plug/debugger.ex	/^  defp status(_, _), do: 500$/;"	f
status	deps/plug/lib/plug/error_handler.ex	/^  defp status(:error, error), do: Plug.Exception.status(error)$/;"	f
status	deps/plug/lib/plug/error_handler.ex	/^  defp status(:exit, _exit), do: 500$/;"	f
status	deps/plug/lib/plug/error_handler.ex	/^  defp status(:throw, _throw), do: 500$/;"	f
status	deps/plug/lib/plug/exceptions.ex	/^  def status(%{plug_status: status}), do: Plug.Conn.Status.code(status)$/;"	f
status	deps/plug/lib/plug/exceptions.ex	/^  def status(_), do: 500$/;"	f
status	deps/plug/lib/plug/exceptions.ex	/^  def status(exception)$/;"	f
status?	deps/db_connection/lib/db_connection/holder.ex	/^  def status?(pool_ref(holder: holder), status) do$/;"	f
status_disconnect	deps/db_connection/lib/db_connection.ex	/^  defp status_disconnect(conn, status, meter) do$/;"	f
status_json	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp status_json(conn) do$/;"	f
status_message_from_template	deps/phoenix/lib/phoenix/controller.ex	/^  def status_message_from_template(template) do$/;"	f
status_token_messages_json	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp status_token_messages_json(conn, token, messages) do$/;"	f
still_inline_code	deps/earmark/lib/earmark/helpers/lookahead_helpers.ex	/^  def still_inline_code(%{line: line, lnb: lnb}, old = {pending, _pending_lnb}) do$/;"	f
stop	deps/db_connection/lib/db_connection.ex	/^  defp stop(%DBConnection{pool_ref: pool_ref}, kind, reason, stack) do$/;"	f
stop	deps/db_connection/lib/db_connection/connection.ex	/^  def stop({pid, ref}, err, state) do$/;"	f
stop	deps/db_connection/lib/db_connection/holder.ex	/^  def stop(pool_ref, err) do$/;"	f
stop	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  def stop(proxy, caller) do$/;"	f
stop	deps/ecto/lib/ecto/repo.ex	/^      def stop(timeout \\\\ 5000) do$/;"	f
stop	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def stop() do$/;"	f
stop	deps/nimble_parsec/lib/nimble_parsec/recorder.ex	/^  def stop() do$/;"	f
stop	deps/phoenix/lib/phoenix/code_reloader/proxy.ex	/^  def stop(proxy) do$/;"	f
stop	deps/telemetry/src/telemetry_app.erl	/^stop(_State) ->$/;"	f	module:telemetry_app
stop_owner	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def stop_owner(pid) do$/;"	f
stop_reason	deps/connection/lib/connection.ex	/^  defp stop_reason(:error, reason, stack), do: {reason, stack}$/;"	f
stop_reason	deps/connection/lib/connection.ex	/^  defp stop_reason(:exit, reason, _),      do: reason$/;"	f
stop_services	lib/release_tasks.ex	/^  defp stop_services do$/;"	f
stopper	deps/plug/lib/plug/builder.ex	/^        def stopper(conn, _opts) do$/;"	f
storage_down	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def storage_down(opts) do$/;"	f
storage_down	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def storage_down(opts) do$/;"	f
storage_down	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def storage_down(opts) do$/;"	f
storage_status	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def storage_status(opts) do$/;"	f
storage_status	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def storage_status(opts) do$/;"	f
storage_status	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def storage_status(opts) do$/;"	f
storage_up	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def storage_up(opts) do$/;"	f
storage_up	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def storage_up(opts) do$/;"	f
storage_up	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def storage_up(opts) do$/;"	f
store_mfa_autogenerate!	deps/ecto/lib/ecto/schema.ex	/^  defp store_mfa_autogenerate!(mod, name, type, mfa) do$/;"	f
store_multipart	deps/plug/lib/plug/conn.ex	/^  defp store_multipart(conn, multipart, adapter, state) do$/;"	f
store_type_autogenerate!	deps/ecto/lib/ecto/schema.ex	/^  defp store_type_autogenerate!(mod, name, source, type, pk?) do$/;"	f
stream	deps/db_connection/lib/db_connection.ex	/^  def stream(%DBConnection{} = conn, query, params, opts \\\\ []) do$/;"	f
stream	deps/ecto/lib/ecto/repo.ex	/^        def stream(queryable, opts \\\\ []) do$/;"	f
stream	deps/ecto/lib/ecto/repo/queryable.ex	/^  def stream(name, queryable, opts) when is_list(opts) do$/;"	f
stream	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def stream(conn, sql, params, opts) do$/;"	f
stream	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def stream(conn, sql, params, opts) do$/;"	f
stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def stream(adapter_meta, query_meta, query, params, opts) do$/;"	f
stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def stream(adapter_meta, query_meta, prepared, params, opts) do$/;"	f
stream	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def stream(repo, sql, params \\\\ [], opts \\\\ []) do$/;"	f
stream	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def stream(_conn, _sql, _params, _opts) do$/;"	f
stream	deps/postgrex/lib/postgrex.ex	/^  def stream(%DBConnection{} = conn, query, params, options \\\\ []) do$/;"	f
stream empty	deps/ecto_sql/integration_test/sql/stream.exs	/^  test "stream empty" do$/;"	t
stream with assoc	deps/ecto_sql/integration_test/sql/stream.exs	/^  test "stream with assoc" do$/;"	t
stream without schema	deps/ecto_sql/integration_test/sql/stream.exs	/^  test "stream without schema" do$/;"	t
stream_deallocate	deps/db_connection/lib/db_connection.ex	/^  defp stream_deallocate(conn, {_status, query, cursor}, opts),$/;"	f
stream_fetch	deps/db_connection/lib/db_connection.ex	/^  defp stream_fetch(_, {:halt, _,  _} = state, _) do$/;"	f
stream_fetch	deps/db_connection/lib/db_connection.ex	/^  defp stream_fetch(conn, {:cont, query, cursor}, opts) do$/;"	f
strict_via_args_or_config_file?	deps/credo/lib/credo/config_builder.ex	/^  defp strict_via_args_or_config_file?([], config_file) do$/;"	f
strict_via_args_or_config_file?	deps/credo/lib/credo/config_builder.ex	/^  defp strict_via_args_or_config_file?([potential_path | _], config_file) do$/;"	f
string	deps/earmark/src/link_text_lexer.erl	/^string(Ics0, L0, Tcs, Ts) ->$/;"	f	module:link_text_lexer
string	deps/earmark/src/link_text_lexer.erl	/^string(String) -> string(String, 1).$/;"	f	module:link_text_lexer
string	deps/earmark/src/link_text_lexer.erl	/^string(String, Line) -> string(String, Line, String, []).$/;"	f	module:link_text_lexer
string	deps/earmark/src/link_text_lexer.erl	/^string([], L, [], Ts) ->                     % No partial tokens!$/;"	f	module:link_text_lexer
string	deps/earmark/src/string_lexer.erl	/^string(Ics0, L0, Tcs, Ts) ->$/;"	f	module:string_lexer
string	deps/earmark/src/string_lexer.erl	/^string(String) -> string(String, 1).$/;"	f	module:string_lexer
string	deps/earmark/src/string_lexer.erl	/^string(String, Line) -> string(String, Line, String, []).$/;"	f	module:string_lexer
string	deps/earmark/src/string_lexer.erl	/^string([], L, [], Ts) ->                     % No partial tokens!$/;"	f	module:string_lexer
string	deps/erlex/src/lexer.erl	/^string(Ics0, L0, Tcs, Ts) ->$/;"	f	module:lexer
string	deps/erlex/src/lexer.erl	/^string(String) -> string(String, 1).$/;"	f	module:lexer
string	deps/erlex/src/lexer.erl	/^string(String, Line) -> string(String, Line, String, []).$/;"	f	module:lexer
string	deps/erlex/src/lexer.erl	/^string([], L, [], Ts) ->                     % No partial tokens!$/;"	f	module:lexer
string	deps/jason/lib/decoder.ex	/^  defp string(data, original, skip, stack, key_decode, string_decode, acc, len) do$/;"	f
string	deps/jason/lib/decoder.ex	/^  defp string(data, original, skip, stack, key_decode, string_decode, len) do$/;"	f
string	deps/jason/lib/encode.ex	/^  def string(string, {escape, _encode_map}) do$/;"	f
string	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def string(combinator \\\\ empty(), binary)$/;"	f
string_attr	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp string_attr(types) do$/;"	f
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(Rest, Line, skip_token, Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(Rest, Line, {end_token,T,Push}, Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(Rest, Line, {end_token,T}, Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(Rest, Line, {skip_token,Push}, Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(Rest, Line, {token,T,Push}, Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(Rest, Line, {token,T}, Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/link_text_lexer.erl	/^string_cont(_Rest, Line, {error,S}, _Ts) ->$/;"	f	module:link_text_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(Rest, Line, skip_token, Ts) ->$/;"	f	module:string_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(Rest, Line, {end_token,T,Push}, Ts) ->$/;"	f	module:string_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(Rest, Line, {end_token,T}, Ts) ->$/;"	f	module:string_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(Rest, Line, {skip_token,Push}, Ts) ->$/;"	f	module:string_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(Rest, Line, {token,T,Push}, Ts) ->$/;"	f	module:string_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(Rest, Line, {token,T}, Ts) ->$/;"	f	module:string_lexer
string_cont	deps/earmark/src/string_lexer.erl	/^string_cont(_Rest, Line, {error,S}, _Ts) ->$/;"	f	module:string_lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(Rest, Line, skip_token, Ts) ->$/;"	f	module:lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(Rest, Line, {end_token,T,Push}, Ts) ->$/;"	f	module:lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(Rest, Line, {end_token,T}, Ts) ->$/;"	f	module:lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(Rest, Line, {skip_token,Push}, Ts) ->$/;"	f	module:lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(Rest, Line, {token,T,Push}, Ts) ->$/;"	f	module:lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(Rest, Line, {token,T}, Ts) ->$/;"	f	module:lexer
string_cont	deps/erlex/src/lexer.erl	/^string_cont(_Rest, Line, {error,S}, _Ts) ->$/;"	f	module:lexer
string_decode_function	deps/jason/lib/decoder.ex	/^  defp string_decode_function(%{strings: :copy}), do: &:binary.copy\/1$/;"	f
string_decode_function	deps/jason/lib/decoder.ex	/^  defp string_decode_function(%{strings: :reference}), do: &(&1)$/;"	f
string_lexer	deps/earmark/src/string_lexer.erl	/^-module(string_lexer).$/;"	m
string_like	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def string_like(left, right, middle, ttype, attrs \\\\ %{}) when is_list(middle) do$/;"	f
string_params_for	deps/ex_machina/lib/ex_machina/ecto.ex	/^      def string_params_for(factory_name, attrs \\\\ %{}) do$/;"	f
string_params_for	deps/ex_machina/lib/ex_machina/ecto.ex	/^  def string_params_for(module, factory_name, attrs \\\\ %{}) do$/;"	f
string_params_with_assocs	deps/ex_machina/lib/ex_machina/ecto.ex	/^      def string_params_with_assocs(factory_name, attrs \\\\ %{}) do$/;"	f
string_params_with_assocs	deps/ex_machina/lib/ex_machina/ecto.ex	/^  def string_params_with_assocs(module, factory_name, attrs \\\\ %{}) do$/;"	f
string_to_module	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp string_to_module(""), do: nil$/;"	f
string_to_module	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp string_to_module(string) do$/;"	f
stringify_kv	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  defp stringify_kv({k, v}),$/;"	f
stringify_kv	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_kv({k, v}, value_fun), do: {to_string(k), stringify_params(v, value_fun)}$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(%{__struct__: mod} = struct, _value_fun) when is_atom(mod), do: struct$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(%{} = params, value_fun),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params([_ | _] = params, value_fun),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params([{_, _} | _] = params, value_fun),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(fun, _value_fun) when is_function(fun), do: fun$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(other, value_fun), do: value_fun.(other)$/;"	f
strip_caller	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  def strip_caller(%Macro.Env{module: mod, function: fun, file: file, line: line}) do$/;"	f
strip_events	deps/phoenix/lib/phoenix/endpoint/instrument.ex	/^  defp strip_events(instrumenters) do$/;"	f
strip_html	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp strip_html(header) do$/;"	f
strip_quotes	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp strip_quotes(quoted) do$/;"	f
strip_quotes	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp strip_quotes(quoted) do$/;"	f
strip_spaces	deps/plug/lib/plug/conn/utils.ex	/^  defp strip_spaces("\\r\\n" <> t), do: strip_spaces(t)$/;"	f
strip_spaces	deps/plug/lib/plug/conn/utils.ex	/^  defp strip_spaces(<<h, t::binary>>) when h in [?\\s, ?\\t], do: strip_spaces(t)$/;"	f
strip_spaces	deps/plug/lib/plug/conn/utils.ex	/^  defp strip_spaces(t), do: t$/;"	f
strip_tags	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def strip_tags(text) when is_binary(text) do$/;"	f
strip_types	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp strip_types(args, arity) do$/;"	f
strip_var_version	deps/erlex/lib/erlex.ex	/^  defp strip_var_version(var_name) do$/;"	f
struct	deps/ecto/lib/ecto/association.ex	/^  def struct(module, name, opts) do$/;"	f
struct	deps/ecto/lib/ecto/embedded.ex	/^  def struct(module, name, opts) do$/;"	f
struct	deps/ecto/lib/ecto/query/api.ex	/^  def struct(source, fields), do: doc! [source, fields]$/;"	f
struct	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def struct(adapter_meta, conn, sql, operation, source, params, values, on_conflict, returning, opts) do$/;"	f
struct	deps/jason/lib/encode.ex	/^    defp struct(value, _escape, _encode_map, unquote(module)) do$/;"	f
struct	deps/jason/lib/encode.ex	/^  def struct(%module{} = value, {escape, encode_map}) do$/;"	f
struct	deps/jason/lib/encode.ex	/^  defp struct(value, _escape, _encode_map, Decimal) do$/;"	f
struct	deps/jason/lib/encode.ex	/^  defp struct(value, escape, encode_map, Fragment) do$/;"	f
struct	deps/jason/lib/encode.ex	/^  defp struct(value, escape, encode_map, _module) do$/;"	f
struct_from_changeset!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp struct_from_changeset!(_action, %{data: struct}),$/;"	f
struct_from_changeset!	deps/ecto/lib/ecto/repo/schema.ex	/^  defp struct_from_changeset!(action, %{data: nil}),$/;"	f
struct_load!	deps/ecto/lib/ecto/repo/queryable.ex	/^  def struct_load!([], values, _acc, true, _struct, _adapter) do$/;"	f
struct_load!	deps/ecto/lib/ecto/repo/queryable.ex	/^  def struct_load!([], values, acc, false, struct, _adapter) do$/;"	f
struct_load!	deps/ecto/lib/ecto/repo/queryable.ex	/^  def struct_load!([{field, type} | types], [value | values], acc, all_nil?, struct, adapter) do$/;"	f
struct_part	deps/erlex/lib/erlex.ex	/^  defp struct_part(entry, struct_parts = %{entries: entries}) do$/;"	f
struct_part	deps/erlex/lib/erlex.ex	/^  defp struct_part({:map_entry, {:atom, '\\'__struct__\\''}, {:atom, struct_name}}, struct_parts) do$/;"	f
struct_parts	deps/erlex/lib/erlex.ex	/^  defp struct_parts(map_keys) do$/;"	f
struct_url	deps/phoenix/lib/phoenix/endpoint.ex	/^      def struct_url do$/;"	f
struct_url	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def struct_url(endpoint) do$/;"	f
structure_dump	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def structure_dump(default, config) do$/;"	f
structure_dump	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def structure_dump(default, config) do$/;"	f
structure_load	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def structure_load(default, config) do$/;"	f
structure_load	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def structure_load(default, config) do$/;"	f
stub	deps/mox/lib/mox.ex	/^  def stub(mock, name, code)$/;"	f
stub_with	deps/mox/lib/mox.ex	/^  def stub_with(mock, module) when is_atom(mock) and is_atom(module) do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/abap.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/algol.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/algol_nu.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/arduino.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/autumn.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/borland.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/bw.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/colorful.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/default.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/emacs.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/friendly.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/fruity.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/igor.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/lovelace.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/manni.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/monokai.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/murphy.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/native.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/paraiso-dark.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/paraiso-light.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/pastie.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/perldoc.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/rainbow_dash.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/rrt.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/samba.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/tango.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/trac.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/vim.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/vs.ex	/^  def style() do$/;"	f
style	deps/makeup/lib/makeup/styles/html/pygments/xcode.ex	/^  def style() do$/;"	f
style_to_class_map	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  def style_to_class_map(hierarchy) do$/;"	f
stylesheet	deps/makeup/lib/makeup.ex	/^  def stylesheet(style \\\\ StyleMap.default_style(), css_class \\\\ "highlight")$/;"	f
stylesheet	deps/makeup/lib/makeup.ex	/^  def stylesheet(style, css_class) do$/;"	f
stylesheet	deps/makeup/lib/makeup.ex	/^  def stylesheet(style, css_class) when is_atom(style) do$/;"	f
stylesheet	deps/makeup/lib/makeup/formatters/html/html_formatter.ex	/^  def stylesheet(style, css_class \\\\ "highlight") do$/;"	f
stylesheet	deps/makeup/lib/makeup/styles/html.ex	/^    def stylesheet(style, css_class \\\\ "highlight") do$/;"	f
sub	deps/decimal/lib/decimal.ex	/^  def sub(%Decimal{} = num1, %Decimal{sign: sign} = num2) do$/;"	f
sub	deps/decimal/lib/decimal.ex	/^  def sub(num1, num2) do$/;"	f
sub_find	deps/postgrex/lib/postgrex/types.ex	/^  defp sub_find([], _, _, acc) do$/;"	f
sub_find	deps/postgrex/lib/postgrex/types.ex	/^  defp sub_find([oid | oids], module, table, acc) do$/;"	f
subcommand	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  def subcommand(subcommand) do$/;"	f
subprotocols_error_response	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp subprotocols_error_response(conn, subprotocols) do$/;"	f
subquery	deps/ecto/lib/ecto/query.ex	/^  def subquery(query, opts \\\\ []) do$/;"	f
subquery_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_fields(fields, ix) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select(%{select: %{expr: expr, take: take} = select} = query, adapter) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select(expr, _take, query) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select({:%, _, [name, map]}, take, query) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select({:%{}, _, [{:|, _, [{:&, [], [ix]}, pairs]}]} = expr, take, query) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select({:%{}, _, pairs} = expr, _take, query) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select({:&, _, [ix]}, take, query) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select({:merge, _, [left, right]}, take, query) do$/;"	f
subquery_select	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_select({{:., _, [{:&, _, [ix]}, field]}, _, []}, _take, _query) do$/;"	f
subquery_struct_and_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_struct_and_fields({:map, types}) do$/;"	f
subquery_struct_and_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_struct_and_fields({:source, {_, schema}, _, types}) do$/;"	f
subquery_struct_and_fields	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_struct_and_fields({:struct, name, types}) do$/;"	f
subquery_types	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_types({:map, types}), do: types$/;"	f
subquery_types	deps/ecto/lib/ecto/query/planner.ex	/^  defp subquery_types({:struct, _name, types}), do: types$/;"	f
subscribe	deps/phoenix/lib/phoenix/endpoint.ex	/^      def subscribe(pid, topic) when is_pid(pid) and is_binary(topic) do$/;"	f
subscribe	deps/phoenix/lib/phoenix/endpoint.ex	/^      def subscribe(pid, topic, opts) when is_pid(pid) and is_binary(topic) and is_list(opts) do$/;"	f
subscribe	deps/phoenix/lib/phoenix/endpoint.ex	/^      def subscribe(topic) when is_binary(topic) do$/;"	f
subscribe	deps/phoenix/lib/phoenix/endpoint.ex	/^      def subscribe(topic, opts) when is_binary(topic) and is_list(opts) do$/;"	f
subscribe	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp subscribe(_endpoint, pid) when is_pid(pid),$/;"	f
subscribe	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp subscribe(endpoint, topic) when is_binary(topic),$/;"	f
subscribe	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def subscribe(server, pid, topic)$/;"	f
subscribe	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def subscribe(server, pid, topic, opts) do$/;"	f
subscribe	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def subscribe(server, topic) when is_atom(server) and is_binary(topic) do$/;"	f
subscribe	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def subscribe(server, topic, opts)$/;"	f
subscribe	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def subscribe(pubsub_server, pool_size, pid, topic, opts \\\\ []) when is_atom(pubsub_server) do$/;"	f
subscribe	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp subscribe(pubsub_server, namespaced_topic) do$/;"	f
subscribe_and_join	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def subscribe_and_join(%Socket{} = socket, channel, topic, payload \\\\ %{})$/;"	f
subscribe_and_join	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def subscribe_and_join(%Socket{} = socket, topic) when is_binary(topic) do$/;"	f
subscribe_and_join	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def subscribe_and_join(%Socket{} = socket, topic, payload)$/;"	f
subscribe_and_join!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def subscribe_and_join!(%Socket{} = socket, channel, topic, payload \\\\ %{})$/;"	f
subscribe_and_join!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def subscribe_and_join!(%Socket{} = socket, topic) when is_binary(topic) do$/;"	f
subscribe_and_join!	deps/phoenix/lib/phoenix/test/channel_test.ex	/^  def subscribe_and_join!(%Socket{} = socket, topic, payload)$/;"	f
subscribers	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def subscribers(pubsub_server, topic, shard) when is_atom(pubsub_server) do$/;"	f
subscribers	deps/phoenix_pubsub/test/shared/pubsub_test.exs	/^  defp subscribers(config, topic) do$/;"	f
subscribers_with_fastlanes	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def subscribers_with_fastlanes(pubsub_server, topic, shard) when is_atom(pubsub_server) do$/;"	f
subscription	deps/phoenix_pubsub/lib/phoenix/pubsub/gc.ex	/^  defp subscription(pids_table, pid) do$/;"	f
subscription	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def subscription(pubsub_server, pool_size, pid) when is_atom(pubsub_server) do$/;"	f
subset	deps/plug/lib/plug/static.ex	/^  defp subset([], actual), do: actual$/;"	f
subset	deps/plug/lib/plug/static.ex	/^  defp subset([h | expected], [h | actual]), do: subset(expected, actual)$/;"	f
subset	deps/plug/lib/plug/static.ex	/^  defp subset(_, _), do: []$/;"	f
success_msg	deps/dialyxir/lib/dialyxir/dialyzer.ex	/^  defp success_msg, do: color("done (passed successfully)", :green)$/;"	f
sum	deps/ecto/lib/ecto/query/api.ex	/^  def sum(value), do: doc! [value]$/;"	f
sum	deps/ecto/lib/ecto/query/window_api.ex	/^  def sum(value), do: doc! [value]$/;"	f
summary_part	deps/credo/lib/credo/cli/output/summary.ex	/^  defp summary_part({category, singular, plural}, issues) do$/;"	f
summary_parts	deps/credo/lib/credo/cli/output/summary.ex	/^  defp summary_parts(source_files, issues) do$/;"	f
summer?	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^      def summer? do$/;"	f
summer?	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^      def summer?() do$/;"	f
super_find	deps/postgrex/lib/postgrex/types.ex	/^  defp super_find(sub_oids, extension, module, table) do$/;"	f
supported_file_extensions	deps/makeup/lib/makeup/registry.ex	/^  def supported_file_extensions() do$/;"	f
supported_language_names	deps/makeup/lib/makeup/registry.ex	/^  def supported_language_names() do$/;"	f
supported_schema_version?	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp supported_schema_version?(version) do$/;"	f
supports references	deps/ecto_sql/integration_test/sql/migration.exs	/^  test "supports references", %{migration_number: num} do$/;"	t
supports unnamed repos	deps/ecto/integration_test/cases/repo.exs	/^  test "supports unnamed repos" do$/;"	t
supports_ddl_transaction?	deps/ecto_sql/lib/ecto/adapters/myxql.ex	/^  def supports_ddl_transaction? do$/;"	f
supports_ddl_transaction?	deps/ecto_sql/lib/ecto/adapters/postgres.ex	/^  def supports_ddl_transaction? do$/;"	f
supports_ddl_transaction?	deps/ecto_sql/lib/ecto/adapters/tds.ex	/^  def supports_ddl_transaction? do$/;"	f
surface_changes	deps/ecto/lib/ecto/repo/schema.ex	/^  defp surface_changes(%{changes: changes, types: types} = changeset, struct, fields) do$/;"	f
sync	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  def sync do$/;"	f
sync_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp sync_error(s, postgres) do$/;"	f
sync_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp sync_error(s, postgres, buffer) do$/;"	f
sync_recv	deps/postgrex/lib/postgrex/protocol.ex	/^  defp sync_recv(s, status, buffer) do$/;"	f
synopsis	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def synopsis(doc) when is_binary(doc) do$/;"	f
synopsis	deps/ex_doc/lib/ex_doc/formatter/html/templates.ex	/^  def synopsis(nil), do: nil$/;"	f
tab	deps/jason/lib/formatter.ex	/^    defp tab("  ", unquote(depth)), do: unquote(String.duplicate("  ", depth))$/;"	f
tab	deps/jason/lib/formatter.ex	/^  defp tab("", _), do: ""$/;"	f
tab	deps/jason/lib/formatter.ex	/^  defp tab(indent, depth), do: List.duplicate(indent, depth)$/;"	f
table	deps/ecto_sql/lib/ecto/migration.ex	/^  def table(name, opts \\\\ [])$/;"	f
table	deps/ecto_sql/lib/ecto/migration.ex	/^  def table(name, opts) when is_atom(name) do$/;"	f
table	deps/ecto_sql/lib/ecto/migration.ex	/^  def table(name, opts) when is_binary(name) and is_list(opts) do$/;"	f
table_exists?	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def table_exists?(repo, table) when is_atom(repo) do$/;"	f
table_exists_query	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def table_exists_query(table) do$/;"	f
table_exists_query	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def table_exists_query(table) do$/;"	f
table_exists_query	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def table_exists_query(table) do$/;"	f
table_reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp table_reverse([], acc) do$/;"	f
table_reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp table_reverse([_ | _], _acc) do$/;"	f
table_reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp table_reverse([{:add, name, _type, _opts} | t], acc) do$/;"	f
table_reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp table_reverse([{:modify, name, type, opts} | t], acc) do$/;"	f
table_reverse	deps/ecto_sql/lib/ecto/migration/runner.ex	/^  defp table_reverse([{:remove, name, type, opts}| t], acc) do$/;"	f
tag	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def tag(combinator \\\\ empty(), to_tag, tag)$/;"	f
tag	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp tag(%State{replica: rep} = state), do: {rep, clock(state)}$/;"	f
tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp tag(:gen_tcp), do: :tcp$/;"	f
tag	deps/postgrex/lib/postgrex/protocol.ex	/^  defp tag(:ssl), do: :ssl$/;"	f
tagged types	deps/ecto/integration_test/cases/type.exs	/^  test "tagged types" do$/;"	t
tagged_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp tagged_to_db(:id), do: "bigint"$/;"	f
tagged_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp tagged_to_db(:integer), do: "bigint"$/;"	f
tagged_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp tagged_to_db(type), do: ecto_to_db(type)$/;"	f
tagged_to_db	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp tagged_to_db({:array, type}), do: [tagged_to_db(type), ?[, ?]]$/;"	f
tags	deps/credo/lib/credo/check/design/tag_helper.ex	/^  def tags(source_file, tag_name, include_doc?) do$/;"	f
tags?	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp tags?({_line_no, _line, _tag}), do: true$/;"	f
tags?	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp tags?({_line_no, _line, nil}), do: false$/;"	f
tags_from_comments	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp tags_from_comments(source_file, tag_name) do$/;"	f
tags_from_module_attributes	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp tags_from_module_attributes(_source_file, _tag_name, false) do$/;"	f
tags_from_module_attributes	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp tags_from_module_attributes(source_file, tag_name, true) do$/;"	f
take	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp take(take, field) do$/;"	f
take with join assocs	deps/ecto/integration_test/cases/repo.exs	/^    test "take with join assocs" do$/;"	t
take with join assocs and single nil column	deps/ecto/integration_test/cases/repo.exs	/^    test "take with join assocs and single nil column" do$/;"	t
take with maps	deps/ecto/integration_test/cases/repo.exs	/^    test "take with maps" do$/;"	t
take with nil preload assoc	deps/ecto/integration_test/cases/repo.exs	/^    test "take with nil preload assoc" do$/;"	t
take with preload assocs	deps/ecto/integration_test/cases/repo.exs	/^    test "take with preload assocs" do$/;"	t
take with single nil column	deps/ecto/integration_test/cases/repo.exs	/^    test "take with single nil column" do$/;"	t
take with structs	deps/ecto/integration_test/cases/repo.exs	/^    test "take with structs" do$/;"	t
take!	deps/ecto/lib/ecto/query/planner.ex	/^  defp take!(source, query, fetched, field, ix) do$/;"	f
take?	deps/ecto/lib/ecto/query/builder/select.ex	/^  defp take?(fields) do$/;"	f
take_bound_combinators	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp take_bound_combinators([:eos | combinators], inputs, guards, outputs, acc, metadata) do$/;"	f
take_bound_combinators	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp take_bound_combinators(combinators) do$/;"	f
take_bound_combinators	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp take_bound_combinators(combinators, inputs, guards, outputs, acc, metadata) do$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(_, 0, _), do: []$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(enumerable, count, rand_bytes) when is_integer(count) and 1 < count do$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(list, count, rand_bytes)$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(source, 1, rand_bytes), do: [random(source, rand_bytes)]$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(source, count, rand_bytes \\\\ &:crypto.strong_rand_bytes\/1)$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(string, 0, _) when is_binary(string), do: ""$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(string, 1, rand_bytes) when is_binary(string), do: random(string, rand_bytes)$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  def take_random(string, count, rand_bytes)$/;"	f
take_random	deps/crypto_rand/lib/crypto_rand.ex	/^  defp take_random(list, len, count, rand_bytes) do$/;"	f
tango_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def tango_style, do: HTML.TangoStyle.style()$/;"	f
task_name	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp task_name(module) do$/;"	f
tds_dep	deps/ecto_sql/mix.exs	/^  defp tds_dep do$/;"	f
tear_alias	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp tear_alias(other), do: other$/;"	f
tear_alias	deps/phoenix/lib/phoenix/endpoint.ex	/^  defp tear_alias({:__aliases__, meta, [h|t]}) do$/;"	f
tear_alias	deps/phoenix/lib/phoenix/socket.ex	/^  defp tear_alias(other), do: other$/;"	f
tear_alias	deps/phoenix/lib/phoenix/socket.ex	/^  defp tear_alias({:__aliases__, meta, [h|t]}) do$/;"	f
telemetry	deps/telemetry/src/telemetry.erl	/^-module(telemetry).$/;"	m
telemetry_app	deps/telemetry/src/telemetry_app.erl	/^-module(telemetry_app).$/;"	m
telemetry_handler_table	deps/telemetry/src/telemetry_handler_table.erl	/^-module(telemetry_handler_table).$/;"	m
telemetry_prefix	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp telemetry_prefix(repo) do$/;"	f
telemetry_sup	deps/telemetry/src/telemetry_sup.erl	/^-module(telemetry_sup).$/;"	m
template	deps/phoenix/lib/phoenix/code_reloader.ex	/^  defp template(output) do$/;"	f
template_name	deps/phoenix/lib/phoenix/controller.ex	/^  defp template_name(name, _format) when is_binary(name), do:$/;"	f
template_name	deps/phoenix/lib/phoenix/controller.ex	/^  defp template_name(name, format) when is_atom(name), do:$/;"	f
template_not_found	deps/phoenix/lib/phoenix/template.ex	/^      def template_not_found(template, assigns) do$/;"	f
template_path_to_name	deps/phoenix/lib/phoenix/template.ex	/^  def template_path_to_name(path, root) do$/;"	f
term_columns	deps/credo/lib/credo/cli/output.ex	/^  def term_columns(default \\\\ 80) do$/;"	f
terminate	deps/connection/lib/connection.ex	/^      def terminate(_reason, _state) do$/;"	f
terminate	deps/connection/lib/connection.ex	/^  def terminate(reason, %{mod: mod, mod_state: mod_state, raise: nil}) do$/;"	f
terminate	deps/connection/lib/connection.ex	/^  def terminate(stop, %{raise: {class, reason, stack}} = s) do$/;"	f
terminate	deps/db_connection/lib/db_connection/watcher.ex	/^  def terminate(_, {_, started_refs}) do$/;"	f
terminate	deps/jason/lib/decoder.ex	/^  defp terminate(<<>>, _original, _skip, _stack, _key_decode, _string_decode, value) do$/;"	f
terminate	deps/jason/lib/decoder.ex	/^  defp terminate(<<_rest::bits>>, original, skip, _stack, _key_decode, _string_decode, _value) do$/;"	f
terminate	deps/jason/lib/decoder.ex	/^  defp terminate(<<byte, rest::bits>>, original, skip, stack, key_decode, string_decode, value)$/;"	f
terminate	deps/phoenix/lib/phoenix/channel/server.ex	/^  def terminate(_reason, _socket) do$/;"	f
terminate	deps/phoenix/lib/phoenix/channel/server.ex	/^  def terminate(reason, %{channel: channel} = socket) do$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def terminate(:remote, _req, [handler | state]) do$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def terminate(_reason, _req, {_handler, _state}) do$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def terminate(reason, _req, [handler | state]) do$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def terminate({:error, :closed}, _req, [handler | state]) do$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def terminate({:remote, :closed}, _req, [handler | state]) do$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def terminate({:remote, code, _}, _req, [handler | state])$/;"	f
terminate	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def terminate(_reason, _req, _state) do$/;"	f
terminate	deps/phoenix/lib/phoenix/socket.ex	/^      def terminate(reason, state), do: Phoenix.Socket.__terminate__(reason, state)$/;"	f
terminate	deps/phoenix/lib/phoenix/socket/transport.ex	/^        def terminate(_reason, _state) do$/;"	f
terminate	deps/phoenix/lib/phoenix/transports/long_poll_server.ex	/^  def terminate(reason, state) do$/;"	f
terminate	deps/plug/lib/plug/upload.ex	/^  def terminate(_reason, _state) do$/;"	f
terminate	deps/telemetry/src/telemetry_handler_table.erl	/^terminate(_Reason, _State) ->$/;"	f	module:telemetry_handler_table
terminate_status	deps/db_connection/lib/db_connection/connection.ex	/^  defp terminate_status(mod, pdict, state) do$/;"	f
test_adapters	deps/ecto_sql/mix.exs	/^  defp test_adapters(args) do$/;"	f
test_as_a_dep	deps/ecto_sql/mix.exs	/^  defp test_as_a_dep(args) do$/;"	f
test_paths	deps/db_connection/mix.exs	/^  defp test_paths(_), do: ["test"]$/;"	f
test_paths	deps/db_connection/mix.exs	/^  defp test_paths(pool) when pool in @pools, do: ["integration_test\/#{pool}"]$/;"	f
test_paths	deps/ecto_sql/mix.exs	/^  defp test_paths(adapter) when adapter in @adapters, do: ["integration_test\/#{adapter}"]$/;"	f
test_paths	deps/ecto_sql/mix.exs	/^  defp test_paths(nil), do: ["test"]$/;"	f
test_paths	deps/ecto_sql/mix.exs	/^  defp test_paths(other), do: raise("unknown adapter #{inspect(other)}")$/;"	f
test_pools	deps/db_connection/mix.exs	/^  defp test_pools(args) do$/;"	f
text	deps/phoenix/lib/phoenix/controller.ex	/^  def text(conn, data) do$/;"	f
text type as blob	deps/ecto/integration_test/cases/type.exs	/^  test "text type as blob" do$/;"	t
text type as string	deps/ecto/integration_test/cases/type.exs	/^  test "text type as string" do$/;"	t
text?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def text?(%Line.TableLine{}), do: true$/;"	f
text?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def text?(%Line.Text{}),      do: true$/;"	f
text?	deps/earmark/lib/earmark/helpers/line_helpers.ex	/^  def text?(_),                 do: false$/;"	f
text_of_token	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp text_of_token(token)$/;"	f
text_of_token	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp text_of_token({:escaped, text}), do: "\\\\#{text}"$/;"	f
text_of_token	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp text_of_token({_, text}), do: text$/;"	f
text_response	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  def text_response(conn, status) do$/;"	f
text_to_id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def text_to_id(atom) when is_atom(atom), do: text_to_id(Atom.to_string(atom))$/;"	f
text_to_id	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def text_to_id(text) when is_binary(text) do$/;"	f
through_pks	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp through_pks(map, pks, assoc) do$/;"	f
time	deps/ecto/lib/ecto/log_entry.ex	/^  defp time(_label, nil, _force), do: []$/;"	f
time	deps/ecto/lib/ecto/log_entry.ex	/^  defp time(label, time, force) do$/;"	f
time	deps/nimble_parsec/lib/nimble_parsec.ex	/^        def time do$/;"	f
timed_out	deps/credo/lib/credo/source_file.ex	/^  def timed_out(filename) do$/;"	f
timeout	deps/db_connection/lib/db_connection/connection_pool.ex	/^  defp timeout(delay, time, queue, codel) do$/;"	f
timeout	deps/db_connection/lib/db_connection/ownership/proxy.ex	/^  defp timeout(time, %{queue: queue, timeout: timeout} = state) do$/;"	f
times	deps/mox/lib/mox.ex	/^  defp times(1), do: "once"$/;"	f
times	deps/mox/lib/mox.ex	/^  defp times(n), do: "#{n} times"$/;"	f
times	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def times(combinator \\\\ empty(), to_repeat, count_or_min_max)$/;"	f
times	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def times(combinator, to_repeat, n)$/;"	f
times	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def times(combinator, to_repeat, opts)$/;"	f
timestamp	deps/ecto_sql/lib/mix/tasks/ecto.gen.migration.ex	/^  defp timestamp do$/;"	f
timestamp	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  defp timestamp do$/;"	f
timestamp	lib/mix/tasks/boruta.gen.migrations.ex	/^  defp timestamp do$/;"	f
timestamps	deps/ecto/lib/ecto/schema.ex	/^  defmacro timestamps(opts \\\\ []) do$/;"	a
timestamps	deps/ecto_sql/lib/ecto/migration.ex	/^  def timestamps(opts \\\\ []) when is_list(opts) do$/;"	f
timings_to_map	deps/credo/lib/credo/execution/task/write_debug_report.ex	/^  def timings_to_map(list) do$/;"	f
title	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp title(remaining_text) do$/;"	f
title_tuple	deps/earmark/src/link_text_parser.erl	/^title_tuple({Title, Parsed}) -> {link, Title, string:join(["[", Parsed, "]"], "")}.$/;"	f	module:link_text_parser
tmp_path	deps/ecto_sql/integration_test/support/file_helpers.exs	/^  def tmp_path do$/;"	f
to_app_source	deps/phoenix/lib/mix/phoenix.ex	/^  defp to_app_source(app, source_dir) when is_atom(app),$/;"	f
to_app_source	deps/phoenix/lib/mix/phoenix.ex	/^  defp to_app_source(path, source_dir) when is_binary(path),$/;"	f
to_args	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def to_args(args) do$/;"	f
to_ast	deps/ex_doc/lib/ex_doc/markdown.ex	/^  def to_ast(text, opts \\\\ []) when is_binary(text) do$/;"	f
to_ast	deps/ex_doc/lib/ex_doc/markdown/earmark.ex	/^  def to_ast(text, opts) do$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("#" <> _ = color), do: {:color, color}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("bg:" <> color), do: {:background_color, color}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("bold"), do: {:font_weight, "bold"}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("border:" <> color), do: {:border, color}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("italic"), do: {:font_style, "italic"}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("nobold"), do: {:font_weight, "normal"}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("noitalic"), do: {:font_style, "normal"}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("oblique"), do: {:font_style, "oblique"}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr("underline"), do: {:text_decoration, "underline"}$/;"	f
to_attr	deps/makeup/lib/makeup/styles/html.ex	/^    defp to_attr(other) do$/;"	f
to_col_end	deps/credo/lib/credo/code/token.ex	/^    def to_col_end(col_start, value, add \\\\ 0) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def to_constraints(%MyXQL.Error{mysql: %{name: :ER_DUP_ENTRY}, message: message}, opts) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def to_constraints(%MyXQL.Error{mysql: %{name: name}, message: message}, _opts)$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def to_constraints(_, _),$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :check_violation, constraint: constraint}}, _opts),$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :check_violation, message: message}}, _opts) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :exclusion_violation, constraint: constraint}}, _opts),$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :exclusion_violation, message: message}}, _opts) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :foreign_key_violation, constraint: constraint}}, _opts),$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :foreign_key_violation, message: message}}, _opts) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :unique_violation, constraint: constraint}}, _opts),$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(%Postgrex.Error{postgres: %{code: :unique_violation, message: message}}, _opts) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def to_constraints(_, _opts),$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def to_constraints(%Tds.Error{mssql: %{number: code, msg_text: message}}, _opts) do$/;"	f
to_constraints	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def to_constraints(_, _opts), do: []$/;"	f
to_delete_assocs	deps/ecto/lib/ecto/repo/schema.ex	/^  defp to_delete_assocs(schema) do$/;"	f
to_desc	deps/postgrex/lib/postgrex/utils.ex	/^  defp to_desc(%Range{} = range), do: "an integer in #{inspect(range)}"$/;"	f
to_desc	deps/postgrex/lib/postgrex/utils.ex	/^  defp to_desc(desc) when is_binary(desc), do: desc$/;"	f
to_desc	deps/postgrex/lib/postgrex/utils.ex	/^  defp to_desc(struct) when is_atom(struct), do: "%#{inspect(struct)}{}"$/;"	f
to_desc	deps/postgrex/lib/postgrex/utils.ex	/^  defp to_desc({a, b}), do: to_desc(a) <> " or " <> to_desc(b)$/;"	f
to_end	deps/credo/lib/credo/cli/sorter.ex	/^  def to_end(list, list_end) do$/;"	f
to_escaped_field	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp to_escaped_field(binding, field),$/;"	f
to_exit_status	deps/credo/lib/credo/check.ex	/^  def to_exit_status(atom) when is_atom(atom) do$/;"	f
to_exit_status	deps/credo/lib/credo/check.ex	/^  def to_exit_status(nil), do: 0$/;"	f
to_exit_status	deps/credo/lib/credo/check.ex	/^  def to_exit_status(value), do: value$/;"	f
to_exit_status	deps/credo/lib/credo/execution/task/assign_exit_status_for_issues.ex	/^  defp to_exit_status([]), do: 0$/;"	f
to_exit_status	deps/credo/lib/credo/execution/task/assign_exit_status_for_issues.ex	/^  defp to_exit_status(issues) do$/;"	f
to_field	deps/ecto/lib/ecto/association.ex	/^  defp to_field(binding, field),$/;"	f
to_field	deps/ecto/lib/ecto/query/builder/filter.ex	/^  defp to_field(binding, field),$/;"	f
to_field	deps/ecto/lib/ecto/query/builder/group_by.ex	/^  defp to_field(field), do: {{:., [], [{:&, [], [0]}, field]}, [], []}$/;"	f
to_field	deps/ecto/lib/ecto/query/builder/order_by.ex	/^  defp to_field(field), do: {{:., [], [{:&, [], [0]}, field]}, [], []}$/;"	f
to_float	deps/decimal/lib/decimal.ex	/^  def to_float(%Decimal{sign: sign, coef: coef, exp: exp}) when is_integer(coef) do$/;"	f
to_flycheck	deps/credo/lib/credo/cli/output/formatter/flycheck.ex	/^  def to_flycheck($/;"	f
to_function_call_name	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp to_function_call_name({_, _, _} = ast) do$/;"	f
to_hash	deps/credo/lib/credo/check/design/duplicated_code.ex	/^  def to_hash(ast) do$/;"	f
to_html	deps/earmark/lib/earmark/transform.ex	/^  defp to_html(ast, options) do$/;"	f
to_i	deps/ecto/lib/ecto/type.ex	/^  defp to_i(bin) when is_binary(bin) do$/;"	f
to_i	deps/ecto/lib/ecto/type.ex	/^  defp to_i(int) when is_integer(int), do: int$/;"	f
to_i	deps/ecto/lib/ecto/type.ex	/^  defp to_i(nil), do: nil$/;"	f
to_integer	deps/credo/lib/credo/priority.ex	/^  def to_integer(key) do$/;"	f
to_integer	deps/credo/lib/credo/priority.ex	/^  def to_integer(nil), do: 0$/;"	f
to_integer	deps/decimal/lib/decimal.ex	/^  def to_integer(%Decimal{sign: sign, coef: coef, exp: 0})$/;"	f
to_integer	deps/decimal/lib/decimal.ex	/^  def to_integer(%Decimal{sign: sign, coef: coef, exp: exp})$/;"	f
to_iodata	deps/ecto/lib/ecto/log_entry.ex	/^  def to_iodata(entry) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^    defp to_iodata(<<unquote(match), rest::bits>>, skip, original, acc) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^    defp to_iodata(<<unquote(match), rest::bits>>, skip, original, acc, len) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^  defp to_iodata(<<>>, 0, original, _acc, _len) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^  defp to_iodata(<<>>, _skip, _original, acc) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^  defp to_iodata(<<>>, skip, original, acc, len) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^  defp to_iodata(<<_char, rest::bits>>, skip, original, acc) do$/;"	f
to_iodata	deps/plug/lib/plug/html.ex	/^  defp to_iodata(<<_char, rest::bits>>, skip, original, acc, len) do$/;"	f
to_json	deps/credo/lib/credo/cli/output/formatter/json.ex	/^  defp to_json($/;"	f
to_lines	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^  defp to_lines(source_file, false) do$/;"	f
to_lines	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^  defp to_lines(source_file, true) do$/;"	f
to_lines	deps/credo/lib/credo/code.ex	/^  def to_lines(%SourceFile{} = source_file) do$/;"	f
to_lines	deps/credo/lib/credo/code.ex	/^  def to_lines(source) when is_binary(source) do$/;"	f
to_lines	deps/credo/lib/credo/code.ex	/^  def to_lines(string_or_source_file)$/;"	f
to_list	deps/ecto/lib/ecto/multi.ex	/^  def to_list(%Multi{operations: operations}) do$/;"	f
to_list	deps/ecto/lib/ecto/query/inspect.ex	/^  defp to_list(query) do$/;"	f
to_lower_char	deps/phoenix/lib/phoenix/naming.ex	/^  defp to_lower_char(char) when char in ?A..?Z, do: char + 32$/;"	f
to_lower_char	deps/phoenix/lib/phoenix/naming.ex	/^  defp to_lower_char(char), do: char$/;"	f
to_map	deps/credo/lib/credo/execution/execution_issues.ex	/^  def to_map(%Execution{issues_pid: pid}) do$/;"	f
to_map	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp to_map(nil, _fields) do$/;"	f
to_map	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp to_map(value, fields) do$/;"	f
to_map	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp to_map(value, fields) when is_list(value) do$/;"	f
to_map	deps/phoenix/lib/phoenix/controller.ex	/^  defp to_map(assigns) when is_list(assigns), do: :maps.from_list(assigns)$/;"	f
to_map	deps/phoenix/lib/phoenix/controller.ex	/^  defp to_map(assigns) when is_map(assigns), do: assigns$/;"	f
to_map	deps/phoenix/lib/phoenix/view.ex	/^  defp to_map(assigns) when is_list(assigns), do: :maps.from_list(assigns)$/;"	f
to_map	deps/phoenix/lib/phoenix/view.ex	/^  defp to_map(assigns) when is_map(assigns), do: assigns$/;"	f
to_match_regexes	deps/credo/lib/credo/execution.ex	/^  defp to_match_regexes(list) do$/;"	f
to_nested_list_of_pairs	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  def to_nested_list_of_pairs({tag, class, children}) do$/;"	f
to_nested_list_of_pairs	deps/makeup/lib/makeup/token/utils/hierarchy.ex	/^  def to_nested_list_of_pairs({tag, class}) do$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/oauth_mapper.ex	/^  def to_oauth_schema(%Ecto.Client{} = client) do$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/oauth_mapper.ex	/^  def to_oauth_schema(%Ecto.Scope{} = scope) do$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/oauth_mapper.ex	/^  def to_oauth_schema(%Ecto.Token{} = token) do$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/oauth_mapper.ex	/^  def to_oauth_schema(schema)$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/oauth_mapper.ex	/^  def to_oauth_schema(schema), do: schema$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/scopes.ex	/^  def to_oauth_schema(%Ecto.Scope{} = scope) do$/;"	f
to_oauth_schema	lib/boruta/adapters/ecto/scopes.ex	/^  def to_oauth_schema(nil), do: nil$/;"	f
to_one_line	deps/credo/lib/credo/check/consistency/exception_names.ex	/^  defp to_one_line(str) do$/;"	f
to_one_line	deps/credo/lib/credo/check/consistency/unused_variable_names.ex	/^  defp to_one_line(str) do$/;"	f
to_oneline	deps/credo/lib/credo/cli/output/formatter/oneline.ex	/^  defp to_oneline($/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^        def to_param(%{unquote(key) => key}) when is_binary(key), do: key$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^        def to_param(%{unquote(key) => key}) when is_integer(key), do: Integer.to_string(key)$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^        def to_param(%{unquote(key) => key}), do: Phoenix.Param.to_param(key)$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^        def to_param(%{unquote(key) => nil}) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(%{id: id}) when is_binary(id), do: id$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(%{id: id}) when is_integer(id), do: Integer.to_string(id)$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(%{id: id}), do: Phoenix.Param.to_param(id)$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(%{id: nil}) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(atom) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(bin) when is_binary(bin), do: bin$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(data) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(int), do: Integer.to_string(int)$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(map) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(map) when is_map(map) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(nil) do$/;"	f
to_param	deps/phoenix/lib/phoenix/param.ex	/^  def to_param(term)$/;"	f
to_param	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp to_param(bin) when is_binary(bin), do: bin$/;"	f
to_param	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp to_param(data), do: Phoenix.Param.to_param(data)$/;"	f
to_param	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp to_param(false), do: "false"$/;"	f
to_param	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp to_param(int) when is_integer(int), do: Integer.to_string(int)$/;"	f
to_param	deps/phoenix/lib/phoenix/router/helpers.ex	/^      defp to_param(true), do: "true"$/;"	f
to_query	deps/ecto/lib/ecto/queryable.ex	/^  def to_query(data)$/;"	f
to_query	deps/ecto/lib/ecto/queryable.ex	/^  def to_query(module) do$/;"	f
to_query	deps/ecto/lib/ecto/queryable.ex	/^  def to_query(query), do: query$/;"	f
to_query	deps/ecto/lib/ecto/queryable.ex	/^  def to_query(source) when is_binary(source) do$/;"	f
to_query	deps/ecto/lib/ecto/queryable.ex	/^  def to_query(subquery) do$/;"	f
to_query	deps/ecto/lib/ecto/queryable.ex	/^  def to_query({source, schema} = from)$/;"	f
to_query_binds	deps/ecto/lib/ecto/query.ex	/^  defp to_query_binds(binds) do$/;"	f
to_source_file	deps/credo/lib/credo/sources.ex	/^  defp to_source_file(filename) do$/;"	f
to_sql	deps/ecto_sql/integration_test/sql/sql.exs	/^  test "to_sql\/3" do$/;"	t
to_sql	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def to_sql(operation, queryable) do$/;"	f
to_sql	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def to_sql(kind, repo, queryable) do$/;"	f
to_start	deps/credo/lib/credo/cli/sorter.ex	/^  def to_start(list, list_start) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{sign: sign, coef: :inf}, _type) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{sign: sign, coef: :qNaN}, _type) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{sign: sign, coef: :sNaN}, _type) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{sign: sign, coef: coef, exp: exp}, :normal) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{sign: sign, coef: coef, exp: exp}, :raw) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{sign: sign, coef: coef, exp: exp}, :scientific) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(%Decimal{} = decimal, :xsd) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(dec) do$/;"	f
to_string	deps/decimal/lib/decimal.ex	/^  def to_string(num, type \\\\ :scientific)$/;"	f
to_string	deps/dialyxir/lib/example.ex	/^  def to_string(atom, encoding) do$/;"	f
to_string	deps/ecto/lib/ecto/query/inspect.ex	/^  def to_string(query) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.AdditionalItems{}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.AdditionalProperties{}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.AllOf{invalid: invalid}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.AnyOf{}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Dependencies{property: property, missing: [missing]}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Dependencies{property: property, missing: missing}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Enum{}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Format{expected: expected}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MaxItems{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MaxLength{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MaxProperties{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Maximum{expected: expected, exclusive?: exclusive?}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MinItems{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MinLength{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MinProperties{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Minimum{expected: expected, exclusive?: exclusive?}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.MultipleOf{expected: expected}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Not{}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.OneOf{valid_indices: valid_indices}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Pattern{expected: expected}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Required{missing: [missing]}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Required{missing: missing}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.Type{expected: expected, actual: actual}) do$/;"	f
to_string	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    def to_string(%Error.UniqueItems{}) do$/;"	f
to_string	deps/postgrex/lib/postgrex/query.ex	/^  def to_string(%Postgrex.Query{statement: statement}) do$/;"	f
to_string	deps/postgrex/lib/postgrex/stream.ex	/^  def to_string(%Postgrex.Copy{query: query}) do$/;"	f
to_struct	deps/ecto/lib/ecto/changeset.ex	/^  defp to_struct(%{__struct__: struct}, _opts), do: "#" <> Kernel.inspect(struct) <> "<>"$/;"	f
to_struct	deps/ecto/lib/ecto/changeset.ex	/^  defp to_struct(other, opts), do: to_doc(other, opts)$/;"	f
to_struct	deps/ecto/lib/ecto/embedded.ex	/^  defp to_struct(%Changeset{changes: changes, data: schema}, :update,$/;"	f
to_struct	deps/ecto/lib/ecto/embedded.ex	/^  defp to_struct(%Changeset{data: %{__struct__: actual}}, _action,$/;"	f
to_struct	deps/ecto/lib/ecto/embedded.ex	/^  defp to_struct(%Changeset{valid?: false}, _action,$/;"	f
to_struct	deps/ecto/lib/ecto/embedded.ex	/^  defp to_struct(%Changeset{} = changeset, action, %{related: schema}, adapter) do$/;"	f
to_struct	deps/ecto/lib/ecto/embedded.ex	/^  defp to_struct(%Changeset{}, :delete, _embed, _adapter) do$/;"	f
to_tokens	deps/credo/lib/credo/code.ex	/^  def to_tokens(%SourceFile{} = source_file) do$/;"	f
to_tokens	deps/credo/lib/credo/code.ex	/^  def to_tokens(source, filename \\\\ "nofilename") when is_binary(source) do$/;"	f
to_tokens	deps/credo/lib/credo/code.ex	/^  def to_tokens(string_or_source_file)$/;"	f
to_topic_match	deps/phoenix/lib/phoenix/socket.ex	/^  defp to_topic_match(topic_pattern) do$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var([{:->, _, _} | _], _), do: {:function, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var(_, position), do: {:"arg#{position}", [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var(atom, _) when is_atom(atom), do: {:atom, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var(float, _) when is_integer(float), do: {:float, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var(integer, _) when is_integer(integer), do: {:integer, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var(list, _) when is_list(list), do: {:list, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var({:%, meta, [name, _]}, _), do: {:%, meta, [name, {:%{}, meta, []}]}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var({:%{}, _, _}, _), do: {:map, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var({:<<>>, _, _}, _), do: {:binary, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var({:{}, _, _}, _), do: {:tuple, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var({_, _}, _), do: {:tuple, [], nil}$/;"	f
to_var	deps/ex_doc/lib/ex_doc/retriever.ex	/^  defp to_var({name, meta, _}, _) when is_atom(name), do: {name, meta, nil}$/;"	f
token	deps/earmark/src/link_text_lexer.erl	/^token(Cont, Chars) -> token(Cont, Chars, 1).$/;"	f	module:link_text_lexer
token	deps/earmark/src/link_text_lexer.erl	/^token(S0, Ics0, L0, Tcs, Tlen0, Tline, A0, Alen0) ->$/;"	f	module:link_text_lexer
token	deps/earmark/src/link_text_lexer.erl	/^token([], Chars, Line) ->$/;"	f	module:link_text_lexer
token	deps/earmark/src/link_text_lexer.erl	/^token({token,State,Line,Tcs,Tlen,Tline,Action,Alen}, Chars, _) ->$/;"	f	module:link_text_lexer
token	deps/earmark/src/string_lexer.erl	/^token(Cont, Chars) -> token(Cont, Chars, 1).$/;"	f	module:string_lexer
token	deps/earmark/src/string_lexer.erl	/^token(S0, Ics0, L0, Tcs, Tlen0, Tline, A0, Alen0) ->$/;"	f	module:string_lexer
token	deps/earmark/src/string_lexer.erl	/^token([], Chars, Line) ->$/;"	f	module:string_lexer
token	deps/earmark/src/string_lexer.erl	/^token({token,State,Line,Tcs,Tlen,Tline,Action,Alen}, Chars, _) ->$/;"	f	module:string_lexer
token	deps/erlex/src/lexer.erl	/^token(Cont, Chars) -> token(Cont, Chars, 1).$/;"	f	module:lexer
token	deps/erlex/src/lexer.erl	/^token(S0, Ics0, L0, Tcs, Tlen0, Tline, A0, Alen0) ->$/;"	f	module:lexer
token	deps/erlex/src/lexer.erl	/^token([], Chars, Line) ->$/;"	f	module:lexer
token	deps/erlex/src/lexer.erl	/^token({token,State,Line,Tcs,Tlen,Tline,Action,Alen}, Chars, _) ->$/;"	f	module:lexer
token	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def token(combinator, token_type) do$/;"	f
token	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def token(combinator, token_type, attrs) when is_map(attrs) do$/;"	f
token	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def token(literal, token_type) when is_binary(literal) do$/;"	f
token	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def token(literal, token_type, attrs) when is_binary(literal) and is_map(attrs) do$/;"	f
token	deps/plug/lib/plug/conn/utils.ex	/^  def token(""), do: false$/;"	f
token	deps/plug/lib/plug/conn/utils.ex	/^  def token(<<?", quoted::binary>>), do: quoted_token(quoted, "")$/;"	f
token	deps/plug/lib/plug/conn/utils.ex	/^  def token(token), do: unquoted_token(token, "")$/;"	f
token	lib/boruta.ex	/^    def token(%Plug.Conn{} = conn, _params) do$/;"	f
token	lib/boruta/oauth.ex	/^  def token(conn, module) do$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(%AuthorizationCodeRequest{$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(%ClientCredentialsRequest{$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(%CodeRequest{$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(%PasswordRequest{$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(%RefreshTokenRequest{$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(%TokenRequest{$/;"	f
token	lib/boruta/oauth/authorization.ex	/^  def token(request)$/;"	f
token	lib/boruta/oauth/introspect.ex	/^  def token(%IntrospectRequest{client_id: client_id, client_secret: client_secret, token: token}) do$/;"	f
token	lib/boruta/oauth/json/schema.ex	/^  def token do$/;"	f
token	lib/boruta/oauth/revoke.ex	/^  def token(%RevokeRequest{$/;"	f
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, skip_token) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, {end_token,T,Push}) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, {end_token,T}) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, {error,S}) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, {skip_token,Push}) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, {token,T,Push}) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/link_text_lexer.erl	/^token_cont(Rest, Line, {token,T}) ->$/;"	f	module:link_text_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, skip_token) ->$/;"	f	module:string_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, {end_token,T,Push}) ->$/;"	f	module:string_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, {end_token,T}) ->$/;"	f	module:string_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, {error,S}) ->$/;"	f	module:string_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, {skip_token,Push}) ->$/;"	f	module:string_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, {token,T,Push}) ->$/;"	f	module:string_lexer
token_cont	deps/earmark/src/string_lexer.erl	/^token_cont(Rest, Line, {token,T}) ->$/;"	f	module:string_lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, skip_token) ->$/;"	f	module:lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, {end_token,T,Push}) ->$/;"	f	module:lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, {end_token,T}) ->$/;"	f	module:lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, {error,S}) ->$/;"	f	module:lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, {skip_token,Push}) ->$/;"	f	module:lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, {token,T,Push}) ->$/;"	f	module:lexer
token_cont	deps/erlex/src/lexer.erl	/^token_cont(Rest, Line, {token,T}) ->$/;"	f	module:lexer
token_error	deps/jason/lib/decoder.ex	/^  defp token_error(token, position) do$/;"	f
token_error	deps/jason/lib/decoder.ex	/^  defp token_error(token, position, len) do$/;"	f
token_error	lib/boruta.ex	/^    def token_error(conn, %Error{status: status, error: error, error_description: error_description}) do$/;"	f
token_error	test/support/boruta/oauth/application_mock.ex	/^  def token_error(_conn, error), do: {:token_error, error}$/;"	f
token_error_clause	deps/jason/lib/decoder.ex	/^    defp token_error_clause(original, skip, len) do$/;"	f
token_factory	test/support/boruta_factory.ex	/^  def token_factory do$/;"	f
token_request	lib/boruta/oauth/request.ex	/^  defdelegate token_request(conn), to: Request.Token, as: :request$/;"	d
token_success	lib/boruta.ex	/^    def token_success(conn, %TokenResponse{} = response) do$/;"	f
token_success	test/support/boruta/oauth/application_mock.ex	/^  def token_success(_conn, token), do: {:token_success, token}$/;"	f
token_to_class_map	deps/makeup/lib/makeup/token/utils.ex	/^  def token_to_class_map do$/;"	f
token_value_to_binary	deps/makeup/lib/makeup/lexer/postprocess.ex	/^  def token_value_to_binary({ttype, meta, value}) do$/;"	f
token_values_to_binaries	deps/makeup/lib/makeup/lexer/postprocess.ex	/^  def token_values_to_binaries(tokens) do$/;"	f
tokenize	deps/earmark/lib/earmark/helpers/leex_helpers.ex	/^  def tokenize line, with: lexer do$/;"	f
tokens	deps/earmark/src/link_text_lexer.erl	/^tokens(Cont, Chars) -> tokens(Cont, Chars, 1).$/;"	f	module:link_text_lexer
tokens	deps/earmark/src/link_text_lexer.erl	/^tokens(S0, Ics0, L0, Tcs, Tlen0, Tline, Ts, A0, Alen0) ->$/;"	f	module:link_text_lexer
tokens	deps/earmark/src/link_text_lexer.erl	/^tokens([], Chars, Line) ->$/;"	f	module:link_text_lexer
tokens	deps/earmark/src/link_text_lexer.erl	/^tokens({skip_tokens,State,Line,Tcs,Tlen,Tline,Error,Action,Alen}, Chars, _) ->$/;"	f	module:link_text_lexer
tokens	deps/earmark/src/link_text_lexer.erl	/^tokens({tokens,State,Line,Tcs,Tlen,Tline,Ts,Action,Alen}, Chars, _) ->$/;"	f	module:link_text_lexer
tokens	deps/earmark/src/string_lexer.erl	/^tokens(Cont, Chars) -> tokens(Cont, Chars, 1).$/;"	f	module:string_lexer
tokens	deps/earmark/src/string_lexer.erl	/^tokens(S0, Ics0, L0, Tcs, Tlen0, Tline, Ts, A0, Alen0) ->$/;"	f	module:string_lexer
tokens	deps/earmark/src/string_lexer.erl	/^tokens([], Chars, Line) ->$/;"	f	module:string_lexer
tokens	deps/earmark/src/string_lexer.erl	/^tokens({skip_tokens,State,Line,Tcs,Tlen,Tline,Error,Action,Alen}, Chars, _) ->$/;"	f	module:string_lexer
tokens	deps/earmark/src/string_lexer.erl	/^tokens({tokens,State,Line,Tcs,Tlen,Tline,Ts,Action,Alen}, Chars, _) ->$/;"	f	module:string_lexer
tokens	deps/erlex/src/lexer.erl	/^tokens(Cont, Chars) -> tokens(Cont, Chars, 1).$/;"	f	module:lexer
tokens	deps/erlex/src/lexer.erl	/^tokens(S0, Ics0, L0, Tcs, Tlen0, Tline, Ts, A0, Alen0) ->$/;"	f	module:lexer
tokens	deps/erlex/src/lexer.erl	/^tokens([], Chars, Line) ->$/;"	f	module:lexer
tokens	deps/erlex/src/lexer.erl	/^tokens({skip_tokens,State,Line,Tcs,Tlen,Tline,Error,Action,Alen}, Chars, _) ->$/;"	f	module:lexer
tokens	deps/erlex/src/lexer.erl	/^tokens({tokens,State,Line,Tcs,Tlen,Tline,Ts,Action,Alen}, Chars, _) ->$/;"	f	module:lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, skip_token, Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, {end_token,T,Push}, Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, {end_token,T}, Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, {error,S}, _Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, {skip_token,Push}, Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, {token,T,Push}, Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/link_text_lexer.erl	/^tokens_cont(Rest, Line, {token,T}, Ts) ->$/;"	f	module:link_text_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, skip_token, Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, {end_token,T,Push}, Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, {end_token,T}, Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, {error,S}, _Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, {skip_token,Push}, Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, {token,T,Push}, Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/earmark/src/string_lexer.erl	/^tokens_cont(Rest, Line, {token,T}, Ts) ->$/;"	f	module:string_lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, skip_token, Ts) ->$/;"	f	module:lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, {end_token,T,Push}, Ts) ->$/;"	f	module:lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, {end_token,T}, Ts) ->$/;"	f	module:lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, {error,S}, _Ts) ->$/;"	f	module:lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, {skip_token,Push}, Ts) ->$/;"	f	module:lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, {token,T,Push}, Ts) ->$/;"	f	module:lexer
tokens_cont	deps/erlex/src/lexer.erl	/^tokens_cont(Rest, Line, {token,T}, Ts) ->$/;"	f	module:lexer
too_long	deps/ecto/lib/ecto/changeset.ex	/^  defp too_long(:binary, _length, value, opts), do:$/;"	f
too_long	deps/ecto/lib/ecto/changeset.ex	/^  defp too_long(:list, _length, value, opts), do:$/;"	f
too_long	deps/ecto/lib/ecto/changeset.ex	/^  defp too_long(:string, _length, value, opts), do:$/;"	f
too_long	deps/ecto/lib/ecto/changeset.ex	/^  defp too_long(_type, length, value, _opts) when length <= value, do: nil$/;"	f
too_many_quotes?	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp too_many_quotes?(<<>>, _count, _limit) do$/;"	f
too_many_quotes?	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp too_many_quotes?(<<_::binary>>, _count, _limit) do$/;"	f
too_many_quotes?	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp too_many_quotes?(<<_::utf8, rest::binary>>, count, limit) do$/;"	f
too_many_quotes?	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp too_many_quotes?(<<c::utf8, rest::binary>>, count, limit)$/;"	f
too_many_quotes?	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp too_many_quotes?(_string, count, limit) when count > limit do$/;"	f
too_many_quotes?	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp too_many_quotes?(string, limit) do$/;"	f
too_short	deps/ecto/lib/ecto/changeset.ex	/^  defp too_short(:binary, _length, value, opts), do:$/;"	f
too_short	deps/ecto/lib/ecto/changeset.ex	/^  defp too_short(:list, _length, value, opts), do:$/;"	f
too_short	deps/ecto/lib/ecto/changeset.ex	/^  defp too_short(:string, _length, value, opts), do:$/;"	f
too_short	deps/ecto/lib/ecto/changeset.ex	/^  defp too_short(_type, length, value, _opts) when length >= value, do: nil$/;"	f
tool	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp tool(module) do$/;"	f
total_frequencies	deps/credo/lib/credo/check/consistency/collector.ex	/^  defp total_frequencies(frequencies_per_file) do$/;"	f
touch	deps/phoenix/lib/mix/tasks/compile.phoenix.ex	/^  def touch do$/;"	f
touch_if_exists	deps/phoenix/lib/mix/tasks/compile.phoenix.ex	/^  defp touch_if_exists(path) do$/;"	f
touch_last_heartbeat	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  defp touch_last_heartbeat(replica) do$/;"	f
trac_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def trac_style, do: HTML.TracStyle.style()$/;"	f
track	deps/phoenix/lib/phoenix/presence.ex	/^      def track(%Phoenix.Socket{} = socket, key, meta) do$/;"	f
track	deps/phoenix/lib/phoenix/presence.ex	/^      def track(pid, topic, key, meta) do$/;"	f
track	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def track(tracker_name, pid, topic, key, meta) when is_pid(pid) and is_map(meta) do$/;"	f
track	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def track(server_pid, pid, topic, key, meta) when is_pid(pid) and is_map(meta) do$/;"	f
tracked_key	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def tracked_key(table, topic, key, down_replicas) do$/;"	f
tracked_values	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  def tracked_values(table, topic, down_replicas) do$/;"	f
transaction	deps/db_connection/lib/db_connection.ex	/^  def transaction(%DBConnection{conn_mode: :transaction} = conn, fun, _opts) do$/;"	f
transaction	deps/db_connection/lib/db_connection.ex	/^  def transaction(%DBConnection{} = conn, fun, opts) do$/;"	f
transaction	deps/db_connection/lib/db_connection.ex	/^  def transaction(conn, fun, opts \\\\ [])$/;"	f
transaction	deps/db_connection/lib/db_connection.ex	/^  def transaction(pool, fun, opts) do$/;"	f
transaction	deps/ecto/lib/ecto/repo.ex	/^        def transaction(fun_or_multi, opts \\\\ []) do$/;"	f
transaction	deps/ecto/lib/ecto/repo/transaction.ex	/^  def transaction(_repo, name, fun, opts) when is_function(fun, 0) do$/;"	f
transaction	deps/ecto/lib/ecto/repo/transaction.ex	/^  def transaction(repo, name, %Ecto.Multi{} = multi, opts) do$/;"	f
transaction	deps/ecto/lib/ecto/repo/transaction.ex	/^  def transaction(repo, name, fun, opts) when is_function(fun, 1) do$/;"	f
transaction	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def transaction(meta, opts, fun) do$/;"	f
transaction	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  def transaction(adapter_meta, opts, callback) do$/;"	f
transaction	deps/postgrex/lib/postgrex.ex	/^  def transaction(conn, fun, opts \\\\ []) do$/;"	f
transaction commits	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transaction commits" do$/;"	t
transaction inside checkout	deps/ecto_sql/integration_test/sql/transaction.exs	/^    test "transaction inside checkout" do$/;"	t
transaction re	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transaction re-raises" do$/;"	t
transaction returns value	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transaction returns value" do$/;"	t
transaction rolls back	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transaction rolls back" do$/;"	t
transaction rolls back per repository	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transaction rolls back per repository" do$/;"	t
transaction rolls back with reason on aborted transaction	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transaction rolls back with reason on aborted transaction" do$/;"	t
transaction_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp transaction_error(s, status) do$/;"	f
transactions are not shared in repo	deps/ecto_sql/integration_test/sql/transaction.exs	/^  test "transactions are not shared in repo" do$/;"	t
transform	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp transform(option) when is_atom(option), do: option$/;"	f
transform	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp transform(option) when is_binary(option) do$/;"	f
transform	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp transform(options) when is_list(options), do: Enum.map(options, &transform\/1)$/;"	f
transform	deps/earmark/lib/earmark/transform.ex	/^  def transform(ast, options \\\\ %{initial_indent: 0, indent: 2})$/;"	f
transform	deps/earmark/lib/earmark/transform.ex	/^  def transform(ast, options) when is_list(options) do$/;"	f
transform	deps/earmark/lib/earmark/transform.ex	/^  def transform(ast, options) when is_map(options) do$/;"	f
translate_errors	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/changeset_view.ex	/^  def translate_errors(changeset) do$/;"	f
translate_errors	deps/phoenix/priv/templates/phx.gen.json/changeset_view.ex	/^  def translate_errors(changeset) do$/;"	f
transport	deps/phoenix/lib/phoenix/socket.ex	/^  defmacro transport(name, module, config \\\\ []) do$/;"	a
transport_dispatch	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp transport_dispatch(endpoint, server_ref, body, opts) do$/;"	f
transport_log	deps/phoenix/lib/phoenix/socket/transport.ex	/^  def transport_log(conn, level) do$/;"	f
transports	deps/phoenix/lib/phoenix/endpoint/cowboy_adapter.ex	/^  defp transports(endpoint, path, socket, socket_opts) do$/;"	f
traverse	deps/credo/lib/credo/check/consistency/collector.ex	/^      defp traverse(source_file, fun), do: ...$/;"	f
traverse	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/consistency/exception_names/collector.ex	/^  defp traverse(_callback, ast, acc), do: {ast, acc}$/;"	f
traverse	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp traverse(ast, acc), do: {ast, acc}$/;"	f
traverse	deps/credo/lib/credo/check/consistency/multi_alias_import_require_use/collector.ex	/^  defp traverse({directive, meta, arguments} = ast, acc)$/;"	f
traverse	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  defp traverse(_callback, ast, acc), do: {ast, acc}$/;"	f
traverse	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  defp traverse(callback, {:def, _, [{_name, _, params}, _]} = ast, acc)$/;"	f
traverse	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  defp traverse(callback, {:defp, _, [{_name, _, params}, _]} = ast, acc)$/;"	f
traverse	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp traverse(_callback, ast, acc), do: {ast, acc}$/;"	f
traverse	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp traverse(callback, {:->, _, [params | _]} = ast, acc) do$/;"	f
traverse	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp traverse(callback, {:=, _, params} = ast, acc) do$/;"	f
traverse	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp traverse(callback, {def, _, [{_, _, params} | _]} = ast, acc)$/;"	f
traverse	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp traverse(ast, issues, _regex) do$/;"	f
traverse	deps/credo/lib/credo/check/design/tag_helper.ex	/^  defp traverse({:@, _, [{name, meta, [string]} | _]} = ast, issues, regex)$/;"	f
traverse	deps/credo/lib/credo/check/readability/alias_as.ex	/^  defp traverse(ast, issues, issue_meta), do: {ast, add_issue(issues, issue(ast, issue_meta))}$/;"	f
traverse	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp traverse(ast, issues, _), do: {ast, issues}$/;"	f
traverse	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp traverse({:defmodule, _, _} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/function_names.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/function_names.ex	/^    defp traverse({unquote(op), _meta, [{operator, _at_meta, _args} | _tail]} = ast, issues, _issue_meta)$/;"	f
traverse	deps/credo/lib/credo/check/readability/function_names.ex	/^    defp traverse({unquote(op), _meta, arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/function_names.ex	/^    defp traverse({unquote(op), _meta, nil} = ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/function_names.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  defp traverse(ast, issues, _source_file) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/module_attribute_names.ex	/^  defp traverse({:@, _meta, [{:{}, _, _}]} = ast, issues, _) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/module_doc.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/module_doc.ex	/^  defp traverse(ast, {continue, issues}, _issue_meta, _ignore_names) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/module_names.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/module_names.ex	/^  defp traverse({:defmodule, _meta, arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/multi_alias.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/multi_alias.ex	/^  defp traverse(ast, issues, _issue_meta), do: {ast, issues}$/;"	f
traverse	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^    defp traverse({unquote(op), _, body} = ast, issues, issue_meta, parens?) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^    defp traverse({unquote(op), _, nil} = ast, issues, _issue_meta, _parens?) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/parentheses_on_zero_arity_defs.ex	/^  defp traverse(ast, issues, _issue_meta, _parens?) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^    defp traverse({unquote(op), _meta, nil} = ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/prefer_implicit_try.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/prefer_implicit_try.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/single_pipe.ex	/^  defp traverse(ast, {_, issues}, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/single_pipe.ex	/^  defp traverse({:|>, _, [{:|>, _, _} | _]} = ast, {_, issues}, _) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/single_pipe.ex	/^  defp traverse({:|>, meta, _} = ast, {true, issues}, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/specs.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/specs.ex	/^  defp traverse(ast, issues, _specs, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/string_sigils.ex	/^  defp traverse(ast, issues, _issue_meta, _maximum_allowed_quotes) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/unnecessary_alias_expansion.ex	/^  defp traverse(ast, issues, _issue_meta), do: {ast, issues}$/;"	f
traverse	deps/credo/lib/credo/check/readability/unnecessary_alias_expansion.ex	/^  defp traverse({:alias, _, [{_, _, [{:__aliases__, opts, [child]}]}]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp traverse({:->, _meta, [lhs, _rhs]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp traverse({:<-, _meta, [lhs, _rhs]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/readability/variable_names.ex	/^  defp traverse({:=, _meta, [lhs, _rhs]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/abc_size.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp traverse(ast, issues, _issue_meta, _max_abc_size, _excluded_functions) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/append_single_item.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/append_single_item.ex	/^  defp traverse({:++, _, [[_], _]} = ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/append_single_item.ex	/^  defp traverse({:++, meta, [_, [_]]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/case_trivial_matches.ex	/^  defp traverse({:case, meta, arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/cond_statements.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/cond_statements.ex	/^  defp traverse({:cond, meta, arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  defp traverse(ast, issues, _source_file, _max_complexity) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  defp traverse({:defmacro, _, [{:__using__, _, _}, _]} = ast, issues, _, _) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^  defp traverse({:!, meta, [{:!, _, ast}]}, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/double_boolean_negation.ex	/^  defp traverse({:not, meta, [{:not, _, ast}]}, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/function_arity.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/function_arity.ex	/^  defp traverse(ast, issues, _issue_meta, _max_arity, _ignore_defp) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/long_quote_blocks.ex	/^  defp traverse(ast, issues, _issue_meta, _max_line_count, _ignore_comments) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/map_into.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/map_into.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^    defp traverse({unquote(op), _meta, arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^  defp traverse(ast, issues, _source_file) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^  defp traverse({_op, _meta, nil} = ast, issues, _source_file) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp traverse(ast, issues, _issues_meta, _dependency_namespaces, _excluded_namespaces, _max) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  defp traverse({:@, _, [{:unless, _, _}]}, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/negated_conditions_in_unless.ex	/^  defp traverse({:unless, _meta, arguments} = ast, issues, issue_meta)$/;"	f
traverse	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/negated_conditions_with_else.ex	/^  defp traverse({:if, meta, arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/nesting.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/nesting.ex	/^  defp traverse(ast, issues, _issue_meta, _max_nesting) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  defp traverse(ast, issues, _source_file, _max_complexity) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  defp traverse({:defmacro, _, [{:__using__, _, _}, _]} = ast, issues, _, _) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  defp traverse({:@, _, [{:unless, _, _}]}, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/unless_with_else.ex	/^  defp traverse({:unless, meta, _arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp traverse([do: {:__block__, _, ast}], issues, {_, _, opt} = issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/refactor/with_clauses.ex	/^  defp traverse({:with, meta, [_, _ | _] = clauses_and_body} = ast, issues, issue_meta)$/;"	f
traverse	deps/credo/lib/credo/check/warning/bool_operation_on_same_values.ex	/^    defp traverse({unquote(op), meta, [lhs, rhs]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/bool_operation_on_same_values.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/expensive_empty_enum_check.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/expensive_empty_enum_check.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/iex_pry.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/iex_pry.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/io_inspect.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/io_inspect.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/lazy_logging.ex	/^  defp traverse(ast, state, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/map_get_unsafe_pass.ex	/^  defp traverse({:|>, _meta, _args} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^    defp traverse({unquote(op), meta, [lhs, rhs]} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  defp traverse({:@, _meta, [{:spec, _, _} | _]}, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_with_constant_result.ex	/^    defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_with_constant_result.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/operation_with_constant_result.ex	/^  defp traverse({:&, _, _}, issues, _) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  defp traverse($/;"	f
traverse	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  defp traverse(ast, issues, _issue_meta), do: {ast, issues}$/;"	f
traverse	deps/credo/lib/credo/check/warning/raise_inside_rescue.ex	/^  defp traverse({:try, _meta, _arguments} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp traverse(ast, issues, _issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/check/warning/unsafe_to_atom.ex	/^  defp traverse({{:., _loc, call}, meta, args} = ast, issues, issue_meta) do$/;"	f
traverse	deps/credo/lib/credo/priority.ex	/^    defp traverse({unquote(op), meta, arguments} = ast, acc)$/;"	f
traverse	deps/credo/lib/credo/priority.ex	/^  defp traverse(ast, acc) do$/;"	f
traverse	deps/credo/lib/credo/priority.ex	/^  defp traverse({:defmodule, meta, _} = ast, acc) do$/;"	f
traverse	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def traverse(combinator \\\\ empty(), to_traverse, call) do$/;"	f
traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp traverse(_traversal, next, _, user_acc, _, _, _, %{replace: true}) do$/;"	f
traverse	deps/nimble_parsec/lib/nimble_parsec/compiler.ex	/^  defp traverse(traversal, next, rest, user_acc, context, line, offset, _) do$/;"	f
traverse	deps/plug/lib/plug/builder.ex	/^  defp traverse(list, ref) when is_list(list) do$/;"	f
traverse	deps/plug/lib/plug/builder.ex	/^  defp traverse(map, ref) when is_map(map) do$/;"	f
traverse	deps/plug/lib/plug/builder.ex	/^  defp traverse(ref, ref) do$/;"	f
traverse	deps/plug/lib/plug/builder.ex	/^  defp traverse(term, _ref) do$/;"	f
traverse	deps/plug/lib/plug/builder.ex	/^  defp traverse(tuple, ref) when is_tuple(tuple) do$/;"	f
traverse_abc	deps/credo/lib/credo/check/refactor/abc_size.ex	/^    defp traverse_abc($/;"	f
traverse_abc	deps/credo/lib/credo/check/refactor/abc_size.ex	/^    defp traverse_abc({unquote(op), _, arguments} = ast, abc, _excluded_functions)$/;"	f
traverse_abc	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp traverse_abc($/;"	f
traverse_abc	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp traverse_abc(ast, abc, _excluded_functions) do$/;"	f
traverse_abc	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp traverse_abc({:<<>>, _, _}, acc, _excluded_functions) do$/;"	f
traverse_ast_for_token	deps/credo/lib/credo/code/token_ast_correlation.ex	/^    defp traverse_ast_for_token(ast, acc, _token) do$/;"	f
traverse_ast_for_token	deps/credo/lib/credo/code/token_ast_correlation.ex	/^    defp traverse_ast_for_token({:., meta, arguments} = ast, acc, token)$/;"	f
traverse_ast_for_token	deps/credo/lib/credo/code/token_ast_correlation.ex	/^    defp traverse_ast_for_token({_name, meta, _arguments} = ast, acc, token) do$/;"	f
traverse_cache	deps/ecto/lib/ecto/query/planner.ex	/^  defp traverse_cache(query, operation, cache_params, adapter) do$/;"	f
traverse_complexity	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^    defp traverse_complexity($/;"	f
traverse_complexity	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^    defp traverse_complexity({unquote(op), _meta, nil} = ast, complexity) do$/;"	f
traverse_complexity	deps/credo/lib/credo/check/refactor/cyclomatic_complexity.ex	/^  defp traverse_complexity(ast, complexity) do$/;"	f
traverse_complexity	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^    defp traverse_complexity($/;"	f
traverse_complexity	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^    defp traverse_complexity({unquote(op), _meta, nil} = ast, complexity) do$/;"	f
traverse_complexity	deps/credo/lib/credo/check/refactor/perceived_complexity.ex	/^  defp traverse_complexity(ast, complexity) do$/;"	f
traverse_condition	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^  defp traverse_condition($/;"	f
traverse_condition	deps/credo/lib/credo/check/refactor/match_in_condition.ex	/^  defp traverse_condition(ast, issues, _op, _op_arguments, _issue_meta) do$/;"	f
traverse_defs	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^    defp traverse_defs({unquote(op), _meta, arguments} = ast, acc, mod_list, fun_names)$/;"	f
traverse_defs	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp traverse_defs(ast, acc, _, _) do$/;"	f
traverse_errors	deps/ecto/lib/ecto/changeset.ex	/^  def traverse_errors(%Changeset{errors: errors, changes: changes, types: types} = changeset, msg_func)$/;"	f
traverse_exprs	deps/ecto/lib/ecto/query/planner.ex	/^  defp traverse_exprs(query, operation, acc, fun) do$/;"	f
traverse_groups	deps/credo/lib/credo/check/readability/alias_order.ex	/^  defp traverse_groups(group, acc, issue_meta) do$/;"	f
traverse_line	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^  defp traverse_line([], issues, _issue_meta), do: issues$/;"	f
traverse_line	deps/credo/lib/credo/check/readability/trailing_white_space.ex	/^  defp traverse_line([{line_no, line} | tail], issues, issue_meta) do$/;"	f
traverse_params	deps/credo/lib/credo/check/consistency/parameter_pattern_matching/collector.ex	/^  defp traverse_params(callback, params, acc) do$/;"	f
traverse_prev_current_next	deps/credo/lib/credo/check/consistency/space_around_operators.ex	/^  defp traverse_prev_current_next(tokens, callback, acc) do$/;"	f
traverse_tokens	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp traverse_tokens(tokens, callback, acc) do$/;"	f
traverse_verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp traverse_verify_candidate(ast, acc, candidate) do$/;"	f
truncate	deps/credo/lib/credo/cli/output/ui.ex	/^  def truncate(_line, max_length, _ellipsis) when max_length <= 0, do: ""$/;"	f
truncate	deps/credo/lib/credo/cli/output/ui.ex	/^  def truncate(line, max_length) when max_length <= 0 or is_nil(line), do: ""$/;"	f
truncate	deps/credo/lib/credo/cli/output/ui.ex	/^  def truncate(line, max_length) when max_length > 0 do$/;"	f
truncate	deps/credo/lib/credo/cli/output/ui.ex	/^  def truncate(line, max_length, ellipsis) when max_length > 0 do$/;"	f
truncate_usec	deps/ecto/lib/ecto/type.ex	/^  defp truncate_usec(%{microsecond: {0, 0}} = struct), do: struct$/;"	f
truncate_usec	deps/ecto/lib/ecto/type.ex	/^  defp truncate_usec(nil), do: nil$/;"	f
truncate_usec	deps/ecto/lib/ecto/type.ex	/^  defp truncate_usec(struct), do: %{struct | microsecond: {0, 0}}$/;"	f
try_expansion	deps/ecto/lib/ecto/query/builder.ex	/^  defp try_expansion(expr, type, params, vars, %Macro.Env{} = env) do$/;"	f
try_expansion	deps/ecto/lib/ecto/query/builder.ex	/^  defp try_expansion(expr, type, params, vars, {env, fun}) do$/;"	f
try_parse_float	deps/jason/lib/decoder.ex	/^  defp try_parse_float(string, token, skip) do$/;"	f
tuple?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp tuple?(_), do: false$/;"	f
tuple?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp tuple?(t) when is_tuple(t), do: true$/;"	f
twitter_mentions	deps/credo/lib/credo/check/design/alias_usage.ex	/^        def twitter_mentions do$/;"	f
type	deps/ecto/integration_test/support/types.exs	/^  def type(), do: :integer$/;"	f
type	deps/ecto/integration_test/support/types.exs	/^  def type(), do: :string$/;"	f
type	deps/ecto/integration_test/support/types.exs	/^  def type, do: :id$/;"	f
type	deps/ecto/lib/ecto/query/api.ex	/^  def type(interpolated_value, type), do: doc! [interpolated_value, type]$/;"	f
type	deps/ecto/lib/ecto/type.ex	/^        def type, do: :map$/;"	f
type	deps/ecto/lib/ecto/type.ex	/^  def type(type) do$/;"	f
type	deps/ecto/lib/ecto/type.ex	/^  def type(type)$/;"	f
type	deps/ecto/lib/ecto/type.ex	/^  def type({:array, type}), do: {:array, type(type)}$/;"	f
type	deps/ecto/lib/ecto/type.ex	/^  def type({:map, type}), do: {:map, type(type)}$/;"	f
type	deps/ecto/lib/ecto/uuid.ex	/^  def type, do: :uuid$/;"	f
type	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def type(), do: :uuid$/;"	f
type	deps/ecto_sql/lib/ecto/adapters/tds/types.ex	/^    def type(), do: :varchar$/;"	f
type	deps/mime/lib/mime/application.ex	/^      def type(file_extension) do$/;"	f
type	deps/plug/lib/plug/mime.ex	/^  def type(file_extension) do$/;"	f
type!	deps/ecto/lib/ecto/changeset.ex	/^  defp type!(types, key) do$/;"	f
type!	deps/ecto/lib/ecto/query/planner.ex	/^  defp type!(_kind, _query, _expr, nil, _field), do: :any$/;"	f
type!	deps/ecto/lib/ecto/query/planner.ex	/^  defp type!(kind, query, expr, ix, field) when is_integer(ix) do$/;"	f
type!	deps/ecto/lib/ecto/query/planner.ex	/^  defp type!(kind, query, expr, schema, field) when is_atom(schema) do$/;"	f
type_fetch_error	deps/postgrex/lib/postgrex/protocol.ex	/^  defp type_fetch_error() do$/;"	f
type_for_key	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp type_for_key(:pull, type), do: {:out, type}$/;"	f
type_for_key	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp type_for_key(:push, type), do: {:out, type}$/;"	f
type_for_key	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp type_for_key(_, type),     do: type$/;"	f
type_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def type_msg(%Postgrex.TypeInfo{type: json}, module)$/;"	f
type_msg	deps/postgrex/lib/postgrex/utils.ex	/^  def type_msg(%Postgrex.TypeInfo{type: type}, module) do$/;"	f
type_names	deps/ex_json_schema/lib/ex_json_schema/validator/error/string_formatter.ex	/^    defp type_names(types) do$/;"	f
type_of	deps/earmark/lib/earmark/line_scanner.ex	/^  def type_of(line, recursive)$/;"	f
type_of	deps/earmark/lib/earmark/line_scanner.ex	/^  def type_of({line, lnb}, options = %Options{}, recursive) do$/;"	f
type_to_default	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp type_to_default(key, t, :create) do$/;"	f
type_to_default	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp type_to_default(key, t, :update) do$/;"	f
type_to_expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp type_to_expr(type) do$/;"	f
type_to_expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp type_to_expr({composite, type}) when is_atom(composite) do$/;"	f
type_to_expr	deps/ecto/lib/ecto/query/inspect.ex	/^  defp type_to_expr({part, type}) when is_integer(part) do$/;"	f
type_unless_typed	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp type_unless_typed(%Ecto.Query.Tagged{}, _type), do: []$/;"	f
type_unless_typed	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp type_unless_typed(_, type), do: [?:, ?: | type]$/;"	f
typed float map	deps/ecto/integration_test/cases/type.exs	/^  test "typed float map" do$/;"	t
typed string map	deps/ecto/integration_test/cases/type.exs	/^  test "typed string map" do$/;"	t
types	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp types(attrs) do$/;"	f
typespec	deps/ex_doc/lib/ex_doc/autolink.ex	/^  def typespec(ast, options) do$/;"	f
typespec_name	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp typespec_name({:"::", _, [{name, _, _}, _]}), do: Atom.to_string(name)$/;"	f
typespec_name	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp typespec_name({:when, _, [left, _]}), do: typespec_name(left)$/;"	f
typespec_name	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp typespec_name({name, _, _}) when is_atom(name), do: Atom.to_string(name)$/;"	f
ul_alpha_chars	deps/puid/lib/puid.ex	/^        defp ul_alpha_chars(0, _, _, _, _, string), do: string$/;"	f
ul_alpha_chars	deps/puid/lib/puid.ex	/^        defp ul_alpha_chars(n, bits, uniform_offset, uniform_bytes, char_offset, string) do$/;"	f
ul_alphanum_chars	deps/puid/lib/puid.ex	/^        defp ul_alphanum_chars(0, _, _, _, _, string), do: string$/;"	f
ul_alphanum_chars	deps/puid/lib/puid.ex	/^        defp ul_alphanum_chars(n, bits, uniform_offset, uniform_bytes, char_offset, string) do$/;"	f
umbrella_compile_paths	deps/ex_doc/lib/mix/tasks/docs.ex	/^  defp umbrella_compile_paths(ignored_apps) do$/;"	f
unboxed_run	deps/ecto_sql/lib/ecto/adapters/sql/sandbox.ex	/^  def unboxed_run(repo, fun) when is_atom(repo) do$/;"	f
uncompressed_digested_file?	deps/phoenix/lib/phoenix/digester.ex	/^  defp uncompressed_digested_file?(file_path) do$/;"	f
underscore	deps/phoenix/lib/phoenix/naming.ex	/^  def underscore(value), do: Macro.underscore(value)$/;"	f
unescape_html	deps/ex_doc/lib/ex_doc/highlighter.ex	/^    defp unescape_html(unquote(encoded) <> rest) do$/;"	f
unescape_html	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  defp unescape_html(<<>>) do$/;"	f
unescape_html	deps/ex_doc/lib/ex_doc/highlighter.ex	/^  defp unescape_html(<<c, rest::binary>>) do$/;"	f
unescape_query	deps/ecto/lib/ecto/query/builder.ex	/^  defp unescape_query(other) do$/;"	f
unescape_query	deps/ecto/lib/ecto/query/builder.ex	/^  defp unescape_query({:%, _, [Query, {:%{}, _, list}]}) do$/;"	f
unescape_query	deps/ecto/lib/ecto/query/builder.ex	/^  defp unescape_query({:%{}, _, list} = ast) do$/;"	f
unescaped_ref_segments	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp unescaped_ref_segments(ref) do$/;"	f
unextract	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp unextract([], [], _fun), do: []$/;"	f
unextract	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp unextract([h1|structs], [[_|t1]|t2], fun), do: [fun.([h1|t1])|unextract(structs, t2, fun)]$/;"	f
unextract	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp unextract(structs, [[nil|_] = h2|t2], fun), do: [fun.(h2)|unextract(structs, t2, fun)]$/;"	f
unicode_escapes	deps/jason/lib/decoder.ex	/^    def unicode_escapes(chars1 \\\\ @digits, chars2 \\\\ @digits) do$/;"	f
uniform	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform(1, rand_bytes) when is_function(rand_bytes), do: 1$/;"	f
uniform	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform(max, rand_bytes \\\\ &:crypto.strong_rand_bytes\/1)$/;"	f
uniform	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform(max, rand_bytes)$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_bytes(_max, 0, _rand_bytes), do: <<>>$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_bytes(max, n, rand_bytes \\\\ &:crypto.strong_rand_bytes\/1)$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_bytes(max, n, rand_bytes)$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_bytes(_, 0, _, uniform_bits) do$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_bytes(max, n, rand_bytes, false) do$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_bytes(max, n, rand_bytes, true),$/;"	f
uniform_bytes	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_bytes(max, n, rand_bytes, uniform_bits) do$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_list(1, 1, _), do: [1]$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_list(1, n, _) when is_integer(n) and 1 < n, do: List.duplicate(1, n)$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_list(_, 0, _), do: []$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_list(max, 1, rand_bytes)$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_list(max, n, rand_bytes \\\\ &:crypto.strong_rand_bytes\/1)$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  def uniform_list(max, n, rand_bytes)$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_list(_, 0, _, list, _), do: list$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_list(max, size, rand_bytes, list, false) do$/;"	f
uniform_list	deps/crypto_rand/lib/crypto_rand.ex	/^  defp uniform_list(max, size, rand_bytes, list, true) do$/;"	f
union	deps/ecto/lib/ecto/query.ex	/^  defmacro union(query, other_query) do$/;"	a
union_all	deps/ecto/lib/ecto/query.ex	/^  defmacro union_all(query, other_query) do$/;"	a
union_clouds	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp union_clouds(%State{mode: :delta} = local, %State{} = remote) do$/;"	f
union_clouds	deps/phoenix_pubsub/lib/phoenix/tracker/state.ex	/^  defp union_clouds(%State{mode: :normal, context: local_ctx} = local, %State{} = remote) do$/;"	f
unions with literals	deps/ecto/integration_test/cases/type.exs	/^  test "unions with literals" do$/;"	t
unique constraint	deps/ecto/integration_test/cases/repo.exs	/^  test "unique constraint" do$/;"	t
unique constraint from association	deps/ecto/integration_test/cases/repo.exs	/^  test "unique constraint from association" do$/;"	t
unique constraint violation error message with join table and separate changesets	deps/ecto/integration_test/cases/repo.exs	/^  test "unique constraint violation error message with join table and separate changesets" do$/;"	t
unique constraint violation error message with join table in single changeset	deps/ecto/integration_test/cases/repo.exs	/^  test "unique constraint violation error message with join table in single changeset" do$/;"	t
unique constraint with binary_id	deps/ecto/integration_test/cases/repo.exs	/^  test "unique constraint with binary_id" do$/;"	t
unique pseudo	deps/ecto/integration_test/cases/repo.exs	/^  test "unique pseudo-constraint violation error message with join table at the repository" do$/;"	t
unique?	deps/puid/lib/charset.ex	/^  def unique?(chars) when is_binary(chars), do: unique?(chars, true)$/;"	f
unique?	deps/puid/lib/charset.ex	/^  defp unique?("", unique), do: unique$/;"	f
unique?	deps/puid/lib/charset.ex	/^  defp unique?(_, false), do: false$/;"	f
unique?	deps/puid/lib/charset.ex	/^  defp unique?(chars, true) do$/;"	f
unique_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def unique_constraint(changeset, [first_field | _] = fields, opts) do$/;"	f
unique_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def unique_constraint(changeset, field, opts) when is_atom(field) do$/;"	f
unique_constraint	deps/ecto/lib/ecto/changeset.ex	/^  def unique_constraint(changeset, field_or_fields, opts \\\\ [])$/;"	f
unique_index	deps/ecto_sql/lib/ecto/migration.ex	/^  def unique_index(table, columns, opts \\\\ [])$/;"	f
unique_index	deps/ecto_sql/lib/ecto/migration.ex	/^  def unique_index(table, columns, opts) when is_list(opts) do$/;"	f
unique_index_name	deps/ecto/lib/ecto/changeset.ex	/^  defp unique_index_name(changeset, fields) do$/;"	f
unique_vsn	deps/phoenix_pubsub/lib/phoenix/tracker/replica.ex	/^  defp unique_vsn do$/;"	f
uniques	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def uniques(attrs) do$/;"	f
unixize_option	deps/earmark/lib/earmark/cli.ex	/^  defp unixize_option(option) do$/;"	f
unlex	deps/makeup/lib/makeup/lexer.ex	/^  def unlex(tokens) do$/;"	f
unlisten	deps/postgrex/lib/postgrex/notifications.ex	/^  def unlisten(pid, ref, opts \\\\ []) do$/;"	f
unlisten!	deps/postgrex/lib/postgrex/notifications.ex	/^  def unlisten!(pid, ref, opts \\\\ []) do$/;"	f
unmasked_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp unmasked_csrf_token do$/;"	f
unmatched	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^        defp unmatched(:error), do: :error$/;"	f
unmatched	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^        defp unmatched(:ok), do: :ok$/;"	f
unmatched	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^        defp unmatched(:error), do: :error$/;"	f
unmatched	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^        defp unmatched(_), do: :ok$/;"	f
unmerge_fragments	deps/ecto/lib/ecto/query/inspect.ex	/^  defp unmerge_fragments([{:raw, s}, {:expr, v} | t], frag, args, names, part) do$/;"	f
unmerge_fragments	deps/ecto/lib/ecto/query/inspect.ex	/^  defp unmerge_fragments([{:raw, s}], frag, args, _names, _part) do$/;"	f
unpublished_by_title	deps/ecto/lib/ecto/query/api.ex	/^      def unpublished_by_title(title) do$/;"	f
unqualify_module	deps/dialyxir/lib/dialyxir/warnings/opaque_equality.ex	/^  defp unqualify_module(name) when is_binary(name) do$/;"	f
unquote	deps/bunt/lib/bunt_ansi.ex	/^      def unquote(alias_name)() do$/;"	f
unquote	deps/bunt/lib/bunt_ansi.ex	/^      def unquote(name)() do$/;"	f
unquote	deps/ex_machina/lib/ex_machina/strategy.ex	/^          def unquote(:"#{function_name}_list")(number_of_records, factory_name, attrs \\\\ %{}) do$/;"	f
unquote	deps/ex_machina/lib/ex_machina/strategy.ex	/^          def unquote(:"#{function_name}_pair")(factory_name, attrs \\\\ %{}) do$/;"	f
unquote	deps/ex_machina/lib/ex_machina/strategy.ex	/^          def unquote(function_name)(already_built_record) when is_map(already_built_record) do$/;"	f
unquote	deps/ex_machina/lib/ex_machina/strategy.ex	/^          def unquote(function_name)(factory_name, attrs \\\\ %{}) do$/;"	f
unquote	deps/makeup/lib/makeup/lexer/groups.ex	/^        def unquote(name)(tokens, group_prefix \\\\ "group") do$/;"	f
unquote	deps/makeup/lib/makeup/lexer/groups.ex	/^        defp unquote(name_helper)(stack, tokens, group_prefix, group_nr) do$/;"	f
unquote	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^                def unquote(fun_name)([{:name, attrs, unquote(ttype)} | tokens]) do$/;"	f
unquote	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^                defp unquote(fun_name)([{:name, attrs, unquote(ttype)} | tokens]) do$/;"	f
unquote	deps/mox/lib/mox.ex	/^        def unquote(fun)(unquote_splicing(args)) do$/;"	f
unquote	deps/nimble_parsec/lib/nimble_parsec.ex	/^          defp unquote(name)(unquote_splicing(args)) when unquote(guards), do: unquote(body)$/;"	f
unquote	deps/nimble_parsec/lib/nimble_parsec.ex	/^      def unquote(name)(unquote_splicing(args)) when unquote(guards), do: unquote(body)$/;"	f
unquote	deps/nimble_parsec/lib/nimble_parsec.ex	/^      defp unquote(name)(unquote_splicing(args)) when unquote(guards), do: unquote(body)$/;"	f
unquote	deps/phoenix/lib/phoenix/router.ex	/^        def unquote(plug)(unquote(conn), _) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router.ex	/^      defp unquote(name)(conn), do: conn$/;"	f
unquote	deps/phoenix/lib/phoenix/router.ex	/^      defp unquote(name)(unquote(conn)), do: unquote(body)$/;"	f
unquote	deps/phoenix/lib/phoenix/router.ex	/^    defmacro unquote(verb)(path, plug, plug_opts, options \\\\ []) do$/;"	a
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^          def unquote(:"#{helper}_path")(conn_or_endpoint, action, unquote_splicing(binding)) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^          def unquote(:"#{helper}_path")(conn_or_endpoint, action, unquote_splicing(binding), params) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^          def unquote(:"#{helper}_url")(conn_or_endpoint, action, unquote_splicing(binding)) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^          def unquote(:"#{helper}_url")(conn_or_endpoint, action, unquote_splicing(binding), params) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^        def unquote(:"#{helper}_path")(conn_or_endpoint, unquote(Macro.escape(opts)), unquote_splicing(vars)) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^        def unquote(:"#{helper}_path")(conn_or_endpoint, unquote(Macro.escape(opts)), unquote_splicing(vars), params)$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^        def unquote(:"#{helper}_url")(conn_or_endpoint, unquote(Macro.escape(opts)), unquote_splicing(vars)) do$/;"	f
unquote	deps/phoenix/lib/phoenix/router/helpers.ex	/^        def unquote(:"#{helper}_url")(conn_or_endpoint, unquote(Macro.escape(opts)), unquote_splicing(vars), params)$/;"	f
unquote	deps/phoenix/lib/phoenix/template.ex	/^      defp unquote(defp)(var!(assigns)) do$/;"	f
unquote	deps/phoenix/lib/phoenix/test/conn_test.ex	/^    defmacro unquote(method)(conn, path_or_action, params_or_body \\\\ nil) do$/;"	a
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)($/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<-1::int32, rest::binary>>, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<-1::int32, rest::binary>>, oids, types, n, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<-1::int32, rest::binary>>, sub_oids, sub_types, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<>>, _sub_oid, _sub_types, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<>>, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<unquote(pattern), rest::binary>>, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<unquote(pattern), rest::binary>>, acc)$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<unquote(pattern), rest::binary>>, oids, types, n, acc) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(<<unquote(pattern), rest::binary>>, oids, types, n, acc)$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(@null), do: <<-1::int32>>$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(@null, _sub_oids, _sub_types), do: <<-1::int32>>$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(unquote(pattern)) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(unquote(pattern)) when unquote(guard) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(unquote(pattern), unquote(sub_oids), unquote(sub_types)) do$/;"	f
unquote	deps/postgrex/lib/postgrex/type_module.ex	/^      defp unquote(extension)(unquote(pattern), unquote(sub_oids), unquote(sub_types))$/;"	f
unquote?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp unquote?(_), do: false$/;"	f
unquote?	deps/credo/lib/credo/check/design/alias_usage.ex	/^  defp unquote?({:unquote, _, arguments}) when is_list(arguments), do: true$/;"	f
unquoted_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp unquoted_name(name) do$/;"	f
unquoted_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp unquoted_name(name) when is_atom(name), do: unquoted_name(Atom.to_string(name))$/;"	f
unquoted_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp unquoted_name(nil, name), do: unquoted_name(name)$/;"	f
unquoted_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp unquoted_name(prefix, name) do$/;"	f
unquoted_name	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp unquoted_name(prefix, name, column_name),$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token("\\r\\n" <> t, acc), do: strip_spaces(t) == "" and acc$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<>>, acc), do: acc$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<h, _::binary>>, _acc) when h in @specials or h < 32 or h === 127,$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<h, t::binary>>, acc) when h in @space, do: strip_spaces(t) == "" and acc$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<h, t::binary>>, acc), do: unquoted_token(t, <<acc::binary, h>>)$/;"	f
unregister	deps/connection/lib/connection.ex	/^  defp unregister(name) when name === self(), do: :ok$/;"	f
unregister	deps/connection/lib/connection.ex	/^  defp unregister({:global, name}), do: :global.unregister_name(name)$/;"	f
unregister	deps/connection/lib/connection.ex	/^  defp unregister({:local, name}), do: Process.unregister(name)$/;"	f
unregister	deps/connection/lib/connection.ex	/^  defp unregister({:via, mod, name}), do: apply(mod, :unregister_name, [name])$/;"	f
unsafe_load	deps/ecto/lib/ecto/schema/loader.ex	/^  def unsafe_load(schema, data, loader) do$/;"	f
unsafe_load	deps/ecto/lib/ecto/schema/loader.ex	/^  def unsafe_load(struct, types, map, loader) when is_map(map) do$/;"	f
unsafe_validate_unique	deps/ecto/integration_test/cases/repo.exs	/^  test "unsafe_validate_unique\/3 with composite keys" do$/;"	t
unsafe_validate_unique	deps/ecto/integration_test/cases/repo.exs	/^  test "unsafe_validate_unique\/3" do$/;"	t
unsafe_validate_unique	deps/ecto/lib/ecto/changeset.ex	/^  def unsafe_validate_unique(changeset, fields, repo, opts \\\\ []) when is_list(opts) do$/;"	f
unshare	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp unshare(%{mode_ref: ref} = state, ref) do$/;"	f
unshare	deps/db_connection/lib/db_connection/ownership/manager.ex	/^  defp unshare(state, _ref) do$/;"	f
unsubscribe	deps/phoenix/lib/phoenix/endpoint.ex	/^      def unsubscribe(pid, topic) do$/;"	f
unsubscribe	deps/phoenix/lib/phoenix/endpoint.ex	/^      def unsubscribe(topic) do$/;"	f
unsubscribe	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def unsubscribe(server, pid, topic) when is_atom(server) do$/;"	f
unsubscribe	deps/phoenix_pubsub/lib/phoenix/pubsub.ex	/^  def unsubscribe(server, topic) when is_atom(server) do$/;"	f
unsubscribe	deps/phoenix_pubsub/lib/phoenix/pubsub/local.ex	/^  def unsubscribe(pubsub_server, pool_size, pid, topic) when is_atom(pubsub_server) do$/;"	f
unsuffix	deps/phoenix/lib/phoenix/naming.ex	/^  def unsuffix(value, suffix) do$/;"	f
untrack	deps/phoenix/lib/phoenix/presence.ex	/^      def untrack(%Phoenix.Socket{} = socket, key) do$/;"	f
untrack	deps/phoenix/lib/phoenix/presence.ex	/^      def untrack(pid, topic, key) do$/;"	f
untrack	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def untrack(tracker_name, pid) when is_pid(pid) do$/;"	f
untrack	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def untrack(tracker_name, pid, topic, key) when is_pid(pid) do$/;"	f
untrack	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def untrack(server_pid, pid) when is_pid(pid) do$/;"	f
untrack	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def untrack(server_pid, pid, topic, key) when is_pid(pid) do$/;"	f
untyped map	deps/ecto/integration_test/cases/type.exs	/^  test "untyped map" do$/;"	t
unused	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^        defp unused(), do: :ok$/;"	f
unused?	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def unused?({_filter, count}), do: count < 1$/;"	f
unused_filters	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def unused_filters(filter_map) do$/;"	f
unused_filters?	deps/dialyxir/lib/dialyxir/filter_map.ex	/^  def unused_filters?(filter_map) do$/;"	f
unused_variable_name?	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp unused_variable_name?(_), do: false$/;"	f
unused_variable_name?	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp unused_variable_name?({:_, _, _}), do: true$/;"	f
unused_variable_name?	deps/credo/lib/credo/check/consistency/unused_variable_names/collector.ex	/^  defp unused_variable_name?({name, _, _}) when is_atom(name),$/;"	f
unvalidated_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp unvalidated_properties(properties, validated_properties) do$/;"	f
unwrap	deps/erlex/src/parser.erl	/^unwrap({_,_,V}) -> V.$/;"	f	module:parser
unwrap_and_tag	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def unwrap_and_tag(combinator \\\\ empty(), to_tag, tag)$/;"	f
unzip_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp unzip_ids([], acc1, acc2), do: {acc1, acc2}$/;"	f
unzip_ids	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp unzip_ids([{k, v}|t], acc1, acc2), do: unzip_ids(t, [k|acc1], [v|acc2])$/;"	f
unzip_inserts	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp unzip_inserts(header, rows) do$/;"	f
up	.elixir_ls/build/test/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def up do$/;"	f
up	_build/dev/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def up do$/;"	f
up	_build/test/lib/boruta/priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def up do$/;"	f
up	deps/ecto_sql/integration_test/sql/alter.exs	/^    def up do$/;"	f
up	deps/ecto_sql/integration_test/sql/migration.exs	/^    def up do$/;"	f
up	deps/ecto_sql/integration_test/sql/migrator.exs	/^      def up do$/;"	f
up	deps/ecto_sql/integration_test/sql/migrator.exs	/^    def up do$/;"	f
up	deps/ecto_sql/lib/ecto/migration.ex	/^        def up do$/;"	f
up	deps/ecto_sql/lib/ecto/migration.ex	/^      def up do$/;"	f
up	deps/ecto_sql/lib/ecto/migration/schema_migration.ex	/^  def up(repo, version, prefix) do$/;"	f
up	deps/ecto_sql/lib/ecto/migrator.ex	/^        def up do$/;"	f
up	deps/ecto_sql/lib/ecto/migrator.ex	/^  def up(repo, version, module, opts \\\\ []) do$/;"	f
up	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  defp up(state, remote_replica) do$/;"	f
up	priv/repo/migrations/20191101112745_change_redirect_uri_to_redirect_uris.exs	/^  def up do$/;"	f
update	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def update(conn, %{"id" => id, <%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
update	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def update(conn, %{"id" => id, <%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
update	deps/db_connection/lib/db_connection/holder.ex	/^  def update(pool, ref, mod, state) do$/;"	f
update	deps/ecto/lib/ecto/multi.ex	/^  def update(multi, name, %Changeset{} = changeset, opts) do$/;"	f
update	deps/ecto/lib/ecto/multi.ex	/^  def update(multi, name, changeset_or_fun, opts \\\\ [])$/;"	f
update	deps/ecto/lib/ecto/multi.ex	/^  def update(multi, name, fun, opts) when is_function(fun, 1) do$/;"	f
update	deps/ecto/lib/ecto/query.ex	/^  defmacro update(query, binding \\\\ [], expr) do$/;"	a
update	deps/ecto/lib/ecto/repo.ex	/^        def update(struct, opts \\\\ []) do$/;"	f
update	deps/ecto/lib/ecto/repo/schema.ex	/^  def update(_repo, _name, %{__struct__: _}, opts) when is_list(opts) do$/;"	f
update	deps/ecto/lib/ecto/repo/schema.ex	/^  def update(repo, name, %Changeset{} = changeset, opts) when is_list(opts) do$/;"	f
update	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def update(prefix, table, fields, filters, _returning) do$/;"	f
update	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def update(prefix, table, fields, filters, returning) do$/;"	f
update	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^      def update(adapter_meta, %{source: source, prefix: prefix}, fields, params, returning, opts) do$/;"	f
update	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def update(prefix, table, fields, filters, returning) do$/;"	f
update	deps/phoenix/lib/phoenix/config.ex	/^  defp update(module, config, permanent) do$/;"	f
update	deps/phoenix/lib/phoenix/presence.ex	/^      def update(%Phoenix.Socket{} = socket, key, meta) do$/;"	f
update	deps/phoenix/lib/phoenix/presence.ex	/^      def update(pid, topic, key, meta) do$/;"	f
update	deps/phoenix/priv/templates/phx.gen.html/controller.ex	/^  def update(conn, %{"id" => id, <%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
update	deps/phoenix/priv/templates/phx.gen.json/controller.ex	/^  def update(conn, %{"id" => id, <%= inspect schema.singular %> => <%= schema.singular %>_params}) do$/;"	f
update	deps/phoenix_pubsub/lib/phoenix/tracker.ex	/^  def update(tracker_name, pid, topic, key, meta) when is_pid(pid) and (is_map(meta) or is_function(meta)) do$/;"	f
update	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def update(server_pid, pid, topic, key, meta) when is_pid(pid) and (is_map(meta) or is_function(meta)) do$/;"	f
update	deps/postgrex/lib/postgrex/type_server.ex	/^  def update(server, ref, []) do$/;"	f
update	deps/postgrex/lib/postgrex/type_server.ex	/^  def update(server, ref, [_ | _] = type_infos) do$/;"	f
update all	deps/ecto/integration_test/cases/repo.exs	/^  test "update all" do$/;"	t
update all increment syntax	deps/ecto/integration_test/cases/repo.exs	/^  test "update all increment syntax" do$/;"	t
update all no entries	deps/ecto/integration_test/cases/repo.exs	/^  test "update all no entries" do$/;"	t
update all with casting and dumping	deps/ecto/integration_test/cases/repo.exs	/^  test "update all with casting and dumping" do$/;"	t
update all with casting and dumping on id type field	deps/ecto/integration_test/cases/repo.exs	/^  test "update all with casting and dumping on id type field" do$/;"	t
update all with filter	deps/ecto/integration_test/cases/repo.exs	/^  test "update all with filter" do$/;"	t
update all with invalid prefix	deps/ecto/integration_test/cases/repo.exs	/^  test "update all with invalid prefix" do$/;"	t
update all with joins	deps/ecto/integration_test/cases/joins.exs	/^  test "update all with joins" do$/;"	t
update all with returning with schema	deps/ecto/integration_test/cases/repo.exs	/^  test "update all with returning with schema" do$/;"	t
update all with returning without schema	deps/ecto/integration_test/cases/repo.exs	/^  test "update all with returning without schema" do$/;"	t
update!	deps/ecto/lib/ecto/query/builder/update.ex	/^  def update!(_query, runtime, _file, _line) do$/;"	f
update!	deps/ecto/lib/ecto/query/builder/update.ex	/^  def update!(query, runtime, file, line) when is_list(runtime) do$/;"	f
update!	deps/ecto/lib/ecto/repo.ex	/^        def update!(struct, opts \\\\ []) do$/;"	f
update!	deps/ecto/lib/ecto/repo/schema.ex	/^  def update!(repo, name, struct_or_changeset, opts) do$/;"	f
update_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def update_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>, attrs) do$/;"	f
update_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def update_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>, attrs) do$/;"	f
update_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "update_<%= schema.singular %>\/2 with invalid data returns error changeset" do$/;"	t
update_	.elixir_ls/build/test/lib/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "update_<%= schema.singular %>\/2 with valid data updates the <%= schema.singular %>" do$/;"	t
update_	deps/phoenix/priv/templates/phx.gen.context/access_no_schema.ex	/^  def update_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>, attrs) do$/;"	f
update_	deps/phoenix/priv/templates/phx.gen.context/schema_access.ex	/^  def update_<%= schema.singular %>(%<%= inspect schema.alias %>{} = <%= schema.singular %>, attrs) do$/;"	f
update_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "update_<%= schema.singular %>\/2 with invalid data returns error changeset" do$/;"	t
update_	deps/phoenix/priv/templates/phx.gen.context/test_cases.exs	/^    test "update_<%= schema.singular %>\/2 with valid data updates the <%= schema.singular %>" do$/;"	t
update_all	deps/ecto/lib/ecto/multi.ex	/^  def update_all(multi, name, queryable, updates, opts \\\\ []) when is_list(opts) do$/;"	f
update_all	deps/ecto/lib/ecto/repo.ex	/^          def update_all(queryable, updates, opts \\\\ []) do$/;"	f
update_all	deps/ecto/lib/ecto/repo/queryable.ex	/^  def update_all(name, queryable, [], opts) when is_list(opts) do$/;"	f
update_all	deps/ecto/lib/ecto/repo/queryable.ex	/^  def update_all(name, queryable, updates, opts) when is_list(opts) do$/;"	f
update_all	deps/ecto/lib/ecto/repo/queryable.ex	/^  defp update_all(name, queryable, opts) do$/;"	f
update_all	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    def update_all(query, prefix \\\\ nil) do$/;"	f
update_all	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    def update_all(%{from: %{source: source}} = query, prefix \\\\ nil) do$/;"	f
update_all	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    def update_all(query) do$/;"	f
update_attribute	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp update_attribute(module, attr, fun) do$/;"	f
update_change	deps/ecto/lib/ecto/changeset.ex	/^  def update_change(%Changeset{changes: changes} = changeset, key, function) when is_atom(key) do$/;"	f
update_changeset	deps/ecto/lib/ecto.ex	/^      def update_changeset(user, params) do$/;"	f
update_changeset	lib/boruta/adapters/ecto/schemas/client.ex	/^  def update_changeset(client, attrs) do$/;"	f
update_client	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate update_client(client, attrs), to: Boruta.Ecto.Admin.Clients$/;"	d
update_client	lib/boruta/adapters/ecto/admin/clients.ex	/^  def update_client(%Client{} = client, attrs) do$/;"	f
update_context	deps/decimal/lib/decimal.ex	/^  def update_context(fun) when is_function(fun, 1) do$/;"	f
update_context	deps/earmark/lib/earmark/context.ex	/^  def update_context() do$/;"	f
update_context	deps/earmark/lib/earmark/context.ex	/^  def update_context(context = %Earmark.Context{options: options}) do$/;"	f
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{cookies: %Unfetched{}} = conn, _fun), do: conn$/;"	f
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{cookies: cookies} = conn, fun), do: %{conn | cookies: fun.(cookies)}$/;"	f
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{state: :chunked}, _fun), do: raise(AlreadySentError)$/;"	f
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{state: :sent}, _fun), do: raise(AlreadySentError)$/;"	f
update_dict	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp update_dict(dict, _parent_key, item, sub_structs) when is_list(dict) do$/;"	f
update_dict	deps/ecto/lib/ecto/repo/assoc.ex	/^  defp update_dict(dict, parent_key, item, _sub_structs) when is_map(dict) do$/;"	f
update_fields	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp update_fields(type, %{updates: updates} = query, sources) do$/;"	f
update_fields	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp update_fields(%{updates: updates} = query, sources) do$/;"	f
update_fields	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp update_fields(%Query{updates: updates} = query, sources) do$/;"	f
update_key	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp update_key(:on_conflict, key, _query, _sources) do$/;"	f
update_key	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp update_key(:update, key, %{from: from} = query, sources) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp update_op(:inc, quoted_key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp update_op(:set, quoted_key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp update_op(command, _quoted_key, _value, _sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp update_op(:inc, key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp update_op(:pull, key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp update_op(:push, key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp update_op(:set, key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp update_op(command, _key, _value, _sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp update_op(:inc, key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp update_op(:set, key, value, sources, query) do$/;"	f
update_op	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp update_op(command, _key, _value, _sources, query) do$/;"	f
update_parent_key	deps/ecto/lib/ecto/association.ex	/^  defp update_parent_key(changeset, :delete, _key, _value),$/;"	f
update_parent_key	deps/ecto/lib/ecto/association.ex	/^  defp update_parent_key(changeset, _action, key, value),$/;"	f
update_parent_prefix	deps/ecto/lib/ecto/association.ex	/^  def update_parent_prefix($/;"	f
update_parent_prefix	deps/ecto/lib/ecto/association.ex	/^  def update_parent_prefix(changeset, _),$/;"	f
update_pending	deps/earmark/lib/earmark/parser/list_info.ex	/^  def update_pending(%{pending: @not_pending}=info, line) do$/;"	f
update_pending	deps/earmark/lib/earmark/parser/list_info.ex	/^  def update_pending(%{pending: pending}=info, line) do$/;"	f
update_pending	deps/earmark/lib/earmark/parser/list_info.ex	/^  def update_pending(list_info, line)$/;"	f
update_pipes	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp update_pipes(module, fun) do$/;"	f
update_req_header	deps/plug/lib/plug/conn.ex	/^  def update_req_header(%Conn{state: :chunked}, _key, _initial, _fun) do$/;"	f
update_req_header	deps/plug/lib/plug/conn.ex	/^  def update_req_header(%Conn{state: :sent}, _key, _initial, _fun) do$/;"	f
update_req_header	deps/plug/lib/plug/conn.ex	/^  def update_req_header(%Conn{} = conn, key, initial, fun)$/;"	f
update_req_header	deps/plug/lib/plug/conn.ex	/^  def update_req_header(conn, key, initial, fun)$/;"	f
update_resp_header	deps/plug/lib/plug/conn.ex	/^  def update_resp_header(%Conn{state: :chunked}, _key, _initial, _fun) do$/;"	f
update_resp_header	deps/plug/lib/plug/conn.ex	/^  def update_resp_header(%Conn{state: :sent}, _key, _initial, _fun) do$/;"	f
update_resp_header	deps/plug/lib/plug/conn.ex	/^  def update_resp_header(%Conn{} = conn, key, initial, fun)$/;"	f
update_resp_header	deps/plug/lib/plug/conn.ex	/^  def update_resp_header(conn, key, initial, fun)$/;"	f
update_scope	lib/boruta/adapters/ecto/admin.ex	/^  defdelegate update_scope(scope, attrs), to: Boruta.Ecto.Admin.Scopes$/;"	d
update_scope	lib/boruta/adapters/ecto/admin/scopes.ex	/^  def update_scope(%Scope{} = scope, attrs) do$/;"	f
update_stack	deps/phoenix/lib/phoenix/router/scope.ex	/^  defp update_stack(module, fun) do$/;"	f
update_status	deps/ex_doc/lib/mix/tasks/docs.ex	/^        def update_status(id, new_status)$/;"	f
updates the client	test/boruta/admin_test.exs	/^    test "updates the client" do$/;"	t
updates the client with authorized scopes	test/boruta/admin_test.exs	/^    test "updates the client with authorized scopes" do$/;"	t
updates the scope	test/boruta/admin_test.exs	/^    test "updates the scope", %{scope: scope} do$/;"	t
updating changeset with empty cast associations	deps/ecto/integration_test/cases/assoc.exs	/^  test "updating changeset with empty cast associations" do$/;"	t
upgrade	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def upgrade(_req, _env, __MODULE__, {:error, mfa, kind, reason, stack}) do$/;"	f
upgrade	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def upgrade(req, env, __MODULE__, {_, _, _} = args) do$/;"	f
upperbound	deps/phoenix_pubsub/lib/phoenix/tracker/clock.ex	/^  def upperbound(c1, c2) do$/;"	f
uri_decode	deps/plug/lib/plug/static.ex	/^  defp uri_decode(path) do$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:any_quote, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:close_bracket, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:close_paren, _} | _], result, [:close_paren], _lnb), do: result$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:close_paren, text} | ts], result, [:close_paren | needed], lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:escaped, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:open_bracket, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:open_paren, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:verbatim, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url([{:ws, text} | ts], result, needed, lnb),$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url(_, _, _, _), do: nil$/;"	f
url	deps/earmark/lib/earmark/helpers/link_parser.ex	/^  defp url(ts_all = [{:open_title, text} | ts], result, [:close_paren], lnb) do$/;"	f
url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp url("mix " <> name, _mode, config), do: mix_task(name, config)$/;"	f
url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp url("mix help " <> name, _mode, config), do: mix_task(name, config)$/;"	f
url	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp url(code, mode, config) do$/;"	f
url	deps/phoenix/lib/phoenix/controller.ex	/^  defp url(opts) do$/;"	f
url	deps/phoenix/lib/phoenix/endpoint.ex	/^      def url do$/;"	f
url	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def url(endpoint) do$/;"	f
url	deps/phoenix/lib/phoenix/router/helpers.ex	/^      def url(data) do$/;"	f
url	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def url(_router, %Conn{private: private}) do$/;"	f
url	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def url(_router, %URI{} = uri) do$/;"	f
url	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def url(_router, %_{endpoint: endpoint}) do$/;"	f
url	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def url(_router, endpoint) when is_atom(endpoint) do$/;"	f
url	deps/phoenix/lib/phoenix/router/helpers.ex	/^  def url(router, other) do$/;"	f
url	deps/plug/lib/plug/debugger.ex	/^  defp url(%Plug.Conn{scheme: scheme, host: host, port: port} = conn),$/;"	f
urlsafe_base64	deps/secure_random/lib/secure_random.ex	/^  def urlsafe_base64(n \\\\ @default_length) do$/;"	f
use_colors	deps/credo/lib/credo/cli/output/shell.ex	/^  def use_colors(use_colors) do$/;"	f
use_colors	deps/credo/lib/credo/cli/output/ui.ex	/^  def use_colors(exec) do$/;"	f
user?	deps/credo/lib/credo/check/readability/predicate_function_names.ex	/^      defp user?(cookie) do$/;"	f
user_adapter	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp user_adapter(endpoint, config) do$/;"	f
user_connect	deps/phoenix/lib/phoenix/socket.ex	/^  defp user_connect(handler, endpoint, transport, serializer, params, connect_info) do$/;"	f
user_factory	deps/ex_machina/lib/ex_machina.ex	/^      def user_factory do$/;"	f
user_factory	deps/ex_machina/lib/ex_machina/ecto.ex	/^      def user_factory do$/;"	f
user_factory	deps/ex_machina/lib/ex_machina/strategy.ex	/^        def user_factory do$/;"	f
uses the repository when allowed from another process	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "uses the repository when allowed from another process" do$/;"	t
uses the repository when checked out	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "uses the repository when checked out" do$/;"	t
uses the repository when shared from another process	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "uses the repository when shared from another process" do$/;"	t
uses_mutating_parameters	deps/credo/lib/credo/check/refactor/variable_rebinding.ex	/^      def uses_mutating_parameters(params!) do$/;"	f
using_basic_auth	test/boruta/oauth/integration/authorization_code_grant_test.exs	/^  defp using_basic_auth(username, password) do$/;"	f
using_basic_auth	test/boruta/oauth/integration/introspect_test.exs	/^  defp using_basic_auth(username, password) do$/;"	f
using_basic_auth	test/boruta/oauth/integration/refresh_token_test.exs	/^  defp using_basic_auth(username, password) do$/;"	f
using_basic_auth	test/boruta/oauth/integration/resource_owner_password_credentials_grant_test.exs	/^  defp using_basic_auth(username, password) do$/;"	f
using_basic_auth	test/boruta/oauth/integration/revoke_test.exs	/^  defp using_basic_auth(username, password) do$/;"	f
using_join	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp using_join(%{joins: []}, _kind, _sources), do: {[], []}$/;"	f
using_join	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp using_join(%{joins: joins} = query, kind, sources) do$/;"	f
using_join	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp using_join(%{joins: []}, _kind, _prefix, _sources), do: {[], []}$/;"	f
using_join	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp using_join(%{joins: joins} = query, kind, prefix, sources) do$/;"	f
using_plug_cowboy?	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp using_plug_cowboy?() do$/;"	f
using_plug_cowboy?	deps/plug/lib/plug/adapters/cowboy2.ex	/^  defp using_plug_cowboy?() do$/;"	f
usually_no_space_after?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_after?(_, _, _), do: false$/;"	f
usually_no_space_after?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_after?(_, {_, _, :-}, _), do: false$/;"	f
usually_no_space_after?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_after?(_, {_, _, :..}, _), do: true$/;"	f
usually_no_space_after?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_after?({_, _, :..}, {_, _, :-}, _), do: true$/;"	f
usually_no_space_after?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_after?({_, _, :=}, {_, _, :-}, _), do: true$/;"	f
usually_no_space_after?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_after?({_, _, :^}, {_, _, :-}, _), do: true$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?(_, _, _), do: false$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?(_, {_, _, :-}, _), do: true$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?(_, {_, _, :..}, _), do: true$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?({:float, _, _}, {_, _, :-}, _), do: false$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?({:identifier, _, _}, {_, _, :-}, _), do: false$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?({:int, _, _}, {_, _, :-}, _), do: false$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?({:number, _, _}, {_, _, :-}, _), do: false$/;"	f
usually_no_space_before?	deps/credo/lib/credo/check/consistency/space_around_operators/space_helper.ex	/^  def usually_no_space_before?({_, _, :^}, {_, _, :-}, _), do: true$/;"	f
utf8_char	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def utf8_char(combinator \\\\ empty(), ranges)$/;"	f
utf8_string	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def utf8_string(combinator \\\\ empty(), range, count_or_opts)$/;"	f
uuid	deps/secure_random/lib/secure_random.ex	/^  def uuid do$/;"	f
uuid4	deps/ex_doc/lib/ex_doc/formatter/epub.ex	/^  defp uuid4 do$/;"	f
valid?	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def valid?(root = %Root{}, data), do: valid_fragment?(root, root.schema, data)$/;"	f
valid?	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def valid?(schema = %{}, data), do: valid?(Schema.resolve(schema), data)$/;"	f
valid?	deps/ex_json_schema/lib/ex_json_schema/validator/type.ex	/^  defp valid?(type, data) do$/;"	f
valid?	deps/ex_json_schema/lib/ex_json_schema/validator/type.ex	/^  defp valid?(type, data) when is_list(type) do$/;"	f
valid?	deps/mime/lib/mime/application.ex	/^      def valid?(type) do$/;"	f
valid?	deps/phoenix/lib/mix/phoenix/context.ex	/^  def valid?(context) do$/;"	f
valid?	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def valid?(schema) do$/;"	f
valid?	deps/plug/lib/plug/mime.ex	/^  def valid?(type) do$/;"	f
valid_chain_start?	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^    defp valid_chain_start?($/;"	f
valid_chain_start?	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp valid_chain_start?($/;"	f
valid_chain_start?	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp valid_chain_start?(_, _excluded_functions, _excluded_argument_types), do: true$/;"	f
valid_chain_start_function_call?	deps/credo/lib/credo/check/refactor/pipe_chain_start.ex	/^  defp valid_chain_start_function_call?($/;"	f
valid_csrf_token?	deps/plug/lib/plug/csrf_protection.ex	/^  defp valid_csrf_token?($/;"	f
valid_csrf_token?	deps/plug/lib/plug/csrf_protection.ex	/^  defp valid_csrf_token?(_conn, _csrf_token, _user_token, _allowed_host), do: false$/;"	f
valid_extension_name?	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  def valid_extension_name?(input) do$/;"	f
valid_fragment?	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def valid_fragment?(root, schema_or_ref, data) do$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(<<>>), do: true$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(<<_, t::binary>>), do: valid_header_key?(t)$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(<<h, _::binary>>) when h in ?A..?Z, do: false$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(_), do: false$/;"	f
valid_issues	deps/credo/lib/credo/cli/filter.ex	/^  def valid_issues(list, exec) when is_list(list) do$/;"	f
valid_masked_token?	deps/plug/lib/plug/csrf_protection.ex	/^  defp valid_masked_token?(csrf_token, user_token, mask) do$/;"	f
valid_request_id?	deps/plug/lib/plug/request_id.ex	/^  defp valid_request_id?(s), do: byte_size(s) in 20..200$/;"	f
valid_state_and_csrf_token?	deps/plug/lib/plug/csrf_protection.ex	/^  def valid_state_and_csrf_token?(state, csrf_token) do$/;"	f
valid_subquery_value?	deps/ecto/lib/ecto/query/planner.ex	/^  defp valid_subquery_value?(_), do: true$/;"	f
valid_subquery_value?	deps/ecto/lib/ecto/query/planner.ex	/^  defp valid_subquery_value?(args) when is_list(args), do: false$/;"	f
valid_subquery_value?	deps/ecto/lib/ecto/query/planner.ex	/^  defp valid_subquery_value?({_, _}), do: false$/;"	f
valid_subquery_value?	deps/ecto/lib/ecto/query/planner.ex	/^  defp valid_subquery_value?({container, _, args})$/;"	f
valid_types	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def valid_types, do: @valid_types$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validate(root = %Root{}, data, options) when is_list(options) do$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validate(root, data, options \\\\ [])$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validate(schema = %{}, data, options) when is_list(options) do$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/dependencies.ex	/^  def validate(_, _, _), do: []$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/dependencies.ex	/^  def validate(root, dependencies, data) when is_map(data) do$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/format.ex	/^  def validate(_, _), do: []$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/format.ex	/^  def validate(format, data) when is_binary(data) do$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  def validate(_, _, _), do: []$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  def validate(root, %{"items" => schema = %{}}, items) when is_list(items) do$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  def validate(root, %{"items" => schemata, "additionalItems" => additional_items}, items)$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  def validate(_, _, _), do: []$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  def validate(root, schema, properties = %{}) do$/;"	f
validate	deps/ex_json_schema/lib/ex_json_schema/validator/type.ex	/^  def validate(type, data) do$/;"	f
validate	deps/phoenix/lib/phoenix/endpoint/watcher.ex	/^  defp validate("node", [script|_], merged_opts) do$/;"	f
validate	deps/phoenix/lib/phoenix/endpoint/watcher.ex	/^  defp validate(_cmd, _args, _opts) do$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:authorize, %{"response_type" => _} = params) do$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:authorize, %{"response_type" => response_type} = params)$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:authorize, _params) do$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:introspect, params) do$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:revoke, params) do$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:token, %{"grant_type" => _} = params) do$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:token, %{"grant_type" => grant_type} = params)$/;"	f
validate	lib/boruta/oauth/validator.ex	/^  def validate(:token, _params) do$/;"	f
validate_acceptance	deps/ecto/lib/ecto/changeset.ex	/^  def validate_acceptance(%{params: params} = changeset, field, opts) do$/;"	f
validate_acceptance	deps/ecto/lib/ecto/changeset.ex	/^  def validate_acceptance(changeset, field, opts \\\\ [])$/;"	f
validate_acceptance_errors	deps/ecto/lib/ecto/changeset.ex	/^  defp validate_acceptance_errors(nil, _field, _opts), do: []$/;"	f
validate_acceptance_errors	deps/ecto/lib/ecto/changeset.ex	/^  defp validate_acceptance_errors(params, field, opts) do$/;"	f
validate_actions	deps/phoenix/lib/phoenix/router/resource.ex	/^  defp validate_actions(type, singleton, actions) do$/;"	f
validate_additional_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_additional_properties(_, _, _), do: []$/;"	f
validate_additional_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_additional_properties(_, false, properties) when map_size(properties) > 0 do$/;"	f
validate_additional_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_additional_properties(root, schema, properties) when is_map(schema) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:combination, _query, combinations, counter, operation, adapter) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:from, query, %{source: %Ecto.SubQuery{}}, _counter, kind, _adapter) when kind != :all do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:from, query, %{source: source} = expr, counter, _kind, adapter) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:join, query, exprs, counter, _operation, adapter) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:windows, query, exprs, counter, _operation, adapter) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:with_cte, _query, nil, counter, _operation, _adapter) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(:with_cte, query, with_expr, counter, _operation, adapter) do$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(kind, query, expr, counter, _operation, adapter)$/;"	f
validate_and_increment	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_and_increment(kind, query, exprs, counter, _operation, adapter)$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.channel.ex	/^  defp validate_args!(args) do$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp validate_args!([context, schema, _plural | _] = args) do$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp validate_args!(_) do$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def validate_args!([schema | _] = args) do$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.embedded.ex	/^  def validate_args!(_) do$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def validate_args!([schema, plural | _] = args, help) do$/;"	f
validate_args!	deps/phoenix/lib/mix/tasks/phx.gen.schema.ex	/^  def validate_args!(_, help) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, _, _), do: []$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"enum", enum}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"format", format}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"maxItems", max_items}, items) when is_list(items) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"maxLength", max_length}, data) when is_binary(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"maxProperties", max_properties}, data) when is_map(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"minItems", min_items}, items) when is_list(items) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"minLength", min_length}, data) when is_binary(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"minProperties", min_properties}, data) when is_map(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"multipleOf", multiple_of}, data) when is_number(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"pattern", pattern}, data) when is_binary(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"required", required}, data = %{}) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"type", type}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, _, {"uniqueItems", true}, items) when is_list(items) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, schema, {"maximum", maximum}, data) when is_number(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(_, schema, {"minimum", minimum}, data) when is_number(data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, _, {"$ref", path}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, _, {"allOf", all_of}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, _, {"anyOf", any_of}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, _, {"dependencies", dependencies}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, _, {"not", not_schema}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, _, {"oneOf", one_of}, data) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, schema, {"items", _}, items) do$/;"	f
validate_aspect	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  defp validate_aspect(root, schema, {"properties", _}, data = %{}) do$/;"	f
validate_attr!	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp validate_attr!({_, type}) do$/;"	f
validate_attr!	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp validate_attr!({_name, type} = attr) when type in @valid_types, do: attr$/;"	f
validate_attr!	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp validate_attr!({_name, {type, _}} = attr) when type in @valid_types, do: attr$/;"	f
validate_attr!	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp validate_attr!({name, :array}) do$/;"	f
validate_attr!	deps/phoenix/lib/mix/phoenix/schema.ex	/^  defp validate_attr!({name, :datetime}), do: validate_attr!({name, :naive_datetime})$/;"	f
validate_behaviour!	deps/mox/lib/mox.ex	/^  defp validate_behaviour!(behaviour) do$/;"	f
validate_bind	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp validate_bind(bind, all) do$/;"	f
validate_change	deps/ecto/lib/ecto/changeset.ex	/^  def validate_change(%Changeset{validations: validations} = changeset,$/;"	f
validate_change	deps/ecto/lib/ecto/changeset.ex	/^  def validate_change(%Changeset{} = changeset, field, validator) when is_atom(field) do$/;"	f
validate_checks	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp validate_checks(%Execution{checks: checks} = exec) do$/;"	f
validate_cipher	deps/plug/lib/plug/ssl.ex	/^  defp validate_cipher(cipher) do$/;"	f
validate_ciphers	deps/plug/lib/plug/ssl.ex	/^  defp validate_ciphers(options) do$/;"	f
validate_config	deps/phoenix/lib/phoenix/socket/transport.ex	/^  defp validate_config(config) do$/;"	f
validate_config!	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp validate_config!(repo, config) do$/;"	f
validate_confirmation	deps/ecto/lib/ecto/changeset.ex	/^  def validate_confirmation(%{params: nil} = changeset, _, _) do$/;"	f
validate_confirmation	deps/ecto/lib/ecto/changeset.ex	/^  def validate_confirmation(%{params: params} = changeset, field, opts) when is_map(params) do$/;"	f
validate_confirmation	deps/ecto/lib/ecto/changeset.ex	/^  def validate_confirmation(changeset, field, opts \\\\ [])$/;"	f
validate_converter_fun_result	deps/credo/lib/credo/config_builder.ex	/^  defp validate_converter_fun_result(_exec, plugin_mod, switch_name, value) do$/;"	f
validate_converter_fun_result	deps/credo/lib/credo/config_builder.ex	/^  defp validate_converter_fun_result(exec, plugin_mod, _switch_name, {param_name, param_value}) do$/;"	f
validate_decoder!	deps/plug/lib/plug/parsers/json.ex	/^  defp validate_decoder!(decoder) do$/;"	f
validate_decoder!	deps/plug/lib/plug/parsers/json.ex	/^  defp validate_decoder!(decoder) when is_atom(decoder) do$/;"	f
validate_decoder!	deps/plug/lib/plug/parsers/json.ex	/^  defp validate_decoder!(nil) do$/;"	f
validate_decoder!	deps/plug/lib/plug/parsers/json.ex	/^  defp validate_decoder!({module, fun, args} = mfa)$/;"	f
validate_defaults!	deps/ecto/lib/ecto/association.ex	/^  def validate_defaults!(_name, defaults) when is_list(defaults),$/;"	f
validate_defaults!	deps/ecto/lib/ecto/association.ex	/^  def validate_defaults!(_name, {mod, fun, args} = defaults)$/;"	f
validate_defaults!	deps/ecto/lib/ecto/association.ex	/^  def validate_defaults!(name, defaults),$/;"	f
validate_dependency	deps/ex_json_schema/lib/ex_json_schema/validator/dependencies.ex	/^  defp validate_dependency(_, property, dependencies, data) do$/;"	f
validate_dependency	deps/ex_json_schema/lib/ex_json_schema/validator/dependencies.ex	/^  defp validate_dependency(root, _, schema, data) when is_map(schema) do$/;"	f
validate_down_period	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def validate_down_period(_d_period, _b_period), do: :ok$/;"	f
validate_down_period	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def validate_down_period(d_period, b_period) when d_period < (2 * b_period) do$/;"	f
validate_exclusion	deps/ecto/lib/ecto/changeset.ex	/^  def validate_exclusion(changeset, field, data, opts \\\\ []) do$/;"	f
validate_fallback	deps/phoenix/lib/phoenix/controller/pipeline.ex	/^  def validate_fallback(plug, module, fallback) do$/;"	f
validate_format	deps/ecto/lib/ecto/changeset.ex	/^  def validate_format(changeset, field, format, opts \\\\ []) do$/;"	f
validate_fragment	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validate_fragment(root, schema_or_ref, data, options \\\\ []) when is_list(options) do$/;"	f
validate_has_pk_field!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp validate_has_pk_field!([], related, assoc) do$/;"	f
validate_has_pk_field!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp validate_has_pk_field!(pk_fields, _related, _assoc), do: pk_fields$/;"	f
validate_header_key_if_test!	deps/plug/lib/plug/conn.ex	/^  defp validate_header_key_if_test!(_adapter, _key) do$/;"	f
validate_header_key_if_test!	deps/plug/lib/plug/conn.ex	/^  defp validate_header_key_if_test!({Plug.Adapters.Test.Conn, _}, key) do$/;"	f
validate_header_value!	deps/plug/lib/plug/conn.ex	/^  defp validate_header_value!(key, value) do$/;"	f
validate_in	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_in(meta, expr, param, acc, adapter) do$/;"	f
validate_inclusion	deps/ecto/lib/ecto/changeset.ex	/^  def validate_inclusion(changeset, field, data, opts \\\\ []) do$/;"	f
validate_index_opts!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_index_opts!(opts) when is_list(opts) do$/;"	f
validate_index_opts!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_index_opts!(opts), do: opts$/;"	f
validate_items	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  defp validate_items($/;"	f
validate_items	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  defp validate_items(_root, {[], false}, items, {errors, index}) do$/;"	f
validate_items	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  defp validate_items(_root, {[], true}, _items, {errors, _index}), do: errors$/;"	f
validate_items	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  defp validate_items(_root, {_schemata, _additional_items}, [], {errors, _index}), do: errors$/;"	f
validate_items	deps/ex_json_schema/lib/ex_json_schema/validator/items.ex	/^  defp validate_items(root, {[], additional_items_schema}, [item | items], {errors, index}) do$/;"	f
validate_join_through	deps/ecto/lib/ecto/association.ex	/^  defp validate_join_through(_, join_through) when is_atom(join_through) or is_binary(join_through) do$/;"	f
validate_join_through	deps/ecto/lib/ecto/association.ex	/^  defp validate_join_through(name, _join_through) do$/;"	f
validate_join_through	deps/ecto/lib/ecto/association.ex	/^  defp validate_join_through(name, nil) do$/;"	f
validate_json_path!	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_json_path!([], _field, _type) do$/;"	f
validate_json_path!	deps/ecto/lib/ecto/query/planner.ex	/^  defp validate_json_path!([path_field | rest], field, type) do$/;"	f
validate_jsonp_callback!	deps/phoenix/lib/phoenix/controller.ex	/^  defp validate_jsonp_callback!(<<>>), do: :ok$/;"	f
validate_jsonp_callback!	deps/phoenix/lib/phoenix/controller.ex	/^  defp validate_jsonp_callback!(<<h, t::binary>>)$/;"	f
validate_jsonp_callback!	deps/phoenix/lib/phoenix/controller.ex	/^  defp validate_jsonp_callback!(_),$/;"	f
validate_known_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_known_properties(root, schema, properties) do$/;"	f
validate_length	deps/ecto/lib/ecto/changeset.ex	/^  def validate_length(changeset, field, opts) when is_list(opts) do$/;"	f
validate_local_url	deps/phoenix/lib/phoenix/controller.ex	/^  defp validate_local_url("\/" <> _ = to) do$/;"	f
validate_local_url	deps/phoenix/lib/phoenix/controller.ex	/^  defp validate_local_url("\/\/" <> _ = to), do: raise_invalid_url(to)$/;"	f
validate_local_url	deps/phoenix/lib/phoenix/controller.ex	/^  defp validate_local_url(to), do: raise_invalid_url(to)$/;"	f
validate_min_and_max!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp validate_min_and_max!(opts) do$/;"	f
validate_min_or_max!	deps/nimble_parsec/lib/nimble_parsec.ex	/^  defp validate_min_or_max!(kind, value, min) do$/;"	f
validate_mock!	deps/mox/lib/mox.ex	/^  defp validate_mock!(mock) do$/;"	f
validate_named_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_named_properties(root, schema, properties) do$/;"	f
validate_no_whitespace	lib/boruta/adapters/ecto/schemas/scope.ex	/^  defp validate_no_whitespace(changeset, field) do$/;"	f
validate_non_null_pk!	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp validate_non_null_pk!(values, map, pks, assoc) do$/;"	f
validate_not_nil	lib/boruta/adapters/ecto/schemas/scope.ex	/^  defp validate_not_nil(changeset, field) do$/;"	f
validate_number	deps/ecto/lib/ecto/changeset.ex	/^  def validate_number(changeset, field, opts) do$/;"	f
validate_number	deps/ecto/lib/ecto/changeset.ex	/^  defp validate_number(field, %Decimal{} = value, message, spec_key, _spec_function, target_value) do$/;"	f
validate_number	deps/ecto/lib/ecto/changeset.ex	/^  defp validate_number(field, value, message, spec_key, spec_function, target_value) do$/;"	f
validate_op!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp validate_op!(key) when key in @keys, do: :ok$/;"	f
validate_op!	deps/ecto/lib/ecto/query/builder/update.ex	/^  defp validate_op!(key), do: Builder.error! "unknown key `#{inspect(key)}` in update"$/;"	f
validate_path	deps/phoenix/lib/phoenix/router/scope.ex	/^  def validate_path("\/" <> _ = path), do: path$/;"	f
validate_path	deps/phoenix/lib/phoenix/router/scope.ex	/^  def validate_path(path) do$/;"	f
validate_path	deps/phoenix/lib/phoenix/router/scope.ex	/^  def validate_path(path) when is_binary(path) do$/;"	f
validate_pattern_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_pattern_properties(_, nil, _), do: []$/;"	f
validate_pattern_properties	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_pattern_properties(root, schema, properties) do$/;"	f
validate_pattern_property	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validate_pattern_property(root, {pattern, schema}, properties) do$/;"	f
validate_permdown_period	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def validate_permdown_period(_p_period, _d_period), do: :ok$/;"	f
validate_permdown_period	deps/phoenix_pubsub/lib/phoenix/tracker/shard.ex	/^  def validate_permdown_period(p_period, d_period) when p_period <= d_period do$/;"	f
validate_precision_opts!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_precision_opts!(opts, column) when is_list(opts) do$/;"	f
validate_qual	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp validate_qual(qual) do$/;"	f
validate_qual	deps/ecto/lib/ecto/query/builder/join.ex	/^  defp validate_qual(qual) when is_atom(qual) do$/;"	f
validate_redirect_uris	lib/boruta/adapters/ecto/schemas/client.ex	/^  defp validate_redirect_uris(changeset) do$/;"	f
validate_ref_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp validate_ref_path([""], _), do: nil$/;"	f
validate_ref_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp validate_ref_path([], _), do: nil$/;"	f
validate_ref_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp validate_ref_path([fragment = "\/" <> _], _), do: fragment$/;"	f
validate_ref_path	deps/ex_json_schema/lib/ex_json_schema/schema.ex	/^  defp validate_ref_path(_, ref), do: raise_invalid_reference_error(ref)$/;"	f
validate_required	deps/ecto/lib/ecto/changeset.ex	/^  def validate_required(%Changeset{} = changeset, fields, opts \\\\ []) when not is_nil(fields) do$/;"	f
validate_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^  defp validate_secret_key_base(nil),$/;"	f
validate_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^  defp validate_secret_key_base(secret_key_base) when byte_size(secret_key_base) < 64,$/;"	f
validate_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^  defp validate_secret_key_base(secret_key_base), do: secret_key_base$/;"	f
validate_skip_optional_callbacks!	deps/mox/lib/mox.ex	/^  defp validate_skip_optional_callbacks!(behaviours, skip_optional_callbacks) do$/;"	f
validate_subset	deps/ecto/lib/ecto/changeset.ex	/^  def validate_subset(changeset, field, data, opts \\\\ []) do$/;"	f
validate_supported_grant_types	lib/boruta/adapters/ecto/schemas/client.ex	/^  def validate_supported_grant_types(changeset) do$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!(type, _vars, _env) do$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!(type, _vars, _env) when is_atom(type),$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!({:^, _, [type]}, _vars, _env),$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!({:__aliases__, _, _} = type, _vars, env),$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!({:field, _, [{var, _, context}, field]}, vars, _env)$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!({composite, type}, vars, env) do$/;"	f
validate_type!	deps/ecto/lib/ecto/query/builder.ex	/^  def validate_type!({{:., _, [{var, _, context}, field]}, _, []}, vars, _env)$/;"	f
validate_type!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_type!(%Reference{} = reference) do$/;"	f
validate_type!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_type!(:datetime) do$/;"	f
validate_type!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_type!(type) when is_atom(type) do$/;"	f
validate_type!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_type!({type, subtype}) when is_atom(type) and is_atom(subtype) do$/;"	f
validate_type!	deps/ecto_sql/lib/ecto/migration.ex	/^  defp validate_type!({type, subtype}) when is_atom(type) and is_tuple(subtype) do$/;"	f
validate_uri	lib/boruta/adapters/ecto/schemas/client.ex	/^  defp validate_uri("" <> uri) do$/;"	f
validate_uri	lib/boruta/adapters/ecto/schemas/client.ex	/^  defp validate_uri(nil), do: "empty values are not allowed"$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(<<>>, _exception, _context) do$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(<<_::utf8, t::binary>>, exception, context) do$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(<<h, _::binary>>, exception, context) do$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(binary, exception, context)$/;"	f
validate_window_function!	deps/ecto/lib/ecto/query/builder.ex	/^  defp validate_window_function!(expr, _), do: expr$/;"	f
validate_window_function!	deps/ecto/lib/ecto/query/builder.ex	/^  defp validate_window_function!({:fragment, _, _} = expr, _env), do: expr$/;"	f
validate_window_function!	deps/ecto/lib/ecto/query/builder.ex	/^  defp validate_window_function!({agg, _, args} = expr, env)$/;"	f
validation_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validation_errors(root = %Root{}, schema = %{}, data, path) do$/;"	f
validation_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validation_errors(root, ref, data, path) when is_binary(ref) do$/;"	f
validation_errors	deps/ex_json_schema/lib/ex_json_schema/validator.ex	/^  def validation_errors(root, schema_or_ref, data, path \\\\ "#")$/;"	f
validation_errors	deps/ex_json_schema/lib/ex_json_schema/validator/properties.ex	/^  defp validation_errors(validated_properties) do$/;"	f
validations	deps/ecto/lib/ecto/changeset.ex	/^  def validations(%Changeset{validations: validations}) do$/;"	f
value	deps/jason/lib/decoder.ex	/^  defp value(data, original, skip, stack, key_decode, string_decode) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(%{__struct__: module} = value, escape, encode_map) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, _escape, _encode_map) when is_float(value) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, _escape, _encode_map) when is_integer(value) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, escape, _encode_map) when is_atom(value) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, escape, _encode_map) when is_binary(value) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, escape, encode_map) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, escape, encode_map) when is_list(value) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, escape, encode_map) when is_map(value) do$/;"	f
value	deps/jason/lib/encode.ex	/^  def value(value, {escape, encode_map}) do$/;"	f
value	deps/phoenix/lib/mix/phoenix/schema.ex	/^  def value(schema, field, value) do$/;"	f
value_for	deps/credo/lib/credo/check/config_comment.ex	/^  defp value_for(""), do: nil$/;"	f
value_for	deps/credo/lib/credo/check/config_comment.ex	/^  defp value_for(param_string) do$/;"	f
var_name	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp var_name(_), do: nil$/;"	f
var_name	deps/credo/lib/credo/check/refactor/abc_size.ex	/^  defp var_name({name, _, nil}) when is_atom(name), do: name$/;"	f
variable_or_mod_attribute?	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  defp variable_or_mod_attribute?(_), do: false$/;"	f
variable_or_mod_attribute?	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  defp variable_or_mod_attribute?({:@, _meta, list}) when is_list(list), do: true$/;"	f
variable_or_mod_attribute?	deps/credo/lib/credo/check/warning/operation_on_same_values.ex	/^  defp variable_or_mod_attribute?({atom, _meta, nil}) when is_atom(atom), do: true$/;"	f
verb_match	deps/phoenix/lib/phoenix/router/route.ex	/^  defp verb_match(:*), do: Macro.var(:_verb, nil)$/;"	f
verb_match	deps/phoenix/lib/phoenix/router/route.ex	/^  defp verb_match(verb), do: verb |> to_string() |> String.upcase()$/;"	f
verb_name	deps/phoenix/lib/phoenix/router/console_formatter.ex	/^  defp verb_name(verb), do: verb |> to_string() |> String.upcase()$/;"	f
verbose_info	deps/credo/lib/credo/cli/command/info/output/default.ex	/^  defp verbose_info(info) do$/;"	f
verbose_info	deps/credo/lib/credo/cli/command/info/output/json.ex	/^  defp verbose_info(info) do$/;"	f
verbose_schema_migration	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp verbose_schema_migration(repo, reason, fun) do$/;"	f
verified_or_unused_call	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verified_or_unused_call(:VERIFIED, _), do: nil$/;"	f
verified_or_unused_call	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verified_or_unused_call(_, candidate), do: candidate$/;"	f
verified_request?	deps/plug/lib/plug/csrf_protection.ex	/^  defp verified_request?(conn, csrf_token, allow_hosts) do$/;"	f
verify	deps/mox/lib/mox/server.ex	/^  def verify(owner_pid, for, test_or_on_exit) do$/;"	f
verify	deps/phoenix/lib/phoenix/token.ex	/^  def verify(_context, salt, nil, _opts) when is_binary(salt) do$/;"	f
verify	deps/phoenix/lib/phoenix/token.ex	/^  def verify(context, salt, token, opts \\\\ [])$/;"	f
verify	deps/phoenix/lib/phoenix/token.ex	/^  def verify(context, salt, token, opts) when is_binary(salt) and is_binary(token) do$/;"	f
verify	deps/plug_crypto/lib/plug/crypto.ex	/^  def verify(_key_base, salt, nil, _opts) when is_binary(salt) do$/;"	f
verify	deps/plug_crypto/lib/plug/crypto.ex	/^  def verify(key_base, salt, token, opts \\\\ [])$/;"	f
verify	deps/plug_crypto/lib/plug/crypto.ex	/^  def verify(key_base, salt, token, opts)$/;"	f
verify	deps/plug_crypto/lib/plug/crypto/message_verifier.ex	/^  def verify(signed, secret) when is_binary(signed) and is_binary(secret) do$/;"	f
verify	deps/postgrex/lib/postgrex/scram.ex	/^  def verify(data, opts) do$/;"	f
verify!	deps/mox/lib/mox.ex	/^  def verify! do$/;"	f
verify!	deps/mox/lib/mox.ex	/^  def verify!(mock) do$/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^    defp verify_candidate({unquote(op), _, arguments} = ast, :not_verified = _acc, candidate)$/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^    defp verify_candidate({unquote(op), _, arguments} = ast, :not_verified = acc, candidate)$/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verify_candidate($/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verify_candidate(ast, acc, _candidate) do$/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verify_candidate({:->, _, arguments} = ast, :not_verified = acc, _candidate)$/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verify_candidate({:=, _, _} = ast, :not_verified = acc, candidate) do$/;"	f
verify_candidate	deps/credo/lib/credo/check/warning/unused_function_return_helper.ex	/^  defp verify_candidate({:fn, _, arguments} = ast, :not_verified = acc, _candidate)$/;"	f
verify_cookie!	deps/plug/lib/plug/conn.ex	/^  defp verify_cookie!(cookie, _key) do$/;"	f
verify_cookie!	deps/plug/lib/plug/conn.ex	/^  defp verify_cookie!(cookie, key) when byte_size(cookie) > 4096 do$/;"	f
verify_ecto_dep	deps/ex_machina/lib/ex_machina/ecto.ex	/^  defp verify_ecto_dep do$/;"	f
verify_mock_or_all!	deps/mox/lib/mox.ex	/^  defp verify_mock_or_all!(pid, mock, test_or_on_exit) do$/;"	f
verify_on_exit	deps/mox/lib/mox/server.ex	/^  def verify_on_exit(pid) do$/;"	f
verify_on_exit!	deps/mox/lib/mox.ex	/^  def verify_on_exit!(_context \\\\ %{}) do$/;"	f
verify_or_decrypt	deps/plug/lib/plug/conn.ex	/^  defp verify_or_decrypt(names, req_cookies, cookies, fun) do$/;"	f
verify_token	deps/phoenix/lib/phoenix/transports/long_poll.ex	/^  defp verify_token(endpoint, signed, opts) do$/;"	f
version	deps/bunt/lib/bunt.ex	/^  def version, do: @version$/;"	f
version	deps/credo/lib/credo.ex	/^  def version, do: @version$/;"	f
version	deps/earmark/lib/earmark.ex	/^  def version() do$/;"	f
version	deps/ex_doc/lib/ex_doc.ex	/^  def version, do: @ex_doc_version$/;"	f
versions	deps/ecto_sql/lib/ecto/migration/schema_migration.ex	/^  def versions(repo, prefix) do$/;"	f
versions_to_clean	deps/phoenix/lib/phoenix/digester.ex	/^  defp versions_to_clean(versions, max_age, keep) do$/;"	f
versions_without_file	deps/ecto_sql/lib/ecto/migrator.ex	/^  defp versions_without_file(versions, migration_source) do$/;"	f
view	deps/phoenix/lib/phoenix/view.ex	/^        def view do$/;"	f
view_module	deps/phoenix/lib/phoenix/controller.ex	/^  def view_module(conn) do$/;"	f
view_template	deps/phoenix/lib/phoenix/controller.ex	/^  def view_template(conn) do$/;"	f
vim_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def vim_style, do: HTML.VimStyle.style()$/;"	f
virtual field	deps/ecto/integration_test/cases/repo.exs	/^  test "virtual field" do$/;"	t
visit	deps/earmark/lib/earmark/parser.ex	/^  defp visit([ item = %Block.BlockQuote{blocks: blocks} | rest], result, func) do$/;"	f
visit	deps/earmark/lib/earmark/parser.ex	/^  defp visit([ item = %Block.ListItem{blocks: blocks} | rest], result, func) do$/;"	f
visit	deps/earmark/lib/earmark/parser.ex	/^  defp visit([ item = %Block.List{blocks: blocks} | rest], result, func) do$/;"	f
visit	deps/earmark/lib/earmark/parser.ex	/^  defp visit([ item | rest], result, func) do$/;"	f
visit	deps/earmark/lib/earmark/parser.ex	/^  defp visit([], result, _func), do: result$/;"	f
void_tag	deps/earmark/lib/earmark/transform.ex	/^  defp void_tag({tag, atts, []}, options, level) do$/;"	f
void_tag?	deps/earmark/lib/earmark/line_scanner.ex	/^  def void_tag?(tag), do: Regex.match?(@void_tag_rgx, "<#{tag}>") $/;"	f
vs_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def vs_style, do: HTML.VisualStudioStyle.style()$/;"	f
wait	deps/postgrex/lib/postgrex/type_server.ex	/^  defp wait(state, {pid, _} = from) do$/;"	f
walk	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  def walk(anything, fun, ignore_map_keys \\\\ false), do: _walk(anything, fun, ignore_map_keys, false)$/;"	f
walk	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp walk(binary, _) when is_binary(binary) do$/;"	f
walk	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp walk(list, config) when is_list(list) do$/;"	f
walk	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp walk({:a, attrs, inner} = ast, config) do$/;"	f
walk	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp walk({:code, attrs, [code]} = ast, config) do$/;"	f
walk	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp walk({:pre, _, _} = ast, _config) do$/;"	f
walk	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp walk({tag, attrs, ast}, config) do$/;"	f
walk_ast	deps/earmark/lib/earmark/ast/renderer/ast_walker.ex	/^  def walk_ast(ast, fun), do: _walk_ast(ast, fun, [])$/;"	f
warmup	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  def warmup(endpoint) do$/;"	f
warmup_static	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp warmup_static(_endpoint, _manifest) do$/;"	f
warmup_static	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp warmup_static(endpoint) do$/;"	f
warmup_static	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp warmup_static(endpoint, %{"latest" => latest, "digests" => digests}) do$/;"	f
warmup_url	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp warmup_url(endpoint) do$/;"	f
warn	deps/bunt/lib/bunt.ex	/^  def warn(value \\\\ "") do$/;"	f
warn	deps/credo/lib/credo/cli/output/shell.ex	/^  def warn(value) do$/;"	f
warn	deps/credo/lib/credo/cli/output/ui.ex	/^    def warn(_), do: nil$/;"	f
warn	deps/credo/lib/credo/cli/output/ui.ex	/^    defdelegate warn(v), to: @shell_service$/;"	d
warn	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp warn(message, file, line, id) do$/;"	f
warn	deps/ex_doc/lib/ex_doc/autolink.ex	/^  defp warn({kind, module, name, arity}, file, line, id) do$/;"	f
warn_about_failed_run	deps/credo/lib/credo/check/runner.ex	/^  defp warn_about_failed_run(check, %SourceFile{} = source_file) do$/;"	f
warn_about_failed_run	deps/credo/lib/credo/check/runner.ex	/^  defp warn_about_failed_run(check, _) do$/;"	f
warn_about_ineffective_patterns	deps/credo/lib/credo/check/runner.ex	/^  defp warn_about_ineffective_patterns($/;"	f
warn_about_ineffective_patterns	deps/credo/lib/credo/check/runner.ex	/^  defp warn_about_ineffective_patterns({checks, _, _}, _) do$/;"	f
warn_and_raise	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp warn_and_raise() do$/;"	f
warn_and_raise	deps/plug/lib/plug/adapters/cowboy2.ex	/^  defp warn_and_raise() do$/;"	f
warn_if_ajax	deps/phoenix/lib/phoenix/controller.ex	/^  defp warn_if_ajax(conn) do$/;"	f
warn_if_check_missing	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp warn_if_check_missing({atom, _}), do: warn_if_check_missing({atom})$/;"	f
warn_if_check_missing	deps/credo/lib/credo/execution/task/validate_config.ex	/^  defp warn_if_check_missing({atom}) do$/;"	f
warn_json	deps/phoenix/lib/phoenix.ex	/^  defp warn_json(lib, preabmle \\\\ nil) do$/;"	f
warn_old_options	deps/dialyxir/lib/mix/tasks/dialyzer.ex	/^  defp warn_old_options(opts) do$/;"	f
warn_on_different_adapter_version	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp warn_on_different_adapter_version(CowboyAdapter, Cowboy2Adapter, endpoint) do$/;"	f
warn_on_different_adapter_version	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp warn_on_different_adapter_version(_user, _autodetected, _endpoint), do: :ok$/;"	f
warn_on_missing_json_library	deps/phoenix/lib/phoenix.ex	/^  defp warn_on_missing_json_library do$/;"	f
warn_serializer_deprecation	deps/phoenix/lib/phoenix/socket.ex	/^  defp warn_serializer_deprecation(name, transport_mod, serializer) do$/;"	f
warn_unexpected_msg	deps/phoenix/lib/phoenix/channel/server.ex	/^  defp warn_unexpected_msg(fun, arity, msg) do$/;"	f
warning	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp warning(warning_name) do$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/app_call.ex	/^  def warning(), do: :app_call$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/apply.ex	/^  def warning(), do: :apply$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/binary_construction.ex	/^  def warning(), do: :bin_construction$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/call.ex	/^  def warning(), do: :call$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/call_to_missing_function.ex	/^  def warning(), do: :call_to_missing$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/call_with_opaque.ex	/^  def warning(), do: :call_with_opaque$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/call_without_opaque.ex	/^  def warning(), do: :call_without_opaque$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/callback_argument_type_mismatch.ex	/^  def warning(), do: :callback_arg_type_mismatch$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/callback_info_missing.ex	/^  def warning(), do: :callback_info_missing$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/callback_missing.ex	/^  def warning(), do: :callback_missing$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/callback_spec_argument_type_mismatch.ex	/^  def warning(), do: :callback_spec_arg_type_mismatch$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/callback_spec_type_mismatch.ex	/^  def warning(), do: :callback_spec_type_mismatch$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/callback_type_mismatch.ex	/^  def warning(), do: :callback_type_mismatch$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/contract_diff.ex	/^  def warning(), do: :contract_diff$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/contract_range.ex	/^  def warning(), do: :contract_range$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/contract_subtype.ex	/^  def warning(), do: :contract_subtype$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/contract_supertype.ex	/^  def warning(), do: :contract_supertype$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/contract_with_opaque.ex	/^  def warning(), do: :contract_with_opaque$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/exact_equality.ex	/^  def warning(), do: :exact_eq$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/extra_range.ex	/^  def warning(), do: :extra_range$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/function_application_arguments.ex	/^  def warning(), do: :fun_app_args$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/function_application_no_function.ex	/^  def warning(), do: :fun_app_no_fun$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/guard_fail.ex	/^  def warning(), do: :guard_fail$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/guard_fail_pattern.ex	/^  def warning(), do: :guard_fail_pat$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/improper_list_construction.ex	/^  def warning(), do: :improper_list_constr$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/invalid_contract.ex	/^  def warning(), do: :invalid_contract$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/map_update.ex	/^  def warning(), do: :map_update$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/missing_range.ex	/^  def warning(), do: :missing_range$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/negative_guard_fail.ex	/^  def warning(), do: :neg_guard_fail$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/no_return.ex	/^  def warning(), do: :no_return$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/opaque_equality.ex	/^  def warning(), do: :opaque_eq$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/opaque_guard.ex	/^  def warning(), do: :opaque_guard$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/opaque_match.ex	/^  def warning(), do: :opaque_match$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/opaque_nonequality.ex	/^  def warning(), do: :opaque_neq$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/opaque_type_test.ex	/^  def warning(), do: :opaque_type_test$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/overlapping_contract.ex	/^  def warning(), do: :overlapping_contract$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/pattern_match.ex	/^  def warning(), do: :pattern_match$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/pattern_match_covered.ex	/^  def warning(), do: :pattern_match_cov$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/race_condition.ex	/^  def warning(), do: :race_condition$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/record_construction.ex	/^  def warning(), do: :record_constr$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/record_matching.ex	/^  def warning(), do: :record_matching$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/unknown_behaviour.ex	/^  def warning(), do: :unknown_behaviour$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/unknown_function.ex	/^  def warning(), do: :unknown_function$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/unknown_type.ex	/^  def warning(), do: :unknown_type$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/unmatched_return.ex	/^  def warning(), do: :unmatched_return$/;"	f
warning	deps/dialyxir/lib/dialyxir/warnings/unused_function.ex	/^  def warning(), do: :unused_fun$/;"	f
warnings	deps/dialyxir/lib/dialyxir/warnings.ex	/^  def warnings(), do: @warnings$/;"	f
warnings_msg	deps/dialyxir/lib/dialyxir/dialyzer.ex	/^  defp warnings_msg, do: color("done (warnings were emitted)", :yellow)$/;"	f
watch	deps/db_connection/lib/db_connection/watcher.ex	/^  def watch(supervisor, args) do$/;"	f
watch	deps/phoenix/lib/phoenix/endpoint/watcher.ex	/^  def watch(cmd, args, opts) do$/;"	f
watcher_args	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp watcher_args(cmd, cmd_args) do$/;"	f
watcher_children	deps/phoenix/lib/phoenix/endpoint/supervisor.ex	/^  defp watcher_children(_mod, conf, server?) do$/;"	f
web_mod	deps/phoenix/lib/mix/tasks/phx.routes.ex	/^  defp web_mod(base, name), do: Module.concat(["#{base}Web", name])$/;"	f
web_module	deps/phoenix/lib/mix/phoenix.ex	/^  def web_module(base) do$/;"	f
web_module	deps/phoenix/lib/mix/phoenix/context.ex	/^  defp web_module do$/;"	f
web_path	deps/phoenix/lib/mix/phoenix.ex	/^  def web_path(ctx_app, rel_path \\\\ "") when is_atom(ctx_app) do$/;"	f
web_test_path	deps/phoenix/lib/mix/phoenix.ex	/^  def web_test_path(ctx_app, rel_path \\\\ "") when is_atom(ctx_app) do$/;"	f
websocket_handle	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def websocket_handle(_other, handler_state) do$/;"	f
websocket_handle	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def websocket_handle({opcode, payload}, [handler | state]) when opcode in [:text, :binary] do$/;"	f
websocket_handle	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_handle(_other, req, state) do$/;"	f
websocket_handle	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_handle({opcode, payload}, req, {handler, state})$/;"	f
websocket_info	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def websocket_info(message, [handler | state]) do$/;"	f
websocket_info	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_info(message, req, {handler, state}) do$/;"	f
websocket_init	deps/phoenix/lib/phoenix/endpoint/cowboy2_handler.ex	/^  def websocket_init([handler | state]) do$/;"	f
websocket_init	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_init(_transport, req, {handler, args, timeout}) do$/;"	f
websocket_terminate	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_terminate(reason, _req, {handler, state}) do$/;"	f
websocket_terminate	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_terminate({:error, :closed}, _req, {handler, state}) do$/;"	f
websocket_terminate	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_terminate({:remote, :closed}, _req, {handler, state}) do$/;"	f
websocket_terminate	deps/phoenix/lib/phoenix/endpoint/cowboy_websocket.ex	/^  def websocket_terminate({:remote, code, _}, _req, {handler, state})$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(1), do: "Mon"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(2), do: "Tue"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(3), do: "Wed"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(4), do: "Thu"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(5), do: "Fri"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(6), do: "Sat"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(7), do: "Sun"$/;"	f
where	deps/ecto/lib/ecto/query.ex	/^  defmacro where(query, binding \\\\ [], expr) do$/;"	a
where	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp where(%{wheres: wheres} = query, sources) do$/;"	f
where	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp where(%{wheres: wheres} = query, sources) do$/;"	f
where	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp where(%Query{wheres: wheres} = query, sources) do$/;"	f
window	deps/ecto/lib/ecto/query/inspect.ex	/^  defp window({name, %{expr: definition} = part}, names) do$/;"	f
window	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp window(%{windows: []}, _sources), do: []$/;"	f
window	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp window(%{windows: windows} = query, sources) do$/;"	f
window	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp window(%{windows: []}, _sources), do: []$/;"	f
window	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp window(%{windows: windows} = query, sources) do$/;"	f
window	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp window(%{windows: []}, _sources), do: []$/;"	f
window	deps/ecto_sql/lib/ecto/adapters/tds/connection.ex	/^    defp window(_query, _sources),$/;"	f
window_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp window_expr({:frame, {:fragment, _, _} = fragment}, sources, query) do$/;"	f
window_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp window_expr({:order_by, fields}, sources, query) do$/;"	f
window_expr	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp window_expr({:partition_by, fields}, sources, query) do$/;"	f
window_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp window_expr({:frame, {:fragment, _, _} = fragment}, sources, query) do$/;"	f
window_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp window_expr({:order_by, fields}, sources, query) do$/;"	f
window_expr	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp window_expr({:partition_by, fields}, sources, query) do$/;"	f
window_exprs	deps/ecto_sql/lib/ecto/adapters/myxql/connection.ex	/^    defp window_exprs(kw, sources, query) do$/;"	f
window_exprs	deps/ecto_sql/lib/ecto/adapters/postgres/connection.ex	/^    defp window_exprs(kw, sources, query) do$/;"	f
windows	deps/ecto/lib/ecto/query.ex	/^  defmacro windows(query, binding \\\\ [], expr) do$/;"	a
windows	deps/ecto/lib/ecto/query/inspect.ex	/^  defp windows(windows, names) do$/;"	f
windows_path?	deps/credo/lib/credo/cli/filename.ex	/^  defp windows_path?(path) do$/;"	f
with	deps/credo/lib/credo/cli/filename.ex	/^  def with(filename, params) do$/;"	f
with basic authorization header	test/boruta/oauth/integration/common_grant_test.exs	/^    test "with basic authorization header" do$/;"	t
with checkout inside transaction	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "with checkout inside transaction" do$/;"	t
with custom isolation level	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "with custom isolation level" do$/;"	t
with transaction inside checkout	deps/ecto_sql/integration_test/sql/sandbox.exs	/^    test "with transaction inside checkout" do$/;"	t
with_cache	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp with_cache(ets, key, fun) do$/;"	f
with_cache	deps/plug_crypto/lib/plug/crypto/key_generator.ex	/^  defp with_cache(nil, _key, fun), do: fun.()$/;"	f
with_context	deps/decimal/lib/decimal.ex	/^  def with_context(%Context{} = context, fun) when is_function(fun, 0) do$/;"	f
with_cte	deps/ecto/lib/ecto/query.ex	/^  defmacro with_cte(query, name, as: with_query) do$/;"	a
with_default_options	deps/ecto/lib/ecto/repo.ex	/^      defp with_default_options(operation_name, opts) do$/;"	f
with_format	lib/boruta/oauth/error.ex	/^  def with_format(%Error{} = error, %CodeRequest{redirect_uri: redirect_uri}) do$/;"	f
with_format	lib/boruta/oauth/error.ex	/^  def with_format(%Error{} = error, %TokenRequest{redirect_uri: redirect_uri}) do$/;"	f
with_format	lib/boruta/oauth/error.ex	/^  def with_format(error, _), do: error$/;"	f
with_fullnames	deps/credo/lib/credo/check/refactor/module_dependencies.ex	/^  defp with_fullnames(dependencies, aliases) do$/;"	f
with_line_number	deps/plug/lib/plug/debugger.ex	/^  defp with_line_number(lines, initial, highlight) do$/;"	f
with_log	deps/ecto_sql/lib/ecto/adapters/sql.ex	/^  defp with_log(telemetry, params, opts) do$/;"	f
with_minimum	deps/ecto/lib/ecto/query.ex	/^      def with_minimum(age, height_ft) do$/;"	f
with_optional_separator	deps/makeup_elixir/lib/makeup/lexers/elixir_lexer/helper.ex	/^  def with_optional_separator(combinator, separator) when is_binary(separator) do$/;"	f
with_repo	deps/ecto_sql/lib/ecto/migrator.ex	/^  def with_repo(repo, fun, opts \\\\ []) do$/;"	f
with_space?	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp with_space?(prev, op, next) do$/;"	f
without_space?	deps/credo/lib/credo/check/consistency/space_around_operators/collector.ex	/^  defp without_space?(prev, op, next) do$/;"	f
word_from_list	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def word_from_list(words) do$/;"	f
word_from_list	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def word_from_list(words, ttype) do$/;"	f
word_from_list	deps/makeup/lib/makeup/lexer/combinators.ex	/^  def word_from_list(words, ttype, attrs) do$/;"	f
wrap	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp wrap(atom, _original) when is_atom(atom),$/;"	f
wrap	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp wrap(list, _original) when is_list(list),$/;"	f
wrap	deps/ecto/lib/ecto/repo/preloader.ex	/^  defp wrap(other, original) do$/;"	f
wrap	deps/nimble_parsec/lib/nimble_parsec.ex	/^  def wrap(combinator \\\\ empty(), to_wrap)$/;"	f
wrap_at	deps/credo/lib/credo/cli/output/ui.ex	/^  def wrap_at(text, number) do$/;"	f
wrap_child_spec	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp wrap_child_spec(%{start: start} = spec, args) do$/;"	f
wrap_child_spec	deps/ecto/lib/ecto/repo/supervisor.ex	/^  defp wrap_child_spec({id, start, restart, shutdown, type, mods}, args) do$/;"	f
wrap_error_message	deps/dialyxir/lib/dialyxir/formatter.ex	/^  defp wrap_error_message(message, warning) do$/;"	f
wrap_in_subquery	deps/ecto/lib/ecto/query.ex	/^  defp wrap_in_subquery(%Ecto.Query{} = query), do: %Ecto.SubQuery{query: query}$/;"	f
wrap_in_subquery	deps/ecto/lib/ecto/query.ex	/^  defp wrap_in_subquery(%Ecto.SubQuery{} = subquery), do: subquery$/;"	f
wrap_in_subquery	deps/ecto/lib/ecto/query.ex	/^  defp wrap_in_subquery(queryable), do: %Ecto.SubQuery{query: Ecto.Queryable.to_query(queryable)}$/;"	f
wrap_in_transaction	deps/ecto/lib/ecto/repo/schema.ex	/^  defp wrap_in_transaction(adapter, adapter_meta, opts, changeset, assocs, embeds, prepare, fun) do$/;"	f
wrap_in_transaction	deps/ecto/lib/ecto/repo/schema.ex	/^  defp wrap_in_transaction(adapter, adapter_meta, opts, relations_changed?, prepare, fun) do$/;"	f
wrap_nil	deps/ecto/lib/ecto/query/builder.ex	/^  defp wrap_nil([pair | params], i, acc) do$/;"	f
wrap_nil	deps/ecto/lib/ecto/query/builder.ex	/^  defp wrap_nil([{val, type} | params], 0, acc) do$/;"	f
wrap_nil	deps/ecto/lib/ecto/query/builder.ex	/^  defp wrap_nil(params, _other), do: params$/;"	f
wrap_nil	deps/ecto/lib/ecto/query/builder.ex	/^  defp wrap_nil(params, {:{}, _, [:^, _, [ix]]}), do: wrap_nil(params, ix, [])$/;"	f
wrap_request	deps/phoenix/lib/phoenix/test/conn_test.ex	/^  defp wrap_request(func) do$/;"	f
write	deps/bunt/lib/bunt.ex	/^  def write(value \\\\ "") do$/;"	f
write_backup	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp write_backup(:error), do: :ok$/;"	f
write_backup	deps/phoenix/lib/phoenix/code_reloader/server.ex	/^  defp write_backup({:ok, path, file}), do: File.write!(path, file)$/;"	f
write_config_file	deps/credo/lib/credo/cli/command/gen.config.ex	/^  defp write_config_file(filename) do$/;"	f
write_default_assets	deps/ex_doc/lib/ex_doc/formatter/html.ex	/^  defp write_default_assets(config, sources) do$/;"	f
write_file	deps/phoenix/lib/mix/tasks/phx.gen.context.ex	/^  defp write_file(content, file) do$/;"	f
write_template_file	deps/credo/lib/credo/cli/command/gen.check.ex	/^  defp write_template_file(filename, check_name) do$/;"	f
write_to_disk	deps/nimble_parsec/lib/mix/tasks/nimble_parsec.compile.ex	/^  defp write_to_disk(contents, input, output) do$/;"	f
write_to_disk	deps/phoenix/lib/phoenix/digester.ex	/^  defp write_to_disk(file, output_path) do$/;"	f
wrong_length	deps/ecto/lib/ecto/changeset.ex	/^  defp wrong_length(:binary, _length, value, opts), do:$/;"	f
wrong_length	deps/ecto/lib/ecto/changeset.ex	/^  defp wrong_length(:list, _length, value, opts), do:$/;"	f
wrong_length	deps/ecto/lib/ecto/changeset.ex	/^  defp wrong_length(:string, _length, value, opts), do:$/;"	f
wrong_length	deps/ecto/lib/ecto/changeset.ex	/^  defp wrong_length(_type, value, value, _opts), do: nil$/;"	f
xcode_style	deps/makeup/lib/makeup/styles/html/style_map.ex	/^  def xcode_style, do: HTML.XcodeStyle.style()$/;"	f
xhr?	deps/plug/lib/plug/csrf_protection.ex	/^  defp xhr?(conn) do$/;"	f
yecc_end	deps/earmark/src/link_text_parser.erl	/^yecc_end(Line) ->$/;"	f	module:link_text_parser
yecc_end	deps/earmark/src/link_text_parser.erl	/^yecc_end({Line,_Column}) ->$/;"	f	module:link_text_parser
yecc_end	deps/erlex/src/parser.erl	/^yecc_end(Line) ->$/;"	f	module:parser
yecc_end	deps/erlex/src/parser.erl	/^yecc_end({Line,_Column}) ->$/;"	f	module:parser
yecc_error_type	deps/earmark/src/link_text_parser.erl	/^yecc_error_type(function_clause, [{?MODULE,F,ArityOrArgs,_} | _]) ->$/;"	f	module:link_text_parser
yecc_error_type	deps/erlex/src/parser.erl	/^yecc_error_type(function_clause, [{?MODULE,F,ArityOrArgs,_} | _]) ->$/;"	f	module:parser
yeccerror	deps/earmark/src/link_text_parser.erl	/^yeccerror(Token) ->$/;"	f	module:link_text_parser
yeccerror	deps/erlex/src/parser.erl	/^yeccerror(Token) ->$/;"	f	module:parser
yeccgoto_anything	deps/earmark/src/link_text_parser.erl	/^yeccgoto_anything(10, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_anything	deps/earmark/src/link_text_parser.erl	/^yeccgoto_anything(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_anything	deps/earmark/src/link_text_parser.erl	/^yeccgoto_anything(35, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_assignment	deps/erlex/src/parser.erl	/^yeccgoto_assignment(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(100, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(102, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(104, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(105, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(106, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(107, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(115, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(118, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(119, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(123, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(124, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(127, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(17, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(2, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(20, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(21, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(24, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(30, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(34, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(35, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(36, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(48, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(50, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(52, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(64, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(67, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_atom	deps/erlex/src/parser.erl	/^yeccgoto_atom(99, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary	deps/erlex/src/parser.erl	/^yeccgoto_binary(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary_items	deps/erlex/src/parser.erl	/^yeccgoto_binary_items(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary_items	deps/erlex/src/parser.erl	/^yeccgoto_binary_items(72=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary_part	deps/erlex/src/parser.erl	/^yeccgoto_binary_part(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_binary_part	deps/erlex/src/parser.erl	/^yeccgoto_binary_part(72, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte	deps/erlex/src/parser.erl	/^yeccgoto_byte(110, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte	deps/erlex/src/parser.erl	/^yeccgoto_byte(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_items	deps/erlex/src/parser.erl	/^yeccgoto_byte_items(110=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_items	deps/erlex/src/parser.erl	/^yeccgoto_byte_items(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_byte_list	deps/erlex/src/parser.erl	/^yeccgoto_byte_list(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(28, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_contract	deps/erlex/src/parser.erl	/^yeccgoto_contract(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_document	deps/erlex/src/parser.erl	/^yeccgoto_document(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(115, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(118, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(119, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(124, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(2, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(20, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(21, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(24, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(28, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(30, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(34, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(35, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(36, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(48, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(50, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(52, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(64, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(67, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_function	deps/erlex/src/parser.erl	/^yeccgoto_function(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_inside_brackets	deps/earmark/src/link_text_parser.erl	/^yeccgoto_inside_brackets(14, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_inside_brackets	deps/earmark/src/link_text_parser.erl	/^yeccgoto_inside_brackets(4, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_inside_brackets	deps/earmark/src/link_text_parser.erl	/^yeccgoto_inside_brackets(7=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_inside_brackets_part	deps/earmark/src/link_text_parser.erl	/^yeccgoto_inside_brackets_part(14, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_inside_brackets_part	deps/earmark/src/link_text_parser.erl	/^yeccgoto_inside_brackets_part(4, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_inside_brackets_part	deps/earmark/src/link_text_parser.erl	/^yeccgoto_inside_brackets_part(7, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(100=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(102=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(105=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(107=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(115, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(118, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(119, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(124, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(127=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(128=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(17=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(2, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(20, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(21, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(24, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(30, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(34, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(35, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(36, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(48, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(50, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(52, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(64, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(67, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_integer	deps/erlex/src/parser.erl	/^yeccgoto_integer(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_link	deps/earmark/src/link_text_parser.erl	/^yeccgoto_link(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_link	deps/earmark/src/link_text_parser.erl	/^yeccgoto_link(3=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_link	deps/earmark/src/link_text_parser.erl	/^yeccgoto_link(5=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_link_or_image	deps/earmark/src/link_text_parser.erl	/^yeccgoto_link_or_image(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_link_or_image	deps/earmark/src/link_text_parser.erl	/^yeccgoto_link_or_image(5=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(115, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(118, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(119, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(124, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(127=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(17=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(2, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(20, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(21, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(24, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(28, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(30, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(34, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(35, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(36, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(48, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(50, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(52, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(64, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(67, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_list	deps/erlex/src/parser.erl	/^yeccgoto_list(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map	deps/erlex/src/parser.erl	/^yeccgoto_map(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map_entry	deps/erlex/src/parser.erl	/^yeccgoto_map_entry(115, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map_entry	deps/erlex/src/parser.erl	/^yeccgoto_map_entry(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map_items	deps/erlex/src/parser.erl	/^yeccgoto_map_items(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_map_items	deps/erlex/src/parser.erl	/^yeccgoto_map_items(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pattern	deps/erlex/src/parser.erl	/^yeccgoto_pattern(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_pipe_list	deps/erlex/src/parser.erl	/^yeccgoto_pipe_list(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_range	deps/erlex/src/parser.erl	/^yeccgoto_range(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/earmark/src/link_text_parser.erl	/^yeccgoto_rest(10=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_rest	deps/earmark/src/link_text_parser.erl	/^yeccgoto_rest(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_rest	deps/earmark/src/link_text_parser.erl	/^yeccgoto_rest(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_rest	deps/erlex/src/parser.erl	/^yeccgoto_rest(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_tuple	deps/erlex/src/parser.erl	/^yeccgoto_tuple(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(115=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(118=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(119=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(123=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(124=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(20=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(21=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(23=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(24=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(30=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(35=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(36=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(48=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(50=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(58=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(64=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(67=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_type	deps/erlex/src/parser.erl	/^yeccgoto_type(83=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(0, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(115, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(118, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(119, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(124, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(2, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(20, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(21, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(24, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(30, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(34, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(35, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(36, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(48, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(50, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(52, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(64, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(67, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value	deps/erlex/src/parser.erl	/^yeccgoto_value(83, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(21, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(23, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(24, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(30, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(34=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(52=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_value_items	deps/erlex/src/parser.erl	/^yeccgoto_value_items(58, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_values	deps/erlex/src/parser.erl	/^yeccgoto_values(0=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccgoto_values	deps/erlex/src/parser.erl	/^yeccgoto_values(2=_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars0	deps/earmark/src/link_text_parser.erl	/^yeccpars0(Tokens, Tzr, State, States, Vstack) ->$/;"	f	module:link_text_parser
yeccpars0	deps/erlex/src/parser.erl	/^yeccpars0(Tokens, Tzr, State, States, Vstack) ->$/;"	f	module:parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [Token | Tokens], Tzr) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [], {no_func, Line}) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [], {no_func, no_line}) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [], {{_F,_A}, _Line}=Tzr) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1([Token | Tokens], Tzr, State, States, Vstack) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1([], {no_func, Endline}, State, States, Vstack) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1([], {no_func, no_line}, State, States, Vstack) ->$/;"	f	module:link_text_parser
yeccpars1	deps/earmark/src/link_text_parser.erl	/^yeccpars1([], {{F, A},_Line}, State, States, Vstack) ->$/;"	f	module:link_text_parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [Token | Tokens], Tzr) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [], {no_func, Line}) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [], {no_func, no_line}) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1(State1, State, States, Vstack, Token0, [], {{_F,_A}, _Line}=Tzr) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1([Token | Tokens], Tzr, State, States, Vstack) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1([], {no_func, Endline}, State, States, Vstack) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1([], {no_func, no_line}, State, States, Vstack) ->$/;"	f	module:parser
yeccpars1	deps/erlex/src/parser.erl	/^yeccpars1([], {{F, A},_Line}, State, States, Vstack) ->$/;"	f	module:parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(0=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(10=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(11=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(12=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(13=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(14=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(15=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(16=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(17=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(18=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(20=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(21=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(24=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(25=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(26=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(27=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(28=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(29=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(30=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(31=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(32=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(33=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(35=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(3=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(4=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(5=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(9=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2	deps/earmark/src/link_text_parser.erl	/^yeccpars2(Other, _, _, _, _, _, _) ->$/;"	f	module:link_text_parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(0=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(103=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(104=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(106=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(108=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(109=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(110=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(112=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(113=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(114=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(115=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(117=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(118=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(119=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(123=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(124=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(128=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(19=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(20=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(21=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(22=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(23=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(24=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(25=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(26=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(27=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(28=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(29=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(30=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(33=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(34=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(35=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(36=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(40=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(44=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(45=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(46=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(47=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(48=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(50=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(52=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(55=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(56=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(58=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(62=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(63=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(64=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(66=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(67=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(69=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(70=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(71=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(72=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(74=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(75=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(76=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(77=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(79=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(80=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(82=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(83=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(89=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(90=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(91=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(92=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(93=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(94=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(95=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(96=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(97=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(98=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(99=S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2	deps/erlex/src/parser.erl	/^yeccpars2(Other, _, _, _, _, _, _) ->$/;"	f	module:parser
yeccpars2_0	deps/earmark/src/link_text_parser.erl	/^yeccpars2_0(S, exclamation_mark, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_0	deps/earmark/src/link_text_parser.erl	/^yeccpars2_0(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_0	deps/earmark/src/link_text_parser.erl	/^yeccpars2_0(S, ws, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_0	deps/earmark/src/link_text_parser.erl	/^yeccpars2_0(_, _, _, _, T, _, _) ->$/;"	f	module:link_text_parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_0	deps/erlex/src/parser.erl	/^yeccpars2_0(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_1	deps/earmark/src/link_text_parser.erl	/^yeccpars2_1(_, _, _, _, T, _, _) ->$/;"	f	module:link_text_parser
yeccpars2_1	deps/earmark/src/link_text_parser.erl	/^yeccpars2_1(_S, '$end', _Ss, Stack, _T, _Ts, _Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_1	deps/erlex/src/parser.erl	/^yeccpars2_1(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, any_quote, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, close_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, escaped, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, exclamation_mark, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, open_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, open_title, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, verbatim, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(S, ws, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_10	deps/erlex/src/parser.erl	/^yeccpars2_10(S, '->', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_10	deps/erlex/src/parser.erl	/^yeccpars2_10(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_100	deps/erlex/src/parser.erl	/^yeccpars2_100(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_100	deps/erlex/src/parser.erl	/^yeccpars2_100(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_100	deps/erlex/src/parser.erl	/^yeccpars2_100(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_100	deps/erlex/src/parser.erl	/^yeccpars2_100(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_101	deps/erlex/src/parser.erl	/^yeccpars2_101(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_101_	deps/erlex/src/parser.erl	/^yeccpars2_101_(__Stack0) ->$/;"	f	module:parser
yeccpars2_102	deps/erlex/src/parser.erl	/^yeccpars2_102(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_102	deps/erlex/src/parser.erl	/^yeccpars2_102(S, atom_full, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_102	deps/erlex/src/parser.erl	/^yeccpars2_102(S, atom_part, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_102	deps/erlex/src/parser.erl	/^yeccpars2_102(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_102	deps/erlex/src/parser.erl	/^yeccpars2_102(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_102_	deps/erlex/src/parser.erl	/^yeccpars2_102_(__Stack0) ->$/;"	f	module:parser
yeccpars2_103	deps/erlex/src/parser.erl	/^yeccpars2_103(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_103	deps/erlex/src/parser.erl	/^yeccpars2_103(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_105	deps/erlex/src/parser.erl	/^yeccpars2_105(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_105	deps/erlex/src/parser.erl	/^yeccpars2_105(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_105	deps/erlex/src/parser.erl	/^yeccpars2_105(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_105	deps/erlex/src/parser.erl	/^yeccpars2_105(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_107	deps/erlex/src/parser.erl	/^yeccpars2_107(S, ']', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_107	deps/erlex/src/parser.erl	/^yeccpars2_107(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_107	deps/erlex/src/parser.erl	/^yeccpars2_107(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_107	deps/erlex/src/parser.erl	/^yeccpars2_107(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_108	deps/erlex/src/parser.erl	/^yeccpars2_108(S, ')', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_108	deps/erlex/src/parser.erl	/^yeccpars2_108(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_109	deps/erlex/src/parser.erl	/^yeccpars2_109(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_109_	deps/erlex/src/parser.erl	/^yeccpars2_109_(__Stack0) ->$/;"	f	module:parser
yeccpars2_10_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_10_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_11	deps/earmark/src/link_text_parser.erl	/^yeccpars2_11(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_11	deps/erlex/src/parser.erl	/^yeccpars2_11(S, '..', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_11	deps/erlex/src/parser.erl	/^yeccpars2_11(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_110	deps/erlex/src/parser.erl	/^yeccpars2_110(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_110	deps/erlex/src/parser.erl	/^yeccpars2_110(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_111	deps/erlex/src/parser.erl	/^yeccpars2_111(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_111_	deps/erlex/src/parser.erl	/^yeccpars2_111_(__Stack0) ->$/;"	f	module:parser
yeccpars2_112	deps/erlex/src/parser.erl	/^yeccpars2_112(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_112	deps/erlex/src/parser.erl	/^yeccpars2_112(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_113	deps/erlex/src/parser.erl	/^yeccpars2_113(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_113	deps/erlex/src/parser.erl	/^yeccpars2_113(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_114	deps/erlex/src/parser.erl	/^yeccpars2_114(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_114_	deps/erlex/src/parser.erl	/^yeccpars2_114_(__Stack0) ->$/;"	f	module:parser
yeccpars2_116	deps/erlex/src/parser.erl	/^yeccpars2_116(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_116_	deps/erlex/src/parser.erl	/^yeccpars2_116_(__Stack0) ->$/;"	f	module:parser
yeccpars2_117	deps/erlex/src/parser.erl	/^yeccpars2_117(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_117_	deps/erlex/src/parser.erl	/^yeccpars2_117_(__Stack0) ->$/;"	f	module:parser
yeccpars2_11_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_11_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_12	deps/earmark/src/link_text_parser.erl	/^yeccpars2_12(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_12	deps/erlex/src/parser.erl	/^yeccpars2_12(S, '->', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_12	deps/erlex/src/parser.erl	/^yeccpars2_12(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_120	deps/erlex/src/parser.erl	/^yeccpars2_120(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_120	deps/erlex/src/parser.erl	/^yeccpars2_120(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_120	deps/erlex/src/parser.erl	/^yeccpars2_120(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_120_	deps/erlex/src/parser.erl	/^yeccpars2_120_(__Stack0) ->$/;"	f	module:parser
yeccpars2_121	deps/erlex/src/parser.erl	/^yeccpars2_121(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_121	deps/erlex/src/parser.erl	/^yeccpars2_121(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_121	deps/erlex/src/parser.erl	/^yeccpars2_121(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_121_	deps/erlex/src/parser.erl	/^yeccpars2_121_(__Stack0) ->$/;"	f	module:parser
yeccpars2_122	deps/erlex/src/parser.erl	/^yeccpars2_122(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_122_	deps/erlex/src/parser.erl	/^yeccpars2_122_(__Stack0) ->$/;"	f	module:parser
yeccpars2_125	deps/erlex/src/parser.erl	/^yeccpars2_125(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_125	deps/erlex/src/parser.erl	/^yeccpars2_125(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_125	deps/erlex/src/parser.erl	/^yeccpars2_125(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_125_	deps/erlex/src/parser.erl	/^yeccpars2_125_(__Stack0) ->$/;"	f	module:parser
yeccpars2_126	deps/erlex/src/parser.erl	/^yeccpars2_126(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_126_	deps/erlex/src/parser.erl	/^yeccpars2_126_(__Stack0) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, ':', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, '::', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_127	deps/erlex/src/parser.erl	/^yeccpars2_127(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_128	deps/erlex/src/parser.erl	/^yeccpars2_128(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_128	deps/erlex/src/parser.erl	/^yeccpars2_128(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_129	deps/erlex/src/parser.erl	/^yeccpars2_129(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_129_	deps/erlex/src/parser.erl	/^yeccpars2_129_(__Stack0) ->$/;"	f	module:parser
yeccpars2_12_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_12_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_13	deps/earmark/src/link_text_parser.erl	/^yeccpars2_13(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_13	deps/erlex/src/parser.erl	/^yeccpars2_13(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_13	deps/erlex/src/parser.erl	/^yeccpars2_13(_S, '$end', _Ss, Stack, _T, _Ts, _Tzr) ->$/;"	f	module:parser
yeccpars2_130	deps/erlex/src/parser.erl	/^yeccpars2_130(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_130_	deps/erlex/src/parser.erl	/^yeccpars2_130_(__Stack0) ->$/;"	f	module:parser
yeccpars2_13_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_13_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_14	deps/earmark/src/link_text_parser.erl	/^yeccpars2_14(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_14	deps/earmark/src/link_text_parser.erl	/^yeccpars2_14(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_14	deps/erlex/src/parser.erl	/^yeccpars2_14(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_15	deps/earmark/src/link_text_parser.erl	/^yeccpars2_15(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_15	deps/erlex/src/parser.erl	/^yeccpars2_15(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_15_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_15_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_16	deps/earmark/src/link_text_parser.erl	/^yeccpars2_16(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_16	deps/erlex/src/parser.erl	/^yeccpars2_16(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_16_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_16_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_17	deps/earmark/src/link_text_parser.erl	/^yeccpars2_17(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, ':', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, '::', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, atom_full, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, atom_part, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17	deps/erlex/src/parser.erl	/^yeccpars2_17(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_17_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_17_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_17_	deps/erlex/src/parser.erl	/^yeccpars2_17_(__Stack0) ->$/;"	f	module:parser
yeccpars2_18	deps/earmark/src/link_text_parser.erl	/^yeccpars2_18(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_18	deps/erlex/src/parser.erl	/^yeccpars2_18(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_18_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_18_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_19	deps/earmark/src/link_text_parser.erl	/^yeccpars2_19(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_19	deps/earmark/src/link_text_parser.erl	/^yeccpars2_19(_, _, _, _, T, _, _) ->$/;"	f	module:link_text_parser
yeccpars2_19	deps/erlex/src/parser.erl	/^yeccpars2_19(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_19	deps/erlex/src/parser.erl	/^yeccpars2_19(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_2	deps/earmark/src/link_text_parser.erl	/^yeccpars2_2(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, atom_full, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, atom_part, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_2	deps/erlex/src/parser.erl	/^yeccpars2_2(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_20	deps/earmark/src/link_text_parser.erl	/^yeccpars2_20(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_20_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_20_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_21	deps/earmark/src/link_text_parser.erl	/^yeccpars2_21(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, ')', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21	deps/erlex/src/parser.erl	/^yeccpars2_21(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_21_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_21_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_22	deps/earmark/src/link_text_parser.erl	/^yeccpars2_22(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_22	deps/erlex/src/parser.erl	/^yeccpars2_22(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_22_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_22_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_22_	deps/erlex/src/parser.erl	/^yeccpars2_22_(__Stack0) ->$/;"	f	module:parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, any_quote, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, close_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, escaped, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, exclamation_mark, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, open_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, open_title, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, verbatim, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(S, ws, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23	deps/erlex/src/parser.erl	/^yeccpars2_23(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_23_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_23_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_24	deps/earmark/src/link_text_parser.erl	/^yeccpars2_24(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, ']', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24	deps/erlex/src/parser.erl	/^yeccpars2_24(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_24_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_24_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_25	deps/earmark/src/link_text_parser.erl	/^yeccpars2_25(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_25	deps/erlex/src/parser.erl	/^yeccpars2_25(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_25_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_25_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_25_	deps/erlex/src/parser.erl	/^yeccpars2_25_(__Stack0) ->$/;"	f	module:parser
yeccpars2_26	deps/earmark/src/link_text_parser.erl	/^yeccpars2_26(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_26	deps/erlex/src/parser.erl	/^yeccpars2_26(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_26_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_26_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_26_	deps/erlex/src/parser.erl	/^yeccpars2_26_(__Stack0) ->$/;"	f	module:parser
yeccpars2_27	deps/earmark/src/link_text_parser.erl	/^yeccpars2_27(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_27	deps/erlex/src/parser.erl	/^yeccpars2_27(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_27_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_27_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_27_	deps/erlex/src/parser.erl	/^yeccpars2_27_(__Stack0) ->$/;"	f	module:parser
yeccpars2_28	deps/earmark/src/link_text_parser.erl	/^yeccpars2_28(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_28	deps/erlex/src/parser.erl	/^yeccpars2_28(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_28	deps/erlex/src/parser.erl	/^yeccpars2_28(S, ')', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_28	deps/erlex/src/parser.erl	/^yeccpars2_28(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_28	deps/erlex/src/parser.erl	/^yeccpars2_28(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_28	deps/erlex/src/parser.erl	/^yeccpars2_28(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_28	deps/erlex/src/parser.erl	/^yeccpars2_28(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_28_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_28_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_29	deps/earmark/src/link_text_parser.erl	/^yeccpars2_29(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_29	deps/erlex/src/parser.erl	/^yeccpars2_29(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_29_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_29_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_29_	deps/erlex/src/parser.erl	/^yeccpars2_29_(__Stack0) ->$/;"	f	module:parser
yeccpars2_2_	deps/erlex/src/parser.erl	/^yeccpars2_2_(__Stack0) ->$/;"	f	module:parser
yeccpars2_3	deps/earmark/src/link_text_parser.erl	/^yeccpars2_3(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_3	deps/earmark/src/link_text_parser.erl	/^yeccpars2_3(_, _, _, _, T, _, _) ->$/;"	f	module:link_text_parser
yeccpars2_3	deps/erlex/src/parser.erl	/^yeccpars2_3(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/earmark/src/link_text_parser.erl	/^yeccpars2_30(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, '}', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30	deps/erlex/src/parser.erl	/^yeccpars2_30(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_30_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_30_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_31	deps/earmark/src/link_text_parser.erl	/^yeccpars2_31(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_31	deps/erlex/src/parser.erl	/^yeccpars2_31(S, '}', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_31	deps/erlex/src/parser.erl	/^yeccpars2_31(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_31_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_31_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_32	deps/earmark/src/link_text_parser.erl	/^yeccpars2_32(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_32	deps/erlex/src/parser.erl	/^yeccpars2_32(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_32	deps/erlex/src/parser.erl	/^yeccpars2_32(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_32	deps/erlex/src/parser.erl	/^yeccpars2_32(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_32	deps/erlex/src/parser.erl	/^yeccpars2_32(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_32_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_32_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_32_	deps/erlex/src/parser.erl	/^yeccpars2_32_(__Stack0) ->$/;"	f	module:parser
yeccpars2_33	deps/earmark/src/link_text_parser.erl	/^yeccpars2_33(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_33	deps/erlex/src/parser.erl	/^yeccpars2_33(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_33_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_33_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_33_	deps/erlex/src/parser.erl	/^yeccpars2_33_(__Stack0) ->$/;"	f	module:parser
yeccpars2_34	deps/earmark/src/link_text_parser.erl	/^yeccpars2_34(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_34_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_34_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, any_quote, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, close_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, escaped, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, exclamation_mark, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, open_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, open_title, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, verbatim, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(S, ws, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_35_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_35_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_36	deps/earmark/src/link_text_parser.erl	/^yeccpars2_36(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_36_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_36_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_37	deps/earmark/src/link_text_parser.erl	/^yeccpars2_37(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_37	deps/erlex/src/parser.erl	/^yeccpars2_37(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_37	deps/erlex/src/parser.erl	/^yeccpars2_37(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_37	deps/erlex/src/parser.erl	/^yeccpars2_37(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_37_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_37_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_37_	deps/erlex/src/parser.erl	/^yeccpars2_37_(__Stack0) ->$/;"	f	module:parser
yeccpars2_38	deps/earmark/src/link_text_parser.erl	/^yeccpars2_38(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_38	deps/erlex/src/parser.erl	/^yeccpars2_38(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_38	deps/erlex/src/parser.erl	/^yeccpars2_38(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_38	deps/erlex/src/parser.erl	/^yeccpars2_38(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_38_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_38_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_38_	deps/erlex/src/parser.erl	/^yeccpars2_38_(__Stack0) ->$/;"	f	module:parser
yeccpars2_39	deps/erlex/src/parser.erl	/^yeccpars2_39(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_39_	deps/erlex/src/parser.erl	/^yeccpars2_39_(__Stack0) ->$/;"	f	module:parser
yeccpars2_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_4(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_4(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_4	deps/erlex/src/parser.erl	/^yeccpars2_4(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_40	deps/erlex/src/parser.erl	/^yeccpars2_40(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_40_	deps/erlex/src/parser.erl	/^yeccpars2_40_(__Stack0) ->$/;"	f	module:parser
yeccpars2_41	deps/erlex/src/parser.erl	/^yeccpars2_41(S, '->', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_41	deps/erlex/src/parser.erl	/^yeccpars2_41(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_42	deps/erlex/src/parser.erl	/^yeccpars2_42(S, '->', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_42	deps/erlex/src/parser.erl	/^yeccpars2_42(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_43	deps/erlex/src/parser.erl	/^yeccpars2_43(S, ')', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_43	deps/erlex/src/parser.erl	/^yeccpars2_43(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_44	deps/erlex/src/parser.erl	/^yeccpars2_44(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_44_	deps/erlex/src/parser.erl	/^yeccpars2_44_(__Stack0) ->$/;"	f	module:parser
yeccpars2_45	deps/erlex/src/parser.erl	/^yeccpars2_45(S, ')', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_45	deps/erlex/src/parser.erl	/^yeccpars2_45(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_46	deps/erlex/src/parser.erl	/^yeccpars2_46(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_46_	deps/erlex/src/parser.erl	/^yeccpars2_46_(__Stack0) ->$/;"	f	module:parser
yeccpars2_47	deps/erlex/src/parser.erl	/^yeccpars2_47(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_47_	deps/erlex/src/parser.erl	/^yeccpars2_47_(__Stack0) ->$/;"	f	module:parser
yeccpars2_49	deps/erlex/src/parser.erl	/^yeccpars2_49(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_49	deps/erlex/src/parser.erl	/^yeccpars2_49(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_49	deps/erlex/src/parser.erl	/^yeccpars2_49(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_49_	deps/erlex/src/parser.erl	/^yeccpars2_49_(__Stack0) ->$/;"	f	module:parser
yeccpars2_5	deps/erlex/src/parser.erl	/^yeccpars2_5(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_51	deps/erlex/src/parser.erl	/^yeccpars2_51(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_51	deps/erlex/src/parser.erl	/^yeccpars2_51(S, 'when', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_51	deps/erlex/src/parser.erl	/^yeccpars2_51(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_51	deps/erlex/src/parser.erl	/^yeccpars2_51(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_51_	deps/erlex/src/parser.erl	/^yeccpars2_51_(__Stack0) ->$/;"	f	module:parser
yeccpars2_53	deps/erlex/src/parser.erl	/^yeccpars2_53(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_53_	deps/erlex/src/parser.erl	/^yeccpars2_53_(__Stack0) ->$/;"	f	module:parser
yeccpars2_54	deps/erlex/src/parser.erl	/^yeccpars2_54(S, ']', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_54	deps/erlex/src/parser.erl	/^yeccpars2_54(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_55	deps/erlex/src/parser.erl	/^yeccpars2_55(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_55_	deps/erlex/src/parser.erl	/^yeccpars2_55_(__Stack0) ->$/;"	f	module:parser
yeccpars2_56	deps/erlex/src/parser.erl	/^yeccpars2_56(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_56_	deps/erlex/src/parser.erl	/^yeccpars2_56_(__Stack0) ->$/;"	f	module:parser
yeccpars2_57	deps/erlex/src/parser.erl	/^yeccpars2_57(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_57	deps/erlex/src/parser.erl	/^yeccpars2_57(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_58	deps/erlex/src/parser.erl	/^yeccpars2_58(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_59	deps/erlex/src/parser.erl	/^yeccpars2_59(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_59	deps/erlex/src/parser.erl	/^yeccpars2_59(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_6	deps/earmark/src/link_text_parser.erl	/^yeccpars2_6(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_6	deps/erlex/src/parser.erl	/^yeccpars2_6(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_60	deps/erlex/src/parser.erl	/^yeccpars2_60(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_60	deps/erlex/src/parser.erl	/^yeccpars2_60(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_60_	deps/erlex/src/parser.erl	/^yeccpars2_60_(__Stack0) ->$/;"	f	module:parser
yeccpars2_61	deps/erlex/src/parser.erl	/^yeccpars2_61(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_61	deps/erlex/src/parser.erl	/^yeccpars2_61(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_62	deps/erlex/src/parser.erl	/^yeccpars2_62(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_62	deps/erlex/src/parser.erl	/^yeccpars2_62(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_63	deps/erlex/src/parser.erl	/^yeccpars2_63(S, ':', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_63	deps/erlex/src/parser.erl	/^yeccpars2_63(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_63_	deps/erlex/src/parser.erl	/^yeccpars2_63_(__Stack0) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_64	deps/erlex/src/parser.erl	/^yeccpars2_64(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_65	deps/erlex/src/parser.erl	/^yeccpars2_65(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_65	deps/erlex/src/parser.erl	/^yeccpars2_65(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_65	deps/erlex/src/parser.erl	/^yeccpars2_65(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_65_	deps/erlex/src/parser.erl	/^yeccpars2_65_(__Stack0) ->$/;"	f	module:parser
yeccpars2_66	deps/erlex/src/parser.erl	/^yeccpars2_66(S, '*', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_66	deps/erlex/src/parser.erl	/^yeccpars2_66(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_66_	deps/erlex/src/parser.erl	/^yeccpars2_66_(__Stack0) ->$/;"	f	module:parser
yeccpars2_68	deps/erlex/src/parser.erl	/^yeccpars2_68(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_68	deps/erlex/src/parser.erl	/^yeccpars2_68(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_68	deps/erlex/src/parser.erl	/^yeccpars2_68(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_68_	deps/erlex/src/parser.erl	/^yeccpars2_68_(__Stack0) ->$/;"	f	module:parser
yeccpars2_69	deps/erlex/src/parser.erl	/^yeccpars2_69(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_69_	deps/erlex/src/parser.erl	/^yeccpars2_69_(__Stack0) ->$/;"	f	module:parser
yeccpars2_6_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_6_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, any_quote, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, close_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, escaped, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, exclamation_mark, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, open_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, open_title, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, verbatim, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(S, ws, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/earmark/src/link_text_parser.erl	/^yeccpars2_7(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_7	deps/erlex/src/parser.erl	/^yeccpars2_7(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_70	deps/erlex/src/parser.erl	/^yeccpars2_70(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_70	deps/erlex/src/parser.erl	/^yeccpars2_70(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_71	deps/erlex/src/parser.erl	/^yeccpars2_71(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_71_	deps/erlex/src/parser.erl	/^yeccpars2_71_(__Stack0) ->$/;"	f	module:parser
yeccpars2_72	deps/erlex/src/parser.erl	/^yeccpars2_72(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_72	deps/erlex/src/parser.erl	/^yeccpars2_72(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_73	deps/erlex/src/parser.erl	/^yeccpars2_73(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_73_	deps/erlex/src/parser.erl	/^yeccpars2_73_(__Stack0) ->$/;"	f	module:parser
yeccpars2_74	deps/erlex/src/parser.erl	/^yeccpars2_74(S, ':', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_74	deps/erlex/src/parser.erl	/^yeccpars2_74(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_75	deps/erlex/src/parser.erl	/^yeccpars2_75(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_75	deps/erlex/src/parser.erl	/^yeccpars2_75(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_75_	deps/erlex/src/parser.erl	/^yeccpars2_75_(__Stack0) ->$/;"	f	module:parser
yeccpars2_76	deps/erlex/src/parser.erl	/^yeccpars2_76(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_76_	deps/erlex/src/parser.erl	/^yeccpars2_76_(__Stack0) ->$/;"	f	module:parser
yeccpars2_77	deps/erlex/src/parser.erl	/^yeccpars2_77(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_77_	deps/erlex/src/parser.erl	/^yeccpars2_77_(__Stack0) ->$/;"	f	module:parser
yeccpars2_78	deps/erlex/src/parser.erl	/^yeccpars2_78(S, ')', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_78	deps/erlex/src/parser.erl	/^yeccpars2_78(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_79	deps/erlex/src/parser.erl	/^yeccpars2_79(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_79_	deps/erlex/src/parser.erl	/^yeccpars2_79_(__Stack0) ->$/;"	f	module:parser
yeccpars2_8	deps/earmark/src/link_text_parser.erl	/^yeccpars2_8(S, close_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_8	deps/earmark/src/link_text_parser.erl	/^yeccpars2_8(_, _, _, _, T, _, _) ->$/;"	f	module:link_text_parser
yeccpars2_8	deps/erlex/src/parser.erl	/^yeccpars2_8(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_80	deps/erlex/src/parser.erl	/^yeccpars2_80(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_80_	deps/erlex/src/parser.erl	/^yeccpars2_80_(__Stack0) ->$/;"	f	module:parser
yeccpars2_81	deps/erlex/src/parser.erl	/^yeccpars2_81(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_81	deps/erlex/src/parser.erl	/^yeccpars2_81(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_81	deps/erlex/src/parser.erl	/^yeccpars2_81(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_81	deps/erlex/src/parser.erl	/^yeccpars2_81(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_82	deps/erlex/src/parser.erl	/^yeccpars2_82(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_82_	deps/erlex/src/parser.erl	/^yeccpars2_82_(__Stack0) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '...', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '[', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '\\'', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, 'fun(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, '}', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_83	deps/erlex/src/parser.erl	/^yeccpars2_83(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_84	deps/erlex/src/parser.erl	/^yeccpars2_84(S, ':=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_84	deps/erlex/src/parser.erl	/^yeccpars2_84(S, '=', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_84	deps/erlex/src/parser.erl	/^yeccpars2_84(S, '=>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_84	deps/erlex/src/parser.erl	/^yeccpars2_84(S, '|', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_84	deps/erlex/src/parser.erl	/^yeccpars2_84(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_85	deps/erlex/src/parser.erl	/^yeccpars2_85(S, '}', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_85	deps/erlex/src/parser.erl	/^yeccpars2_85(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_86	deps/erlex/src/parser.erl	/^yeccpars2_86(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_86	deps/erlex/src/parser.erl	/^yeccpars2_86(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_86_	deps/erlex/src/parser.erl	/^yeccpars2_86_(__Stack0) ->$/;"	f	module:parser
yeccpars2_87	deps/erlex/src/parser.erl	/^yeccpars2_87(S, '}', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_87	deps/erlex/src/parser.erl	/^yeccpars2_87(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_88	deps/erlex/src/parser.erl	/^yeccpars2_88(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_88	deps/erlex/src/parser.erl	/^yeccpars2_88(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_88_	deps/erlex/src/parser.erl	/^yeccpars2_88_(__Stack0) ->$/;"	f	module:parser
yeccpars2_89	deps/erlex/src/parser.erl	/^yeccpars2_89(S, '<', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_89	deps/erlex/src/parser.erl	/^yeccpars2_89(S, '{', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_89	deps/erlex/src/parser.erl	/^yeccpars2_89(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_9	deps/earmark/src/link_text_parser.erl	/^yeccpars2_9(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_9	deps/erlex/src/parser.erl	/^yeccpars2_9(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_90	deps/erlex/src/parser.erl	/^yeccpars2_90(S, '#', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_90	deps/erlex/src/parser.erl	/^yeccpars2_90(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_90_	deps/erlex/src/parser.erl	/^yeccpars2_90_(__Stack0) ->$/;"	f	module:parser
yeccpars2_91	deps/erlex/src/parser.erl	/^yeccpars2_91(_S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_91_	deps/erlex/src/parser.erl	/^yeccpars2_91_(__Stack0) ->$/;"	f	module:parser
yeccpars2_92	deps/erlex/src/parser.erl	/^yeccpars2_92(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_92	deps/erlex/src/parser.erl	/^yeccpars2_92(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_93	deps/erlex/src/parser.erl	/^yeccpars2_93(S, '>', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_93	deps/erlex/src/parser.erl	/^yeccpars2_93(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_94	deps/erlex/src/parser.erl	/^yeccpars2_94(S, '(', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_94	deps/erlex/src/parser.erl	/^yeccpars2_94(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_95	deps/erlex/src/parser.erl	/^yeccpars2_95(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_95	deps/erlex/src/parser.erl	/^yeccpars2_95(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_96	deps/erlex/src/parser.erl	/^yeccpars2_96(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_96	deps/erlex/src/parser.erl	/^yeccpars2_96(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_97	deps/erlex/src/parser.erl	/^yeccpars2_97(S, int, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_97	deps/erlex/src/parser.erl	/^yeccpars2_97(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_98	deps/erlex/src/parser.erl	/^yeccpars2_98(S, ',', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_98	deps/erlex/src/parser.erl	/^yeccpars2_98(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_99	deps/erlex/src/parser.erl	/^yeccpars2_99(S, '_', Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_99	deps/erlex/src/parser.erl	/^yeccpars2_99(S, Cat, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_9_	deps/earmark/src/link_text_parser.erl	/^yeccpars2_9_(__Stack0) ->$/;"	f	module:link_text_parser
yeccpars2_cont_0	deps/erlex/src/parser.erl	/^yeccpars2_cont_0(S, atom_full, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_cont_0	deps/erlex/src/parser.erl	/^yeccpars2_cont_0(S, atom_part, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:parser
yeccpars2_cont_0	deps/erlex/src/parser.erl	/^yeccpars2_cont_0(_, _, _, _, T, _, _) ->$/;"	f	module:parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, any_quote, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, close_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, escaped, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, exclamation_mark, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, open_bracket, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, open_paren, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, open_title, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, verbatim, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(S, ws, Ss, Stack, T, Ts, Tzr) ->$/;"	f	module:link_text_parser
yeccpars2_cont_4	deps/earmark/src/link_text_parser.erl	/^yeccpars2_cont_4(_, _, _, _, T, _, _) ->$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string(Other) ->$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({'$end', _}) -> [];$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({Other, _}) when is_atom(Other) ->$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({_Cat, _, Val}) -> io_lib:format("~tp", [Val]);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({atom, _, A}) -> io_lib:write_atom(A);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({char,_,C}) -> io_lib:write_char(C);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({dot, _}) -> "'.'";$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({float,_,F}) -> io_lib:write(F);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({integer,_,N}) -> io_lib:write(N);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({reserved_symbol, _, A}) -> io_lib:write(A);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({string,_,S}) -> io_lib:write_string(S);$/;"	f	module:link_text_parser
yecctoken2string	deps/earmark/src/link_text_parser.erl	/^yecctoken2string({var,_,V}) -> io_lib:format("~s", [V]);$/;"	f	module:link_text_parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string(Other) ->$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({'$end', _}) -> [];$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({Other, _}) when is_atom(Other) ->$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({_Cat, _, Val}) -> io_lib:format("~tp", [Val]);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({atom, _, A}) -> io_lib:write_atom(A);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({char,_,C}) -> io_lib:write_char(C);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({dot, _}) -> "'.'";$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({float,_,F}) -> io_lib:write(F);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({integer,_,N}) -> io_lib:write(N);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({reserved_symbol, _, A}) -> io_lib:write(A);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({string,_,S}) -> io_lib:write_string(S);$/;"	f	module:parser
yecctoken2string	deps/erlex/src/parser.erl	/^yecctoken2string({var,_,V}) -> io_lib:format("~s", [V]);$/;"	f	module:parser
yecctoken_end_location	deps/earmark/src/link_text_parser.erl	/^yecctoken_end_location(Token) ->$/;"	f	module:link_text_parser
yecctoken_end_location	deps/erlex/src/parser.erl	/^yecctoken_end_location(Token) ->$/;"	f	module:parser
yecctoken_location	deps/earmark/src/link_text_parser.erl	/^yecctoken_location(Token) ->$/;"	f	module:link_text_parser
yecctoken_location	deps/erlex/src/parser.erl	/^yecctoken_location(Token) ->$/;"	f	module:parser
yecctoken_to_string	deps/earmark/src/link_text_parser.erl	/^yecctoken_to_string(Token) ->$/;"	f	module:link_text_parser
yecctoken_to_string	deps/erlex/src/parser.erl	/^yecctoken_to_string(Token) ->$/;"	f	module:parser
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(0, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(1, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(10, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(2, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(3, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(4, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(5, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(6, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(7, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(8, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(9, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/link_text_lexer.erl	/^yyaction(_, _, _, _) -> error.$/;"	f	module:link_text_lexer
yyaction	deps/earmark/src/string_lexer.erl	/^yyaction(0, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:string_lexer
yyaction	deps/earmark/src/string_lexer.erl	/^yyaction(1, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:string_lexer
yyaction	deps/earmark/src/string_lexer.erl	/^yyaction(2, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:string_lexer
yyaction	deps/earmark/src/string_lexer.erl	/^yyaction(_, _, _, _) -> error.$/;"	f	module:string_lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(0, _, _, _) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(1, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(10, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(11, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(12, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(13, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(14, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(15, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(16, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(17, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(18, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(19, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(2, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(20, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(21, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(22, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(23, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(24, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(25, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(26, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(27, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(28, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(29, TokenLen, YYtcs, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(3, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(4, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(5, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(6, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(7, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(8, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(9, _, _, TokenLine) ->$/;"	f	module:lexer
yyaction	deps/erlex/src/lexer.erl	/^yyaction(_, _, _, _) -> error.$/;"	f	module:lexer
yyaction_0	deps/earmark/src/link_text_lexer.erl	/^yyaction_0(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_0	deps/earmark/src/string_lexer.erl	/^yyaction_0(TokenChars, TokenLine) ->$/;"	f	module:string_lexer
yyaction_0	deps/erlex/src/lexer.erl	/^yyaction_0() ->$/;"	f	module:lexer
yyaction_1	deps/earmark/src/link_text_lexer.erl	/^yyaction_1(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_1	deps/earmark/src/string_lexer.erl	/^yyaction_1(TokenChars, TokenLine) ->$/;"	f	module:string_lexer
yyaction_1	deps/erlex/src/lexer.erl	/^yyaction_1(TokenLine) ->$/;"	f	module:lexer
yyaction_10	deps/earmark/src/link_text_lexer.erl	/^yyaction_10(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_10	deps/erlex/src/lexer.erl	/^yyaction_10(TokenLine) ->$/;"	f	module:lexer
yyaction_11	deps/erlex/src/lexer.erl	/^yyaction_11(TokenLine) ->$/;"	f	module:lexer
yyaction_12	deps/erlex/src/lexer.erl	/^yyaction_12(TokenLine) ->$/;"	f	module:lexer
yyaction_13	deps/erlex/src/lexer.erl	/^yyaction_13(TokenLine) ->$/;"	f	module:lexer
yyaction_14	deps/erlex/src/lexer.erl	/^yyaction_14(TokenLine) ->$/;"	f	module:lexer
yyaction_15	deps/erlex/src/lexer.erl	/^yyaction_15(TokenLine) ->$/;"	f	module:lexer
yyaction_16	deps/erlex/src/lexer.erl	/^yyaction_16(TokenLine) ->$/;"	f	module:lexer
yyaction_17	deps/erlex/src/lexer.erl	/^yyaction_17(TokenLine) ->$/;"	f	module:lexer
yyaction_18	deps/erlex/src/lexer.erl	/^yyaction_18(TokenLine) ->$/;"	f	module:lexer
yyaction_19	deps/erlex/src/lexer.erl	/^yyaction_19(TokenLine) ->$/;"	f	module:lexer
yyaction_2	deps/earmark/src/link_text_lexer.erl	/^yyaction_2(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_2	deps/earmark/src/string_lexer.erl	/^yyaction_2(TokenChars, TokenLine) ->$/;"	f	module:string_lexer
yyaction_2	deps/erlex/src/lexer.erl	/^yyaction_2(TokenLine) ->$/;"	f	module:lexer
yyaction_20	deps/erlex/src/lexer.erl	/^yyaction_20(TokenLine) ->$/;"	f	module:lexer
yyaction_21	deps/erlex/src/lexer.erl	/^yyaction_21(TokenLine) ->$/;"	f	module:lexer
yyaction_22	deps/erlex/src/lexer.erl	/^yyaction_22(TokenLine) ->$/;"	f	module:lexer
yyaction_23	deps/erlex/src/lexer.erl	/^yyaction_23(TokenLine) ->$/;"	f	module:lexer
yyaction_24	deps/erlex/src/lexer.erl	/^yyaction_24(TokenLine) ->$/;"	f	module:lexer
yyaction_25	deps/erlex/src/lexer.erl	/^yyaction_25(TokenLine) ->$/;"	f	module:lexer
yyaction_26	deps/erlex/src/lexer.erl	/^yyaction_26(TokenChars, TokenLine) ->$/;"	f	module:lexer
yyaction_27	deps/erlex/src/lexer.erl	/^yyaction_27(TokenChars, TokenLine) ->$/;"	f	module:lexer
yyaction_28	deps/erlex/src/lexer.erl	/^yyaction_28(TokenChars, TokenLine) ->$/;"	f	module:lexer
yyaction_29	deps/erlex/src/lexer.erl	/^yyaction_29(TokenChars, TokenLine) ->$/;"	f	module:lexer
yyaction_3	deps/earmark/src/link_text_lexer.erl	/^yyaction_3(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_3	deps/erlex/src/lexer.erl	/^yyaction_3(TokenLine) ->$/;"	f	module:lexer
yyaction_4	deps/earmark/src/link_text_lexer.erl	/^yyaction_4(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_4	deps/erlex/src/lexer.erl	/^yyaction_4(TokenLine) ->$/;"	f	module:lexer
yyaction_5	deps/earmark/src/link_text_lexer.erl	/^yyaction_5(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_5	deps/erlex/src/lexer.erl	/^yyaction_5(TokenLine) ->$/;"	f	module:lexer
yyaction_6	deps/earmark/src/link_text_lexer.erl	/^yyaction_6(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_6	deps/erlex/src/lexer.erl	/^yyaction_6(TokenLine) ->$/;"	f	module:lexer
yyaction_7	deps/earmark/src/link_text_lexer.erl	/^yyaction_7(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_7	deps/erlex/src/lexer.erl	/^yyaction_7(TokenLine) ->$/;"	f	module:lexer
yyaction_8	deps/earmark/src/link_text_lexer.erl	/^yyaction_8(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_8	deps/erlex/src/lexer.erl	/^yyaction_8(TokenLine) ->$/;"	f	module:lexer
yyaction_9	deps/earmark/src/link_text_lexer.erl	/^yyaction_9(TokenChars, TokenLine) ->$/;"	f	module:link_text_lexer
yyaction_9	deps/erlex/src/lexer.erl	/^yyaction_9(TokenLine) ->$/;"	f	module:lexer
yypre	deps/earmark/src/link_text_lexer.erl	/^yypre(List, N) -> lists:sublist(List, N).$/;"	f	module:link_text_lexer
yypre	deps/earmark/src/string_lexer.erl	/^yypre(List, N) -> lists:sublist(List, N).$/;"	f	module:string_lexer
yypre	deps/erlex/src/lexer.erl	/^yypre(List, N) -> lists:sublist(List, N).$/;"	f	module:lexer
yyrev	deps/earmark/src/link_text_lexer.erl	/^yyrev(List) -> lists:reverse(List).$/;"	f	module:link_text_lexer
yyrev	deps/earmark/src/link_text_lexer.erl	/^yyrev(List, Tail) -> lists:reverse(List, Tail).$/;"	f	module:link_text_lexer
yyrev	deps/earmark/src/string_lexer.erl	/^yyrev(List) -> lists:reverse(List).$/;"	f	module:string_lexer
yyrev	deps/earmark/src/string_lexer.erl	/^yyrev(List, Tail) -> lists:reverse(List, Tail).$/;"	f	module:string_lexer
yyrev	deps/erlex/src/lexer.erl	/^yyrev(List) -> lists:reverse(List).$/;"	f	module:lexer
yyrev	deps/erlex/src/lexer.erl	/^yyrev(List, Tail) -> lists:reverse(List, Tail).$/;"	f	module:lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate() -> 10.$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(0, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(1, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [10|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [32|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [33|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [34|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [39|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [40|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [41|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [91|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [92|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [93|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [C|Ics], Line, Tlen, Action, Alen) when C >= 0, C =< 9 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [C|Ics], Line, Tlen, Action, Alen) when C >= 11, C =< 31 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [C|Ics], Line, Tlen, Action, Alen) when C >= 35, C =< 38 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [C|Ics], Line, Tlen, Action, Alen) when C >= 42, C =< 90 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(10, [C|Ics], Line, Tlen, Action, Alen) when C >= 94 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [10|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [33|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [C|Ics], Line, Tlen, _, _) when C >= 0, C =< 9 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [C|Ics], Line, Tlen, _, _) when C >= 11, C =< 31 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [C|Ics], Line, Tlen, _, _) when C >= 35, C =< 38 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [C|Ics], Line, Tlen, _, _) when C >= 42, C =< 90 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(11, [C|Ics], Line, Tlen, _, _) when C >= 94 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(2, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(3, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(4, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [10|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [33|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [C|Ics], Line, Tlen, _, _) when C >= 0, C =< 9 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [C|Ics], Line, Tlen, _, _) when C >= 11, C =< 31 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [C|Ics], Line, Tlen, _, _) when C >= 35, C =< 38 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [C|Ics], Line, Tlen, _, _) when C >= 42, C =< 90 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(5, [C|Ics], Line, Tlen, _, _) when C >= 94 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(6, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(6, [C|Ics], Line, Tlen, _, _) when C >= 0, C =< 9 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(6, [C|Ics], Line, Tlen, _, _) when C >= 11 ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(7, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(7, [32|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(7, [34|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(7, [39|Ics], Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(8, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(9, Ics, Line, Tlen, _, _) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/link_text_lexer.erl	/^yystate(S, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:link_text_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate() -> 2.$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(0, Ics, Line, Tlen, _, _) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(0, [96|Ics], Line, Tlen, _, _) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(1, Ics, Line, Tlen, _, _) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [10|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [92|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [96|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [C|Ics], Line, Tlen, Action, Alen) when C >= 0, C =< 9 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [C|Ics], Line, Tlen, Action, Alen) when C >= 11, C =< 91 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [C|Ics], Line, Tlen, Action, Alen) when C >= 93, C =< 95 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(2, [C|Ics], Line, Tlen, Action, Alen) when C >= 97 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(3, Ics, Line, Tlen, _, _) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(3, [10|Ics], Line, Tlen, _, _) ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, _, _) when C >= 0, C =< 9 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, _, _) when C >= 11, C =< 91 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, _, _) when C >= 93, C =< 95 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, _, _) when C >= 97 ->$/;"	f	module:string_lexer
yystate	deps/earmark/src/string_lexer.erl	/^yystate(S, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:string_lexer
yystate	deps/erlex/src/lexer.erl	/^yystate() -> 41.$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(0, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(0, [10|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(0, [C|Ics], Line, Tlen, _, _) when C >= 0, C =< 9 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(0, [C|Ics], Line, Tlen, _, _) when C >= 11, C =< 38 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(0, [C|Ics], Line, Tlen, _, _) when C >= 40 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(1, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(10, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(11, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(12, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(13, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(14, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(15, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(15, [10|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(15, [119|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(15, [13|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(15, [32|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(15, [9|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(16, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(17, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(17, [40|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(18, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(18, [58|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(18, [61|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(19, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(19, [104|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(2, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(20, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(21, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(21, [110|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(22, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(23, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(23, [101|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(24, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(24, [62|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(24, [C|Ics], Line, Tlen, _, _) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(25, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(25, [117|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(26, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(27, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(27, [110|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(28, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(29, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(3, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(3, [10|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(3, [39|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, Action, Alen) when C >= 0, C =< 9 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, Action, Alen) when C >= 11, C =< 38 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(3, [C|Ics], Line, Tlen, Action, Alen) when C >= 40 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(30, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(30, [46|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(30, [C|Ics], Line, Tlen, _, _) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(31, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(31, [32|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(32, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(32, [46|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(33, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(34, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(34, [C|Ics], Line, Tlen, Action, Alen) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(35, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(36, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(36, [46|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(37, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(38, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(38, [101|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(38, [C|Ics], Line, Tlen, Action, Alen) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(39, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(39, [10|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(39, [13|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(39, [32|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(39, [9|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(4, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(40, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(40, [C|Ics], Line, Tlen, Action, Alen) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [102|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [10|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [11|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [123|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [124|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [125|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [12|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [13|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [32|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [33|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [34|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [35|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [39|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [40|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [41|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [42|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [43|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [44|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [45|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [46|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [47|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [58|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [59|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [60|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [61|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [62|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [91|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [92|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [93|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [94|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [95|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [9|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 0, C =< 8 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 103, C =< 122 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 126 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 14, C =< 31 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 36, C =< 38 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 63, C =< 90 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(41, [C|Ics], Line, Tlen, Action, Alen) when C >= 96, C =< 101 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(42, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(42, [45|Ics], Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(42, [C|Ics], Line, Tlen, Action, Alen) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(43, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(44, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(44, [C|Ics], Line, Tlen, _, _) when C >= 48, C =< 57 ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(5, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(6, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(6, [62|Ics], Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(7, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(8, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(9, Ics, Line, Tlen, _, _) ->$/;"	f	module:lexer
yystate	deps/erlex/src/lexer.erl	/^yystate(S, Ics, Line, Tlen, Action, Alen) ->$/;"	f	module:lexer
yysuf	deps/earmark/src/link_text_lexer.erl	/^yysuf(List, N) -> lists:nthtail(N, List).$/;"	f	module:link_text_lexer
yysuf	deps/earmark/src/string_lexer.erl	/^yysuf(List, N) -> lists:nthtail(N, List).$/;"	f	module:string_lexer
yysuf	deps/erlex/src/lexer.erl	/^yysuf(List, N) -> lists:nthtail(N, List).$/;"	f	module:lexer
